ARM GAS  /tmp/ccjQSYCi.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_adc_ex.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_ADCEx_Calibration_Start
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LVL0:
  27              	.LFB350:
  28              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @file    stm32h7xx_hal_adc_ex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          "stm32h7xx_hal_adc.c".
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       available in file of generic functions "stm32h7xx_hal_adc.c".
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ******************************************************************************
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccjQSYCi.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #include "stm32h7xx_hal.h"
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                                                   once the ADC is enabled */
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                     */
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: low clock frequency,         */
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* maximum prescalers.                                                        */
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Ex of profile low frequency : f_ADC at 0.125 Mhz (minimum value              */
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* according to Data sheet), calibration_time MAX = 165010 / f_ADC              */
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*           165010 / 125000 = 1.32s                                            */
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* At maximum CPU speed (480 MHz), this means                                   */
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /*    1.32 * 480 MHz = 633600000 CPU cycles                                     */
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (633600000U)   /*!< ADC calibration time-out value */
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
ARM GAS  /tmp/ccjQSYCi.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** * @param  CalibrationMode       Selection of calibration offset or
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         linear calibration offset.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg ADC_CALIB_OFFSET       Channel in mode calibration offset
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg ADC_CALIB_OFFSET_LINEARITY Channel in mode linear calibration offset
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t CalibrationMode, ui
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
  29              		.loc 1 127 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 127 1 is_stmt 0 view .LVU1
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  44              		.loc 1 128 3 is_stmt 1 view .LVU2
ARM GAS  /tmp/ccjQSYCi.s 			page 4


 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  45              		.loc 1 129 3 view .LVU3
  46              		.loc 1 129 17 is_stmt 0 view .LVU4
  47 0004 0023     		movs	r3, #0
  48 0006 0193     		str	r3, [sp, #4]
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  49              		.loc 1 132 3 is_stmt 1 view .LVU5
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
  50              		.loc 1 133 3 view .LVU6
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  51              		.loc 1 136 3 view .LVU7
  52              		.loc 1 136 3 view .LVU8
  53 0008 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
  54 000c 012B     		cmp	r3, #1
  55 000e 42D0     		beq	.L8
  56 0010 0446     		mov	r4, r0
  57 0012 0D46     		mov	r5, r1
  58 0014 1646     		mov	r6, r2
  59              		.loc 1 136 3 discriminator 2 view .LVU9
  60 0016 0123     		movs	r3, #1
  61 0018 80F85C30 		strb	r3, [r0, #92]
  62              		.loc 1 136 3 discriminator 2 view .LVU10
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  63              		.loc 1 141 3 discriminator 2 view .LVU11
  64              		.loc 1 141 20 is_stmt 0 discriminator 2 view .LVU12
  65 001c FFF7FEFF 		bl	ADC_Disable
  66              	.LVL1:
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  67              		.loc 1 144 3 is_stmt 1 discriminator 2 view .LVU13
  68              		.loc 1 144 6 is_stmt 0 discriminator 2 view .LVU14
  69 0020 0028     		cmp	r0, #0
  70 0022 2FD1     		bne	.L3
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state */
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  71              		.loc 1 147 5 is_stmt 1 view .LVU15
  72 0024 226E     		ldr	r2, [r4, #96]
  73 0026 1D4B     		ldr	r3, .L11
  74 0028 1340     		ands	r3, r3, r2
  75 002a 43F00203 		orr	r3, r3, #2
  76 002e 2366     		str	r3, [r4, #96]
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, CalibrationMode, SingleDiff);
  77              		.loc 1 152 5 view .LVU16
ARM GAS  /tmp/ccjQSYCi.s 			page 5


  78 0030 2268     		ldr	r2, [r4]
  79              	.LVL2:
  80              	.LBB427:
  81              	.LBI427:
  82              		.file 2 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h"
   1:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @file    stm32h7xx_ll_adc.h
   4:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @attention
   8:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
   9:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  18:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  19:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifndef STM32H7xx_LL_ADC_H
  21:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define STM32H7xx_LL_ADC_H
  22:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  23:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
  26:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  27:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #include "stm32h7xx.h"
  29:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  30:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @addtogroup STM32H7xx_LL_Driver
  31:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  32:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  33:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  34:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  36:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  38:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  39:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  40:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  43:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  46:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  47:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  48:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC calibration:                                         */
  49:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC calibration factors configuration */
  50:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  51:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_CALIB_OFFSET, LL_ADC_CALIB_LINEARITY, ...   */
  52:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
ARM GAS  /tmp/ccjQSYCi.s 			page 6


  53:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
  54:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration configuration: configuration before calibration start    */
  55:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration factors: register offset                                 */
  56:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_OFFSET_REGOFFSET    (0x00000000UL) /* Register CALFACT defined as referenc
  57:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_LINEARITY_REGOFFSET (0x00000001UL) /* Register CALFACT2 offset vs register
  58:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_REGOFFSET_MASK      (ADC_CALIB_FACTOR_OFFSET_REGOFFSET | ADC_CALIB_FACTOR_
  59:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_MASK                  (ADC_CR_ADCALLIN)
  60:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_BINARY_MASK           (ADC_CALIB_FACTOR_REGOFFSET_MASK) /* Mask to get binar
  61:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  62:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  63:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  64:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  65:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer register offset                                                */
  66:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  67:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  68:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  69:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  70:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  71:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  72:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  73:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  74:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  75:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  76:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  77:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  78:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  79:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  80:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  81:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  82:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  83:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  84:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  85:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  86:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  87:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  88:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  89:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  90:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  91:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  92:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  93:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  94:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  95:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  96:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  97:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  98:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  99:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
ARM GAS  /tmp/ccjQSYCi.s 			page 7


 110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL) << (4U 
 163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 8


 167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
ARM GAS  /tmp/ccjQSYCi.s 			page 9


 224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/ccjQSYCi.s 			page 10


 281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
 286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection on groups.                                                     */
 305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 thresholds registers */
 337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_TRX_REGOFFSET to spare 32 bits space */
ARM GAS  /tmp/ccjQSYCi.s 			page 11


 338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_VAL      (0x00000022UL)
 340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Legacy literals */
 342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1_TR                      LL_ADC_AWD1
 343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2_TR                      LL_ADC_AWD2
 344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3_TR                      LL_ADC_AWD3
 345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits positions */
 356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS_ADC3    (ADC3_CFGR_RES_Pos)
 362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits groups */
 366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC internal channels related definitions */
 370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x8fff810UL))  /* Internal voltage referen
 373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Address related to STM32
 374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF1E860UL)) /* Internal voltage referen
 376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Temperature sensor */
 379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x8fff814UL))  /* Internal temperature sen
 381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x8fff818UL))  /* Internal temperature sen
 382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Addresses related to STM
 383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF1E820UL)) /* Internal temperature sen
 385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF1E840UL)) /* Internal temperature sen
 386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
 391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Registers addresses with ADC linearity calibration content (programmed during device production,
 393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_1_ADDR ((uint32_t*) (0x1FF1EC00UL))
 394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_2_ADDR ((uint32_t*) (0x1FF1EC04UL))
ARM GAS  /tmp/ccjQSYCi.s 			page 12


 395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_3_ADDR ((uint32_t*) (0x1FF1EC08UL))
 396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_4_ADDR ((uint32_t*) (0x1FF1EC0CUL))
 397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_5_ADDR ((uint32_t*) (0x1FF1EC10UL))
 398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_6_ADDR ((uint32_t*) (0x1FF1EC14UL))
 399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_COUNT  (6UL)
 400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Alias_definition  ADC Alias definition
 405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SetChannelPreSelection  LL_ADC_SetChannelPreselection    /* Alias of LL_ADC_SetChann
 408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a register from a register basis from which an offset
 421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is applied.
 422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Pointer to register address
 425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and multimode
 443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sharing the same ADC common instance):
 447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         disabled.
 449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 13


 452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC dual ADC mode DMA transfer data format: Each D
 466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LeftBitShift;                /*!< Configures the left shifting applied to the final resu
 505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LEFT_B
 506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
ARM GAS  /tmp/ccjQSYCi.s 			page 14


 509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "REG").
 520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t DataTransferMode;            /*!< Set ADC group regular conversion data transfer mode: n
 562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DA
 563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 15


 566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              data preserved or overwritten.
 568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "INJ").
 580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 16


 623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_LDORDY                 ADC_ISR_LDORDY     /*!< ADC flag ADC LDO output voltage 
 649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
ARM GAS  /tmp/ccjQSYCi.s 			page 17


 680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* DMA transfer.                                                              */
 699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
ARM GAS  /tmp/ccjQSYCi.s 			page 18


 737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_BOOST_MODE ADC instance - Boost mode
 745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_6MHZ25   (0x00000000UL)                                            /*!< B
 748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_12MHZ5   (                                        ADC_CR_BOOST_0)  /*!< B
 749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_20MHZ    (                       ADC_CR_BOOST_1                 )  /*!< B
 750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_25MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1                 )  /*!< B
 751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_50MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1 | ADC_CR_BOOST_0)  /*!< B
 752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_OFFSET_LINEARITY  ADC instance - Calibration mode for offset an
 757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET                (ADC_CALIB_FACTOR_OFFSET_REGOFFSET)                     
 760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY             (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET)                  
 761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET_LINEARITY      (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET | ADC_CR_ADCALLIN)
 762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_LINEARITY_WORD  ADC instance - Calibration linearity words
 767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD1       (ADC_CR_LINCALRDYW1)    /*!< ADC calibration linearity w
 770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD2       (ADC_CR_LINCALRDYW2)    /*!< ADC calibration linearity w
 771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD3       (ADC_CR_LINCALRDYW3)    /*!< ADC calibration linearity w
 772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD4       (ADC_CR_LINCALRDYW4)    /*!< ADC calibration linearity w
 773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD5       (ADC_CR_LINCALRDYW5)    /*!< ADC calibration linearity w
 774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD6       (ADC_CR_LINCALRDYW6)    /*!< ADC calibration linearity w
 775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_16B              (0x00000000UL)                                      /*!<
 783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B              (                                  ADC_CFGR_RES_0)  /*!<
 784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (                 ADC_CFGR_RES_1                 )  /*!<
 785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_1 | ADC_CFGR_RES_0)  /*!<
 786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_X)
 788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B_OPT          (ADC_CFGR_RES_2 |                  ADC_CFGR_RES_0)  /*!<
 789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B_OPT          (ADC_CFGR_RES_2 | ADC_CFGR_RES_1                 )  /*!<
 790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
 793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0) /*!< AD
ARM GAS  /tmp/ccjQSYCi.s 			page 19


 794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2                                ) /*!< AD
 796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                             /*!< Th
 797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC3_CFGR_RES_1 | ADC3_CFGR_RES_0)   /*!< ADC resolutio
 802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC3_CFGR_ALIGN)       /*!< ADC conversion data alignme
 813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEFT_BIT_SHIFT   ADC left Shift
 820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_NONE  (0x00000000UL)                                                 
 823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_1     (ADC_CFGR2_LSHIFT_0)                                           
 824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_2     (ADC_CFGR2_LSHIFT_1)                                           
 825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_3     (ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0)                      
 826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_4     (ADC_CFGR2_LSHIFT_2)                                           
 827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_5     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0)                      
 828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_6     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1)                      
 829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_7     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_8     (ADC_CFGR2_LSHIFT_3)                                           
 831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_9     (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_0)                      
 832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_10    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1)                      
 833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_11    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_12    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2)                      
 835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_13    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0) 
 836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_14    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1) 
 837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_15    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 |
 838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 20


 851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGNED_SATURATION ADC instance - Offset signed saturation mode
 863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE   (0x00000000UL)   /*!< ADC offset signed saturatio
 866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE    (ADC_OFR1_SSATE) /*!< ADC offset signed saturatio
 867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_RSHIFT ADC instance - Offset right shift
 872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_DISABLE   (0x00000000UL)      /*!< ADC offset right shift is disabled 
 875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_ENABLE    (ADC_CFGR2_RSHIFT1) /*!< ADC offset right shift is enabled (
 876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)           /*!< ADC offset saturation is d
 884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC3_OFR1_SATEN)        /*!< ADC offset saturation is e
 885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC3_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among A
 894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)        /*!< ADC offset is negative (among
 902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC3_OFR1_OFFSETPOS) /*!< ADC offset is positive (among
 903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 21


 908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP | ADC_CHANNE
 943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
 944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(DAC2)
 962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC2CH1_ADC2        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
ARM GAS  /tmp/ccjQSYCi.s 			page 22


 965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE          (0x00000000UL)                                           
 973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                          
 974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2      (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3      (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2      (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11   (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM3_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM23)
 995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM23_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM23 */
 997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM24)
 998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM24_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM24 */
1000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
1005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
1008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
1009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)        /*!< ADC conversions sa
1018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC3_CFGR2_BULB)     /*!< ADC conversions sa
1019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Note: First conver
1020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC3_CFGR2_SMPTRIG)  /*!< ADC conversions sa
1021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger rising edg
ARM GAS  /tmp/ccjQSYCi.s 			page 23


1022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger falling ed
1023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
1032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
1033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DATA_TRANSFER_MODE  ADC group regular - Data transfer mode of ADC conve
1038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DR_TRANSFER             (0x00000000UL)                        /*!< ADC conversio
1041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR_DMNGT_0) /*!< ADC conversio
1042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMNGT_1 | ADC_CFGR_DMNGT_0) /*!< ADC conversio
1043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER          (ADC_CFGR_DMNGT_1                   ) /*!< ADC conversio
1044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversi
1054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_LIMITED    (                  ADC3_CFGR_DMAEN)    /*!< ADC convers
1055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_UNLIMITED  (ADC3_CFGR_DMACFG | ADC3_CFGR_DMAEN)    /*!< ADC conver
1056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
1065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
1066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
ARM GAS  /tmp/ccjQSYCi.s 			page 24


1079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
1123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
ARM GAS  /tmp/ccjQSYCi.s 			page 25


1136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(HRTIM1)
1153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* HRTIM1 */
1156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM23_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM24_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
1180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/ccjQSYCi.s 			page 26


1193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                          
1229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (                                        ADC_SMPR2_SMP10
1230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_8CYCLES_5      (                    ADC_SMPR2_SMP10_1                  
1231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_16CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_32CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_64CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_387CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_810CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_2CYCLES_5      (0x00000000UL)                                     
1244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_6CYCLES_5      (                                        ADC_SMPR2_
1245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_12CYCLES_5     (                    ADC_SMPR2_SMP10_1             
1246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_47CYCLES_5     (ADC_SMPR2_SMP10_2                                 
1248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_
1249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1             
ARM GAS  /tmp/ccjQSYCi.s 			page 27


1250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/ccjQSYCi.s 			page 28


1307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK)              
1341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccjQSYCi.s 			page 29


1364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (0x1UL)                     /*!< ADC analog watchdog thr
1366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (0x0UL)                     /*!< ADC analog watchdog thr
1367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                          ADC3_TR1_AWDF
1376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                     ADC3_TR1_AWDFILT_1                
1377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                     ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC3_TR1_AWDFILT_2                                     
1379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC3_TR1_AWDFILT_2 |                      ADC3_TR1_AWDF
1380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1                
1381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                        ADC3_CFGR2_OVSR
1413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                    ADC3_CFGR2_OVSR_1                  
1414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                    ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC3_CFGR2_OVSR_2                                      
1416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC3_CFGR2_OVSR_2                     | ADC3_CFGR2_OVSR
1417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1                  
1418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
ARM GAS  /tmp/ccjQSYCi.s 			page 30


1421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_9           (ADC_CFGR2_OVSS_3                                       
1437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_10          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_11          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                      /*!< ADC multimode
1462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_32_10B      (ADC_CCR_DAMDF_1                  ) /*!< ADC multimode
1463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_8B          (ADC_CCR_DAMDF_1 | ADC_CCR_DAMDF_0) /*!< ADC multimode
1464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5           (0x00000000UL)                                
1472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5          (                                             
1473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5          (                                    ADC_CCR_D
1474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5          (                                    ADC_CCR_D
1475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS   (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5          (                  ADC_CCR_DELAY_2            
1477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
ARM GAS  /tmp/ccjQSYCi.s 			page 31


1478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES            (ADC_CCR_DELAY_3                              
1479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5          (                  ADC_CCR_DELAY_2            
1480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5          (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES            (ADC_CCR_DELAY_3                              
1483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES            (ADC_CCR_DELAY_3                              
1484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not timeout values.
1503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         above each literal definition.
1505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       not timeout values.                                                  */
1510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       STM32 series:                                                         */
1515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 16384/fADC.                   */
1516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         cycles                                                             */
1522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         configuration.                                                     */
1524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "ts_vrefint").                                                   */
ARM GAS  /tmp/ccjQSYCi.s 			page 32


1535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (5UL)  /*!< Delay for internal voltage reference stabili
1537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tSTART_RUN").                                                   */
1541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    ( 26UL)  /*!< Delay for temperature sensor stabilization
1543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Fixed timeout value for ADC linearity word bit set/clear delay.                         */
1554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Values defined to be higher than worst cases: low clock frequency,                      */
1555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* maximum prescalers.                                                                     */
1556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Ex of profile low frequency : f_ADC at 4,577 Khz (minimum value                         */
1557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* according to Data sheet), linearity set/clear bit delay MAX = 6 / f_ADC + 3 cycles AHB  */
1558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*           6 / 4577 = 1,311ms                                                            */
1559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* At maximum CPU speed (400 MHz), this means                                              */
1560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*    3.58 * 400 MHz = 524400 CPU cycles                                                   */
1561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEARITY_BIT_TOGGLE_TIMEOUT         (524400UL)      /*!< ADC linearity set/clear bit d
1562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Write a value in ADC register
1583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be written
1585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
1587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Read a value in ADC register
ARM GAS  /tmp/ccjQSYCi.s 			page 33


1592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be read
1594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Register value
1595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the resolution defines to STM32H73x/2x ADC3 registers values
1608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the ADC3 resolution according to the STM32H73x/2x RefMan.
1609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from ADC3 resolution (12b, 10b, 8b,6b)
1610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x00000000UL (value correspodning to ADC3 12 bits)
1617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_0 = 0x00000004  (value corresponding to ADC3 10 bits)
1618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_1 = 0x00000008 (value corresponding to ADC3 8 bits)
1619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x0000001C (value corresponding to ADC3 6 bits)
1620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This helper macro is applicable for STM32H73x/2x devices only
1621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC12_RESOLUTION_TO_ADC3(__ADC_RESOLUTION__)                      \
1623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (                                                                     \
1624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_12B)                     \
1625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             ?(0x00000000UL)                                                    \
1626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              :                                                                 \
1627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_10B)                   \
1628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ?(ADC_CFGR_RES_0)                                               \
1629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 :                                                              \
1630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_8B)                 \
1631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   ?(ADC_CFGR_RES_1)                                            \
1632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    :                                                           \
1633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_6B)              \
1634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      ?((ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0))       \
1635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                        :(0x00000000UL)                                         \
1636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          )
1637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return decimal number "4".
1646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number is returned, either defined with number
1648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
ARM GAS  /tmp/ccjQSYCi.s 			page 34


1649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                    \
1685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                    \
1688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                    \
1689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from number in decimal format.
1696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
ARM GAS  /tmp/ccjQSYCi.s 			page 35


1706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                            
1738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
1743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                            
1744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC internal channel:
1755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
ARM GAS  /tmp/ccjQSYCi.s 			page 36


1763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a value defined from parameter definition of
1814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC registers.
1817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
ARM GAS  /tmp/ccjQSYCi.s 			page 37


1820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
ARM GAS  /tmp/ccjQSYCi.s 			page 38


1877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is
1882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
1896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
1900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                          \
1905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ||                                                                          \
1908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
1917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2) ||                       \
1922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from sequencer channel and groups definition.
ARM GAS  /tmp/ccjQSYCi.s 			page 39


1934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
1936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
ARM GAS  /tmp/ccjQSYCi.s 			page 40


1991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
2001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
2002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
2004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
2005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
2007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
2008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
2035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
ARM GAS  /tmp/ccjQSYCi.s 			page 41


2048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
2049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
2050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
2051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
2052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
2053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
2054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
2055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
2056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
2057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
2059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
2060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
2061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                 
2065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
2066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
2067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)             
2068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :                                                                                         
2069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD
2070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
2077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (< ADCx param >,
2081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_1
2082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           < threshold_value_18_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
ARM GAS  /tmp/ccjQSYCi.s 			page 42


2105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_16_BITS__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_16_BITS__) \
2116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD_16_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationOffsetFactor().
2122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential ended to 0x2A:
2124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetCalibrationOffsetFactor(
2125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1,
2126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance).
2154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         considered as master instances (do not depend to
2158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         any other ADC instance).
2159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/ccjQSYCi.s 			page 43


2162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     )?                                                                         \
2165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (ADC1)                                                                    \
2166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      :                                                                         \
2167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADCx__)                                                                \
2168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC common register instance
2179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC3_COMMON)                                                           \
2189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)   (ADC12_COMMON)
2193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance are disabled.
2198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are disabled.
2209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
2211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
ARM GAS  /tmp/ccjQSYCi.s 			page 44


2219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3))                                                \
2222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                         (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (0xFFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: digital value of ADC conversion bit
2259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC3_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))
2262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a resolution to another resolution.
2266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 45


2276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_X) || defined(ADC_VER_V5_V90)
2284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* defined(ADC_VER_V5_3) */
2312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
ARM GAS  /tmp/ccjQSYCi.s 			page 46


2333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @brief  Helper macro to convert the ADC conversion data from
2343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         a resolution to another resolution.
2344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __DATA__ ADC conversion data to be converted
2345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @retval ADC conversion data to the requested resolution
2358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
2359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION_ADC3(__DATA__,\
2360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DATA__)                                                                 \
2363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))  \
2364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL))     \
2365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 16 bits)
2375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                       (unit: digital value).
2376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_DATA__,\
2386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
ARM GAS  /tmp/ccjQSYCi.s 			page 47


2390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         reference VrefInt.
2395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         connected to pin Vref+.
2399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 16 bits,
2403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 16 bits)
2408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
2421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
2422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_16B)                  \
2423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  parameters are correct (address and data).
2443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  less accurate than calibrated values),
2446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
ARM GAS  /tmp/ccjQSYCi.s 			page 48


2447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to a resolution of 16 bits,
2454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor.
2456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_16B)         \
2477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to device datasheet).
2490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: digital value)
2495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values.
2502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
ARM GAS  /tmp/ccjQSYCi.s 			page 49


2504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 16 bits
2512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 16 bits.
2514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "Avg_Slop
2516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "V30" (co
2518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((( (                                                                        \
2537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        -                                                                       \
2541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  /tmp/ccjQSYCi.s 			page 50


2561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
2576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC register address
2595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t data_reg_addr;
2599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register DR */
2603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & (ADCx->DR);
2604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register CDR */
2608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & ((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return data_reg_addr;
2612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 51


2618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must be respected.
2627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
2628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
ARM GAS  /tmp/ccjQSYCi.s 			page 52


2675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
ARM GAS  /tmp/ccjQSYCi.s 			page 53


2732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Add paths to the current configuration.
2755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChAdd
2772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
ARM GAS  /tmp/ccjQSYCi.s 			page 54


2789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Remove paths to the current configuration.
2790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChRem
2796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
2830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor can be specified only once).
2833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         To perform this processing, use helper macro
2837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationOffsetFactor\n
2843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationOffsetFactor
2844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 55


2846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint
2853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT_RES13,
2856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationOffsetFactor\n
2876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationOffsetFactor
2877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT_RES13, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) 
2891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC Linear calibration factor in the mode single-ended.
2898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set linear calibration parameters
2899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccjQSYCi.s 			page 56


2903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor\n
2906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor
2907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWord, u
2919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
2922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       timeout_cpu_cycles--;
2929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC Linear calibration factor in the mode single-ended.
2944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor\n
2947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor
2948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWor
2959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 57


2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) != 0UL) && (timeout_cpu_cycles > 0UL))
2963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT));
2968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT));
2970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
2971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC resolution.
2974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
2980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
2993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
2997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
2998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_RES, ((__LL_ADC12_RESOLUTION_TO_ADC3(Resolution)  & (ADC_CFGR_
3000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else /* Rev.V */
3008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if (LL_ADC_RESOLUTION_8B == Resolution)
3010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
3013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
3014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
ARM GAS  /tmp/ccjQSYCi.s 			page 58


3017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
3020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (LL_ADC_RESOLUTION_8B == Resolution)
3027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X*/
3037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC resolution.
3041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B (1)
3047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
3048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B  (2)
3052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1): Specific to ADC instance: ADC1, ADC2
3053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2): Specific to ADC instance: ADC3
3054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
3056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3)
3058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
3062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_RES));
3065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 59


3074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
3079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X */
3096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
ARM GAS  /tmp/ccjQSYCi.s 			page 60


3131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
ARM GAS  /tmp/ccjQSYCi.s 			page 61


3188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected Channel.
3207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the pre-selection of channel configuration.
3208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable only all the ADCs instances.
3211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelPreselection(ADC_TypeDef *ADCx, uint32_t Channel)
3237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       /* ADC channels preselection */
3242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ADCx->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
ARM GAS  /tmp/ccjQSYCi.s 			page 62


3245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* ADC channels preselection */
3246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ADCx->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Gets ADC pre-selected Channel.
3252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function gets the pre-selected ADC channel.
3253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable on all the ADCs instances.
3256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval the preselection state of Channel (!= 0 : pre-selected, == 0 : not pre-selected)
3280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelPreselection(ADC_TypeDef *ADCx, uint32_t Channel)
3282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Gets preselected ADC channel */
3287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->PCSEL_RES0, 1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 
3288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
3294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Gets preselected ADC channel */
3295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->PCSEL, 1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FU
3296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
ARM GAS  /tmp/ccjQSYCi.s 			page 63


3302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or group injected)
3305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           converted data).
3307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 15 (handling maximum ADC resolution 16 bit),
3309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the LSB (right bits) are set to 0.
3310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
ARM GAS  /tmp/ccjQSYCi.s 			page 64


3359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
3369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
3370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or group injected)
3396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
3404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
3406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
ARM GAS  /tmp/ccjQSYCi.s 			page 65


3416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
3450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
3451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
3452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted data).
3465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 15 (handling maximum ADC resolution 16 bit),
3467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the LSB (right bits) are set to 0.
3468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccjQSYCi.s 			page 66


3473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
3479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set data right shift for the ADC selected offset number 1, 2, 3 or 4:
3490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_SetDataRightShift\n
3492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  RigthShift This parameter can be one of the following values:
3499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthSh
3504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RS
3506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get data right shift for the ADC selected offset number 1, 2, 3 or 4:
3510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_GetDataRightShift\n
3512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety)
3523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 << (Offsety & 0x1FUL)))) >> (Offsety 
3525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
ARM GAS  /tmp/ccjQSYCi.s 			page 67


3530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_SetOffsetSignedSaturation
3534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSignedSaturation This parameter can be one of the following values:
3541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t
3546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
3557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_GetOffsetSignedSaturation
3567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
ARM GAS  /tmp/ccjQSYCi.s 			page 68


3587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset saturation mode.
3597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
3624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSaturation);
3625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
ARM GAS  /tmp/ccjQSYCi.s 			page 69


3644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_SATEN);
3652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }else
3653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset sign.
3661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
3688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSign);
3689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset sign if positive or negative.
3695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 70


3701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSETPOS);
3716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         force offset state disable or enable
3726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
3756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
ARM GAS  /tmp/ccjQSYCi.s 			page 71


3758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
3762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset state disabled or enabled.
3769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSET1_EN);
3789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
3800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
3804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
ARM GAS  /tmp/ccjQSYCi.s 			page 72


3815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
ARM GAS  /tmp/ccjQSYCi.s 			page 73


3872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
3905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
3908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or external.
3913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
ARM GAS  /tmp/ccjQSYCi.s 			page 74


3929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
3967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
3983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
ARM GAS  /tmp/ccjQSYCi.s 			page 75


3986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, SamplingMode);
3989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
4000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
4001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
4010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
4011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
4018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
4027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
ARM GAS  /tmp/ccjQSYCi.s 			page 76


4043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
4050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
4054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
4055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
4056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
4057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
4059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
4069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
4077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
ARM GAS  /tmp/ccjQSYCi.s 			page 77


4100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
4102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccjQSYCi.s 			page 78


4157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
4195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
ARM GAS  /tmp/ccjQSYCi.s 			page 79


4214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
4255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
4257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
ARM GAS  /tmp/ccjQSYCi.s 			page 80


4271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccjQSYCi.s 			page 81


4328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 82


4385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC data transfer mode
4402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_SetDataTransferMode
4408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DataTransferMode Select Data Management configuration
4410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDataTransferMode(ADC_TypeDef *ADCx, uint32_t DataTransferMode)
4413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMNGT, DataTransferMode);
4415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
4418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable DMA requests for ADC3.
4420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDMAReq (ADC_TypeDef *ADCx)
4425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN);
4427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDMAReq(ADC_TypeDef *ADCx)
4430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT (ADCx->CFGR, ADC3_CFGR_DMAEN);
4432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabledDMAReq (ADC_TypeDef *ADCx)
4435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN) == (ADC3_CFGR_DMAEN)) ? 1UL : 0UL);
4437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
ARM GAS  /tmp/ccjQSYCi.s 			page 83


4442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransferMode\n
4465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransferMode
4466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransferMode(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG, DMATransfer);
4478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
ARM GAS  /tmp/ccjQSYCi.s 			page 84


4499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransferMode(ADC_TypeDef *ADCx)
4512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG));
4516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    else
4518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
4520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
4524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC data transfer mode
4527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_GetDataTransferMode
4533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DR_TRANSFER
4536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER
4539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDataTransferMode(ADC_TypeDef *ADCx)
4541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMNGT));
4543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         other devices without this feature have a behavior
4551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         equivalent to data overwritten.
4552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  /tmp/ccjQSYCi.s 			page 85


4556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
4587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
4591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
4602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 86


4613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
ARM GAS  /tmp/ccjQSYCi.s 			page 87


4670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
4692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
4695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             or external
4700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccjQSYCi.s 			page 88


4727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function retrieves:
4777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccjQSYCi.s 			page 89


4784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
4838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccjQSYCi.s 			page 90


4841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 91


4898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
ARM GAS  /tmp/ccjQSYCi.s 			page 92


4955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
4962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
4969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group injected.
4975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent trigger.
4978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC group regular.
4983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
5003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
5004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
5005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
5008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
5009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
5011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 93


5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
5013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
5017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
5019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
5020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
5021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is disabled:
5022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - only 1 sequence can be configured
5023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and is active perpetually.
5024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is enabled:
5025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - up to 2 contexts can be queued
5026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
5027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
5028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
5029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
5030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
5031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
5032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
5033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
5034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
5035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           into the queue).
5036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
5037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
5038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
5039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
5040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
5042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
5043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
5048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
5049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
5051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
5057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
5059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
ARM GAS  /tmp/ccjQSYCi.s 			page 94


5069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
5072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         contexts queue.
5079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
5081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
5082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
5083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         cannot be used):
5087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
5096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
5098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
5099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
5103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
5115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
ARM GAS  /tmp/ccjQSYCi.s 			page 95


5126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
5132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
5133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
5134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
ARM GAS  /tmp/ccjQSYCi.s 			page 96


5183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 97


5240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
5286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JL,
5296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)        |
ARM GAS  /tmp/ccjQSYCi.s 			page 98


5297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SequencerNbRanks
5303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             );
5304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted:
5321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         setting).
5324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TS_temp, ...).
5326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required.
5335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
5336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
5343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
ARM GAS  /tmp/ccjQSYCi.s 			page 99


5354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
5409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
ARM GAS  /tmp/ccjQSYCi.s 			page 100


5411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
ARM GAS  /tmp/ccjQSYCi.s 			page 101


5468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
5495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group regular or injected.
5502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
5523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
5524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
ARM GAS  /tmp/ccjQSYCi.s 			page 102


5525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR2_DIFSEL,
5557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->DIFSEL_RES12,
5563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
5567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
5574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
ARM GAS  /tmp/ccjQSYCi.s 			page 103


5582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL_RES12, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
5624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
5626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
ARM GAS  /tmp/ccjQSYCi.s 			page 104


5639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
5642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
ARM GAS  /tmp/ccjQSYCi.s 			page 105


5696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
5751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
ARM GAS  /tmp/ccjQSYCi.s 			page 106


5753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
5756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
5757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
5758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
5759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
5760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
5761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
5763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
5765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
5777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
5791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
5793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           one channel.
5796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
ARM GAS  /tmp/ccjQSYCi.s 			page 107


5810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             by bitfield.
5838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
ARM GAS  /tmp/ccjQSYCi.s 			page 108


5867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.
5905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* or a single channel.                                                     */
5917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
ARM GAS  /tmp/ccjQSYCi.s 			page 109


5924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  )
5927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
5939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return AnalogWDMonitChannels;
5960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high or low.
5965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
ARM GAS  /tmp/ccjQSYCi.s 			page 110


5981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done
5991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on oversampling intermediate computation (after ratio, before shift
5992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         application): intermediate register bitfield [32:7]
5993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (26 most significant bits).
5994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
6000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
6001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
6002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
6003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
6004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
6013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
6016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
6022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
6023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
6025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
6026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdsHighLow,
6029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_
6030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
6035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
6036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
ARM GAS  /tmp/ccjQSYCi.s 			page 111


6038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (AWDThresholdsHighLow));
6041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
6043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
6046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
6047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
6048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
6049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> A
6051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) * 
6052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + (AWDThresholdsHighLow));
6053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
6055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
6056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         concatenated.
6062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
6080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_
6085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MA
6086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + (AWDThresholdsHighLow));
6087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
6089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + ((AWDy & ADC_AWD_TR12_REGOFFSE
6092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + (AWDThresholdsHighLow));
6093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
ARM GAS  /tmp/ccjQSYCi.s 			page 112


6095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high and low. Applicable for devices STM32H72xx and STM32H73xx.
6103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
6110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
6115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
6120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
6123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
6129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDy".                                                                  */
6149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
ARM GAS  /tmp/ccjQSYCi.s 			page 113


6152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t __IO *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
6154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_TR1_HT1 | ADC3_TR1_LT1,
6157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (AWDThresholdHighValue << ADC3_TR1_HT1_Pos) | AWDThresholdLowValue);
6158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (LL_ADC_AWD_THRESHOLD_LOW));
6164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg2 = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK)
6166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + (LL_ADC_AWD_THRESHOLD_HIGH));
6167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdLowValue);
6169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg2, ADC_HTR_HT, AWDThresholdHighValue);
6170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT, FilteringConfig);
6205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 114


6209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be:
6218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT));
6234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance, return 0 */
6238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
6239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
ARM GAS  /tmp/ccjQSYCi.s 			page 115


6266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
6317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
ARM GAS  /tmp/ccjQSYCi.s 			page 116


6323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling
6353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ratio
6356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - shift
6357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Ratio This parameter can be in the range from 1 to 1024.
6365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In the case of ADC3 can be one of the following values:
6366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
ARM GAS  /tmp/ccjQSYCi.s 			page 117


6380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if(ADCx==ADC3)
6393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC3_CFGR2_OVSR), (Shift | Ratio));
6395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR
6399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR2_
6403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Ratio This parameter can be in the from 1 to 1024.
6413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In the case of ADC3 can be one of the following values:
6414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
6415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
6416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
6417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
6418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
6419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
6420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
6421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
6422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if(ADCx==ADC3)
6427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC3_CFGR2_OVSR));
6429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> AD
6433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> ADC_
ARM GAS  /tmp/ccjQSYCi.s 			page 118


6437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC boost mode.
6474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_SetBoostMode
6479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  BoostMode This parameter can be one of the following values:
6481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_6MHZ25
6482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_12MHZ5
6483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_20MHZ
6484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_25MHZ
6485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_50MHZ
6486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetBoostMode(ADC_TypeDef *ADCx, uint32_t BoostMode)
6489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
6492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
ARM GAS  /tmp/ccjQSYCi.s 			page 119


6494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else   /* ADC_VER_V5_V90 */
6496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST_0, (BoostMode >> 2UL));
6499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC boost mode.
6510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_GetBoostMode
6515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: Boost disabled 1: Boost enabled
6517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetBoostMode(ADC_TypeDef *ADCx)
6519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)READ_BIT(ADCx->CR, ADC_CR_BOOST_0);
6523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return ((READ_BIT(ADCx->CR, ADC_CR_BOOST) == (ADC_CR_BOOST)) ? 1UL : 0UL);
6527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro
6541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
ARM GAS  /tmp/ccjQSYCi.s 			page 120


6551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
6581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
6583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
ARM GAS  /tmp/ccjQSYCi.s 			page 121


6608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DAMDF, MultiDMATransfer);
6631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
ARM GAS  /tmp/ccjQSYCi.s 			page 122


6665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
6672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DAMDF));
6674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 123


6722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
6752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
ARM GAS  /tmp/ccjQSYCi.s 			page 124


6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
ARM GAS  /tmp/ccjQSYCi.s 			page 125


6836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion start.
6870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADEN);
6889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
ARM GAS  /tmp/ccjQSYCi.s 			page 126


6893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADDIS);
6909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration duration:
6943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of offset: 520 ADC clock cycles
6944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of linearity: 131072 ADC clock cycles
6945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
6946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
ARM GAS  /tmp/ccjQSYCi.s 			page 127


6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
6951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
6952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run can be performed only once).
6954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration\n
6959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALLIN       LL_ADC_StartCalibration
6960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationMode This parameter can be one of the following values:
6962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET
6963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET_LINEARITY
6964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t CalibrationMode, uint32_t 
  83              		.loc 2 6969 22 view .LVU17
  84              	.LBB428:
6970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  85              		.loc 2 6974 3 view .LVU18
  86 0032 9168     		ldr	r1, [r2, #8]
  87 0034 1A4B     		ldr	r3, .L11+4
  88 0036 0B40     		ands	r3, r3, r1
  89 0038 05F48035 		and	r5, r5, #65536
  90              	.LVL3:
  91              		.loc 2 6974 3 is_stmt 0 view .LVU19
  92 003c 06F08046 		and	r6, r6, #1073741824
  93              	.LVL4:
  94              		.loc 2 6974 3 view .LVU20
  95 0040 3543     		orrs	r5, r5, r6
  96 0042 2B43     		orrs	r3, r3, r5
  97 0044 43F00043 		orr	r3, r3, #-2147483648
  98 0048 9360     		str	r3, [r2, #8]
  99              	.LVL5:
 100              	.L4:
 101              		.loc 2 6974 3 view .LVU21
 102              	.LBE428:
 103              	.LBE427:
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 104              		.loc 1 155 11 is_stmt 1 view .LVU22
 105              		.loc 1 155 12 is_stmt 0 view .LVU23
 106 004a 2368     		ldr	r3, [r4]
 107              	.LVL6:
 108              	.LBB429:
 109              	.LBI429:
6975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCALLIN | ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCAL | (CalibrationMode & ADC_CALIB_MODE_MASK) | (SingleDiff & ADC_SINGLEDIFF_
ARM GAS  /tmp/ccjQSYCi.s 			page 128


6977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
 110              		.loc 2 6985 26 is_stmt 1 view .LVU24
 111              	.LBB430:
6986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 112              		.loc 2 6987 3 view .LVU25
 113              		.loc 2 6987 12 is_stmt 0 view .LVU26
 114 004c 9B68     		ldr	r3, [r3, #8]
 115              	.LVL7:
 116              		.loc 2 6987 70 view .LVU27
 117 004e 002B     		cmp	r3, #0
 118 0050 06DB     		blt	.L10
 119              	.LVL8:
 120              		.loc 2 6987 70 view .LVU28
 121              	.LBE430:
 122              	.LBE429:
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index++;
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Process unlocked */
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         return HAL_ERROR;
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state */
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 123              		.loc 1 173 5 is_stmt 1 view .LVU29
 124 0052 236E     		ldr	r3, [r4, #96]
 125 0054 23F00303 		bic	r3, r3, #3
 126 0058 43F00103 		orr	r3, r3, #1
 127 005c 2366     		str	r3, [r4, #96]
 128 005e 15E0     		b	.L7
 129              	.LVL9:
 130              	.L10:
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 131              		.loc 1 157 7 view .LVU30
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 132              		.loc 1 157 22 is_stmt 0 view .LVU31
 133 0060 019B     		ldr	r3, [sp, #4]
 134 0062 0133     		adds	r3, r3, #1
 135 0064 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccjQSYCi.s 			page 129


 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 136              		.loc 1 158 7 is_stmt 1 view .LVU32
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 137              		.loc 1 158 27 is_stmt 0 view .LVU33
 138 0066 019A     		ldr	r2, [sp, #4]
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 139              		.loc 1 158 10 view .LVU34
 140 0068 0E4B     		ldr	r3, .L11+8
 141 006a 9A42     		cmp	r2, r3
 142 006c EDD3     		bcc	.L4
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 143              		.loc 1 161 9 is_stmt 1 view .LVU35
 144 006e 236E     		ldr	r3, [r4, #96]
 145 0070 23F01203 		bic	r3, r3, #18
 146 0074 43F01003 		orr	r3, r3, #16
 147 0078 2366     		str	r3, [r4, #96]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 148              		.loc 1 166 9 view .LVU36
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 149              		.loc 1 166 9 view .LVU37
 150 007a 0023     		movs	r3, #0
 151 007c 84F85C30 		strb	r3, [r4, #92]
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 152              		.loc 1 166 9 view .LVU38
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 153              		.loc 1 168 9 view .LVU39
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 154              		.loc 1 168 16 is_stmt 0 view .LVU40
 155 0080 0120     		movs	r0, #1
 156              	.LVL10:
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 157              		.loc 1 168 16 view .LVU41
 158 0082 06E0     		b	.L2
 159              	.LVL11:
 160              	.L3:
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 161              		.loc 1 179 5 is_stmt 1 view .LVU42
 162 0084 236E     		ldr	r3, [r4, #96]
 163 0086 43F01003 		orr	r3, r3, #16
 164 008a 2366     		str	r3, [r4, #96]
 165              	.LVL12:
 166              	.L7:
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 167              		.loc 1 186 3 view .LVU43
 168              		.loc 1 186 3 view .LVU44
 169 008c 0023     		movs	r3, #0
ARM GAS  /tmp/ccjQSYCi.s 			page 130


 170 008e 84F85C30 		strb	r3, [r4, #92]
 171              		.loc 1 186 3 view .LVU45
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 172              		.loc 1 189 3 view .LVU46
 173              	.LVL13:
 174              	.L2:
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 175              		.loc 1 190 1 is_stmt 0 view .LVU47
 176 0092 02B0     		add	sp, sp, #8
 177              	.LCFI2:
 178              		.cfi_remember_state
 179              		.cfi_def_cfa_offset 16
 180              		@ sp needed
 181 0094 70BD     		pop	{r4, r5, r6, pc}
 182              	.LVL14:
 183              	.L8:
 184              	.LCFI3:
 185              		.cfi_restore_state
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 186              		.loc 1 136 3 view .LVU48
 187 0096 0220     		movs	r0, #2
 188              	.LVL15:
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 189              		.loc 1 136 3 view .LVU49
 190 0098 FBE7     		b	.L2
 191              	.L12:
 192 009a 00BF     		.align	2
 193              	.L11:
 194 009c FDEEFFFF 		.word	-4355
 195 00a0 C0FFFE3F 		.word	1073676224
 196 00a4 00F8C325 		.word	633600000
 197              		.cfi_endproc
 198              	.LFE350:
 200              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 201              		.align	1
 202              		.global	HAL_ADCEx_Calibration_GetValue
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 206              		.fpu fpv5-d16
 208              	HAL_ADCEx_Calibration_GetValue:
 209              	.LVL16:
 210              	.LFB351:
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval Calibration value.
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 211              		.loc 1 201 1 is_stmt 1 view -0
ARM GAS  /tmp/ccjQSYCi.s 			page 131


 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 216              		.loc 1 203 3 view .LVU51
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 217              		.loc 1 204 3 view .LVU52
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationOffsetFactor(hadc->Instance, SingleDiff);
 218              		.loc 1 207 3 view .LVU53
 219              		.loc 1 207 10 is_stmt 0 view .LVU54
 220 0000 0368     		ldr	r3, [r0]
 221              	.LVL17:
 222              	.LBB431:
 223              	.LBI431:
2883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 224              		.loc 2 2883 26 is_stmt 1 view .LVU55
 225              	.LBB432:
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 226              		.loc 2 2890 3 view .LVU56
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 227              		.loc 2 2890 21 is_stmt 0 view .LVU57
 228 0002 D3F8C400 		ldr	r0, [r3, #196]
 229              	.LVL18:
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 230              		.loc 2 2890 21 view .LVU58
 231 0006 0840     		ands	r0, r0, r1
 232 0008 20F0F820 		bic	r0, r0, #-134154240
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 233              		.loc 2 2890 153 view .LVU59
 234 000c 090B     		lsrs	r1, r1, #12
 235              	.LVL19:
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 236              		.loc 2 2890 153 view .LVU60
 237 000e 01F01001 		and	r1, r1, #16
 238              	.LVL20:
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 239              		.loc 2 2890 153 view .LVU61
 240              	.LBE432:
 241              	.LBE431:
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 242              		.loc 1 208 1 view .LVU62
 243 0012 C840     		lsrs	r0, r0, r1
 244 0014 7047     		bx	lr
 245              		.cfi_endproc
 246              	.LFE351:
 248              		.section	.text.HAL_ADCEx_LinearCalibration_GetValue,"ax",%progbits
 249              		.align	1
 250              		.global	HAL_ADCEx_LinearCalibration_GetValue
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv5-d16
 256              	HAL_ADCEx_LinearCalibration_GetValue:
ARM GAS  /tmp/ccjQSYCi.s 			page 132


 257              	.LVL21:
 258              	.LFB352:
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t *LinearCal
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 259              		.loc 1 217 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		.loc 1 217 1 is_stmt 0 view .LVU64
 264 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 24
 267              		.cfi_offset 4, -24
 268              		.cfi_offset 5, -20
 269              		.cfi_offset 6, -16
 270              		.cfi_offset 7, -12
 271              		.cfi_offset 8, -8
 272              		.cfi_offset 14, -4
 273 0004 0746     		mov	r7, r0
 274 0006 8846     		mov	r8, r1
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt;
 275              		.loc 1 218 3 is_stmt 1 view .LVU65
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 276              		.loc 1 219 3 view .LVU66
 277              	.LVL22:
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 278              		.loc 1 220 3 view .LVU67
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 279              		.loc 1 223 3 view .LVU68
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Enable the ADC ADEN = 1 to be able to read the linear calibration factor */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 280              		.loc 1 226 3 view .LVU69
 281              		.loc 1 226 7 is_stmt 0 view .LVU70
 282 0008 0368     		ldr	r3, [r0]
 283              	.LVL23:
 284              	.LBB433:
 285              	.LBI433:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 286              		.loc 2 6920 26 is_stmt 1 view .LVU71
 287              	.LBB434:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 288              		.loc 2 6922 3 view .LVU72
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 289              		.loc 2 6922 12 is_stmt 0 view .LVU73
 290 000a 9B68     		ldr	r3, [r3, #8]
 291              	.LVL24:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 133


 292              		.loc 2 6922 68 view .LVU74
 293 000c 13F0010F 		tst	r3, #1
 294 0010 12D1     		bne	.L23
 295              	.LVL25:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 296              		.loc 2 6922 68 view .LVU75
 297              	.LBE434:
 298              	.LBE433:
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 299              		.loc 1 228 5 is_stmt 1 view .LVU76
 300              		.loc 1 228 22 is_stmt 0 view .LVU77
 301 0012 FFF7FEFF 		bl	ADC_Enable
 302              	.LVL26:
 303              	.L15:
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 304              		.loc 1 231 3 is_stmt 1 view .LVU78
 305              		.loc 1 231 6 is_stmt 0 view .LVU79
 306 0016 0028     		cmp	r0, #0
 307 0018 37D1     		bne	.L16
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 308              		.loc 1 233 5 is_stmt 1 view .LVU80
 309              		.loc 1 233 9 is_stmt 0 view .LVU81
 310 001a 3B68     		ldr	r3, [r7]
 311              	.LVL27:
 312              	.LBB435:
 313              	.LBI435:
6988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
7000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
7010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
7011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
7013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccjQSYCi.s 			page 134


7015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
7017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTART);
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
7028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
7031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
7033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
7037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTP);
7044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
7048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
7049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
7051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 314              		.loc 2 7052 26 is_stmt 1 view .LVU82
 315              	.LBB436:
7053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 316              		.loc 2 7054 3 view .LVU83
 317              		.loc 2 7054 12 is_stmt 0 view .LVU84
 318 001c 9A68     		ldr	r2, [r3, #8]
 319              		.loc 2 7054 74 view .LVU85
 320 001e 12F0040C 		ands	ip, r2, #4
 321 0022 07D0     		beq	.L17
 322              	.LVL28:
 323              		.loc 2 7054 74 view .LVU86
 324              	.LBE436:
 325              	.LBE435:
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
 326              		.loc 1 235 7 is_stmt 1 view .LVU87
 327              	.LBB437:
 328              	.LBI437:
ARM GAS  /tmp/ccjQSYCi.s 			page 135


7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 329              		.loc 2 7036 22 view .LVU88
 330              	.LBB438:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 331              		.loc 2 7041 3 view .LVU89
 332 0024 9968     		ldr	r1, [r3, #8]
 333 0026 1A4A     		ldr	r2, .L26
 334 0028 0A40     		ands	r2, r2, r1
 335 002a 42F01002 		orr	r2, r2, #16
 336 002e 9A60     		str	r2, [r3, #8]
 337              	.LVL29:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 338              		.loc 2 7041 3 is_stmt 0 view .LVU90
 339              	.LBE438:
 340              	.LBE437:
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 341              		.loc 1 236 7 is_stmt 1 view .LVU91
 342              		.loc 1 236 36 is_stmt 0 view .LVU92
 343 0030 4FF0010C 		mov	ip, #1
 344              	.LVL30:
 345              	.L17:
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL; cnt--)
 346              		.loc 1 238 5 is_stmt 1 view .LVU93
 347              		.loc 1 238 14 is_stmt 0 view .LVU94
 348 0034 0626     		movs	r6, #6
 349              		.loc 1 238 5 view .LVU95
 350 0036 08E0     		b	.L18
 351              	.LVL31:
 352              	.L23:
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 353              		.loc 1 219 21 view .LVU96
 354 0038 0020     		movs	r0, #0
 355              	.LVL32:
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 356              		.loc 1 219 21 view .LVU97
 357 003a ECE7     		b	.L15
 358              	.LVL33:
 359              	.L20:
 360              	.LBB439:
 361              	.LBB440:
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 362              		.loc 2 2967 3 is_stmt 1 view .LVU98
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 363              		.loc 2 2967 21 is_stmt 0 view .LVU99
 364 003c D4F8C830 		ldr	r3, [r4, #200]
 365              	.LVL34:
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 366              		.loc 2 2967 10 view .LVU100
 367 0040 23F04043 		bic	r3, r3, #-1073741824
 368              	.LVL35:
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 369              		.loc 2 2967 10 view .LVU101
 370              	.LBE440:
 371              	.LBE439:
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LinearCalib_Buffer[cnt - 1U] = LL_ADC_GetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCA
ARM GAS  /tmp/ccjQSYCi.s 			page 136


 372              		.loc 1 240 36 view .LVU102
 373 0044 48F82130 		str	r3, [r8, r1, lsl #2]
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 374              		.loc 1 238 55 is_stmt 1 view .LVU103
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 375              		.loc 1 238 58 is_stmt 0 view .LVU104
 376 0048 013E     		subs	r6, r6, #1
 377              	.LVL36:
 378              	.L18:
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 379              		.loc 1 238 44 is_stmt 1 discriminator 1 view .LVU105
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 380              		.loc 1 238 5 is_stmt 0 discriminator 1 view .LVU106
 381 004a A6B1     		cbz	r6, .L25
 382              		.loc 1 240 7 is_stmt 1 discriminator 3 view .LVU107
 383              		.loc 1 240 38 is_stmt 0 discriminator 3 view .LVU108
 384 004c 3C68     		ldr	r4, [r7]
 385              		.loc 1 240 138 discriminator 3 view .LVU109
 386 004e C6F10603 		rsb	r3, r6, #6
 387              		.loc 1 240 38 discriminator 3 view .LVU110
 388 0052 4FF00065 		mov	r5, #134217728
 389 0056 DD40     		lsrs	r5, r5, r3
 390              		.loc 1 240 25 discriminator 3 view .LVU111
 391 0058 6FF04041 		mvn	r1, #-1073741824
 392 005c 3144     		add	r1, r1, r6
 393              	.LVL37:
 394              	.LBB442:
 395              	.LBI439:
2958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 396              		.loc 2 2958 26 is_stmt 1 discriminator 3 view .LVU112
 397              	.LBB441:
2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
 398              		.loc 2 2960 3 discriminator 3 view .LVU113
2961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) != 0UL) && (timeout_cpu_cycles > 0UL))
 399              		.loc 2 2961 3 discriminator 3 view .LVU114
 400 005e A368     		ldr	r3, [r4, #8]
 401 0060 23EA0503 		bic	r3, r3, r5
 402 0064 A360     		str	r3, [r4, #8]
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 403              		.loc 2 2962 3 discriminator 3 view .LVU115
2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
 404              		.loc 2 2960 12 is_stmt 0 discriminator 3 view .LVU116
 405 0066 0B4B     		ldr	r3, .L26+4
 406              	.LVL38:
 407              	.L19:
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 408              		.loc 2 2962 9 is_stmt 1 view .LVU117
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 409              		.loc 2 2962 11 is_stmt 0 view .LVU118
 410 0068 A268     		ldr	r2, [r4, #8]
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 411              		.loc 2 2962 9 view .LVU119
 412 006a 1542     		tst	r5, r2
 413 006c E6D0     		beq	.L20
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 414              		.loc 2 2962 53 view .LVU120
 415 006e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjQSYCi.s 			page 137


 416 0070 E4D0     		beq	.L20
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 417              		.loc 2 2964 5 is_stmt 1 view .LVU121
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 418              		.loc 2 2964 23 is_stmt 0 view .LVU122
 419 0072 013B     		subs	r3, r3, #1
 420              	.LVL39:
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 421              		.loc 2 2964 23 view .LVU123
 422 0074 F8E7     		b	.L19
 423              	.LVL40:
 424              	.L25:
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 425              		.loc 2 2964 23 view .LVU124
 426              	.LBE441:
 427              	.LBE442:
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (temp_REG_IsConversionOngoing != 0UL)
 428              		.loc 1 242 5 is_stmt 1 view .LVU125
 429              		.loc 1 242 8 is_stmt 0 view .LVU126
 430 0076 BCF1000F 		cmp	ip, #0
 431 007a 06D0     		beq	.L16
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 432              		.loc 1 244 7 is_stmt 1 view .LVU127
 433 007c 3A68     		ldr	r2, [r7]
 434              	.LVL41:
 435              	.LBB443:
 436              	.LBI443:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 437              		.loc 2 7016 22 view .LVU128
 438              	.LBB444:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 439              		.loc 2 7021 3 view .LVU129
 440 007e 9168     		ldr	r1, [r2, #8]
 441 0080 034B     		ldr	r3, .L26
 442 0082 0B40     		ands	r3, r3, r1
 443 0084 43F00403 		orr	r3, r3, #4
 444 0088 9360     		str	r3, [r2, #8]
 445              	.LVL42:
 446              	.L16:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 447              		.loc 2 7021 3 is_stmt 0 view .LVU130
 448              	.LBE444:
 449              	.LBE443:
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 450              		.loc 1 248 3 is_stmt 1 view .LVU131
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 451              		.loc 1 249 1 is_stmt 0 view .LVU132
 452 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 453              	.LVL43:
 454              	.L27:
 455              		.loc 1 249 1 view .LVU133
 456 008e 00BF     		.align	2
ARM GAS  /tmp/ccjQSYCi.s 			page 138


 457              	.L26:
 458 0090 C0FFFF7F 		.word	2147483584
 459 0094 70000800 		.word	524400
 460              		.cfi_endproc
 461              	.LFE352:
 463              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 464              		.align	1
 465              		.global	HAL_ADCEx_Calibration_SetValue
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv5-d16
 471              	HAL_ADCEx_Calibration_SetValue:
 472              	.LVL44:
 473              	.LFB353:
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff, uint
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 474              		.loc 1 262 1 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479              		.loc 1 262 1 is_stmt 0 view .LVU135
 480 0000 0346     		mov	r3, r0
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 481              		.loc 1 263 3 is_stmt 1 view .LVU136
 482              	.LVL45:
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 483              		.loc 1 264 3 view .LVU137
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 484              		.loc 1 265 3 view .LVU138
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 485              		.loc 1 268 3 view .LVU139
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 486              		.loc 1 269 3 view .LVU140
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 487              		.loc 1 270 3 view .LVU141
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 488              		.loc 1 273 3 view .LVU142
 489              		.loc 1 273 3 view .LVU143
 490 0002 90F85C00 		ldrb	r0, [r0, #92]	@ zero_extendqisi2
 491              	.LVL46:
ARM GAS  /tmp/ccjQSYCi.s 			page 139


 492              		.loc 1 273 3 is_stmt 0 view .LVU144
 493 0006 0128     		cmp	r0, #1
 494 0008 35D0     		beq	.L34
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 495              		.loc 1 262 1 discriminator 2 view .LVU145
 496 000a 70B4     		push	{r4, r5, r6}
 497              	.LCFI5:
 498              		.cfi_def_cfa_offset 12
 499              		.cfi_offset 4, -12
 500              		.cfi_offset 5, -8
 501              		.cfi_offset 6, -4
 502              		.loc 1 273 3 is_stmt 1 discriminator 2 view .LVU146
 503 000c 0120     		movs	r0, #1
 504 000e 83F85C00 		strb	r0, [r3, #92]
 505              		.loc 1 273 3 discriminator 2 view .LVU147
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 506              		.loc 1 277 3 discriminator 2 view .LVU148
 507              		.loc 1 277 44 is_stmt 0 discriminator 2 view .LVU149
 508 0012 1D68     		ldr	r5, [r3]
 509              	.LVL47:
 510              	.LBB445:
 511              	.LBI445:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 512              		.loc 2 7052 26 is_stmt 1 discriminator 2 view .LVU150
 513              	.LBB446:
 514              		.loc 2 7054 3 discriminator 2 view .LVU151
 515              		.loc 2 7054 12 is_stmt 0 discriminator 2 view .LVU152
 516 0014 A868     		ldr	r0, [r5, #8]
 517              		.loc 2 7054 74 discriminator 2 view .LVU153
 518 0016 10F00400 		ands	r0, r0, #4
 519 001a 00D0     		beq	.L30
 520              		.loc 2 7054 74 view .LVU154
 521 001c 0120     		movs	r0, #1
 522              	.L30:
 523              	.LVL48:
 524              		.loc 2 7054 74 view .LVU155
 525              	.LBE446:
 526              	.LBE445:
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 527              		.loc 1 278 3 is_stmt 1 view .LVU156
 528              	.LBB447:
 529              	.LBI447:
7055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
7059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
7060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
7062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
7066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 140


7067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
7073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
7074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
7078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
7085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData16
7089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
7091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData16(ADC_TypeDef *ADCx)
7093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
7100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData14
7104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FF
7106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData14(ADC_TypeDef *ADCx)
7108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
7115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
7123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 141


7124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
7130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
7138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
7153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         separately).
7167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
7178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ConversionData)
ARM GAS  /tmp/ccjQSYCi.s 			page 142


7181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
7197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTART);
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /tmp/ccjQSYCi.s 			page 143


7238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTP);
7239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 530              		.loc 2 7247 26 view .LVU157
 531              	.LBB448:
7248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 532              		.loc 2 7249 3 view .LVU158
 533              		.loc 2 7249 12 is_stmt 0 view .LVU159
 534 001e AC68     		ldr	r4, [r5, #8]
 535              		.loc 2 7249 76 view .LVU160
 536 0020 14F00804 		ands	r4, r4, #8
 537 0024 00D0     		beq	.L31
 538 0026 0124     		movs	r4, #1
 539              	.L31:
 540              	.LVL49:
 541              		.loc 2 7249 76 view .LVU161
 542              	.LBE448:
 543              	.LBE447:
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 544              		.loc 1 280 3 is_stmt 1 view .LVU162
 545              	.LBB449:
 546              	.LBI449:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 547              		.loc 2 6920 26 view .LVU163
 548              	.LBB450:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 549              		.loc 2 6922 3 view .LVU164
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 550              		.loc 2 6922 12 is_stmt 0 view .LVU165
 551 0028 AE68     		ldr	r6, [r5, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 552              		.loc 2 6922 68 view .LVU166
 553 002a 16F0010F 		tst	r6, #1
 554 002e 14D0     		beq	.L32
 555              	.LVL50:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 556              		.loc 2 6922 68 view .LVU167
 557              	.LBE450:
 558              	.LBE449:
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 559              		.loc 1 282 7 view .LVU168
 560 0030 2043     		orrs	r0, r4, r0
 561              	.LVL51:
 562              		.loc 1 282 7 view .LVU169
 563 0032 12D1     		bne	.L32
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccjQSYCi.s 			page 144


 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationOffsetFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 564              		.loc 1 286 5 is_stmt 1 view .LVU170
 565              	.LVL52:
 566              	.LBB451:
 567              	.LBI451:
2852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 568              		.loc 2 2852 22 view .LVU171
 569              	.LBB452:
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 570              		.loc 2 2855 3 view .LVU172
 571 0034 D5F8C440 		ldr	r4, [r5, #196]
 572              	.LVL53:
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 573              		.loc 2 2855 3 is_stmt 0 view .LVU173
 574 0038 21F0F820 		bic	r0, r1, #-134154240
 575 003c 24EA0004 		bic	r4, r4, r0
 576 0040 C1F30A00 		ubfx	r0, r1, #0, #11
 577 0044 C043     		mvns	r0, r0
 578 0046 00EA1131 		and	r1, r0, r1, lsr #12
 579              	.LVL54:
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 580              		.loc 2 2855 3 view .LVU174
 581 004a 01F01001 		and	r1, r1, #16
 582 004e 8A40     		lsls	r2, r2, r1
 583              	.LVL55:
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 584              		.loc 2 2855 3 view .LVU175
 585 0050 2243     		orrs	r2, r2, r4
 586 0052 C5F8C420 		str	r2, [r5, #196]
 587              	.LBE452:
 588              	.LBE451:
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 589              		.loc 1 263 21 view .LVU176
 590 0056 0020     		movs	r0, #0
 591              	.LBB454:
 592              	.LBB453:
2863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 593              		.loc 2 2863 1 view .LVU177
 594 0058 08E0     		b	.L33
 595              	.LVL56:
 596              	.L32:
2863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 597              		.loc 2 2863 1 view .LVU178
 598              	.LBE453:
 599              	.LBE454:
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine */
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 600              		.loc 1 291 5 is_stmt 1 view .LVU179
 601 005a 1A6E     		ldr	r2, [r3, #96]
 602              	.LVL57:
 603              		.loc 1 291 5 is_stmt 0 view .LVU180
 604 005c 42F02002 		orr	r2, r2, #32
 605 0060 1A66     		str	r2, [r3, #96]
ARM GAS  /tmp/ccjQSYCi.s 			page 145


 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC error code */
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 606              		.loc 1 293 5 is_stmt 1 view .LVU181
 607 0062 5A6E     		ldr	r2, [r3, #100]
 608 0064 42F00102 		orr	r2, r2, #1
 609 0068 5A66     		str	r2, [r3, #100]
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 610              		.loc 1 296 5 view .LVU182
 611              	.LVL58:
 612              		.loc 1 296 20 is_stmt 0 view .LVU183
 613 006a 0120     		movs	r0, #1
 614              	.LVL59:
 615              	.L33:
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 616              		.loc 1 300 3 is_stmt 1 view .LVU184
 617              		.loc 1 300 3 view .LVU185
 618 006c 0022     		movs	r2, #0
 619 006e 83F85C20 		strb	r2, [r3, #92]
 620              		.loc 1 300 3 view .LVU186
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 621              		.loc 1 303 3 view .LVU187
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 622              		.loc 1 304 1 is_stmt 0 view .LVU188
 623 0072 70BC     		pop	{r4, r5, r6}
 624              	.LCFI6:
 625              		.cfi_restore 6
 626              		.cfi_restore 5
 627              		.cfi_restore 4
 628              		.cfi_def_cfa_offset 0
 629 0074 7047     		bx	lr
 630              	.LVL60:
 631              	.L34:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 632              		.loc 1 273 3 view .LVU189
 633 0076 0220     		movs	r0, #2
 634              		.loc 1 304 1 view .LVU190
 635 0078 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE353:
 639              		.section	.text.HAL_ADCEx_LinearCalibration_SetValue,"ax",%progbits
 640              		.align	1
 641              		.global	HAL_ADCEx_LinearCalibration_SetValue
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu fpv5-d16
 647              	HAL_ADCEx_LinearCalibration_SetValue:
 648              	.LVL61:
 649              	.LFB354:
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 146


 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Set the linear calibration factor
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  LinearCalib_Buffer: Linear calibration factor
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t *LinearCal
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 650              		.loc 1 313 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 8
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		.loc 1 313 1 is_stmt 0 view .LVU192
 655 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 656              	.LCFI7:
 657              		.cfi_def_cfa_offset 20
 658              		.cfi_offset 4, -20
 659              		.cfi_offset 5, -16
 660              		.cfi_offset 6, -12
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 83B0     		sub	sp, sp, #12
 664              	.LCFI8:
 665              		.cfi_def_cfa_offset 32
 666 0004 0646     		mov	r6, r0
 667 0006 0F46     		mov	r7, r1
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt;
 668              		.loc 1 314 3 is_stmt 1 view .LVU193
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 669              		.loc 1 315 3 view .LVU194
 670              		.loc 1 315 17 is_stmt 0 view .LVU195
 671 0008 0023     		movs	r3, #0
 672 000a 0193     		str	r3, [sp, #4]
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t temp_REG_IsConversionOngoing = 0UL;
 673              		.loc 1 316 3 is_stmt 1 view .LVU196
 674              	.LVL62:
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 675              		.loc 1 319 3 view .LVU197
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  Exit deep power down mode if still in that state                        */
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_DEEPPWD))
 676              		.loc 1 323 3 view .LVU198
 677              		.loc 1 323 7 is_stmt 0 view .LVU199
 678 000c 0368     		ldr	r3, [r0]
 679 000e 9A68     		ldr	r2, [r3, #8]
 680              		.loc 1 323 6 view .LVU200
 681 0010 12F0005F 		tst	r2, #536870912
 682 0014 03D0     		beq	.L40
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Exit deep power down mode */
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 683              		.loc 1 326 5 is_stmt 1 view .LVU201
 684 0016 9A68     		ldr	r2, [r3, #8]
 685 0018 22F00052 		bic	r2, r2, #536870912
ARM GAS  /tmp/ccjQSYCi.s 			page 147


 686 001c 9A60     		str	r2, [r3, #8]
 687              	.L40:
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* System was in deep power down mode, calibration must
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        be relaunched or a previously saved calibration factor
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        re-applied once the ADC voltage regulator is enabled */
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 688              		.loc 1 334 3 view .LVU202
 689              		.loc 1 334 7 is_stmt 0 view .LVU203
 690 001e 3368     		ldr	r3, [r6]
 691 0020 9A68     		ldr	r2, [r3, #8]
 692              		.loc 1 334 6 view .LVU204
 693 0022 12F0805F 		tst	r2, #268435456
 694 0026 13D1     		bne	.L41
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable ADC internal voltage regulator                                  */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN);
 695              		.loc 1 337 5 is_stmt 1 view .LVU205
 696 0028 9A68     		ldr	r2, [r3, #8]
 697 002a 42F08052 		orr	r2, r2, #268435456
 698 002e 9A60     		str	r2, [r3, #8]
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Delay for ADC stabilization time                                       */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Wait loop initialization and execution                                 */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: Variable divided by 2 to compensate partially                    */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       CPU processing cycles.                                           */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     wait_loop_index = ((ADC_STAB_DELAY_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 699              		.loc 1 342 5 view .LVU206
 700              		.loc 1 342 71 is_stmt 0 view .LVU207
 701 0030 4A4B     		ldr	r3, .L65
 702 0032 1B68     		ldr	r3, [r3]
 703 0034 9B09     		lsrs	r3, r3, #6
 704 0036 4A4A     		ldr	r2, .L65+4
 705 0038 A2FB0323 		umull	r2, r3, r2, r3
 706 003c 9B09     		lsrs	r3, r3, #6
 707              		.loc 1 342 51 view .LVU208
 708 003e 0133     		adds	r3, r3, #1
 709              		.loc 1 342 21 view .LVU209
 710 0040 0193     		str	r3, [sp, #4]
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
 711              		.loc 1 343 5 is_stmt 1 view .LVU210
 712              		.loc 1 343 11 is_stmt 0 view .LVU211
 713 0042 02E0     		b	.L42
 714              	.L43:
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       wait_loop_index--;
 715              		.loc 1 345 7 is_stmt 1 view .LVU212
 716              		.loc 1 345 22 is_stmt 0 view .LVU213
 717 0044 019B     		ldr	r3, [sp, #4]
 718 0046 013B     		subs	r3, r3, #1
 719 0048 0193     		str	r3, [sp, #4]
 720              	.L42:
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
 721              		.loc 1 343 11 is_stmt 1 view .LVU214
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
ARM GAS  /tmp/ccjQSYCi.s 			page 148


 722              		.loc 1 343 28 is_stmt 0 view .LVU215
 723 004a 019B     		ldr	r3, [sp, #4]
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while (wait_loop_index != 0UL)
 724              		.loc 1 343 11 view .LVU216
 725 004c 002B     		cmp	r3, #0
 726 004e F9D1     		bne	.L43
 727              	.L41:
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* clocking, voltage regulator would not be enabled).                       */
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN))
 728              		.loc 1 353 3 is_stmt 1 view .LVU217
 729              		.loc 1 353 7 is_stmt 0 view .LVU218
 730 0050 3368     		ldr	r3, [r6]
 731 0052 9A68     		ldr	r2, [r3, #8]
 732              		.loc 1 353 6 view .LVU219
 733 0054 12F0805F 		tst	r2, #268435456
 734 0058 09D0     		beq	.L62
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC error code to ADC peripheral internal error */
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return  HAL_ERROR;
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL) /* Enable the ADC if it is disabled */
 735              		.loc 1 364 3 is_stmt 1 view .LVU220
 736              	.LVL63:
 737              	.LBB455:
 738              	.LBI455:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 739              		.loc 2 6920 26 view .LVU221
 740              	.LBB456:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 741              		.loc 2 6922 3 view .LVU222
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 742              		.loc 2 6922 12 is_stmt 0 view .LVU223
 743 005a 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 744              		.loc 2 6922 68 view .LVU224
 745 005c 12F0010F 		tst	r2, #1
 746 0060 11D0     		beq	.L46
 747              	.LVL64:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 748              		.loc 2 6922 68 view .LVU225
 749              	.LBE456:
 750              	.LBE455:
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (ADC_Enable(hadc) != HAL_OK)
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 149


 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return  HAL_ERROR;
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL ; cnt--)
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCALRDYW6 >> (ADC_LINEAR_CALIB_R
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void)ADC_Disable(hadc);
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else  /* ADC is already enabled, so no need to enable it but need to stop conversion */
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 751              		.loc 1 381 5 is_stmt 1 view .LVU226
 752              	.LBB457:
 753              	.LBI457:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 754              		.loc 2 7052 26 view .LVU227
 755              	.LBB458:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 756              		.loc 2 7054 3 view .LVU228
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 757              		.loc 2 7054 12 is_stmt 0 view .LVU229
 758 0062 9868     		ldr	r0, [r3, #8]
 759              	.LVL65:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 760              		.loc 2 7054 74 view .LVU230
 761 0064 10F00400 		ands	r0, r0, #4
 762 0068 3DD1     		bne	.L47
 763              	.LVL66:
 764              	.L48:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 765              		.loc 2 7054 74 view .LVU231
 766              	.LBE458:
 767              	.LBE457:
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     for (cnt = ADC_LINEAR_CALIB_REG_COUNT; cnt > 0UL ; cnt--)
 768              		.loc 1 386 5 is_stmt 1 view .LVU232
 769              		.loc 1 386 14 is_stmt 0 view .LVU233
 770 006a 0621     		movs	r1, #6
 771              		.loc 1 386 5 view .LVU234
 772 006c 44E0     		b	.L54
 773              	.LVL67:
 774              	.L62:
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 775              		.loc 1 356 5 is_stmt 1 view .LVU235
 776 006e 336E     		ldr	r3, [r6, #96]
 777 0070 43F01003 		orr	r3, r3, #16
 778 0074 3366     		str	r3, [r6, #96]
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 779              		.loc 1 359 5 view .LVU236
 780 0076 736E     		ldr	r3, [r6, #100]
 781 0078 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/ccjQSYCi.s 			page 150


 782 007c 7366     		str	r3, [r6, #100]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 783              		.loc 1 361 5 view .LVU237
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 784              		.loc 1 361 13 is_stmt 0 view .LVU238
 785 007e 0125     		movs	r5, #1
 786              	.LVL68:
 787              	.L45:
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetCalibrationLinearFactor(hadc->Instance, ADC_CR_LINCALRDYW6 >> (ADC_LINEAR_CALIB_REG
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (temp_REG_IsConversionOngoing != 0UL)
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 788              		.loc 1 396 1 view .LVU239
 789 0080 2846     		mov	r0, r5
 790 0082 03B0     		add	sp, sp, #12
 791              	.LCFI9:
 792              		.cfi_remember_state
 793              		.cfi_def_cfa_offset 20
 794              		@ sp needed
 795 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 796              	.LVL69:
 797              	.L46:
 798              	.LCFI10:
 799              		.cfi_restore_state
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 800              		.loc 1 366 5 is_stmt 1 view .LVU240
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 801              		.loc 1 366 9 is_stmt 0 view .LVU241
 802 0086 3046     		mov	r0, r6
 803              	.LVL70:
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 804              		.loc 1 366 9 view .LVU242
 805 0088 FFF7FEFF 		bl	ADC_Enable
 806              	.LVL71:
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 807              		.loc 1 366 8 view .LVU243
 808 008c 0546     		mov	r5, r0
 809 008e 0028     		cmp	r0, #0
 810 0090 5FD1     		bne	.L59
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 811              		.loc 1 372 16 view .LVU244
 812 0092 0624     		movs	r4, #6
 813 0094 00E0     		b	.L49
 814              	.LVL72:
 815              	.L50:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 816              		.loc 1 372 58 is_stmt 1 view .LVU245
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 817              		.loc 1 372 61 is_stmt 0 view .LVU246
 818 0096 013C     		subs	r4, r4, #1
 819              	.LVL73:
ARM GAS  /tmp/ccjQSYCi.s 			page 151


 820              	.L49:
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 821              		.loc 1 372 46 is_stmt 1 discriminator 1 view .LVU247
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 822              		.loc 1 372 7 is_stmt 0 discriminator 1 view .LVU248
 823 0098 0CB3     		cbz	r4, .L63
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 824              		.loc 1 374 9 is_stmt 1 discriminator 3 view .LVU249
 825 009a 3168     		ldr	r1, [r6]
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 826              		.loc 1 374 109 is_stmt 0 discriminator 3 view .LVU250
 827 009c C4F10603 		rsb	r3, r4, #6
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 828              		.loc 1 374 9 discriminator 3 view .LVU251
 829 00a0 4FF00060 		mov	r0, #134217728
 830 00a4 D840     		lsrs	r0, r0, r3
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 831              		.loc 1 374 135 discriminator 3 view .LVU252
 832 00a6 6FF04043 		mvn	r3, #-1073741824
 833 00aa 2344     		add	r3, r3, r4
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 834              		.loc 1 374 9 discriminator 3 view .LVU253
 835 00ac 57F82330 		ldr	r3, [r7, r3, lsl #2]
 836              	.LVL74:
 837              	.LBB459:
 838              	.LBI459:
2918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 839              		.loc 2 2918 22 is_stmt 1 discriminator 3 view .LVU254
 840              	.LBB460:
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 841              		.loc 2 2921 3 discriminator 3 view .LVU255
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 842              		.loc 2 2921 6 is_stmt 0 discriminator 3 view .LVU256
 843 00b0 2C4A     		ldr	r2, .L65+8
 844 00b2 9142     		cmp	r1, r2
 845 00b4 EFD0     		beq	.L50
 846              	.LBB461:
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
 847              		.loc 2 2923 5 is_stmt 1 view .LVU257
 848              	.LVL75:
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
 849              		.loc 2 2924 5 view .LVU258
 850 00b6 D1F8C820 		ldr	r2, [r1, #200]
 851 00ba 02F04042 		and	r2, r2, #-1073741824
 852 00be 1343     		orrs	r3, r3, r2
 853              	.LVL76:
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
 854              		.loc 2 2924 5 is_stmt 0 view .LVU259
 855 00c0 C1F8C830 		str	r3, [r1, #200]
 856              	.LVL77:
2925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
 857              		.loc 2 2925 5 is_stmt 1 view .LVU260
 858 00c4 8B68     		ldr	r3, [r1, #8]
 859 00c6 23F48033 		bic	r3, r3, #65536
 860 00ca 0343     		orrs	r3, r3, r0
 861 00cc 8B60     		str	r3, [r1, #8]
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 152


 862              		.loc 2 2926 5 view .LVU261
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
 863              		.loc 2 2923 14 is_stmt 0 view .LVU262
 864 00ce 264B     		ldr	r3, .L65+12
 865              	.LVL78:
 866              	.L51:
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 867              		.loc 2 2926 11 is_stmt 1 view .LVU263
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 868              		.loc 2 2926 13 is_stmt 0 view .LVU264
 869 00d0 8A68     		ldr	r2, [r1, #8]
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 870              		.loc 2 2926 11 view .LVU265
 871 00d2 1042     		tst	r0, r2
 872 00d4 DFD1     		bne	.L50
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 873              		.loc 2 2926 55 view .LVU266
 874 00d6 002B     		cmp	r3, #0
 875 00d8 DDD0     		beq	.L50
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 876              		.loc 2 2928 7 is_stmt 1 view .LVU267
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 877              		.loc 2 2928 25 is_stmt 0 view .LVU268
 878 00da 013B     		subs	r3, r3, #1
 879              	.LVL79:
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 880              		.loc 2 2928 25 view .LVU269
 881 00dc F8E7     		b	.L51
 882              	.LVL80:
 883              	.L63:
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 884              		.loc 2 2928 25 view .LVU270
 885              	.LBE461:
 886              	.LBE460:
 887              	.LBE459:
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 888              		.loc 1 376 7 is_stmt 1 view .LVU271
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 889              		.loc 1 376 13 is_stmt 0 view .LVU272
 890 00de 3046     		mov	r0, r6
 891 00e0 FFF7FEFF 		bl	ADC_Disable
 892              	.LVL81:
 893 00e4 CCE7     		b	.L45
 894              	.LVL82:
 895              	.L47:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       temp_REG_IsConversionOngoing = 1UL;
 896              		.loc 1 383 7 is_stmt 1 view .LVU273
 897              	.LBB462:
 898              	.LBI462:
7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 899              		.loc 2 7036 22 view .LVU274
 900              	.LBB463:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 901              		.loc 2 7041 3 view .LVU275
 902 00e6 9968     		ldr	r1, [r3, #8]
 903              	.LVL83:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /tmp/ccjQSYCi.s 			page 153


 904              		.loc 2 7041 3 is_stmt 0 view .LVU276
 905 00e8 204A     		ldr	r2, .L65+16
 906 00ea 0A40     		ands	r2, r2, r1
 907 00ec 42F01002 		orr	r2, r2, #16
 908 00f0 9A60     		str	r2, [r3, #8]
 909              	.LVL84:
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 910              		.loc 2 7041 3 view .LVU277
 911              	.LBE463:
 912              	.LBE462:
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 913              		.loc 1 384 7 is_stmt 1 view .LVU278
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 914              		.loc 1 384 36 is_stmt 0 view .LVU279
 915 00f2 0120     		movs	r0, #1
 916 00f4 B9E7     		b	.L48
 917              	.LVL85:
 918              	.L55:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 919              		.loc 1 386 56 is_stmt 1 view .LVU280
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 920              		.loc 1 386 59 is_stmt 0 view .LVU281
 921 00f6 0139     		subs	r1, r1, #1
 922              	.LVL86:
 923              	.L54:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 924              		.loc 1 386 44 is_stmt 1 discriminator 1 view .LVU282
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 925              		.loc 1 386 5 is_stmt 0 discriminator 1 view .LVU283
 926 00f8 09B3     		cbz	r1, .L64
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 927              		.loc 1 388 7 is_stmt 1 discriminator 3 view .LVU284
 928 00fa 3468     		ldr	r4, [r6]
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 929              		.loc 1 388 107 is_stmt 0 discriminator 3 view .LVU285
 930 00fc C1F10603 		rsb	r3, r1, #6
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 931              		.loc 1 388 7 discriminator 3 view .LVU286
 932 0100 4FF00065 		mov	r5, #134217728
 933 0104 DD40     		lsrs	r5, r5, r3
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 934              		.loc 1 388 133 discriminator 3 view .LVU287
 935 0106 6FF04043 		mvn	r3, #-1073741824
 936 010a 0B44     		add	r3, r3, r1
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 937              		.loc 1 388 7 discriminator 3 view .LVU288
 938 010c 57F82330 		ldr	r3, [r7, r3, lsl #2]
 939              	.LVL87:
 940              	.LBB464:
 941              	.LBI464:
2918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 942              		.loc 2 2918 22 is_stmt 1 discriminator 3 view .LVU289
 943              	.LBB465:
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 944              		.loc 2 2921 3 discriminator 3 view .LVU290
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 945              		.loc 2 2921 6 is_stmt 0 discriminator 3 view .LVU291
ARM GAS  /tmp/ccjQSYCi.s 			page 154


 946 0110 144A     		ldr	r2, .L65+8
 947 0112 9442     		cmp	r4, r2
 948 0114 EFD0     		beq	.L55
 949              	.LBB466:
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
 950              		.loc 2 2923 5 is_stmt 1 view .LVU292
 951              	.LVL88:
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
 952              		.loc 2 2924 5 view .LVU293
 953 0116 D4F8C820 		ldr	r2, [r4, #200]
 954 011a 02F04042 		and	r2, r2, #-1073741824
 955 011e 1343     		orrs	r3, r3, r2
 956              	.LVL89:
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
 957              		.loc 2 2924 5 is_stmt 0 view .LVU294
 958 0120 C4F8C830 		str	r3, [r4, #200]
 959              	.LVL90:
2925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
 960              		.loc 2 2925 5 is_stmt 1 view .LVU295
 961 0124 A368     		ldr	r3, [r4, #8]
 962 0126 23F48033 		bic	r3, r3, #65536
 963 012a 2B43     		orrs	r3, r3, r5
 964 012c A360     		str	r3, [r4, #8]
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 965              		.loc 2 2926 5 view .LVU296
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
 966              		.loc 2 2923 14 is_stmt 0 view .LVU297
 967 012e 0E4B     		ldr	r3, .L65+12
 968              	.LVL91:
 969              	.L56:
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 970              		.loc 2 2926 11 is_stmt 1 view .LVU298
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 971              		.loc 2 2926 13 is_stmt 0 view .LVU299
 972 0130 A268     		ldr	r2, [r4, #8]
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 973              		.loc 2 2926 11 view .LVU300
 974 0132 1542     		tst	r5, r2
 975 0134 DFD1     		bne	.L55
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
 976              		.loc 2 2926 55 view .LVU301
 977 0136 002B     		cmp	r3, #0
 978 0138 DDD0     		beq	.L55
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 979              		.loc 2 2928 7 is_stmt 1 view .LVU302
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 980              		.loc 2 2928 25 is_stmt 0 view .LVU303
 981 013a 013B     		subs	r3, r3, #1
 982              	.LVL92:
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 983              		.loc 2 2928 25 view .LVU304
 984 013c F8E7     		b	.L56
 985              	.LVL93:
 986              	.L64:
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
 987              		.loc 2 2928 25 view .LVU305
 988              	.LBE466:
ARM GAS  /tmp/ccjQSYCi.s 			page 155


 989              	.LBE465:
 990              	.LBE464:
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 991              		.loc 1 390 5 is_stmt 1 view .LVU306
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 992              		.loc 1 390 8 is_stmt 0 view .LVU307
 993 013e 50B1     		cbz	r0, .L60
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 994              		.loc 1 392 7 is_stmt 1 view .LVU308
 995 0140 3268     		ldr	r2, [r6]
 996              	.LVL94:
 997              	.LBB467:
 998              	.LBI467:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 999              		.loc 2 7016 22 view .LVU309
 1000              	.LBB468:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1001              		.loc 2 7021 3 view .LVU310
 1002 0142 9168     		ldr	r1, [r2, #8]
 1003              	.LVL95:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1004              		.loc 2 7021 3 is_stmt 0 view .LVU311
 1005 0144 094B     		ldr	r3, .L65+16
 1006 0146 0B40     		ands	r3, r3, r1
 1007 0148 43F00403 		orr	r3, r3, #4
 1008 014c 9360     		str	r3, [r2, #8]
 1009              	.LBE468:
 1010              	.LBE467:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1011              		.loc 1 395 10 view .LVU312
 1012 014e 0025     		movs	r5, #0
 1013              	.LBB470:
 1014              	.LBB469:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1015              		.loc 2 7024 1 view .LVU313
 1016 0150 96E7     		b	.L45
 1017              	.LVL96:
 1018              	.L59:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1019              		.loc 2 7024 1 view .LVU314
 1020              	.LBE469:
 1021              	.LBE470:
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1022              		.loc 1 368 15 view .LVU315
 1023 0152 0125     		movs	r5, #1
 1024 0154 94E7     		b	.L45
 1025              	.LVL97:
 1026              	.L60:
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1027              		.loc 1 395 10 view .LVU316
 1028 0156 0025     		movs	r5, #0
 1029 0158 92E7     		b	.L45
 1030              	.L66:
 1031 015a 00BF     		.align	2
 1032              	.L65:
 1033 015c 00000000 		.word	SystemCoreClock
 1034 0160 632D3E05 		.word	87960931
ARM GAS  /tmp/ccjQSYCi.s 			page 156


 1035 0164 00600258 		.word	1476550656
 1036 0168 70000800 		.word	524400
 1037 016c C0FFFF7F 		.word	2147483584
 1038              		.cfi_endproc
 1039              	.LFE354:
 1041              		.section	.text.HAL_ADCEx_LinearCalibration_FactorLoad,"ax",%progbits
 1042              		.align	1
 1043              		.global	HAL_ADCEx_LinearCalibration_FactorLoad
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu fpv5-d16
 1049              	HAL_ADCEx_LinearCalibration_FactorLoad:
 1050              	.LVL98:
 1051              	.LFB355:
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Load the calibration factor from engi bytes
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param  hadc ADC handle
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL state
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_LinearCalibration_FactorLoad(ADC_HandleTypeDef *hadc)
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1052              		.loc 1 404 1 is_stmt 1 view -0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 24
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		.loc 1 404 1 is_stmt 0 view .LVU318
 1057 0000 10B5     		push	{r4, lr}
 1058              	.LCFI11:
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 4, -8
 1061              		.cfi_offset 14, -4
 1062 0002 86B0     		sub	sp, sp, #24
 1063              	.LCFI12:
 1064              		.cfi_def_cfa_offset 32
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1065              		.loc 1 405 3 is_stmt 1 view .LVU319
 1066              	.LVL99:
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t cnt, FactorOffset;
 1067              		.loc 1 406 3 view .LVU320
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t LinearCalib_Buffer[ADC_LINEAR_CALIB_REG_COUNT];
 1068              		.loc 1 407 3 view .LVU321
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Linearity calibration is retrieved from engi bytes
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      read values from registers and put them to the CALFACT2 register */
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If needed linearity calibration can be done in runtime using
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      LL_ADC_GetCalibrationLinearFactor()                             */
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC1)
 1069              		.loc 1 413 3 view .LVU322
 1070              		.loc 1 413 11 is_stmt 0 view .LVU323
 1071 0004 0368     		ldr	r3, [r0]
 1072              		.loc 1 413 6 view .LVU324
 1073 0006 104A     		ldr	r2, .L78
 1074 0008 9342     		cmp	r3, r2
 1075 000a 14D0     		beq	.L72
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccjQSYCi.s 			page 157


 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 0UL;
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else if (hadc->Instance == ADC2)
 1076              		.loc 1 417 8 is_stmt 1 view .LVU325
 1077              		.loc 1 417 11 is_stmt 0 view .LVU326
 1078 000c 02F58072 		add	r2, r2, #256
 1079 0010 9342     		cmp	r3, r2
 1080 0012 0ED0     		beq	.L76
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 8UL;
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else   /*Case ADC3*/
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     FactorOffset = 16UL;
 1081              		.loc 1 423 18 view .LVU327
 1082 0014 1024     		movs	r4, #16
 1083              	.L68:
 1084              	.LVL100:
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   for (cnt = 0UL; cnt < ADC_LINEAR_CALIB_REG_COUNT; cnt++)
 1085              		.loc 1 426 3 is_stmt 1 view .LVU328
 1086              		.loc 1 426 12 is_stmt 0 view .LVU329
 1087 0016 0023     		movs	r3, #0
 1088              	.LVL101:
 1089              	.L69:
 1090              		.loc 1 426 19 is_stmt 1 discriminator 1 view .LVU330
 1091              		.loc 1 426 3 is_stmt 0 discriminator 1 view .LVU331
 1092 0018 052B     		cmp	r3, #5
 1093 001a 0ED8     		bhi	.L77
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LinearCalib_Buffer[cnt] = *(uint32_t *)(ADC_LINEAR_CALIB_REG_1_ADDR + FactorOffset + cnt);
 1094              		.loc 1 428 5 is_stmt 1 discriminator 3 view .LVU332
 1095              		.loc 1 428 88 is_stmt 0 discriminator 3 view .LVU333
 1096 001c 1919     		adds	r1, r3, r4
 1097              		.loc 1 428 32 discriminator 3 view .LVU334
 1098 001e 0B4A     		ldr	r2, .L78+4
 1099              		.loc 1 428 31 discriminator 3 view .LVU335
 1100 0020 52F82110 		ldr	r1, [r2, r1, lsl #2]
 1101              		.loc 1 428 29 discriminator 3 view .LVU336
 1102 0024 06AA     		add	r2, sp, #24
 1103 0026 02EB8302 		add	r2, r2, r3, lsl #2
 1104 002a 42F8181C 		str	r1, [r2, #-24]
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 1105              		.loc 1 426 53 is_stmt 1 discriminator 3 view .LVU337
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 1106              		.loc 1 426 56 is_stmt 0 discriminator 3 view .LVU338
 1107 002e 0133     		adds	r3, r3, #1
 1108              	.LVL102:
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 1109              		.loc 1 426 56 discriminator 3 view .LVU339
 1110 0030 F2E7     		b	.L69
 1111              	.LVL103:
 1112              	.L76:
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1113              		.loc 1 419 18 view .LVU340
 1114 0032 0824     		movs	r4, #8
ARM GAS  /tmp/ccjQSYCi.s 			page 158


 1115 0034 EFE7     		b	.L68
 1116              	.L72:
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1117              		.loc 1 415 18 view .LVU341
 1118 0036 0024     		movs	r4, #0
 1119 0038 EDE7     		b	.L68
 1120              	.LVL104:
 1121              	.L77:
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (HAL_ADCEx_LinearCalibration_SetValue(hadc, (uint32_t *)LinearCalib_Buffer) != HAL_OK)
 1122              		.loc 1 430 3 is_stmt 1 view .LVU342
 1123              		.loc 1 430 7 is_stmt 0 view .LVU343
 1124 003a 6946     		mov	r1, sp
 1125 003c FFF7FEFF 		bl	HAL_ADCEx_LinearCalibration_SetValue
 1126              	.LVL105:
 1127              		.loc 1 430 6 view .LVU344
 1128 0040 00B1     		cbz	r0, .L71
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 1129              		.loc 1 432 20 view .LVU345
 1130 0042 0120     		movs	r0, #1
 1131              	.L71:
 1132              	.LVL106:
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 1133              		.loc 1 435 3 is_stmt 1 view .LVU346
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1134              		.loc 1 436 1 is_stmt 0 view .LVU347
 1135 0044 06B0     		add	sp, sp, #24
 1136              	.LCFI13:
 1137              		.cfi_def_cfa_offset 8
 1138              		@ sp needed
 1139 0046 10BD     		pop	{r4, pc}
 1140              	.LVL107:
 1141              	.L79:
 1142              		.loc 1 436 1 view .LVU348
 1143              		.align	2
 1144              	.L78:
 1145 0048 00200240 		.word	1073881088
 1146 004c 00ECF11F 		.word	535948288
 1147              		.cfi_endproc
 1148              	.LFE355:
 1150              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 1151              		.align	1
 1152              		.global	HAL_ADCEx_InjectedStart
 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1156              		.fpu fpv5-d16
 1158              	HAL_ADCEx_InjectedStart:
 1159              	.LVL108:
 1160              	.LFB356:
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
ARM GAS  /tmp/ccjQSYCi.s 			page 159


 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1161              		.loc 1 450 1 is_stmt 1 view -0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		.loc 1 450 1 is_stmt 0 view .LVU350
 1166 0000 38B5     		push	{r3, r4, r5, lr}
 1167              	.LCFI14:
 1168              		.cfi_def_cfa_offset 16
 1169              		.cfi_offset 3, -16
 1170              		.cfi_offset 4, -12
 1171              		.cfi_offset 5, -8
 1172              		.cfi_offset 14, -4
 1173 0002 0446     		mov	r4, r0
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1174              		.loc 1 451 3 is_stmt 1 view .LVU351
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1175              		.loc 1 452 3 view .LVU352
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1176              		.loc 1 453 3 view .LVU353
 1177              		.loc 1 453 55 is_stmt 0 view .LVU354
 1178 0004 0368     		ldr	r3, [r0]
 1179              		.loc 1 453 35 view .LVU355
 1180 0006 3C49     		ldr	r1, .L103
 1181 0008 3C4A     		ldr	r2, .L103+4
 1182 000a 9342     		cmp	r3, r2
 1183 000c 18BF     		it	ne
 1184 000e 8B42     		cmpne	r3, r1
 1185 0010 4ED1     		bne	.L94
 1186 0012 02F50072 		add	r2, r2, #512
 1187              	.L81:
 1188              	.LVL109:
 1189              	.LBB471:
 1190              	.LBI471:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1191              		.loc 2 6580 26 is_stmt 1 discriminator 4 view .LVU356
 1192              	.LBB472:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1193              		.loc 2 6582 3 discriminator 4 view .LVU357
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1194              		.loc 2 6582 21 is_stmt 0 discriminator 4 view .LVU358
 1195 0016 9568     		ldr	r5, [r2, #8]
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1196              		.loc 2 6582 10 discriminator 4 view .LVU359
 1197 0018 05F01F05 		and	r5, r5, #31
 1198              	.LVL110:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1199              		.loc 2 6582 10 discriminator 4 view .LVU360
ARM GAS  /tmp/ccjQSYCi.s 			page 160


 1200              	.LBE472:
 1201              	.LBE471:
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1202              		.loc 1 456 3 is_stmt 1 discriminator 4 view .LVU361
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1203              		.loc 1 458 3 discriminator 4 view .LVU362
 1204              	.LBB473:
 1205              	.LBI473:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1206              		.loc 2 7247 26 discriminator 4 view .LVU363
 1207              	.LBB474:
 1208              		.loc 2 7249 3 discriminator 4 view .LVU364
 1209              		.loc 2 7249 12 is_stmt 0 discriminator 4 view .LVU365
 1210 001c 9A68     		ldr	r2, [r3, #8]
 1211              		.loc 2 7249 76 discriminator 4 view .LVU366
 1212 001e 12F0080F 		tst	r2, #8
 1213 0022 65D1     		bne	.L95
 1214              	.LVL111:
 1215              		.loc 2 7249 76 discriminator 4 view .LVU367
 1216              	.LBE474:
 1217              	.LBE473:
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1218              		.loc 1 471 5 is_stmt 1 view .LVU368
 1219              		.loc 1 471 33 is_stmt 0 view .LVU369
 1220 0024 DA68     		ldr	r2, [r3, #12]
 1221              	.LVL112:
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1222              		.loc 1 473 5 is_stmt 1 view .LVU370
 1223              		.loc 1 473 10 is_stmt 0 view .LVU371
 1224 0026 DB6C     		ldr	r3, [r3, #76]
 1225              		.loc 1 473 8 view .LVU372
 1226 0028 13F4C07F 		tst	r3, #384
 1227 002c 01D1     		bne	.L83
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1228              		.loc 1 474 9 view .LVU373
 1229 002e 002A     		cmp	r2, #0
 1230 0030 40DA     		bge	.L100
 1231              	.L83:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
ARM GAS  /tmp/ccjQSYCi.s 			page 161


 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1232              		.loc 1 482 5 is_stmt 1 view .LVU374
 1233              		.loc 1 482 5 view .LVU375
 1234 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1235 0036 012B     		cmp	r3, #1
 1236 0038 5CD0     		beq	.L96
 1237              		.loc 1 482 5 discriminator 2 view .LVU376
 1238 003a 0123     		movs	r3, #1
 1239 003c 84F85C30 		strb	r3, [r4, #92]
 1240              		.loc 1 482 5 discriminator 2 view .LVU377
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1241              		.loc 1 485 5 discriminator 2 view .LVU378
 1242              		.loc 1 485 22 is_stmt 0 discriminator 2 view .LVU379
 1243 0040 2046     		mov	r0, r4
 1244              	.LVL113:
 1245              		.loc 1 485 22 discriminator 2 view .LVU380
 1246 0042 FFF7FEFF 		bl	ADC_Enable
 1247              	.LVL114:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1248              		.loc 1 488 5 is_stmt 1 discriminator 2 view .LVU381
 1249              		.loc 1 488 8 is_stmt 0 discriminator 2 view .LVU382
 1250 0046 0028     		cmp	r0, #0
 1251 0048 4ED1     		bne	.L84
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1252              		.loc 1 491 7 is_stmt 1 view .LVU383
 1253              		.loc 1 491 16 is_stmt 0 view .LVU384
 1254 004a 236E     		ldr	r3, [r4, #96]
 1255              		.loc 1 491 10 view .LVU385
 1256 004c 13F4807F 		tst	r3, #256
 1257 0050 36D0     		beq	.L85
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1258              		.loc 1 494 9 is_stmt 1 view .LVU386
 1259 0052 636E     		ldr	r3, [r4, #100]
 1260 0054 23F00803 		bic	r3, r3, #8
 1261 0058 6366     		str	r3, [r4, #100]
 1262              	.L86:
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
ARM GAS  /tmp/ccjQSYCi.s 			page 162


 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1263              		.loc 1 505 7 view .LVU387
 1264 005a 226E     		ldr	r2, [r4, #96]
 1265 005c 284B     		ldr	r3, .L103+8
 1266 005e 1340     		ands	r3, r3, r2
 1267 0060 43F48053 		orr	r3, r3, #4096
 1268 0064 2366     		str	r3, [r4, #96]
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1269              		.loc 1 512 7 view .LVU388
 1270              		.loc 1 512 12 is_stmt 0 view .LVU389
 1271 0066 2368     		ldr	r3, [r4]
 1272 0068 244A     		ldr	r2, .L103+4
 1273 006a 9342     		cmp	r3, r2
 1274 006c 2BD0     		beq	.L101
 1275 006e 1A46     		mov	r2, r3
 1276              	.L87:
 1277              		.loc 1 512 10 discriminator 4 view .LVU390
 1278 0070 9342     		cmp	r3, r2
 1279 0072 00D0     		beq	.L88
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1280              		.loc 1 513 11 view .LVU391
 1281 0074 1DB9     		cbnz	r5, .L89
 1282              	.L88:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1283              		.loc 1 516 9 is_stmt 1 view .LVU392
 1284 0076 226E     		ldr	r2, [r4, #96]
 1285 0078 22F48012 		bic	r2, r2, #1048576
 1286 007c 2266     		str	r2, [r4, #96]
 1287              	.L89:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1288              		.loc 1 521 7 view .LVU393
 1289 007e 6022     		movs	r2, #96
 1290 0080 1A60     		str	r2, [r3]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1291              		.loc 1 526 7 view .LVU394
 1292              		.loc 1 526 7 view .LVU395
 1293 0082 0023     		movs	r3, #0
 1294 0084 84F85C30 		strb	r3, [r4, #92]
 1295              		.loc 1 526 7 view .LVU396
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 163


 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1296              		.loc 1 540 7 view .LVU397
 1297              		.loc 1 540 12 is_stmt 0 view .LVU398
 1298 0088 2368     		ldr	r3, [r4]
 1299 008a 1C4A     		ldr	r2, .L103+4
 1300 008c 9342     		cmp	r3, r2
 1301 008e 1DD0     		beq	.L102
 1302 0090 1A46     		mov	r2, r3
 1303              	.L90:
 1304              		.loc 1 540 10 discriminator 4 view .LVU399
 1305 0092 9342     		cmp	r3, r2
 1306 0094 1DD0     		beq	.L91
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1307              		.loc 1 542 36 view .LVU400
 1308 0096 062D     		cmp	r5, #6
 1309 0098 14BF     		ite	ne
 1310 009a 0022     		movne	r2, #0
 1311 009c 0122     		moveq	r2, #1
 1312              		.loc 1 542 11 view .LVU401
 1313 009e C5B1     		cbz	r5, .L91
 1314 00a0 BAB9     		cbnz	r2, .L91
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1315              		.loc 1 543 11 view .LVU402
 1316 00a2 072D     		cmp	r5, #7
 1317 00a4 15D0     		beq	.L91
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1318              		.loc 1 555 9 is_stmt 1 view .LVU403
 1319 00a6 236E     		ldr	r3, [r4, #96]
 1320 00a8 43F48013 		orr	r3, r3, #1048576
 1321 00ac 2366     		str	r3, [r4, #96]
 1322 00ae 20E0     		b	.L82
 1323              	.LVL115:
 1324              	.L94:
ARM GAS  /tmp/ccjQSYCi.s 			page 164


 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1325              		.loc 1 453 35 is_stmt 0 view .LVU404
 1326 00b0 144A     		ldr	r2, .L103+12
 1327 00b2 B0E7     		b	.L81
 1328              	.LVL116:
 1329              	.L100:
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 1330              		.loc 1 477 7 is_stmt 1 view .LVU405
 1331 00b4 236E     		ldr	r3, [r4, #96]
 1332 00b6 43F02003 		orr	r3, r3, #32
 1333 00ba 2366     		str	r3, [r4, #96]
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1334              		.loc 1 478 7 view .LVU406
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1335              		.loc 1 478 14 is_stmt 0 view .LVU407
 1336 00bc 0120     		movs	r0, #1
 1337              	.LVL117:
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1338              		.loc 1 478 14 view .LVU408
 1339 00be 18E0     		b	.L82
 1340              	.LVL118:
 1341              	.L85:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 1342              		.loc 1 499 9 is_stmt 1 view .LVU409
 1343 00c0 0023     		movs	r3, #0
 1344 00c2 6366     		str	r3, [r4, #100]
 1345 00c4 C9E7     		b	.L86
 1346              	.L101:
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1347              		.loc 1 512 12 is_stmt 0 view .LVU410
 1348 00c6 A2F58072 		sub	r2, r2, #256
 1349 00ca D1E7     		b	.L87
 1350              	.L102:
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1351              		.loc 1 540 12 view .LVU411
 1352 00cc A2F58072 		sub	r2, r2, #256
 1353 00d0 DFE7     		b	.L90
 1354              	.L91:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 1355              		.loc 1 547 9 is_stmt 1 view .LVU412
 1356              	.LVL119:
 1357              	.LBB475:
 1358              	.LBI475:
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1359              		.loc 2 5010 26 view .LVU413
 1360              	.LBB476:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1361              		.loc 2 5012 3 view .LVU414
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1362              		.loc 2 5012 21 is_stmt 0 view .LVU415
 1363 00d2 DA68     		ldr	r2, [r3, #12]
 1364              	.LVL120:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1365              		.loc 2 5012 21 view .LVU416
 1366              	.LBE476:
 1367              	.LBE475:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/ccjQSYCi.s 			page 165


 1368              		.loc 1 547 12 view .LVU417
 1369 00d4 12F0007F 		tst	r2, #33554432
 1370 00d8 0BD1     		bne	.L82
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 1371              		.loc 1 549 11 is_stmt 1 view .LVU418
 1372              	.LVL121:
 1373              	.LBB477:
 1374              	.LBI477:
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1375              		.loc 2 7211 22 view .LVU419
 1376              	.LBB478:
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1377              		.loc 2 7216 3 view .LVU420
 1378 00da 9968     		ldr	r1, [r3, #8]
 1379 00dc 0A4A     		ldr	r2, .L103+16
 1380 00de 0A40     		ands	r2, r2, r1
 1381 00e0 42F00802 		orr	r2, r2, #8
 1382 00e4 9A60     		str	r2, [r3, #8]
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1383              		.loc 2 7219 1 is_stmt 0 view .LVU421
 1384 00e6 04E0     		b	.L82
 1385              	.LVL122:
 1386              	.L84:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 1387              		.loc 2 7219 1 view .LVU422
 1388              	.LBE478:
 1389              	.LBE477:
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1390              		.loc 1 562 7 is_stmt 1 view .LVU423
 1391              		.loc 1 562 7 view .LVU424
 1392 00e8 0023     		movs	r3, #0
 1393 00ea 84F85C30 		strb	r3, [r4, #92]
 1394              		.loc 1 562 7 view .LVU425
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 1395              		.loc 1 566 5 view .LVU426
 1396              		.loc 1 566 12 is_stmt 0 view .LVU427
 1397 00ee 00E0     		b	.L82
 1398              	.LVL123:
 1399              	.L95:
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1400              		.loc 1 460 12 view .LVU428
 1401 00f0 0220     		movs	r0, #2
 1402              	.LVL124:
 1403              	.L82:
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1404              		.loc 1 568 1 view .LVU429
 1405 00f2 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccjQSYCi.s 			page 166


 1406              	.LVL125:
 1407              	.L96:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1408              		.loc 1 482 5 view .LVU430
 1409 00f4 0220     		movs	r0, #2
 1410              	.LVL126:
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1411              		.loc 1 482 5 view .LVU431
 1412 00f6 FCE7     		b	.L82
 1413              	.L104:
 1414              		.align	2
 1415              	.L103:
 1416 00f8 00200240 		.word	1073881088
 1417 00fc 00210240 		.word	1073881344
 1418 0100 FECFFFFF 		.word	-12290
 1419 0104 00630258 		.word	1476551424
 1420 0108 C0FFFF7F 		.word	2147483584
 1421              		.cfi_endproc
 1422              	.LFE356:
 1424              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 1425              		.align	1
 1426              		.global	HAL_ADCEx_InjectedStop
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv5-d16
 1432              	HAL_ADCEx_InjectedStop:
 1433              	.LVL127:
 1434              	.LFB357:
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1435              		.loc 1 587 1 is_stmt 1 view -0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1439              		.loc 1 588 3 view .LVU433
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /tmp/ccjQSYCi.s 			page 167


 1440              		.loc 1 591 3 view .LVU434
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1441              		.loc 1 594 3 view .LVU435
 1442              		.loc 1 594 3 view .LVU436
 1443 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 1444 0004 012B     		cmp	r3, #1
 1445 0006 21D0     		beq	.L109
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1446              		.loc 1 587 1 is_stmt 0 discriminator 2 view .LVU437
 1447 0008 10B5     		push	{r4, lr}
 1448              	.LCFI15:
 1449              		.cfi_def_cfa_offset 8
 1450              		.cfi_offset 4, -8
 1451              		.cfi_offset 14, -4
 1452 000a 0446     		mov	r4, r0
 1453              		.loc 1 594 3 is_stmt 1 discriminator 2 view .LVU438
 1454 000c 0123     		movs	r3, #1
 1455 000e 80F85C30 		strb	r3, [r0, #92]
 1456              		.loc 1 594 3 discriminator 2 view .LVU439
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1457              		.loc 1 597 3 discriminator 2 view .LVU440
 1458              		.loc 1 597 20 is_stmt 0 discriminator 2 view .LVU441
 1459 0012 0221     		movs	r1, #2
 1460 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1461              	.LVL128:
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1462              		.loc 1 601 3 is_stmt 1 discriminator 2 view .LVU442
 1463              		.loc 1 601 6 is_stmt 0 discriminator 2 view .LVU443
 1464 0018 40B9     		cbnz	r0, .L107
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 1465              		.loc 1 603 5 is_stmt 1 view .LVU444
 1466              		.loc 1 603 9 is_stmt 0 view .LVU445
 1467 001a 2368     		ldr	r3, [r4]
 1468              	.LVL129:
 1469              	.LBB479:
 1470              	.LBI479:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1471              		.loc 2 7052 26 is_stmt 1 view .LVU446
 1472              	.LBB480:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1473              		.loc 2 7054 3 view .LVU447
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1474              		.loc 2 7054 12 is_stmt 0 view .LVU448
 1475 001c 9B68     		ldr	r3, [r3, #8]
 1476              	.LVL130:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1477              		.loc 2 7054 74 view .LVU449
 1478 001e 13F0040F 		tst	r3, #4
 1479 0022 07D0     		beq	.L108
ARM GAS  /tmp/ccjQSYCi.s 			page 168


 1480              	.LVL131:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1481              		.loc 2 7054 74 view .LVU450
 1482              	.LBE480:
 1483              	.LBE479:
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1484              		.loc 1 622 7 is_stmt 1 view .LVU451
 1485 0024 236E     		ldr	r3, [r4, #96]
 1486 0026 23F48053 		bic	r3, r3, #4096
 1487 002a 2366     		str	r3, [r4, #96]
 1488              	.L107:
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1489              		.loc 1 627 3 view .LVU452
 1490              		.loc 1 627 3 view .LVU453
 1491 002c 0023     		movs	r3, #0
 1492 002e 84F85C30 		strb	r3, [r4, #92]
 1493              		.loc 1 627 3 view .LVU454
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 1494              		.loc 1 630 3 view .LVU455
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1495              		.loc 1 631 1 is_stmt 0 view .LVU456
 1496 0032 10BD     		pop	{r4, pc}
 1497              	.LVL132:
 1498              	.L108:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1499              		.loc 1 606 7 is_stmt 1 view .LVU457
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1500              		.loc 1 606 24 is_stmt 0 view .LVU458
 1501 0034 2046     		mov	r0, r4
 1502              	.LVL133:
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1503              		.loc 1 606 24 view .LVU459
 1504 0036 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/ccjQSYCi.s 			page 169


 1505              	.LVL134:
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1506              		.loc 1 609 7 is_stmt 1 view .LVU460
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 1507              		.loc 1 609 10 is_stmt 0 view .LVU461
 1508 003a 0028     		cmp	r0, #0
 1509 003c F6D1     		bne	.L107
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1510              		.loc 1 612 9 is_stmt 1 view .LVU462
 1511 003e 226E     		ldr	r2, [r4, #96]
 1512 0040 034B     		ldr	r3, .L114
 1513 0042 1340     		ands	r3, r3, r2
 1514 0044 43F00103 		orr	r3, r3, #1
 1515 0048 2366     		str	r3, [r4, #96]
 1516 004a EFE7     		b	.L107
 1517              	.LVL135:
 1518              	.L109:
 1519              	.LCFI16:
 1520              		.cfi_def_cfa_offset 0
 1521              		.cfi_restore 4
 1522              		.cfi_restore 14
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1523              		.loc 1 594 3 is_stmt 0 view .LVU463
 1524 004c 0220     		movs	r0, #2
 1525              	.LVL136:
 1526              		.loc 1 631 1 view .LVU464
 1527 004e 7047     		bx	lr
 1528              	.L115:
 1529              		.align	2
 1530              	.L114:
 1531 0050 FEEEFFFF 		.word	-4354
 1532              		.cfi_endproc
 1533              	.LFE357:
 1535              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 1536              		.align	1
 1537              		.global	HAL_ADCEx_InjectedPollForConversion
 1538              		.syntax unified
 1539              		.thumb
 1540              		.thumb_func
 1541              		.fpu fpv5-d16
 1543              	HAL_ADCEx_InjectedPollForConversion:
 1544              	.LVL137:
 1545              	.LFB358:
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1546              		.loc 1 642 1 is_stmt 1 view -0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjQSYCi.s 			page 170


 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 1550              		.loc 1 642 1 is_stmt 0 view .LVU466
 1551 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1552              	.LCFI17:
 1553              		.cfi_def_cfa_offset 24
 1554              		.cfi_offset 4, -24
 1555              		.cfi_offset 5, -20
 1556              		.cfi_offset 6, -16
 1557              		.cfi_offset 7, -12
 1558              		.cfi_offset 8, -8
 1559              		.cfi_offset 14, -4
 1560 0004 0446     		mov	r4, r0
 1561 0006 0D46     		mov	r5, r1
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 1562              		.loc 1 643 3 is_stmt 1 view .LVU467
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 1563              		.loc 1 644 3 view .LVU468
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1564              		.loc 1 645 3 view .LVU469
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 1565              		.loc 1 646 3 view .LVU470
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 1566              		.loc 1 647 3 view .LVU471
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 1567              		.loc 1 648 3 view .LVU472
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1568              		.loc 1 649 3 view .LVU473
 1569              		.loc 1 649 55 is_stmt 0 view .LVU474
 1570 0008 0368     		ldr	r3, [r0]
 1571              		.loc 1 649 35 view .LVU475
 1572 000a 4149     		ldr	r1, .L144
 1573              	.LVL138:
 1574              		.loc 1 649 35 view .LVU476
 1575 000c 414A     		ldr	r2, .L144+4
 1576 000e 9342     		cmp	r3, r2
 1577 0010 18BF     		it	ne
 1578 0012 8B42     		cmpne	r3, r1
 1579 0014 26D1     		bne	.L133
 1580 0016 404B     		ldr	r3, .L144+8
 1581              	.L117:
 1582              	.LVL139:
 1583              	.LBB481:
 1584              	.LBI481:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1585              		.loc 2 6580 26 is_stmt 1 discriminator 4 view .LVU477
 1586              	.LBB482:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1587              		.loc 2 6582 3 discriminator 4 view .LVU478
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1588              		.loc 2 6582 21 is_stmt 0 discriminator 4 view .LVU479
 1589 0018 9F68     		ldr	r7, [r3, #8]
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1590              		.loc 2 6582 10 discriminator 4 view .LVU480
 1591 001a 07F01F07 		and	r7, r7, #31
 1592              	.LVL140:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1593              		.loc 2 6582 10 discriminator 4 view .LVU481
ARM GAS  /tmp/ccjQSYCi.s 			page 171


 1594              	.LBE482:
 1595              	.LBE481:
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1596              		.loc 1 652 3 is_stmt 1 discriminator 4 view .LVU482
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If end of sequence selected */
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 1597              		.loc 1 655 3 discriminator 4 view .LVU483
 1598              		.loc 1 655 17 is_stmt 0 discriminator 4 view .LVU484
 1599 001e 6369     		ldr	r3, [r4, #20]
 1600              		.loc 1 655 6 discriminator 4 view .LVU485
 1601 0020 082B     		cmp	r3, #8
 1602 0022 21D0     		beq	.L140
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else /* end of conversion selected */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 1603              		.loc 1 661 18 view .LVU486
 1604 0024 2026     		movs	r6, #32
 1605              	.L118:
 1606              	.LVL141:
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get timeout */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 1607              		.loc 1 665 3 is_stmt 1 view .LVU487
 1608              		.loc 1 665 15 is_stmt 0 view .LVU488
 1609 0026 FFF7FEFF 		bl	HAL_GetTick
 1610              	.LVL142:
 1611              		.loc 1 665 15 view .LVU489
 1612 002a 8046     		mov	r8, r0
 1613              	.LVL143:
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 1614              		.loc 1 668 3 is_stmt 1 view .LVU490
 1615              	.L120:
 1616              		.loc 1 668 9 view .LVU491
 1617              		.loc 1 668 15 is_stmt 0 view .LVU492
 1618 002c 2368     		ldr	r3, [r4]
 1619              		.loc 1 668 25 view .LVU493
 1620 002e 1A68     		ldr	r2, [r3]
 1621              		.loc 1 668 9 view .LVU494
 1622 0030 3242     		tst	r2, r6
 1623 0032 1BD1     		bne	.L141
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 1624              		.loc 1 671 5 is_stmt 1 view .LVU495
 1625              		.loc 1 671 8 is_stmt 0 view .LVU496
 1626 0034 B5F1FF3F 		cmp	r5, #-1
 1627 0038 F8D0     		beq	.L120
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 172


 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 1628              		.loc 1 673 7 is_stmt 1 view .LVU497
 1629              		.loc 1 673 13 is_stmt 0 view .LVU498
 1630 003a FFF7FEFF 		bl	HAL_GetTick
 1631              	.LVL144:
 1632              		.loc 1 673 27 view .LVU499
 1633 003e A0EB0800 		sub	r0, r0, r8
 1634              		.loc 1 673 10 view .LVU500
 1635 0042 A842     		cmp	r0, r5
 1636 0044 01D8     		bhi	.L121
 1637              		.loc 1 673 51 discriminator 1 view .LVU501
 1638 0046 002D     		cmp	r5, #0
 1639 0048 F0D1     		bne	.L120
 1640              	.L121:
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 1641              		.loc 1 675 9 is_stmt 1 view .LVU502
 1642              		.loc 1 675 17 is_stmt 0 view .LVU503
 1643 004a 2368     		ldr	r3, [r4]
 1644              		.loc 1 675 27 view .LVU504
 1645 004c 1B68     		ldr	r3, [r3]
 1646              		.loc 1 675 11 view .LVU505
 1647 004e 3342     		tst	r3, r6
 1648 0050 ECD1     		bne	.L120
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1649              		.loc 1 678 11 is_stmt 1 view .LVU506
 1650 0052 236E     		ldr	r3, [r4, #96]
 1651 0054 43F00403 		orr	r3, r3, #4
 1652 0058 2366     		str	r3, [r4, #96]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 1653              		.loc 1 681 11 view .LVU507
 1654              		.loc 1 681 11 view .LVU508
 1655 005a 0023     		movs	r3, #0
 1656 005c 84F85C30 		strb	r3, [r4, #92]
 1657              		.loc 1 681 11 view .LVU509
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 1658              		.loc 1 683 11 view .LVU510
 1659              		.loc 1 683 18 is_stmt 0 view .LVU511
 1660 0060 0320     		movs	r0, #3
 1661 0062 49E0     		b	.L122
 1662              	.LVL145:
 1663              	.L133:
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 1664              		.loc 1 649 35 view .LVU512
 1665 0064 2D4B     		ldr	r3, .L144+12
 1666 0066 D7E7     		b	.L117
 1667              	.LVL146:
 1668              	.L140:
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1669              		.loc 1 657 18 view .LVU513
 1670 0068 4026     		movs	r6, #64
 1671 006a DCE7     		b	.L118
ARM GAS  /tmp/ccjQSYCi.s 			page 173


 1672              	.LVL147:
 1673              	.L141:
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 1674              		.loc 1 690 3 is_stmt 1 view .LVU514
 1675              	.LBB483:
 1676              	.LBI483:
4708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1677              		.loc 2 4708 26 view .LVU515
 1678              	.LBB484:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1679              		.loc 2 4710 3 view .LVU516
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1680              		.loc 2 4710 12 is_stmt 0 view .LVU517
 1681 006c DA6C     		ldr	r2, [r3, #76]
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1682              		.loc 2 4710 105 view .LVU518
 1683 006e 12F4C07F 		tst	r2, #384
 1684 0072 15D1     		bne	.L135
 1685 0074 0120     		movs	r0, #1
 1686              	.L124:
 1687              	.LVL148:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1688              		.loc 2 4710 105 view .LVU519
 1689              	.LBE484:
 1690              	.LBE483:
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1691              		.loc 1 691 3 is_stmt 1 view .LVU520
 1692              	.LBB486:
 1693              	.LBI486:
3921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1694              		.loc 2 3921 26 view .LVU521
 1695              	.LBB487:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1696              		.loc 2 3923 3 view .LVU522
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1697              		.loc 2 3923 12 is_stmt 0 view .LVU523
 1698 0076 DA68     		ldr	r2, [r3, #12]
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1699              		.loc 2 3923 103 view .LVU524
 1700 0078 12F4406F 		tst	r2, #3072
 1701 007c 12D1     		bne	.L136
 1702 007e 0125     		movs	r5, #1
 1703              	.LVL149:
 1704              	.L125:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1705              		.loc 2 3923 103 view .LVU525
 1706              	.LBE487:
 1707              	.LBE486:
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* available).                                                        */
ARM GAS  /tmp/ccjQSYCi.s 			page 174


 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1708              		.loc 1 695 3 is_stmt 1 view .LVU526
 1709              		.loc 1 695 8 is_stmt 0 view .LVU527
 1710 0080 244A     		ldr	r2, .L144+4
 1711 0082 9342     		cmp	r3, r2
 1712 0084 10D0     		beq	.L142
 1713 0086 1A46     		mov	r2, r3
 1714              	.L126:
 1715              		.loc 1 695 6 discriminator 4 view .LVU528
 1716 0088 9342     		cmp	r3, r2
 1717 008a 10D0     		beq	.L127
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 1718              		.loc 1 697 32 view .LVU529
 1719 008c 062F     		cmp	r7, #6
 1720 008e 14BF     		ite	ne
 1721 0090 0021     		movne	r1, #0
 1722 0092 0121     		moveq	r1, #1
 1723              		.loc 1 697 7 view .LVU530
 1724 0094 5FB1     		cbz	r7, .L127
 1725 0096 51B9     		cbnz	r1, .L127
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1726              		.loc 1 698 7 view .LVU531
 1727 0098 072F     		cmp	r7, #7
 1728 009a 08D0     		beq	.L127
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 1729              		.loc 1 705 5 is_stmt 1 discriminator 4 view .LVU532
 1730              	.LVL150:
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1731              		.loc 1 706 5 discriminator 4 view .LVU533
 1732              		.loc 1 706 14 is_stmt 0 discriminator 4 view .LVU534
 1733 009c D168     		ldr	r1, [r2, #12]
 1734              	.LVL151:
 1735              		.loc 1 706 14 discriminator 4 view .LVU535
 1736 009e 07E0     		b	.L129
 1737              	.LVL152:
 1738              	.L135:
 1739              	.LBB489:
 1740              	.LBB485:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1741              		.loc 2 4710 105 view .LVU536
 1742 00a0 0020     		movs	r0, #0
 1743 00a2 E8E7     		b	.L124
 1744              	.LVL153:
 1745              	.L136:
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1746              		.loc 2 4710 105 view .LVU537
 1747              	.LBE485:
 1748              	.LBE489:
 1749              	.LBB490:
 1750              	.LBB488:
ARM GAS  /tmp/ccjQSYCi.s 			page 175


3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1751              		.loc 2 3923 103 view .LVU538
 1752 00a4 0025     		movs	r5, #0
 1753              	.LVL154:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1754              		.loc 2 3923 103 view .LVU539
 1755 00a6 EBE7     		b	.L125
 1756              	.LVL155:
 1757              	.L142:
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1758              		.loc 2 3923 103 view .LVU540
 1759              	.LBE488:
 1760              	.LBE490:
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1761              		.loc 1 695 8 view .LVU541
 1762 00a8 A2F58072 		sub	r2, r2, #256
 1763 00ac ECE7     		b	.L126
 1764              	.L127:
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1765              		.loc 1 701 5 is_stmt 1 view .LVU542
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 1766              		.loc 1 701 14 is_stmt 0 view .LVU543
 1767 00ae D968     		ldr	r1, [r3, #12]
 1768              	.LVL156:
 1769              	.L129:
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Update ADC state machine */
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 1770              		.loc 1 710 3 is_stmt 1 view .LVU544
 1771 00b0 226E     		ldr	r2, [r4, #96]
 1772 00b2 42F40052 		orr	r2, r2, #8192
 1773 00b6 2266     		str	r2, [r4, #96]
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 1774              		.loc 1 715 3 view .LVU545
 1775              		.loc 1 715 6 is_stmt 0 view .LVU546
 1776 00b8 30B9     		cbnz	r0, .L130
 1777              		.loc 1 715 66 discriminator 1 view .LVU547
 1778 00ba 11F0007F 		tst	r1, #33554432
 1779 00be 16D1     		bne	.L131
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1780              		.loc 1 716 57 view .LVU548
 1781 00c0 ADB1     		cbz	r5, .L131
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 1782              		.loc 1 717 58 view .LVU549
 1783 00c2 11F4005F 		tst	r1, #8192
 1784 00c6 12D1     		bne	.L131
 1785              	.L130:
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 1786              		.loc 1 721 5 is_stmt 1 view .LVU550
ARM GAS  /tmp/ccjQSYCi.s 			page 176


 1787              		.loc 1 721 9 is_stmt 0 view .LVU551
 1788 00c8 1A68     		ldr	r2, [r3]
 1789              		.loc 1 721 8 view .LVU552
 1790 00ca 12F0400F 		tst	r2, #64
 1791 00ce 0ED0     		beq	.L131
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 1792              		.loc 1 729 7 is_stmt 1 view .LVU553
 1793              		.loc 1 729 10 is_stmt 0 view .LVU554
 1794 00d0 11F4001F 		tst	r1, #2097152
 1795 00d4 0BD1     		bne	.L131
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1796              		.loc 1 732 9 is_stmt 1 view .LVU555
 1797 00d6 226E     		ldr	r2, [r4, #96]
 1798 00d8 22F48052 		bic	r2, r2, #4096
 1799 00dc 2266     		str	r2, [r4, #96]
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 1800              		.loc 1 734 9 view .LVU556
 1801              		.loc 1 734 18 is_stmt 0 view .LVU557
 1802 00de 226E     		ldr	r2, [r4, #96]
 1803              		.loc 1 734 12 view .LVU558
 1804 00e0 12F4807F 		tst	r2, #256
 1805 00e4 03D1     		bne	.L131
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1806              		.loc 1 736 11 is_stmt 1 view .LVU559
 1807 00e6 226E     		ldr	r2, [r4, #96]
 1808 00e8 42F00102 		orr	r2, r2, #1
 1809 00ec 2266     		str	r2, [r4, #96]
 1810              	.L131:
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Clear polled flag */
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 1811              		.loc 1 743 3 view .LVU560
 1812              		.loc 1 743 6 is_stmt 0 view .LVU561
 1813 00ee 402E     		cmp	r6, #64
 1814 00f0 04D0     		beq	.L143
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* cleared.                                                               */
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 177


 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 1815              		.loc 1 756 5 is_stmt 1 view .LVU562
 1816 00f2 2022     		movs	r2, #32
 1817 00f4 1A60     		str	r2, [r3]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return API HAL status */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return HAL_OK;
 1818              		.loc 1 760 10 is_stmt 0 view .LVU563
 1819 00f6 0020     		movs	r0, #0
 1820              	.LVL157:
 1821              	.L122:
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1822              		.loc 1 761 1 view .LVU564
 1823 00f8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1824              	.LVL158:
 1825              	.L143:
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1826              		.loc 1 749 5 is_stmt 1 view .LVU565
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 1827              		.loc 1 749 8 is_stmt 0 view .LVU566
 1828 00fc 11F4804F 		tst	r1, #16384
 1829 0100 03D1     		bne	.L138
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 1830              		.loc 1 751 7 is_stmt 1 view .LVU567
 1831 0102 6022     		movs	r2, #96
 1832 0104 1A60     		str	r2, [r3]
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1833              		.loc 1 760 10 is_stmt 0 view .LVU568
 1834 0106 0020     		movs	r0, #0
 1835              	.LVL159:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1836              		.loc 1 760 10 view .LVU569
 1837 0108 F6E7     		b	.L122
 1838              	.LVL160:
 1839              	.L138:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1840              		.loc 1 760 10 view .LVU570
 1841 010a 0020     		movs	r0, #0
 1842              	.LVL161:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 1843              		.loc 1 760 10 view .LVU571
 1844 010c F4E7     		b	.L122
 1845              	.L145:
 1846 010e 00BF     		.align	2
 1847              	.L144:
 1848 0110 00200240 		.word	1073881088
 1849 0114 00210240 		.word	1073881344
 1850 0118 00230240 		.word	1073881856
 1851 011c 00630258 		.word	1476551424
 1852              		.cfi_endproc
 1853              	.LFE358:
ARM GAS  /tmp/ccjQSYCi.s 			page 178


 1855              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 1856              		.align	1
 1857              		.global	HAL_ADCEx_InjectedStart_IT
 1858              		.syntax unified
 1859              		.thumb
 1860              		.thumb_func
 1861              		.fpu fpv5-d16
 1863              	HAL_ADCEx_InjectedStart_IT:
 1864              	.LVL162:
 1865              	.LFB359:
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC master.
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 1866              		.loc 1 776 1 is_stmt 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 0
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
 1870              		.loc 1 776 1 is_stmt 0 view .LVU573
 1871 0000 38B5     		push	{r3, r4, r5, lr}
 1872              	.LCFI18:
 1873              		.cfi_def_cfa_offset 16
 1874              		.cfi_offset 3, -16
 1875              		.cfi_offset 4, -12
 1876              		.cfi_offset 5, -8
 1877              		.cfi_offset 14, -4
 1878 0002 0446     		mov	r4, r0
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1879              		.loc 1 777 3 is_stmt 1 view .LVU574
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 1880              		.loc 1 778 3 view .LVU575
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 1881              		.loc 1 779 3 view .LVU576
 1882              		.loc 1 779 55 is_stmt 0 view .LVU577
 1883 0004 0368     		ldr	r3, [r0]
 1884              		.loc 1 779 35 view .LVU578
 1885 0006 4D49     		ldr	r1, .L173
 1886 0008 4D4A     		ldr	r2, .L173+4
 1887 000a 9342     		cmp	r3, r2
 1888 000c 18BF     		it	ne
 1889 000e 8B42     		cmpne	r3, r1
 1890 0010 65D1     		bne	.L163
 1891 0012 02F50072 		add	r2, r2, #512
 1892              	.L147:
 1893              	.LVL163:
 1894              	.LBB491:
ARM GAS  /tmp/ccjQSYCi.s 			page 179


 1895              	.LBI491:
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1896              		.loc 2 6580 26 is_stmt 1 discriminator 4 view .LVU579
 1897              	.LBB492:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1898              		.loc 2 6582 3 discriminator 4 view .LVU580
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1899              		.loc 2 6582 21 is_stmt 0 discriminator 4 view .LVU581
 1900 0016 9568     		ldr	r5, [r2, #8]
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1901              		.loc 2 6582 10 discriminator 4 view .LVU582
 1902 0018 05F01F05 		and	r5, r5, #31
 1903              	.LVL164:
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1904              		.loc 2 6582 10 discriminator 4 view .LVU583
 1905              	.LBE492:
 1906              	.LBE491:
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1907              		.loc 1 782 3 is_stmt 1 discriminator 4 view .LVU584
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 1908              		.loc 1 784 3 discriminator 4 view .LVU585
 1909              	.LBB493:
 1910              	.LBI493:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1911              		.loc 2 7247 26 discriminator 4 view .LVU586
 1912              	.LBB494:
 1913              		.loc 2 7249 3 discriminator 4 view .LVU587
 1914              		.loc 2 7249 12 is_stmt 0 discriminator 4 view .LVU588
 1915 001c 9A68     		ldr	r2, [r3, #8]
 1916              		.loc 2 7249 76 discriminator 4 view .LVU589
 1917 001e 12F0080F 		tst	r2, #8
 1918 0022 40F08780 		bne	.L164
 1919              	.LVL165:
 1920              		.loc 2 7249 76 discriminator 4 view .LVU590
 1921              	.LBE494:
 1922              	.LBE493:
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          the queue is empty */
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 1923              		.loc 1 797 5 is_stmt 1 view .LVU591
 1924              		.loc 1 797 33 is_stmt 0 view .LVU592
 1925 0026 DA68     		ldr	r2, [r3, #12]
 1926              	.LVL166:
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 180


 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1927              		.loc 1 799 5 is_stmt 1 view .LVU593
 1928              		.loc 1 799 10 is_stmt 0 view .LVU594
 1929 0028 DB6C     		ldr	r3, [r3, #76]
 1930              		.loc 1 799 8 view .LVU595
 1931 002a 13F4C07F 		tst	r3, #384
 1932 002e 01D1     		bne	.L149
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1933              		.loc 1 800 9 view .LVU596
 1934 0030 002A     		cmp	r2, #0
 1935 0032 56DA     		bge	.L169
 1936              	.L149:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****        )
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1937              		.loc 1 808 5 is_stmt 1 view .LVU597
 1938              		.loc 1 808 5 view .LVU598
 1939 0034 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1940 0038 012B     		cmp	r3, #1
 1941 003a 7DD0     		beq	.L165
 1942              		.loc 1 808 5 discriminator 2 view .LVU599
 1943 003c 0123     		movs	r3, #1
 1944 003e 84F85C30 		strb	r3, [r4, #92]
 1945              		.loc 1 808 5 discriminator 2 view .LVU600
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1946              		.loc 1 811 5 discriminator 2 view .LVU601
 1947              		.loc 1 811 22 is_stmt 0 discriminator 2 view .LVU602
 1948 0042 2046     		mov	r0, r4
 1949              	.LVL167:
 1950              		.loc 1 811 22 discriminator 2 view .LVU603
 1951 0044 FFF7FEFF 		bl	ADC_Enable
 1952              	.LVL168:
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1953              		.loc 1 814 5 is_stmt 1 discriminator 2 view .LVU604
 1954              		.loc 1 814 8 is_stmt 0 discriminator 2 view .LVU605
 1955 0048 0028     		cmp	r0, #0
 1956 004a 6FD1     		bne	.L150
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1957              		.loc 1 817 7 is_stmt 1 view .LVU606
 1958              		.loc 1 817 16 is_stmt 0 view .LVU607
 1959 004c 236E     		ldr	r3, [r4, #96]
 1960              		.loc 1 817 10 view .LVU608
 1961 004e 13F4807F 		tst	r3, #256
 1962 0052 4CD0     		beq	.L151
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
ARM GAS  /tmp/ccjQSYCi.s 			page 181


 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1963              		.loc 1 820 9 is_stmt 1 view .LVU609
 1964 0054 636E     		ldr	r3, [r4, #100]
 1965 0056 23F00803 		bic	r3, r3, #8
 1966 005a 6366     		str	r3, [r4, #100]
 1967              	.L152:
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1968              		.loc 1 831 7 view .LVU610
 1969 005c 226E     		ldr	r2, [r4, #96]
 1970 005e 394B     		ldr	r3, .L173+8
 1971 0060 1340     		ands	r3, r3, r2
 1972 0062 43F48053 		orr	r3, r3, #4096
 1973 0066 2366     		str	r3, [r4, #96]
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 1974              		.loc 1 838 7 view .LVU611
 1975              		.loc 1 838 12 is_stmt 0 view .LVU612
 1976 0068 2368     		ldr	r3, [r4]
 1977 006a 354A     		ldr	r2, .L173+4
 1978 006c 9342     		cmp	r3, r2
 1979 006e 41D0     		beq	.L170
 1980 0070 1A46     		mov	r2, r3
 1981              	.L153:
 1982              		.loc 1 838 10 discriminator 4 view .LVU613
 1983 0072 9342     		cmp	r3, r2
 1984 0074 00D0     		beq	.L154
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1985              		.loc 1 839 11 view .LVU614
 1986 0076 1DB9     		cbnz	r5, .L155
 1987              	.L154:
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1988              		.loc 1 842 9 is_stmt 1 view .LVU615
 1989 0078 226E     		ldr	r2, [r4, #96]
 1990 007a 22F48012 		bic	r2, r2, #1048576
 1991 007e 2266     		str	r2, [r4, #96]
 1992              	.L155:
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
ARM GAS  /tmp/ccjQSYCi.s 			page 182


 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1993              		.loc 1 847 7 view .LVU616
 1994 0080 6022     		movs	r2, #96
 1995 0082 1A60     		str	r2, [r3]
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1996              		.loc 1 852 7 view .LVU617
 1997              		.loc 1 852 7 view .LVU618
 1998 0084 0023     		movs	r3, #0
 1999 0086 84F85C30 		strb	r3, [r4, #92]
 2000              		.loc 1 852 7 view .LVU619
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 2001              		.loc 1 856 7 view .LVU620
 2002              		.loc 1 856 16 is_stmt 0 view .LVU621
 2003 008a 2368     		ldr	r3, [r4]
 2004              		.loc 1 856 26 view .LVU622
 2005 008c DA68     		ldr	r2, [r3, #12]
 2006              		.loc 1 856 10 view .LVU623
 2007 008e 12F4001F 		tst	r2, #2097152
 2008 0092 03D0     		beq	.L156
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 2009              		.loc 1 858 9 is_stmt 1 view .LVU624
 2010 0094 5A68     		ldr	r2, [r3, #4]
 2011 0096 42F48062 		orr	r2, r2, #1024
 2012 009a 5A60     		str	r2, [r3, #4]
 2013              	.L156:
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
 2014              		.loc 1 862 7 view .LVU625
 2015              		.loc 1 862 25 is_stmt 0 view .LVU626
 2016 009c 6369     		ldr	r3, [r4, #20]
 2017              		.loc 1 862 7 view .LVU627
 2018 009e 082B     		cmp	r3, #8
 2019 00a0 2BD0     		beq	.L171
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         default:
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 2020              		.loc 1 870 11 is_stmt 1 view .LVU628
 2021 00a2 2268     		ldr	r2, [r4]
 2022 00a4 5368     		ldr	r3, [r2, #4]
 2023 00a6 23F04003 		bic	r3, r3, #64
 2024 00aa 5360     		str	r3, [r2, #4]
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
ARM GAS  /tmp/ccjQSYCi.s 			page 183


 2025              		.loc 1 871 11 view .LVU629
 2026 00ac 2268     		ldr	r2, [r4]
 2027 00ae 5368     		ldr	r3, [r2, #4]
 2028 00b0 43F02003 		orr	r3, r3, #32
 2029 00b4 5360     		str	r3, [r2, #4]
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 2030              		.loc 1 872 11 view .LVU630
 2031              	.L158:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 2032              		.loc 1 887 7 view .LVU631
 2033              		.loc 1 887 12 is_stmt 0 view .LVU632
 2034 00b6 2368     		ldr	r3, [r4]
 2035 00b8 214A     		ldr	r2, .L173+4
 2036 00ba 9342     		cmp	r3, r2
 2037 00bc 28D0     		beq	.L172
 2038 00be 1A46     		mov	r2, r3
 2039              	.L159:
 2040              		.loc 1 887 10 discriminator 4 view .LVU633
 2041 00c0 9342     		cmp	r3, r2
 2042 00c2 28D0     		beq	.L160
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 2043              		.loc 1 889 36 view .LVU634
 2044 00c4 062D     		cmp	r5, #6
 2045 00c6 14BF     		ite	ne
 2046 00c8 0022     		movne	r2, #0
 2047 00ca 0122     		moveq	r2, #1
 2048              		.loc 1 889 11 view .LVU635
 2049 00cc 1DB3     		cbz	r5, .L160
 2050 00ce 12BB     		cbnz	r2, .L160
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 2051              		.loc 1 890 11 view .LVU636
 2052 00d0 072D     		cmp	r5, #7
 2053 00d2 20D0     		beq	.L160
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          )
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
ARM GAS  /tmp/ccjQSYCi.s 			page 184


 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 2054              		.loc 1 902 9 is_stmt 1 view .LVU637
 2055 00d4 236E     		ldr	r3, [r4, #96]
 2056 00d6 43F48013 		orr	r3, r3, #1048576
 2057 00da 2366     		str	r3, [r4, #96]
 2058 00dc 2BE0     		b	.L148
 2059              	.LVL169:
 2060              	.L163:
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2061              		.loc 1 779 35 is_stmt 0 view .LVU638
 2062 00de 1A4A     		ldr	r2, .L173+12
 2063 00e0 99E7     		b	.L147
 2064              	.LVL170:
 2065              	.L169:
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
 2066              		.loc 1 803 7 is_stmt 1 view .LVU639
 2067 00e2 236E     		ldr	r3, [r4, #96]
 2068 00e4 43F02003 		orr	r3, r3, #32
 2069 00e8 2366     		str	r3, [r4, #96]
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2070              		.loc 1 804 7 view .LVU640
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2071              		.loc 1 804 14 is_stmt 0 view .LVU641
 2072 00ea 0120     		movs	r0, #1
 2073              	.LVL171:
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2074              		.loc 1 804 14 view .LVU642
 2075 00ec 23E0     		b	.L148
 2076              	.LVL172:
 2077              	.L151:
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 2078              		.loc 1 825 9 is_stmt 1 view .LVU643
 2079 00ee 0023     		movs	r3, #0
 2080 00f0 6366     		str	r3, [r4, #100]
 2081 00f2 B3E7     		b	.L152
 2082              	.L170:
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2083              		.loc 1 838 12 is_stmt 0 view .LVU644
 2084 00f4 A2F58072 		sub	r2, r2, #256
 2085 00f8 BBE7     		b	.L153
 2086              	.L171:
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 2087              		.loc 1 865 11 is_stmt 1 view .LVU645
 2088 00fa 2268     		ldr	r2, [r4]
 2089 00fc 5368     		ldr	r3, [r2, #4]
 2090 00fe 23F02003 		bic	r3, r3, #32
 2091 0102 5360     		str	r3, [r2, #4]
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           break;
 2092              		.loc 1 866 11 view .LVU646
 2093 0104 2268     		ldr	r2, [r4]
 2094 0106 5368     		ldr	r3, [r2, #4]
 2095 0108 43F04003 		orr	r3, r3, #64
 2096 010c 5360     		str	r3, [r2, #4]
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 2097              		.loc 1 867 11 view .LVU647
ARM GAS  /tmp/ccjQSYCi.s 			page 185


 2098 010e D2E7     		b	.L158
 2099              	.L172:
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 2100              		.loc 1 887 12 is_stmt 0 view .LVU648
 2101 0110 A2F58072 		sub	r2, r2, #256
 2102 0114 D4E7     		b	.L159
 2103              	.L160:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2104              		.loc 1 894 9 is_stmt 1 view .LVU649
 2105              	.LVL173:
 2106              	.LBB495:
 2107              	.LBI495:
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2108              		.loc 2 5010 26 view .LVU650
 2109              	.LBB496:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2110              		.loc 2 5012 3 view .LVU651
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2111              		.loc 2 5012 21 is_stmt 0 view .LVU652
 2112 0116 DA68     		ldr	r2, [r3, #12]
 2113              	.LVL174:
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2114              		.loc 2 5012 21 view .LVU653
 2115              	.LBE496:
 2116              	.LBE495:
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 2117              		.loc 1 894 12 view .LVU654
 2118 0118 12F0007F 		tst	r2, #33554432
 2119 011c 0BD1     		bne	.L148
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2120              		.loc 1 896 11 is_stmt 1 view .LVU655
 2121              	.LVL175:
 2122              	.LBB497:
 2123              	.LBI497:
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2124              		.loc 2 7211 22 view .LVU656
 2125              	.LBB498:
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2126              		.loc 2 7216 3 view .LVU657
 2127 011e 9968     		ldr	r1, [r3, #8]
 2128 0120 0A4A     		ldr	r2, .L173+16
 2129 0122 0A40     		ands	r2, r2, r1
 2130 0124 42F00802 		orr	r2, r2, #8
 2131 0128 9A60     		str	r2, [r3, #8]
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2132              		.loc 2 7219 1 is_stmt 0 view .LVU658
 2133 012a 04E0     		b	.L148
 2134              	.LVL176:
 2135              	.L150:
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2136              		.loc 2 7219 1 view .LVU659
 2137              	.LBE498:
 2138              	.LBE497:
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
ARM GAS  /tmp/ccjQSYCi.s 			page 186


 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 2139              		.loc 1 909 7 is_stmt 1 view .LVU660
 2140              		.loc 1 909 7 view .LVU661
 2141 012c 0023     		movs	r3, #0
 2142 012e 84F85C30 		strb	r3, [r4, #92]
 2143              		.loc 1 909 7 view .LVU662
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
 2144              		.loc 1 913 5 view .LVU663
 2145              		.loc 1 913 12 is_stmt 0 view .LVU664
 2146 0132 00E0     		b	.L148
 2147              	.LVL177:
 2148              	.L164:
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2149              		.loc 1 786 12 view .LVU665
 2150 0134 0220     		movs	r0, #2
 2151              	.LVL178:
 2152              	.L148:
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2153              		.loc 1 915 1 view .LVU666
 2154 0136 38BD     		pop	{r3, r4, r5, pc}
 2155              	.LVL179:
 2156              	.L165:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2157              		.loc 1 808 5 view .LVU667
 2158 0138 0220     		movs	r0, #2
 2159              	.LVL180:
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2160              		.loc 1 808 5 view .LVU668
 2161 013a FCE7     		b	.L148
 2162              	.L174:
 2163              		.align	2
 2164              	.L173:
 2165 013c 00200240 		.word	1073881088
 2166 0140 00210240 		.word	1073881344
 2167 0144 FECFFFFF 		.word	-12290
 2168 0148 00630258 		.word	1476551424
 2169 014c C0FFFF7F 		.word	2147483584
 2170              		.cfi_endproc
 2171              	.LFE359:
 2173              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 2174              		.align	1
 2175              		.global	HAL_ADCEx_InjectedStop_IT
 2176              		.syntax unified
 2177              		.thumb
 2178              		.thumb_func
 2179              		.fpu fpv5-d16
 2181              	HAL_ADCEx_InjectedStop_IT:
 2182              	.LVL181:
 2183              	.LFB360:
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 187


 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         is on going.
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         then for ADC slave.
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2184              		.loc 1 937 1 is_stmt 1 view -0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2188              		.loc 1 938 3 view .LVU670
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2189              		.loc 1 941 3 view .LVU671
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2190              		.loc 1 944 3 view .LVU672
 2191              		.loc 1 944 3 view .LVU673
 2192 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 2193 0004 012B     		cmp	r3, #1
 2194 0006 26D0     		beq	.L179
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2195              		.loc 1 937 1 is_stmt 0 discriminator 2 view .LVU674
 2196 0008 10B5     		push	{r4, lr}
 2197              	.LCFI19:
 2198              		.cfi_def_cfa_offset 8
 2199              		.cfi_offset 4, -8
 2200              		.cfi_offset 14, -4
 2201 000a 0446     		mov	r4, r0
 2202              		.loc 1 944 3 is_stmt 1 discriminator 2 view .LVU675
 2203 000c 0123     		movs	r3, #1
 2204 000e 80F85C30 		strb	r3, [r0, #92]
 2205              		.loc 1 944 3 discriminator 2 view .LVU676
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 2206              		.loc 1 947 3 discriminator 2 view .LVU677
 2207              		.loc 1 947 20 is_stmt 0 discriminator 2 view .LVU678
 2208 0012 0221     		movs	r1, #2
 2209 0014 FFF7FEFF 		bl	ADC_ConversionStop
ARM GAS  /tmp/ccjQSYCi.s 			page 188


 2210              	.LVL182:
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* continue.                                                                */
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2211              		.loc 1 952 3 is_stmt 1 discriminator 2 view .LVU679
 2212              		.loc 1 952 6 is_stmt 0 discriminator 2 view .LVU680
 2213 0018 68B9     		cbnz	r0, .L177
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 2214              		.loc 1 955 5 is_stmt 1 view .LVU681
 2215 001a 2268     		ldr	r2, [r4]
 2216 001c 5368     		ldr	r3, [r2, #4]
 2217 001e 23F48C63 		bic	r3, r3, #1120
 2218 0022 5360     		str	r3, [r2, #4]
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 2219              		.loc 1 957 5 view .LVU682
 2220              		.loc 1 957 9 is_stmt 0 view .LVU683
 2221 0024 2368     		ldr	r3, [r4]
 2222              	.LVL183:
 2223              	.LBB499:
 2224              	.LBI499:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2225              		.loc 2 7052 26 is_stmt 1 view .LVU684
 2226              	.LBB500:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2227              		.loc 2 7054 3 view .LVU685
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2228              		.loc 2 7054 12 is_stmt 0 view .LVU686
 2229 0026 9B68     		ldr	r3, [r3, #8]
 2230              	.LVL184:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2231              		.loc 2 7054 74 view .LVU687
 2232 0028 13F0040F 		tst	r3, #4
 2233 002c 07D0     		beq	.L178
 2234              	.LVL185:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2235              		.loc 2 7054 74 view .LVU688
 2236              	.LBE500:
 2237              	.LBE499:
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
ARM GAS  /tmp/ccjQSYCi.s 			page 189


 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2238              		.loc 1 976 7 is_stmt 1 view .LVU689
 2239 002e 236E     		ldr	r3, [r4, #96]
 2240 0030 23F48053 		bic	r3, r3, #4096
 2241 0034 2366     		str	r3, [r4, #96]
 2242              	.L177:
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2243              		.loc 1 981 3 view .LVU690
 2244              		.loc 1 981 3 view .LVU691
 2245 0036 0023     		movs	r3, #0
 2246 0038 84F85C30 		strb	r3, [r4, #92]
 2247              		.loc 1 981 3 view .LVU692
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 2248              		.loc 1 984 3 view .LVU693
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2249              		.loc 1 985 1 is_stmt 0 view .LVU694
 2250 003c 10BD     		pop	{r4, pc}
 2251              	.LVL186:
 2252              	.L178:
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2253              		.loc 1 960 7 is_stmt 1 view .LVU695
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2254              		.loc 1 960 24 is_stmt 0 view .LVU696
 2255 003e 2046     		mov	r0, r4
 2256              	.LVL187:
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2257              		.loc 1 960 24 view .LVU697
 2258 0040 FFF7FEFF 		bl	ADC_Disable
 2259              	.LVL188:
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2260              		.loc 1 963 7 is_stmt 1 view .LVU698
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2261              		.loc 1 963 10 is_stmt 0 view .LVU699
 2262 0044 0028     		cmp	r0, #0
 2263 0046 F6D1     		bne	.L177
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2264              		.loc 1 966 9 is_stmt 1 view .LVU700
 2265 0048 226E     		ldr	r2, [r4, #96]
 2266 004a 044B     		ldr	r3, .L184
 2267 004c 1340     		ands	r3, r3, r2
 2268 004e 43F00103 		orr	r3, r3, #1
 2269 0052 2366     		str	r3, [r4, #96]
 2270 0054 EFE7     		b	.L177
 2271              	.LVL189:
 2272              	.L179:
 2273              	.LCFI20:
 2274              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccjQSYCi.s 			page 190


 2275              		.cfi_restore 4
 2276              		.cfi_restore 14
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2277              		.loc 1 944 3 is_stmt 0 view .LVU701
 2278 0056 0220     		movs	r0, #2
 2279              	.LVL190:
 2280              		.loc 1 985 1 view .LVU702
 2281 0058 7047     		bx	lr
 2282              	.L185:
 2283 005a 00BF     		.align	2
 2284              	.L184:
 2285 005c FEEEFFFF 		.word	-4354
 2286              		.cfi_endproc
 2287              	.LFE360:
 2289              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 2290              		.align	1
 2291              		.global	HAL_ADCEx_MultiModeStart_DMA
 2292              		.syntax unified
 2293              		.thumb
 2294              		.thumb_func
 2295              		.fpu fpv5-d16
 2297              	HAL_ADCEx_MultiModeStart_DMA:
 2298              	.LVL191:
 2299              	.LFB361:
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversions.
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2300              		.loc 1 1003 1 is_stmt 1 view -0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 112
 2303              		@ frame_needed = 0, uses_anonymous_args = 0
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2304              		.loc 1 1004 3 view .LVU704
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 2305              		.loc 1 1005 3 view .LVU705
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 2306              		.loc 1 1006 3 view .LVU706
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2307              		.loc 1 1009 3 view .LVU707
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
ARM GAS  /tmp/ccjQSYCi.s 			page 191


 2308              		.loc 1 1010 3 view .LVU708
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 2309              		.loc 1 1011 3 view .LVU709
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 2310              		.loc 1 1013 3 view .LVU710
 2311              		.loc 1 1013 7 is_stmt 0 view .LVU711
 2312 0000 0368     		ldr	r3, [r0]
 2313              	.LVL192:
 2314              	.LBB501:
 2315              	.LBI501:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2316              		.loc 2 7052 26 is_stmt 1 view .LVU712
 2317              	.LBB502:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2318              		.loc 2 7054 3 view .LVU713
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2319              		.loc 2 7054 12 is_stmt 0 view .LVU714
 2320 0002 9B68     		ldr	r3, [r3, #8]
 2321              	.LVL193:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2322              		.loc 2 7054 74 view .LVU715
 2323 0004 13F0040F 		tst	r3, #4
 2324 0008 68D1     		bne	.L195
 2325              	.LBE502:
 2326              	.LBE501:
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2327              		.loc 1 1003 1 view .LVU716
 2328 000a 70B5     		push	{r4, r5, r6, lr}
 2329              	.LCFI21:
 2330              		.cfi_def_cfa_offset 16
 2331              		.cfi_offset 4, -16
 2332              		.cfi_offset 5, -12
 2333              		.cfi_offset 6, -8
 2334              		.cfi_offset 14, -4
 2335 000c 9CB0     		sub	sp, sp, #112
 2336              	.LCFI22:
 2337              		.cfi_def_cfa_offset 128
 2338 000e 0446     		mov	r4, r0
 2339 0010 0E46     		mov	r6, r1
 2340 0012 1546     		mov	r5, r2
 2341              	.LVL194:
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_BUSY;
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process locked */
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 2342              		.loc 1 1020 5 is_stmt 1 view .LVU717
 2343              		.loc 1 1020 5 view .LVU718
 2344 0014 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 2345 0018 012B     		cmp	r3, #1
 2346 001a 61D0     		beq	.L196
 2347              		.loc 1 1020 5 discriminator 2 view .LVU719
 2348 001c 0123     		movs	r3, #1
 2349 001e 80F85C30 		strb	r3, [r0, #92]
ARM GAS  /tmp/ccjQSYCi.s 			page 192


 2350              		.loc 1 1020 5 discriminator 2 view .LVU720
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 2351              		.loc 1 1022 5 discriminator 2 view .LVU721
 2352              		.loc 1 1022 24 is_stmt 0 discriminator 2 view .LVU722
 2353 0022 0023     		movs	r3, #0
 2354 0024 1893     		str	r3, [sp, #96]
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 2355              		.loc 1 1023 5 is_stmt 1 discriminator 2 view .LVU723
 2356              		.loc 1 1023 28 is_stmt 0 discriminator 2 view .LVU724
 2357 0026 1993     		str	r3, [sp, #100]
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2358              		.loc 1 1025 5 is_stmt 1 discriminator 2 view .LVU725
 2359 0028 0268     		ldr	r2, [r0]
 2360              	.LVL195:
 2361              		.loc 1 1025 5 is_stmt 0 discriminator 2 view .LVU726
 2362 002a 2E4B     		ldr	r3, .L205
 2363 002c 9A42     		cmp	r2, r3
 2364 002e 3DD0     		beq	.L202
 2365 0030 0023     		movs	r3, #0
 2366 0032 0093     		str	r3, [sp]
 2367              	.L189:
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2368              		.loc 1 1027 5 is_stmt 1 view .LVU727
 2369              		.loc 1 1027 21 is_stmt 0 view .LVU728
 2370 0034 009B     		ldr	r3, [sp]
 2371              		.loc 1 1027 8 view .LVU729
 2372 0036 002B     		cmp	r3, #0
 2373 0038 3CD0     		beq	.L203
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 2374              		.loc 1 1040 5 is_stmt 1 view .LVU730
 2375              		.loc 1 1040 22 is_stmt 0 view .LVU731
 2376 003a 2046     		mov	r0, r4
 2377              	.LVL196:
 2378              		.loc 1 1040 22 view .LVU732
 2379 003c FFF7FEFF 		bl	ADC_Enable
 2380              	.LVL197:
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2381              		.loc 1 1041 5 is_stmt 1 view .LVU733
 2382              		.loc 1 1041 8 is_stmt 0 view .LVU734
 2383 0040 0028     		cmp	r0, #0
 2384 0042 41D0     		beq	.L204
 2385              	.L191:
ARM GAS  /tmp/ccjQSYCi.s 			page 193


1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2386              		.loc 1 1047 5 is_stmt 1 view .LVU735
 2387              		.loc 1 1047 8 is_stmt 0 view .LVU736
 2388 0044 0028     		cmp	r0, #0
 2389 0046 45D1     		bne	.L192
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC state */
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 2390              		.loc 1 1050 7 is_stmt 1 view .LVU737
 2391 0048 226E     		ldr	r2, [r4, #96]
 2392 004a 274B     		ldr	r3, .L205+4
 2393 004c 1340     		ands	r3, r3, r2
 2394 004e 43F48073 		orr	r3, r3, #256
 2395 0052 2366     		str	r3, [r4, #96]
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC error code to none */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 2396              		.loc 1 1055 7 view .LVU738
 2397 0054 0023     		movs	r3, #0
 2398 0056 6366     		str	r3, [r4, #100]
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 2399              		.loc 1 1058 7 view .LVU739
 2400              		.loc 1 1058 11 is_stmt 0 view .LVU740
 2401 0058 A36D     		ldr	r3, [r4, #88]
 2402              		.loc 1 1058 42 view .LVU741
 2403 005a 244A     		ldr	r2, .L205+8
 2404 005c DA63     		str	r2, [r3, #60]
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 2405              		.loc 1 1061 7 is_stmt 1 view .LVU742
 2406              		.loc 1 1061 11 is_stmt 0 view .LVU743
 2407 005e A36D     		ldr	r3, [r4, #88]
 2408              		.loc 1 1061 46 view .LVU744
 2409 0060 234A     		ldr	r2, .L205+12
 2410 0062 1A64     		str	r2, [r3, #64]
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set the DMA error callback */
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 2411              		.loc 1 1064 7 is_stmt 1 view .LVU745
 2412              		.loc 1 1064 11 is_stmt 0 view .LVU746
 2413 0064 A36D     		ldr	r3, [r4, #88]
 2414              		.loc 1 1064 43 view .LVU747
 2415 0066 234A     		ldr	r2, .L205+16
 2416 0068 DA64     		str	r2, [r3, #76]
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
ARM GAS  /tmp/ccjQSYCi.s 			page 194


 2417              		.loc 1 1067 7 is_stmt 1 view .LVU748
 2418              		.loc 1 1067 23 is_stmt 0 view .LVU749
 2419 006a 2368     		ldr	r3, [r4]
 2420 006c 1D49     		ldr	r1, .L205
 2421 006e 224A     		ldr	r2, .L205+20
 2422 0070 9342     		cmp	r3, r2
 2423 0072 18BF     		it	ne
 2424 0074 8B42     		cmpne	r3, r1
 2425 0076 2BD1     		bne	.L197
 2426 0078 01F54071 		add	r1, r1, #768
 2427              	.L193:
 2428              	.LVL198:
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 2429              		.loc 1 1074 7 is_stmt 1 discriminator 4 view .LVU750
 2430 007c 1C22     		movs	r2, #28
 2431 007e 1A60     		str	r2, [r3]
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 2432              		.loc 1 1079 7 discriminator 4 view .LVU751
 2433              		.loc 1 1079 7 discriminator 4 view .LVU752
 2434 0080 0023     		movs	r3, #0
 2435 0082 84F85C30 		strb	r3, [r4, #92]
 2436              		.loc 1 1079 7 discriminator 4 view .LVU753
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 2437              		.loc 1 1082 7 discriminator 4 view .LVU754
 2438 0086 2268     		ldr	r2, [r4]
 2439 0088 5368     		ldr	r3, [r2, #4]
 2440 008a 43F01003 		orr	r3, r3, #16
 2441 008e 5360     		str	r3, [r2, #4]
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Start the DMA channel */
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
 2442              		.loc 1 1085 7 discriminator 4 view .LVU755
 2443              		.loc 1 1085 24 is_stmt 0 discriminator 4 view .LVU756
 2444 0090 2B46     		mov	r3, r5
 2445 0092 3246     		mov	r2, r6
 2446 0094 0C31     		adds	r1, r1, #12
 2447              	.LVL199:
 2448              		.loc 1 1085 24 discriminator 4 view .LVU757
 2449 0096 A06D     		ldr	r0, [r4, #88]
 2450              	.LVL200:
 2451              		.loc 1 1085 24 discriminator 4 view .LVU758
 2452 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2453              	.LVL201:
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
ARM GAS  /tmp/ccjQSYCi.s 			page 195


1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* trigger event.                                                         */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 2454              		.loc 1 1092 7 is_stmt 1 discriminator 4 view .LVU759
 2455 009c 2268     		ldr	r2, [r4]
 2456              	.LVL202:
 2457              	.LBB503:
 2458              	.LBI503:
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2459              		.loc 2 7016 22 discriminator 4 view .LVU760
 2460              	.LBB504:
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2461              		.loc 2 7021 3 discriminator 4 view .LVU761
 2462 009e 9168     		ldr	r1, [r2, #8]
 2463 00a0 164B     		ldr	r3, .L205+24
 2464 00a2 0B40     		ands	r3, r3, r1
 2465 00a4 43F00403 		orr	r3, r3, #4
 2466 00a8 9360     		str	r3, [r2, #8]
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2467              		.loc 2 7024 1 is_stmt 0 discriminator 4 view .LVU762
 2468 00aa 0BE0     		b	.L187
 2469              	.LVL203:
 2470              	.L202:
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2471              		.loc 2 7024 1 discriminator 4 view .LVU763
 2472              	.LBE504:
 2473              	.LBE503:
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2474              		.loc 1 1025 5 discriminator 1 view .LVU764
 2475 00ac 03F58073 		add	r3, r3, #256
 2476 00b0 0093     		str	r3, [sp]
 2477 00b2 BFE7     		b	.L189
 2478              	.L203:
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2479              		.loc 1 1030 7 is_stmt 1 view .LVU765
 2480 00b4 236E     		ldr	r3, [r4, #96]
 2481 00b6 43F02003 		orr	r3, r3, #32
 2482 00ba 2366     		str	r3, [r4, #96]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2483              		.loc 1 1033 7 view .LVU766
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2484              		.loc 1 1033 7 view .LVU767
 2485 00bc 0023     		movs	r3, #0
 2486 00be 84F85C30 		strb	r3, [r4, #92]
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2487              		.loc 1 1033 7 view .LVU768
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2488              		.loc 1 1035 7 view .LVU769
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2489              		.loc 1 1035 14 is_stmt 0 view .LVU770
 2490 00c2 0120     		movs	r0, #1
 2491              	.LVL204:
 2492              	.L187:
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
ARM GAS  /tmp/ccjQSYCi.s 			page 196


1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Return function status */
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return tmp_hal_status;
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2493              		.loc 1 1103 1 view .LVU771
 2494 00c4 1CB0     		add	sp, sp, #112
 2495              	.LCFI23:
 2496              		.cfi_remember_state
 2497              		.cfi_def_cfa_offset 16
 2498              		@ sp needed
 2499 00c6 70BD     		pop	{r4, r5, r6, pc}
 2500              	.LVL205:
 2501              	.L204:
 2502              	.LCFI24:
 2503              		.cfi_restore_state
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2504              		.loc 1 1043 7 is_stmt 1 view .LVU772
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2505              		.loc 1 1043 24 is_stmt 0 view .LVU773
 2506 00c8 6846     		mov	r0, sp
 2507              	.LVL206:
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2508              		.loc 1 1043 24 view .LVU774
 2509 00ca FFF7FEFF 		bl	ADC_Enable
 2510              	.LVL207:
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2511              		.loc 1 1043 24 view .LVU775
 2512 00ce B9E7     		b	.L191
 2513              	.L197:
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2514              		.loc 1 1067 23 view .LVU776
 2515 00d0 0B49     		ldr	r1, .L205+28
 2516 00d2 D3E7     		b	.L193
 2517              	.L192:
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2518              		.loc 1 1097 7 is_stmt 1 view .LVU777
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2519              		.loc 1 1097 7 view .LVU778
 2520 00d4 0023     		movs	r3, #0
 2521 00d6 84F85C30 		strb	r3, [r4, #92]
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2522              		.loc 1 1097 7 view .LVU779
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2523              		.loc 1 1101 5 view .LVU780
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2524              		.loc 1 1101 12 is_stmt 0 view .LVU781
 2525 00da F3E7     		b	.L187
 2526              	.LVL208:
 2527              	.L195:
 2528              	.LCFI25:
 2529              		.cfi_def_cfa_offset 0
 2530              		.cfi_restore 4
ARM GAS  /tmp/ccjQSYCi.s 			page 197


 2531              		.cfi_restore 5
 2532              		.cfi_restore 6
 2533              		.cfi_restore 14
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 2534              		.loc 1 1015 12 view .LVU782
 2535 00dc 0220     		movs	r0, #2
 2536              	.LVL209:
 2537              		.loc 1 1103 1 view .LVU783
 2538 00de 7047     		bx	lr
 2539              	.LVL210:
 2540              	.L196:
 2541              	.LCFI26:
 2542              		.cfi_def_cfa_offset 128
 2543              		.cfi_offset 4, -16
 2544              		.cfi_offset 5, -12
 2545              		.cfi_offset 6, -8
 2546              		.cfi_offset 14, -4
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2547              		.loc 1 1020 5 view .LVU784
 2548 00e0 0220     		movs	r0, #2
 2549              	.LVL211:
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2550              		.loc 1 1020 5 view .LVU785
 2551 00e2 EFE7     		b	.L187
 2552              	.L206:
 2553              		.align	2
 2554              	.L205:
 2555 00e4 00200240 		.word	1073881088
 2556 00e8 FEF0FFFF 		.word	-3842
 2557 00ec 00000000 		.word	ADC_DMAConvCplt
 2558 00f0 00000000 		.word	ADC_DMAHalfConvCplt
 2559 00f4 00000000 		.word	ADC_DMAError
 2560 00f8 00210240 		.word	1073881344
 2561 00fc C0FFFF7F 		.word	2147483584
 2562 0100 00630258 		.word	1476551424
 2563              		.cfi_endproc
 2564              	.LFE361:
 2566              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 2567              		.align	1
 2568              		.global	HAL_ADCEx_MultiModeStop_DMA
 2569              		.syntax unified
 2570              		.thumb
 2571              		.thumb_func
 2572              		.fpu fpv5-d16
 2574              	HAL_ADCEx_MultiModeStop_DMA:
 2575              	.LVL212:
 2576              	.LFB362:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
ARM GAS  /tmp/ccjQSYCi.s 			page 198


1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2577              		.loc 1 1119 1 is_stmt 1 view -0
 2578              		.cfi_startproc
 2579              		@ args = 0, pretend = 0, frame = 112
 2580              		@ frame_needed = 0, uses_anonymous_args = 0
 2581              		.loc 1 1119 1 is_stmt 0 view .LVU787
 2582 0000 70B5     		push	{r4, r5, r6, lr}
 2583              	.LCFI27:
 2584              		.cfi_def_cfa_offset 16
 2585              		.cfi_offset 4, -16
 2586              		.cfi_offset 5, -12
 2587              		.cfi_offset 6, -8
 2588              		.cfi_offset 14, -4
 2589 0002 9CB0     		sub	sp, sp, #112
 2590              	.LCFI28:
 2591              		.cfi_def_cfa_offset 128
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 2592              		.loc 1 1120 3 is_stmt 1 view .LVU788
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 2593              		.loc 1 1121 3 view .LVU789
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 2594              		.loc 1 1122 3 view .LVU790
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 2595              		.loc 1 1123 3 view .LVU791
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmphadcSlave_disable_status;
 2596              		.loc 1 1124 3 view .LVU792
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2597              		.loc 1 1127 3 view .LVU793
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2598              		.loc 1 1130 3 view .LVU794
 2599              		.loc 1 1130 3 view .LVU795
 2600 0004 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 2601 0008 012B     		cmp	r3, #1
 2602 000a 00F08380 		beq	.L225
 2603 000e 0446     		mov	r4, r0
 2604              		.loc 1 1130 3 discriminator 2 view .LVU796
 2605 0010 0123     		movs	r3, #1
 2606 0012 80F85C30 		strb	r3, [r0, #92]
 2607              		.loc 1 1130 3 discriminator 2 view .LVU797
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 2608              		.loc 1 1134 3 discriminator 2 view .LVU798
 2609              		.loc 1 1134 20 is_stmt 0 discriminator 2 view .LVU799
 2610 0016 0321     		movs	r1, #3
 2611 0018 FFF7FEFF 		bl	ADC_ConversionStop
 2612              	.LVL213:
ARM GAS  /tmp/ccjQSYCi.s 			page 199


1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2613              		.loc 1 1137 3 is_stmt 1 discriminator 2 view .LVU800
 2614              		.loc 1 1137 6 is_stmt 0 discriminator 2 view .LVU801
 2615 001c 0546     		mov	r5, r0
 2616 001e 0028     		cmp	r0, #0
 2617 0020 72D1     		bne	.L209
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 2618              		.loc 1 1139 5 is_stmt 1 view .LVU802
 2619              		.loc 1 1139 24 is_stmt 0 view .LVU803
 2620 0022 0023     		movs	r3, #0
 2621 0024 1893     		str	r3, [sp, #96]
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 2622              		.loc 1 1140 5 is_stmt 1 view .LVU804
 2623              		.loc 1 1140 28 is_stmt 0 view .LVU805
 2624 0026 1993     		str	r3, [sp, #100]
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 2625              		.loc 1 1143 5 is_stmt 1 view .LVU806
 2626 0028 2268     		ldr	r2, [r4]
 2627 002a 3B4B     		ldr	r3, .L232
 2628 002c 9A42     		cmp	r2, r3
 2629 002e 0DD0     		beq	.L228
 2630              		.loc 1 1143 5 is_stmt 0 discriminator 2 view .LVU807
 2631 0030 0023     		movs	r3, #0
 2632 0032 0093     		str	r3, [sp]
 2633              	.L211:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 2634              		.loc 1 1145 5 is_stmt 1 view .LVU808
 2635              		.loc 1 1145 21 is_stmt 0 view .LVU809
 2636 0034 009B     		ldr	r3, [sp]
 2637              		.loc 1 1145 8 view .LVU810
 2638 0036 6BB1     		cbz	r3, .L229
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 2639              		.loc 1 1160 5 is_stmt 1 view .LVU811
 2640              		.loc 1 1160 17 is_stmt 0 view .LVU812
 2641 0038 FFF7FEFF 		bl	HAL_GetTick
 2642              	.LVL214:
 2643              		.loc 1 1160 17 view .LVU813
ARM GAS  /tmp/ccjQSYCi.s 			page 200


 2644 003c 0546     		mov	r5, r0
 2645              	.LVL215:
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2646              		.loc 1 1162 5 is_stmt 1 view .LVU814
 2647              		.loc 1 1162 40 is_stmt 0 view .LVU815
 2648 003e 009B     		ldr	r3, [sp]
 2649              	.LVL216:
 2650              	.LBB505:
 2651              	.LBI505:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2652              		.loc 2 7052 26 is_stmt 1 view .LVU816
 2653              	.LBB506:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2654              		.loc 2 7054 3 view .LVU817
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2655              		.loc 2 7054 12 is_stmt 0 view .LVU818
 2656 0040 9B68     		ldr	r3, [r3, #8]
 2657              	.LVL217:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2658              		.loc 2 7054 74 view .LVU819
 2659 0042 13F00403 		ands	r3, r3, #4
 2660 0046 13D0     		beq	.L220
 2661 0048 0123     		movs	r3, #1
 2662 004a 11E0     		b	.L220
 2663              	.LVL218:
 2664              	.L228:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2665              		.loc 2 7054 74 view .LVU820
 2666              	.LBE506:
 2667              	.LBE505:
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2668              		.loc 1 1143 5 discriminator 1 view .LVU821
 2669 004c 03F58073 		add	r3, r3, #256
 2670 0050 0093     		str	r3, [sp]
 2671 0052 EFE7     		b	.L211
 2672              	.L229:
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2673              		.loc 1 1148 7 is_stmt 1 view .LVU822
 2674 0054 236E     		ldr	r3, [r4, #96]
 2675 0056 43F02003 		orr	r3, r3, #32
 2676 005a 2366     		str	r3, [r4, #96]
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2677              		.loc 1 1151 7 view .LVU823
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2678              		.loc 1 1151 7 view .LVU824
 2679 005c 0023     		movs	r3, #0
 2680 005e 84F85C30 		strb	r3, [r4, #92]
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2681              		.loc 1 1151 7 view .LVU825
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2682              		.loc 1 1153 7 view .LVU826
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2683              		.loc 1 1153 14 is_stmt 0 view .LVU827
 2684 0062 0125     		movs	r5, #1
 2685 0064 53E0     		b	.L208
 2686              	.LVL219:
ARM GAS  /tmp/ccjQSYCi.s 			page 201


 2687              	.L215:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_ERROR;
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 2688              		.loc 1 1186 7 is_stmt 1 view .LVU828
 2689              		.loc 1 1186 42 is_stmt 0 view .LVU829
 2690 0066 009B     		ldr	r3, [sp]
 2691              	.LVL220:
 2692              	.LBB507:
 2693              	.LBI507:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2694              		.loc 2 7052 26 is_stmt 1 view .LVU830
 2695              	.LBB508:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2696              		.loc 2 7054 3 view .LVU831
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2697              		.loc 2 7054 12 is_stmt 0 view .LVU832
 2698 0068 9B68     		ldr	r3, [r3, #8]
 2699              	.LVL221:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2700              		.loc 2 7054 74 view .LVU833
 2701 006a 13F00403 		ands	r3, r3, #4
 2702 006e 21D1     		bne	.L218
 2703              	.LVL222:
 2704              	.L220:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2705              		.loc 2 7054 74 view .LVU834
 2706              	.LBE508:
 2707              	.LBE507:
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2708              		.loc 1 1163 11 is_stmt 1 view .LVU835
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 2709              		.loc 1 1163 13 is_stmt 0 view .LVU836
 2710 0070 2268     		ldr	r2, [r4]
 2711              	.LVL223:
 2712              	.LBB510:
ARM GAS  /tmp/ccjQSYCi.s 			page 202


 2713              	.LBI510:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2714              		.loc 2 7052 26 is_stmt 1 view .LVU837
 2715              	.LBB511:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2716              		.loc 2 7054 3 view .LVU838
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2717              		.loc 2 7054 12 is_stmt 0 view .LVU839
 2718 0072 9268     		ldr	r2, [r2, #8]
 2719              	.LVL224:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2720              		.loc 2 7054 74 view .LVU840
 2721 0074 12F0040F 		tst	r2, #4
 2722 0078 01D1     		bne	.L221
 2723              	.LVL225:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2724              		.loc 2 7054 74 view .LVU841
 2725              	.LBE511:
 2726              	.LBE510:
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 2727              		.loc 1 1164 12 view .LVU842
 2728 007a 012B     		cmp	r3, #1
 2729 007c 1CD1     		bne	.L230
 2730              	.L221:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2731              		.loc 1 1167 7 is_stmt 1 view .LVU843
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2732              		.loc 1 1167 12 is_stmt 0 view .LVU844
 2733 007e FFF7FEFF 		bl	HAL_GetTick
 2734              	.LVL226:
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2735              		.loc 1 1167 26 view .LVU845
 2736 0082 431B     		subs	r3, r0, r5
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 2737              		.loc 1 1167 10 view .LVU846
 2738 0084 052B     		cmp	r3, #5
 2739 0086 EED9     		bls	.L215
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2740              		.loc 1 1170 9 is_stmt 1 view .LVU847
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2741              		.loc 1 1170 44 is_stmt 0 view .LVU848
 2742 0088 009B     		ldr	r3, [sp]
 2743              	.LVL227:
 2744              	.LBB512:
 2745              	.LBI512:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2746              		.loc 2 7052 26 is_stmt 1 view .LVU849
 2747              	.LBB513:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2748              		.loc 2 7054 3 view .LVU850
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2749              		.loc 2 7054 12 is_stmt 0 view .LVU851
 2750 008a 9B68     		ldr	r3, [r3, #8]
 2751              	.LVL228:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2752              		.loc 2 7054 74 view .LVU852
 2753 008c 13F00403 		ands	r3, r3, #4
ARM GAS  /tmp/ccjQSYCi.s 			page 203


 2754 0090 00D0     		beq	.L216
 2755 0092 0123     		movs	r3, #1
 2756              	.L216:
 2757              	.LVL229:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2758              		.loc 2 7054 74 view .LVU853
 2759              	.LBE513:
 2760              	.LBE512:
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2761              		.loc 1 1172 9 is_stmt 1 view .LVU854
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 2762              		.loc 1 1172 13 is_stmt 0 view .LVU855
 2763 0094 2268     		ldr	r2, [r4]
 2764              	.LVL230:
 2765              	.LBB514:
 2766              	.LBI514:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2767              		.loc 2 7052 26 is_stmt 1 view .LVU856
 2768              	.LBB515:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2769              		.loc 2 7054 3 view .LVU857
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2770              		.loc 2 7054 12 is_stmt 0 view .LVU858
 2771 0096 9268     		ldr	r2, [r2, #8]
 2772              	.LVL231:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2773              		.loc 2 7054 74 view .LVU859
 2774 0098 12F0040F 		tst	r2, #4
 2775 009c 01D1     		bne	.L217
 2776              	.LVL232:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2777              		.loc 2 7054 74 view .LVU860
 2778              	.LBE515:
 2779              	.LBE514:
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 2780              		.loc 1 1173 12 view .LVU861
 2781 009e 012B     		cmp	r3, #1
 2782 00a0 E1D1     		bne	.L215
 2783              	.L217:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2784              		.loc 1 1177 11 is_stmt 1 view .LVU862
 2785 00a2 236E     		ldr	r3, [r4, #96]
 2786              	.LVL233:
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2787              		.loc 1 1177 11 is_stmt 0 view .LVU863
 2788 00a4 43F01003 		orr	r3, r3, #16
 2789 00a8 2366     		str	r3, [r4, #96]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2790              		.loc 1 1180 11 is_stmt 1 view .LVU864
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2791              		.loc 1 1180 11 view .LVU865
 2792 00aa 0023     		movs	r3, #0
 2793 00ac 84F85C30 		strb	r3, [r4, #92]
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2794              		.loc 1 1180 11 view .LVU866
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2795              		.loc 1 1182 11 view .LVU867
ARM GAS  /tmp/ccjQSYCi.s 			page 204


1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2796              		.loc 1 1182 18 is_stmt 0 view .LVU868
 2797 00b0 0125     		movs	r5, #1
 2798              	.LVL234:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 2799              		.loc 1 1182 18 view .LVU869
 2800 00b2 2CE0     		b	.L208
 2801              	.LVL235:
 2802              	.L218:
 2803              	.LBB516:
 2804              	.LBB509:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2805              		.loc 2 7054 74 view .LVU870
 2806 00b4 0123     		movs	r3, #1
 2807 00b6 DBE7     		b	.L220
 2808              	.LVL236:
 2809              	.L230:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2810              		.loc 2 7054 74 view .LVU871
 2811              	.LBE509:
 2812              	.LBE516:
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 2813              		.loc 1 1193 5 is_stmt 1 view .LVU872
 2814              		.loc 1 1193 22 is_stmt 0 view .LVU873
 2815 00b8 A06D     		ldr	r0, [r4, #88]
 2816 00ba FFF7FEFF 		bl	HAL_DMA_Abort
 2817              	.LVL237:
 2818              		.loc 1 1193 22 view .LVU874
 2819 00be 0546     		mov	r5, r0
 2820              	.LVL238:
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
 2821              		.loc 1 1196 5 is_stmt 1 view .LVU875
 2822              		.loc 1 1196 8 is_stmt 0 view .LVU876
 2823 00c0 0128     		cmp	r0, #1
 2824 00c2 10D0     		beq	.L231
 2825              	.L222:
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2826              		.loc 1 1203 5 is_stmt 1 view .LVU877
 2827 00c4 2268     		ldr	r2, [r4]
 2828 00c6 5368     		ldr	r3, [r2, #4]
 2829 00c8 23F01003 		bic	r3, r3, #16
 2830 00cc 5360     		str	r3, [r2, #4]
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 205


1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2831              		.loc 1 1208 5 view .LVU878
 2832              		.loc 1 1208 8 is_stmt 0 view .LVU879
 2833 00ce 7DB9     		cbnz	r5, .L223
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_disable_status = ADC_Disable(&tmphadcSlave);
 2834              		.loc 1 1210 7 is_stmt 1 view .LVU880
 2835              		.loc 1 1210 37 is_stmt 0 view .LVU881
 2836 00d0 6846     		mov	r0, sp
 2837              	.LVL239:
 2838              		.loc 1 1210 37 view .LVU882
 2839 00d2 FFF7FEFF 		bl	ADC_Disable
 2840              	.LVL240:
 2841 00d6 0646     		mov	r6, r0
 2842              	.LVL241:
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
 2843              		.loc 1 1211 7 is_stmt 1 view .LVU883
 2844              		.loc 1 1211 12 is_stmt 0 view .LVU884
 2845 00d8 2046     		mov	r0, r4
 2846 00da FFF7FEFF 		bl	ADC_Disable
 2847              	.LVL242:
 2848              		.loc 1 1211 10 view .LVU885
 2849 00de 68B9     		cbnz	r0, .L224
 2850              		.loc 1 1211 51 discriminator 1 view .LVU886
 2851 00e0 66B9     		cbnz	r6, .L224
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           (tmphadcSlave_disable_status == HAL_OK))
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
 2852              		.loc 1 1214 24 view .LVU887
 2853 00e2 3546     		mov	r5, r6
 2854 00e4 0AE0     		b	.L224
 2855              	.LVL243:
 2856              	.L231:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 2857              		.loc 1 1199 7 is_stmt 1 view .LVU888
 2858 00e6 236E     		ldr	r3, [r4, #96]
 2859 00e8 43F04003 		orr	r3, r3, #64
 2860 00ec 2366     		str	r3, [r4, #96]
 2861 00ee E9E7     		b	.L222
 2862              	.L223:
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
 2863              		.loc 1 1220 7 view .LVU889
 2864              		.loc 1 1220 14 is_stmt 0 view .LVU890
 2865 00f0 2046     		mov	r0, r4
 2866              	.LVL244:
 2867              		.loc 1 1220 14 view .LVU891
 2868 00f2 FFF7FEFF 		bl	ADC_Disable
 2869              	.LVL245:
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
ARM GAS  /tmp/ccjQSYCi.s 			page 206


 2870              		.loc 1 1221 7 is_stmt 1 view .LVU892
 2871              		.loc 1 1221 14 is_stmt 0 view .LVU893
 2872 00f6 6846     		mov	r0, sp
 2873 00f8 FFF7FEFF 		bl	ADC_Disable
 2874              	.LVL246:
 2875              	.L224:
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 2876              		.loc 1 1225 5 is_stmt 1 view .LVU894
 2877 00fc 226E     		ldr	r2, [r4, #96]
 2878 00fe 074B     		ldr	r3, .L232+4
 2879 0100 1340     		ands	r3, r3, r2
 2880 0102 43F00103 		orr	r3, r3, #1
 2881 0106 2366     		str	r3, [r4, #96]
 2882              	.LVL247:
 2883              	.L209:
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2884              		.loc 1 1231 3 view .LVU895
 2885              		.loc 1 1231 3 view .LVU896
 2886 0108 0023     		movs	r3, #0
 2887 010a 84F85C30 		strb	r3, [r4, #92]
 2888              		.loc 1 1231 3 view .LVU897
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 2889              		.loc 1 1234 3 view .LVU898
 2890              	.LVL248:
 2891              	.L208:
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2892              		.loc 1 1235 1 is_stmt 0 view .LVU899
 2893 010e 2846     		mov	r0, r5
 2894 0110 1CB0     		add	sp, sp, #112
 2895              	.LCFI29:
 2896              		.cfi_remember_state
 2897              		.cfi_def_cfa_offset 16
 2898              		@ sp needed
 2899 0112 70BD     		pop	{r4, r5, r6, pc}
 2900              	.LVL249:
 2901              	.L225:
 2902              	.LCFI30:
 2903              		.cfi_restore_state
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2904              		.loc 1 1130 3 view .LVU900
 2905 0114 0225     		movs	r5, #2
 2906 0116 FAE7     		b	.L208
 2907              	.L233:
 2908              		.align	2
 2909              	.L232:
 2910 0118 00200240 		.word	1073881088
 2911 011c FEEEFFFF 		.word	-4354
ARM GAS  /tmp/ccjQSYCi.s 			page 207


 2912              		.cfi_endproc
 2913              	.LFE362:
 2915              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 2916              		.align	1
 2917              		.global	HAL_ADCEx_MultiModeGetValue
 2918              		.syntax unified
 2919              		.thumb
 2920              		.thumb_func
 2921              		.fpu fpv5-d16
 2923              	HAL_ADCEx_MultiModeGetValue:
 2924              	.LVL250:
 2925              	.LFB363:
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval The converted data values.
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef *hadc)
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2926              		.loc 1 1243 1 is_stmt 1 view -0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 0
 2929              		@ frame_needed = 0, uses_anonymous_args = 0
 2930              		@ link register save eliminated.
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
 2931              		.loc 1 1244 3 view .LVU902
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 2932              		.loc 1 1247 3 view .LVU903
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 2933              		.loc 1 1251 3 view .LVU904
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 2934              		.loc 1 1254 3 view .LVU905
 2935              		.loc 1 1254 19 is_stmt 0 view .LVU906
 2936 0000 0368     		ldr	r3, [r0]
 2937 0002 0549     		ldr	r1, .L237
 2938 0004 054A     		ldr	r2, .L237+4
 2939 0006 9342     		cmp	r3, r2
 2940 0008 18BF     		it	ne
 2941 000a 8B42     		cmpne	r3, r1
 2942 000c 02D1     		bne	.L236
 2943 000e 044B     		ldr	r3, .L237+8
 2944              	.L235:
 2945              	.LVL251:
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
 2946              		.loc 1 1257 3 is_stmt 1 discriminator 4 view .LVU907
 2947              		.loc 1 1257 23 is_stmt 0 discriminator 4 view .LVU908
 2948 0010 D868     		ldr	r0, [r3, #12]
ARM GAS  /tmp/ccjQSYCi.s 			page 208


 2949              	.LVL252:
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 2950              		.loc 1 1258 1 discriminator 4 view .LVU909
 2951 0012 7047     		bx	lr
 2952              	.LVL253:
 2953              	.L236:
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 2954              		.loc 1 1254 19 view .LVU910
 2955 0014 034B     		ldr	r3, .L237+12
 2956 0016 FBE7     		b	.L235
 2957              	.L238:
 2958              		.align	2
 2959              	.L237:
 2960 0018 00200240 		.word	1073881088
 2961 001c 00210240 		.word	1073881344
 2962 0020 00230240 		.word	1073881856
 2963 0024 00630258 		.word	1476551424
 2964              		.cfi_endproc
 2965              	.LFE363:
 2967              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 2968              		.align	1
 2969              		.global	HAL_ADCEx_InjectedGetValue
 2970              		.syntax unified
 2971              		.thumb
 2972              		.thumb_func
 2973              		.fpu fpv5-d16
 2975              	HAL_ADCEx_InjectedGetValue:
 2976              	.LVL254:
 2977              	.LFB364:
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            to flag JEOC.
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
ARM GAS  /tmp/ccjQSYCi.s 			page 209


1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 2978              		.loc 1 1289 1 is_stmt 1 view -0
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 0
 2981              		@ frame_needed = 0, uses_anonymous_args = 0
 2982              		@ link register save eliminated.
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 2983              		.loc 1 1290 3 view .LVU912
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 2984              		.loc 1 1293 3 view .LVU913
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 2985              		.loc 1 1294 3 view .LVU914
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Get ADC converted value */
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   switch (InjectedRank)
 2986              		.loc 1 1297 3 view .LVU915
 2987 0000 40F21523 		movw	r3, #533
 2988 0004 9942     		cmp	r1, r3
 2989 0006 0FD0     		beq	.L240
 2990 0008 40F21B33 		movw	r3, #795
 2991 000c 9942     		cmp	r1, r3
 2992 000e 07D0     		beq	.L241
 2993 0010 40F20F13 		movw	r3, #271
 2994 0014 9942     		cmp	r1, r3
 2995 0016 0BD0     		beq	.L246
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     default:
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 2996              		.loc 1 1310 7 view .LVU916
 2997              		.loc 1 1310 21 is_stmt 0 view .LVU917
 2998 0018 0368     		ldr	r3, [r0]
 2999              		.loc 1 1310 15 view .LVU918
 3000 001a D3F88000 		ldr	r0, [r3, #128]
 3001              	.LVL255:
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3002              		.loc 1 1311 7 is_stmt 1 view .LVU919
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return ADC converted value */
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_jdr;
 3003              		.loc 1 1315 3 view .LVU920
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3004              		.loc 1 1316 1 is_stmt 0 view .LVU921
ARM GAS  /tmp/ccjQSYCi.s 			page 210


 3005 001e 7047     		bx	lr
 3006              	.LVL256:
 3007              	.L241:
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3008              		.loc 1 1300 7 is_stmt 1 view .LVU922
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3009              		.loc 1 1300 21 is_stmt 0 view .LVU923
 3010 0020 0368     		ldr	r3, [r0]
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3011              		.loc 1 1300 15 view .LVU924
 3012 0022 D3F88C00 		ldr	r0, [r3, #140]
 3013              	.LVL257:
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 3014              		.loc 1 1301 7 is_stmt 1 view .LVU925
 3015 0026 7047     		bx	lr
 3016              	.LVL258:
 3017              	.L240:
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3018              		.loc 1 1303 7 view .LVU926
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3019              		.loc 1 1303 21 is_stmt 0 view .LVU927
 3020 0028 0368     		ldr	r3, [r0]
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3021              		.loc 1 1303 15 view .LVU928
 3022 002a D3F88800 		ldr	r0, [r3, #136]
 3023              	.LVL259:
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 3024              		.loc 1 1304 7 is_stmt 1 view .LVU929
 3025 002e 7047     		bx	lr
 3026              	.LVL260:
 3027              	.L246:
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3028              		.loc 1 1306 7 view .LVU930
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3029              		.loc 1 1306 21 is_stmt 0 view .LVU931
 3030 0030 0368     		ldr	r3, [r0]
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       break;
 3031              		.loc 1 1306 15 view .LVU932
 3032 0032 D3F88400 		ldr	r0, [r3, #132]
 3033              	.LVL261:
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 3034              		.loc 1 1307 7 is_stmt 1 view .LVU933
 3035 0036 7047     		bx	lr
 3036              		.cfi_endproc
 3037              	.LFE364:
 3039              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 3040              		.align	1
 3041              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 3042              		.syntax unified
 3043              		.thumb
 3044              		.thumb_func
 3045              		.fpu fpv5-d16
 3047              	HAL_ADCEx_InjectedConvCpltCallback:
 3048              	.LVL262:
 3049              	.LFB365:
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 211


1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3050              		.loc 1 1324 1 view -0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 0
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
 3054              		@ link register save eliminated.
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3055              		.loc 1 1326 3 view .LVU935
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3056              		.loc 1 1331 1 is_stmt 0 view .LVU936
 3057 0000 7047     		bx	lr
 3058              		.cfi_endproc
 3059              	.LFE365:
 3061              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 3062              		.align	1
 3063              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 3064              		.syntax unified
 3065              		.thumb
 3066              		.thumb_func
 3067              		.fpu fpv5-d16
 3069              	HAL_ADCEx_InjectedQueueOverflowCallback:
 3070              	.LVL263:
 3071              	.LFB366:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             contexts).
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3072              		.loc 1 1343 1 is_stmt 1 view -0
 3073              		.cfi_startproc
 3074              		@ args = 0, pretend = 0, frame = 0
 3075              		@ frame_needed = 0, uses_anonymous_args = 0
 3076              		@ link register save eliminated.
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3077              		.loc 1 1345 3 view .LVU938
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccjQSYCi.s 			page 212


1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3078              		.loc 1 1350 1 is_stmt 0 view .LVU939
 3079 0000 7047     		bx	lr
 3080              		.cfi_endproc
 3081              	.LFE366:
 3083              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 3084              		.align	1
 3085              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 3086              		.syntax unified
 3087              		.thumb
 3088              		.thumb_func
 3089              		.fpu fpv5-d16
 3091              	HAL_ADCEx_LevelOutOfWindow2Callback:
 3092              	.LVL264:
 3093              	.LFB367:
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3094              		.loc 1 1358 1 is_stmt 1 view -0
 3095              		.cfi_startproc
 3096              		@ args = 0, pretend = 0, frame = 0
 3097              		@ frame_needed = 0, uses_anonymous_args = 0
 3098              		@ link register save eliminated.
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3099              		.loc 1 1360 3 view .LVU941
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3100              		.loc 1 1365 1 is_stmt 0 view .LVU942
 3101 0000 7047     		bx	lr
 3102              		.cfi_endproc
 3103              	.LFE367:
 3105              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 3106              		.align	1
 3107              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 3108              		.syntax unified
 3109              		.thumb
 3110              		.thumb_func
 3111              		.fpu fpv5-d16
 3113              	HAL_ADCEx_LevelOutOfWindow3Callback:
 3114              	.LVL265:
 3115              	.LFB368:
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/ccjQSYCi.s 			page 213


1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3116              		.loc 1 1373 1 is_stmt 1 view -0
 3117              		.cfi_startproc
 3118              		@ args = 0, pretend = 0, frame = 0
 3119              		@ frame_needed = 0, uses_anonymous_args = 0
 3120              		@ link register save eliminated.
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3121              		.loc 1 1375 3 view .LVU944
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3122              		.loc 1 1380 1 is_stmt 0 view .LVU945
 3123 0000 7047     		bx	lr
 3124              		.cfi_endproc
 3125              	.LFE368:
 3127              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 3128              		.align	1
 3129              		.weak	HAL_ADCEx_EndOfSamplingCallback
 3130              		.syntax unified
 3131              		.thumb
 3132              		.thumb_func
 3133              		.fpu fpv5-d16
 3135              	HAL_ADCEx_EndOfSamplingCallback:
 3136              	.LVL266:
 3137              	.LFB369:
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval None
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3138              		.loc 1 1389 1 is_stmt 1 view -0
 3139              		.cfi_startproc
 3140              		@ args = 0, pretend = 0, frame = 0
 3141              		@ frame_needed = 0, uses_anonymous_args = 0
 3142              		@ link register save eliminated.
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   UNUSED(hadc);
 3143              		.loc 1 1391 3 view .LVU947
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3144              		.loc 1 1396 1 is_stmt 0 view .LVU948
 3145 0000 7047     		bx	lr
 3146              		.cfi_endproc
 3147              	.LFE369:
 3149              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 3150              		.align	1
 3151              		.global	HAL_ADCEx_RegularStop
ARM GAS  /tmp/ccjQSYCi.s 			page 214


 3152              		.syntax unified
 3153              		.thumb
 3154              		.thumb_func
 3155              		.fpu fpv5-d16
 3157              	HAL_ADCEx_RegularStop:
 3158              	.LVL267:
 3159              	.LFB370:
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3160              		.loc 1 1406 1 is_stmt 1 view -0
 3161              		.cfi_startproc
 3162              		@ args = 0, pretend = 0, frame = 0
 3163              		@ frame_needed = 0, uses_anonymous_args = 0
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3164              		.loc 1 1407 3 view .LVU950
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3165              		.loc 1 1410 3 view .LVU951
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3166              		.loc 1 1413 3 view .LVU952
 3167              		.loc 1 1413 3 view .LVU953
 3168 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3169 0004 012B     		cmp	r3, #1
 3170 0006 24D0     		beq	.L256
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3171              		.loc 1 1406 1 is_stmt 0 discriminator 2 view .LVU954
 3172 0008 10B5     		push	{r4, lr}
 3173              	.LCFI31:
 3174              		.cfi_def_cfa_offset 8
 3175              		.cfi_offset 4, -8
 3176              		.cfi_offset 14, -4
 3177 000a 0446     		mov	r4, r0
 3178              		.loc 1 1413 3 is_stmt 1 discriminator 2 view .LVU955
 3179 000c 0121     		movs	r1, #1
 3180 000e 80F85C10 		strb	r1, [r0, #92]
 3181              		.loc 1 1413 3 discriminator 2 view .LVU956
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3182              		.loc 1 1416 3 discriminator 2 view .LVU957
 3183              		.loc 1 1416 20 is_stmt 0 discriminator 2 view .LVU958
 3184 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3185              	.LVL268:
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
ARM GAS  /tmp/ccjQSYCi.s 			page 215


1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3186              		.loc 1 1420 3 is_stmt 1 discriminator 2 view .LVU959
 3187              		.loc 1 1420 6 is_stmt 0 discriminator 2 view .LVU960
 3188 0016 60B9     		cbnz	r0, .L254
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3189              		.loc 1 1423 5 is_stmt 1 view .LVU961
 3190 0018 236E     		ldr	r3, [r4, #96]
 3191 001a 23F48073 		bic	r3, r3, #256
 3192 001e 2366     		str	r3, [r4, #96]
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3193              		.loc 1 1425 5 view .LVU962
 3194              		.loc 1 1425 9 is_stmt 0 view .LVU963
 3195 0020 2368     		ldr	r3, [r4]
 3196              	.LVL269:
 3197              	.LBB517:
 3198              	.LBI517:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3199              		.loc 2 7247 26 is_stmt 1 view .LVU964
 3200              	.LBB518:
 3201              		.loc 2 7249 3 view .LVU965
 3202              		.loc 2 7249 12 is_stmt 0 view .LVU966
 3203 0022 9B68     		ldr	r3, [r3, #8]
 3204              	.LVL270:
 3205              		.loc 2 7249 76 view .LVU967
 3206 0024 13F0080F 		tst	r3, #8
 3207 0028 07D0     		beq	.L255
 3208              	.LVL271:
 3209              		.loc 2 7249 76 view .LVU968
 3210              	.LBE518:
 3211              	.LBE517:
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3212              		.loc 1 1443 7 is_stmt 1 view .LVU969
 3213 002a 236E     		ldr	r3, [r4, #96]
 3214 002c 43F48053 		orr	r3, r3, #4096
 3215 0030 2366     		str	r3, [r4, #96]
 3216              	.L254:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccjQSYCi.s 			page 216


1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3217              		.loc 1 1448 3 view .LVU970
 3218              		.loc 1 1448 3 view .LVU971
 3219 0032 0023     		movs	r3, #0
 3220 0034 84F85C30 		strb	r3, [r4, #92]
 3221              		.loc 1 1448 3 view .LVU972
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3222              		.loc 1 1451 3 view .LVU973
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3223              		.loc 1 1452 1 is_stmt 0 view .LVU974
 3224 0038 10BD     		pop	{r4, pc}
 3225              	.LVL272:
 3226              	.L255:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3227              		.loc 1 1428 7 is_stmt 1 view .LVU975
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3228              		.loc 1 1428 24 is_stmt 0 view .LVU976
 3229 003a 2046     		mov	r0, r4
 3230              	.LVL273:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3231              		.loc 1 1428 24 view .LVU977
 3232 003c FFF7FEFF 		bl	ADC_Disable
 3233              	.LVL274:
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3234              		.loc 1 1431 7 is_stmt 1 view .LVU978
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3235              		.loc 1 1431 10 is_stmt 0 view .LVU979
 3236 0040 0028     		cmp	r0, #0
 3237 0042 F6D1     		bne	.L254
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3238              		.loc 1 1434 9 is_stmt 1 view .LVU980
 3239 0044 226E     		ldr	r2, [r4, #96]
 3240 0046 044B     		ldr	r3, .L261
 3241 0048 1340     		ands	r3, r3, r2
 3242 004a 43F00103 		orr	r3, r3, #1
 3243 004e 2366     		str	r3, [r4, #96]
 3244 0050 EFE7     		b	.L254
 3245              	.LVL275:
 3246              	.L256:
 3247              	.LCFI32:
 3248              		.cfi_def_cfa_offset 0
 3249              		.cfi_restore 4
 3250              		.cfi_restore 14
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3251              		.loc 1 1413 3 is_stmt 0 view .LVU981
 3252 0052 0220     		movs	r0, #2
 3253              	.LVL276:
 3254              		.loc 1 1452 1 view .LVU982
 3255 0054 7047     		bx	lr
 3256              	.L262:
 3257 0056 00BF     		.align	2
 3258              	.L261:
ARM GAS  /tmp/ccjQSYCi.s 			page 217


 3259 0058 FEEFFFFF 		.word	-4098
 3260              		.cfi_endproc
 3261              	.LFE370:
 3263              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 3264              		.align	1
 3265              		.global	HAL_ADCEx_RegularStop_IT
 3266              		.syntax unified
 3267              		.thumb
 3268              		.thumb_func
 3269              		.fpu fpv5-d16
 3271              	HAL_ADCEx_RegularStop_IT:
 3272              	.LVL277:
 3273              	.LFB371:
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3274              		.loc 1 1464 1 is_stmt 1 view -0
 3275              		.cfi_startproc
 3276              		@ args = 0, pretend = 0, frame = 0
 3277              		@ frame_needed = 0, uses_anonymous_args = 0
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3278              		.loc 1 1465 3 view .LVU984
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3279              		.loc 1 1468 3 view .LVU985
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3280              		.loc 1 1471 3 view .LVU986
 3281              		.loc 1 1471 3 view .LVU987
 3282 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3283 0004 012B     		cmp	r3, #1
 3284 0006 29D0     		beq	.L267
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3285              		.loc 1 1464 1 is_stmt 0 discriminator 2 view .LVU988
 3286 0008 10B5     		push	{r4, lr}
 3287              	.LCFI33:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 3291 000a 0446     		mov	r4, r0
 3292              		.loc 1 1471 3 is_stmt 1 discriminator 2 view .LVU989
 3293 000c 0121     		movs	r1, #1
 3294 000e 80F85C10 		strb	r1, [r0, #92]
 3295              		.loc 1 1471 3 discriminator 2 view .LVU990
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
ARM GAS  /tmp/ccjQSYCi.s 			page 218


1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3296              		.loc 1 1474 3 discriminator 2 view .LVU991
 3297              		.loc 1 1474 20 is_stmt 0 discriminator 2 view .LVU992
 3298 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3299              	.LVL278:
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3300              		.loc 1 1478 3 is_stmt 1 discriminator 2 view .LVU993
 3301              		.loc 1 1478 6 is_stmt 0 discriminator 2 view .LVU994
 3302 0016 88B9     		cbnz	r0, .L265
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3303              		.loc 1 1481 5 is_stmt 1 view .LVU995
 3304 0018 236E     		ldr	r3, [r4, #96]
 3305 001a 23F48073 		bic	r3, r3, #256
 3306 001e 2366     		str	r3, [r4, #96]
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 3307              		.loc 1 1484 5 view .LVU996
 3308 0020 2268     		ldr	r2, [r4]
 3309 0022 5368     		ldr	r3, [r2, #4]
 3310 0024 23F01C03 		bic	r3, r3, #28
 3311 0028 5360     		str	r3, [r2, #4]
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3312              		.loc 1 1487 5 view .LVU997
 3313              		.loc 1 1487 9 is_stmt 0 view .LVU998
 3314 002a 2368     		ldr	r3, [r4]
 3315              	.LVL279:
 3316              	.LBB519:
 3317              	.LBI519:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3318              		.loc 2 7247 26 is_stmt 1 view .LVU999
 3319              	.LBB520:
 3320              		.loc 2 7249 3 view .LVU1000
 3321              		.loc 2 7249 12 is_stmt 0 view .LVU1001
 3322 002c 9B68     		ldr	r3, [r3, #8]
 3323              	.LVL280:
 3324              		.loc 2 7249 76 view .LVU1002
 3325 002e 13F0080F 		tst	r3, #8
 3326 0032 07D0     		beq	.L266
 3327              	.LVL281:
 3328              		.loc 2 7249 76 view .LVU1003
 3329              	.LBE520:
 3330              	.LBE519:
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/ccjQSYCi.s 			page 219


1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3331              		.loc 1 1501 7 is_stmt 1 view .LVU1004
 3332 0034 236E     		ldr	r3, [r4, #96]
 3333 0036 43F48053 		orr	r3, r3, #4096
 3334 003a 2366     		str	r3, [r4, #96]
 3335              	.L265:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3336              		.loc 1 1506 3 view .LVU1005
 3337              		.loc 1 1506 3 view .LVU1006
 3338 003c 0023     		movs	r3, #0
 3339 003e 84F85C30 		strb	r3, [r4, #92]
 3340              		.loc 1 1506 3 view .LVU1007
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3341              		.loc 1 1509 3 view .LVU1008
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3342              		.loc 1 1510 1 is_stmt 0 view .LVU1009
 3343 0042 10BD     		pop	{r4, pc}
 3344              	.LVL282:
 3345              	.L266:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3346              		.loc 1 1489 7 is_stmt 1 view .LVU1010
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3347              		.loc 1 1489 24 is_stmt 0 view .LVU1011
 3348 0044 2046     		mov	r0, r4
 3349              	.LVL283:
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* if no issue reported */
 3350              		.loc 1 1489 24 view .LVU1012
 3351 0046 FFF7FEFF 		bl	ADC_Disable
 3352              	.LVL284:
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3353              		.loc 1 1491 7 is_stmt 1 view .LVU1013
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3354              		.loc 1 1491 10 is_stmt 0 view .LVU1014
 3355 004a 0028     		cmp	r0, #0
 3356 004c F6D1     		bne	.L265
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3357              		.loc 1 1494 9 is_stmt 1 view .LVU1015
 3358 004e 226E     		ldr	r2, [r4, #96]
 3359 0050 034B     		ldr	r3, .L272
 3360 0052 1340     		ands	r3, r3, r2
 3361 0054 43F00103 		orr	r3, r3, #1
 3362 0058 2366     		str	r3, [r4, #96]
 3363 005a EFE7     		b	.L265
 3364              	.LVL285:
 3365              	.L267:
ARM GAS  /tmp/ccjQSYCi.s 			page 220


 3366              	.LCFI34:
 3367              		.cfi_def_cfa_offset 0
 3368              		.cfi_restore 4
 3369              		.cfi_restore 14
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3370              		.loc 1 1471 3 is_stmt 0 view .LVU1016
 3371 005c 0220     		movs	r0, #2
 3372              	.LVL286:
 3373              		.loc 1 1510 1 view .LVU1017
 3374 005e 7047     		bx	lr
 3375              	.L273:
 3376              		.align	2
 3377              	.L272:
 3378 0060 FEEFFFFF 		.word	-4098
 3379              		.cfi_endproc
 3380              	.LFE371:
 3382              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 3383              		.align	1
 3384              		.global	HAL_ADCEx_RegularStop_DMA
 3385              		.syntax unified
 3386              		.thumb
 3387              		.thumb_func
 3388              		.fpu fpv5-d16
 3390              	HAL_ADCEx_RegularStop_DMA:
 3391              	.LVL287:
 3392              	.LFB372:
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         on injected group.
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status.
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3393              		.loc 1 1524 1 is_stmt 1 view -0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              		.loc 1 1524 1 is_stmt 0 view .LVU1019
 3398 0000 38B5     		push	{r3, r4, r5, lr}
 3399              	.LCFI35:
 3400              		.cfi_def_cfa_offset 16
 3401              		.cfi_offset 3, -16
 3402              		.cfi_offset 4, -12
 3403              		.cfi_offset 5, -8
 3404              		.cfi_offset 14, -4
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3405              		.loc 1 1525 3 is_stmt 1 view .LVU1020
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /tmp/ccjQSYCi.s 			page 221


 3406              		.loc 1 1528 3 view .LVU1021
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3407              		.loc 1 1531 3 view .LVU1022
 3408              		.loc 1 1531 3 view .LVU1023
 3409 0002 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3410 0006 012B     		cmp	r3, #1
 3411 0008 3FD0     		beq	.L281
 3412 000a 0446     		mov	r4, r0
 3413              		.loc 1 1531 3 discriminator 2 view .LVU1024
 3414 000c 0121     		movs	r1, #1
 3415 000e 80F85C10 		strb	r1, [r0, #92]
 3416              		.loc 1 1531 3 discriminator 2 view .LVU1025
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3417              		.loc 1 1534 3 discriminator 2 view .LVU1026
 3418              		.loc 1 1534 20 is_stmt 0 discriminator 2 view .LVU1027
 3419 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3420              	.LVL288:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3421              		.loc 1 1538 3 is_stmt 1 discriminator 2 view .LVU1028
 3422              		.loc 1 1538 6 is_stmt 0 discriminator 2 view .LVU1029
 3423 0016 0546     		mov	r5, r0
 3424 0018 20B1     		cbz	r0, .L283
 3425              	.LVL289:
 3426              	.L276:
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 | ADC_CFGR_DMNGT_1, 0UL);
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccjQSYCi.s 			page 222


1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC state */
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3427              		.loc 1 1590 3 is_stmt 1 view .LVU1030
 3428              		.loc 1 1590 3 view .LVU1031
 3429 001a 0023     		movs	r3, #0
 3430 001c 84F85C30 		strb	r3, [r4, #92]
 3431              		.loc 1 1590 3 view .LVU1032
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3432              		.loc 1 1593 3 view .LVU1033
 3433              	.LVL290:
 3434              	.L275:
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3435              		.loc 1 1594 1 is_stmt 0 view .LVU1034
 3436 0020 2846     		mov	r0, r5
 3437 0022 38BD     		pop	{r3, r4, r5, pc}
 3438              	.LVL291:
 3439              	.L283:
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3440              		.loc 1 1541 5 is_stmt 1 view .LVU1035
 3441 0024 236E     		ldr	r3, [r4, #96]
 3442 0026 23F48073 		bic	r3, r3, #256
 3443 002a 2366     		str	r3, [r4, #96]
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3444              		.loc 1 1544 5 view .LVU1036
 3445 002c 2268     		ldr	r2, [r4]
 3446 002e D368     		ldr	r3, [r2, #12]
 3447 0030 23F00303 		bic	r3, r3, #3
 3448 0034 D360     		str	r3, [r2, #12]
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3449              		.loc 1 1548 5 view .LVU1037
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 223


 3450              		.loc 1 1548 22 is_stmt 0 view .LVU1038
 3451 0036 A06D     		ldr	r0, [r4, #88]
 3452              	.LVL292:
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3453              		.loc 1 1548 22 view .LVU1039
 3454 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 3455              	.LVL293:
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3456              		.loc 1 1551 5 is_stmt 1 view .LVU1040
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3457              		.loc 1 1551 8 is_stmt 0 view .LVU1041
 3458 003c 0546     		mov	r5, r0
 3459 003e 18B1     		cbz	r0, .L277
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3460              		.loc 1 1554 7 is_stmt 1 view .LVU1042
 3461 0040 236E     		ldr	r3, [r4, #96]
 3462 0042 43F04003 		orr	r3, r3, #64
 3463 0046 2366     		str	r3, [r4, #96]
 3464              	.L277:
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3465              		.loc 1 1558 5 view .LVU1043
 3466 0048 2268     		ldr	r2, [r4]
 3467 004a 5368     		ldr	r3, [r2, #4]
 3468 004c 23F01003 		bic	r3, r3, #16
 3469 0050 5360     		str	r3, [r2, #4]
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3470              		.loc 1 1563 5 view .LVU1044
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 3471              		.loc 1 1563 9 is_stmt 0 view .LVU1045
 3472 0052 2368     		ldr	r3, [r4]
 3473              	.LVL294:
 3474              	.LBB521:
 3475              	.LBI521:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3476              		.loc 2 7247 26 is_stmt 1 view .LVU1046
 3477              	.LBB522:
 3478              		.loc 2 7249 3 view .LVU1047
 3479              		.loc 2 7249 12 is_stmt 0 view .LVU1048
 3480 0054 9B68     		ldr	r3, [r3, #8]
 3481              	.LVL295:
 3482              		.loc 2 7249 76 view .LVU1049
 3483 0056 13F0080F 		tst	r3, #8
 3484 005a 04D0     		beq	.L278
 3485              	.LVL296:
 3486              		.loc 2 7249 76 view .LVU1050
 3487              	.LBE522:
 3488              	.LBE521:
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3489              		.loc 1 1585 7 is_stmt 1 view .LVU1051
 3490 005c 236E     		ldr	r3, [r4, #96]
 3491 005e 43F48053 		orr	r3, r3, #4096
 3492 0062 2366     		str	r3, [r4, #96]
 3493 0064 D9E7     		b	.L276
 3494              	.LVL297:
 3495              	.L278:
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3496              		.loc 1 1565 7 view .LVU1052
ARM GAS  /tmp/ccjQSYCi.s 			page 224


1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3497              		.loc 1 1565 10 is_stmt 0 view .LVU1053
 3498 0066 65B9     		cbnz	r5, .L279
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3499              		.loc 1 1567 9 is_stmt 1 view .LVU1054
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3500              		.loc 1 1567 26 is_stmt 0 view .LVU1055
 3501 0068 2046     		mov	r0, r4
 3502              	.LVL298:
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3503              		.loc 1 1567 26 view .LVU1056
 3504 006a FFF7FEFF 		bl	ADC_Disable
 3505              	.LVL299:
 3506 006e 0546     		mov	r5, r0
 3507              	.LVL300:
 3508              	.L280:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3509              		.loc 1 1575 7 is_stmt 1 view .LVU1057
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3510              		.loc 1 1575 10 is_stmt 0 view .LVU1058
 3511 0070 002D     		cmp	r5, #0
 3512 0072 D2D1     		bne	.L276
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 3513              		.loc 1 1578 9 is_stmt 1 view .LVU1059
 3514 0074 226E     		ldr	r2, [r4, #96]
 3515 0076 064B     		ldr	r3, .L284
 3516 0078 1340     		ands	r3, r3, r2
 3517 007a 43F00103 		orr	r3, r3, #1
 3518 007e 2366     		str	r3, [r4, #96]
 3519 0080 CBE7     		b	.L276
 3520              	.LVL301:
 3521              	.L279:
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3522              		.loc 1 1571 9 view .LVU1060
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3523              		.loc 1 1571 15 is_stmt 0 view .LVU1061
 3524 0082 2046     		mov	r0, r4
 3525              	.LVL302:
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3526              		.loc 1 1571 15 view .LVU1062
 3527 0084 FFF7FEFF 		bl	ADC_Disable
 3528              	.LVL303:
 3529 0088 F2E7     		b	.L280
 3530              	.LVL304:
 3531              	.L281:
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3532              		.loc 1 1531 3 view .LVU1063
 3533 008a 0225     		movs	r5, #2
 3534 008c C8E7     		b	.L275
 3535              	.L285:
 3536 008e 00BF     		.align	2
 3537              	.L284:
 3538 0090 FEEFFFFF 		.word	-4098
 3539              		.cfi_endproc
 3540              	.LFE372:
 3542              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 3543              		.align	1
ARM GAS  /tmp/ccjQSYCi.s 			page 225


 3544              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3548              		.fpu fpv5-d16
 3550              	HAL_ADCEx_RegularMultiModeStop_DMA:
 3551              	.LVL305:
 3552              	.LFB373:
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3553              		.loc 1 1610 1 is_stmt 1 view -0
 3554              		.cfi_startproc
 3555              		@ args = 0, pretend = 0, frame = 112
 3556              		@ frame_needed = 0, uses_anonymous_args = 0
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3557              		.loc 1 1611 3 view .LVU1065
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tickstart;
 3558              		.loc 1 1612 3 view .LVU1066
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 3559              		.loc 1 1613 3 view .LVU1067
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 3560              		.loc 1 1614 3 view .LVU1068
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 3561              		.loc 1 1617 3 view .LVU1069
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3562              		.loc 1 1620 3 view .LVU1070
 3563              		.loc 1 1620 3 view .LVU1071
 3564 0000 90F85C30 		ldrb	r3, [r0, #92]	@ zero_extendqisi2
 3565 0004 012B     		cmp	r3, #1
 3566 0006 00F08480 		beq	.L303
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3567              		.loc 1 1610 1 is_stmt 0 discriminator 2 view .LVU1072
 3568 000a 30B5     		push	{r4, r5, lr}
 3569              	.LCFI36:
 3570              		.cfi_def_cfa_offset 12
 3571              		.cfi_offset 4, -12
 3572              		.cfi_offset 5, -8
 3573              		.cfi_offset 14, -4
 3574 000c 9DB0     		sub	sp, sp, #116
ARM GAS  /tmp/ccjQSYCi.s 			page 226


 3575              	.LCFI37:
 3576              		.cfi_def_cfa_offset 128
 3577 000e 0446     		mov	r4, r0
 3578              		.loc 1 1620 3 is_stmt 1 discriminator 2 view .LVU1073
 3579 0010 0121     		movs	r1, #1
 3580 0012 80F85C10 		strb	r1, [r0, #92]
 3581              		.loc 1 1620 3 discriminator 2 view .LVU1074
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3582              		.loc 1 1624 3 discriminator 2 view .LVU1075
 3583              		.loc 1 1624 20 is_stmt 0 discriminator 2 view .LVU1076
 3584 0016 FFF7FEFF 		bl	ADC_ConversionStop
 3585              	.LVL306:
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 3586              		.loc 1 1627 3 is_stmt 1 discriminator 2 view .LVU1077
 3587              		.loc 1 1627 6 is_stmt 0 discriminator 2 view .LVU1078
 3588 001a 0028     		cmp	r0, #0
 3589 001c 74D1     		bne	.L288
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 3590              		.loc 1 1630 5 is_stmt 1 view .LVU1079
 3591 001e 236E     		ldr	r3, [r4, #96]
 3592 0020 23F48073 		bic	r3, r3, #256
 3593 0024 2366     		str	r3, [r4, #96]
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.State = HAL_ADC_STATE_RESET;
 3594              		.loc 1 1632 5 view .LVU1080
 3595              		.loc 1 1632 24 is_stmt 0 view .LVU1081
 3596 0026 0023     		movs	r3, #0
 3597 0028 1893     		str	r3, [sp, #96]
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 3598              		.loc 1 1633 5 is_stmt 1 view .LVU1082
 3599              		.loc 1 1633 28 is_stmt 0 view .LVU1083
 3600 002a 1993     		str	r3, [sp, #100]
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 3601              		.loc 1 1636 5 is_stmt 1 view .LVU1084
 3602 002c 2268     		ldr	r2, [r4]
 3603 002e 3A4B     		ldr	r3, .L311
 3604 0030 9A42     		cmp	r2, r3
 3605 0032 0DD0     		beq	.L308
 3606              		.loc 1 1636 5 is_stmt 0 discriminator 2 view .LVU1085
 3607 0034 0023     		movs	r3, #0
 3608 0036 0093     		str	r3, [sp]
 3609              	.L290:
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 3610              		.loc 1 1638 5 is_stmt 1 view .LVU1086
 3611              		.loc 1 1638 21 is_stmt 0 view .LVU1087
 3612 0038 009B     		ldr	r3, [sp]
 3613              		.loc 1 1638 8 view .LVU1088
ARM GAS  /tmp/ccjQSYCi.s 			page 227


 3614 003a 6BB1     		cbz	r3, .L309
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Process unlocked */
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       return HAL_ERROR;
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 3615              		.loc 1 1653 5 is_stmt 1 view .LVU1089
 3616              		.loc 1 1653 17 is_stmt 0 view .LVU1090
 3617 003c FFF7FEFF 		bl	HAL_GetTick
 3618              	.LVL307:
 3619              		.loc 1 1653 17 view .LVU1091
 3620 0040 0546     		mov	r5, r0
 3621              	.LVL308:
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 3622              		.loc 1 1655 5 is_stmt 1 view .LVU1092
 3623              		.loc 1 1655 40 is_stmt 0 view .LVU1093
 3624 0042 009B     		ldr	r3, [sp]
 3625              	.LVL309:
 3626              	.LBB523:
 3627              	.LBI523:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3628              		.loc 2 7052 26 is_stmt 1 view .LVU1094
 3629              	.LBB524:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3630              		.loc 2 7054 3 view .LVU1095
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3631              		.loc 2 7054 12 is_stmt 0 view .LVU1096
 3632 0044 9B68     		ldr	r3, [r3, #8]
 3633              	.LVL310:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3634              		.loc 2 7054 74 view .LVU1097
 3635 0046 13F00403 		ands	r3, r3, #4
 3636 004a 13D0     		beq	.L299
 3637 004c 0123     		movs	r3, #1
 3638 004e 11E0     		b	.L299
 3639              	.LVL311:
 3640              	.L308:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3641              		.loc 2 7054 74 view .LVU1098
 3642              	.LBE524:
 3643              	.LBE523:
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3644              		.loc 1 1636 5 discriminator 1 view .LVU1099
 3645 0050 03F58073 		add	r3, r3, #256
 3646 0054 0093     		str	r3, [sp]
 3647 0056 EFE7     		b	.L290
ARM GAS  /tmp/ccjQSYCi.s 			page 228


 3648              	.L309:
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3649              		.loc 1 1641 7 is_stmt 1 view .LVU1100
 3650 0058 236E     		ldr	r3, [r4, #96]
 3651 005a 43F02003 		orr	r3, r3, #32
 3652 005e 2366     		str	r3, [r4, #96]
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3653              		.loc 1 1644 7 view .LVU1101
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3654              		.loc 1 1644 7 view .LVU1102
 3655 0060 0023     		movs	r3, #0
 3656 0062 84F85C30 		strb	r3, [r4, #92]
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3657              		.loc 1 1644 7 view .LVU1103
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3658              		.loc 1 1646 7 view .LVU1104
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3659              		.loc 1 1646 14 is_stmt 0 view .LVU1105
 3660 0066 0120     		movs	r0, #1
 3661              	.LVL312:
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 3662              		.loc 1 1646 14 view .LVU1106
 3663 0068 51E0     		b	.L287
 3664              	.LVL313:
 3665              	.L294:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* Process unlocked */
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           return HAL_ERROR;
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 3666              		.loc 1 1679 7 is_stmt 1 view .LVU1107
 3667              		.loc 1 1679 42 is_stmt 0 view .LVU1108
 3668 006a 009B     		ldr	r3, [sp]
 3669              	.LVL314:
 3670              	.LBB525:
 3671              	.LBI525:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3672              		.loc 2 7052 26 is_stmt 1 view .LVU1109
ARM GAS  /tmp/ccjQSYCi.s 			page 229


 3673              	.LBB526:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3674              		.loc 2 7054 3 view .LVU1110
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3675              		.loc 2 7054 12 is_stmt 0 view .LVU1111
 3676 006c 9B68     		ldr	r3, [r3, #8]
 3677              	.LVL315:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3678              		.loc 2 7054 74 view .LVU1112
 3679 006e 13F00403 		ands	r3, r3, #4
 3680 0072 21D1     		bne	.L297
 3681              	.LVL316:
 3682              	.L299:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3683              		.loc 2 7054 74 view .LVU1113
 3684              	.LBE526:
 3685              	.LBE525:
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 3686              		.loc 1 1656 11 is_stmt 1 view .LVU1114
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
 3687              		.loc 1 1656 13 is_stmt 0 view .LVU1115
 3688 0074 2268     		ldr	r2, [r4]
 3689              	.LVL317:
 3690              	.LBB528:
 3691              	.LBI528:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3692              		.loc 2 7052 26 is_stmt 1 view .LVU1116
 3693              	.LBB529:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3694              		.loc 2 7054 3 view .LVU1117
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3695              		.loc 2 7054 12 is_stmt 0 view .LVU1118
 3696 0076 9268     		ldr	r2, [r2, #8]
 3697              	.LVL318:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3698              		.loc 2 7054 74 view .LVU1119
 3699 0078 12F0040F 		tst	r2, #4
 3700 007c 01D1     		bne	.L300
 3701              	.LVL319:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3702              		.loc 2 7054 74 view .LVU1120
 3703              	.LBE529:
 3704              	.LBE528:
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 3705              		.loc 1 1657 12 view .LVU1121
 3706 007e 012B     		cmp	r3, #1
 3707 0080 1CD1     		bne	.L310
 3708              	.L300:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3709              		.loc 1 1660 7 is_stmt 1 view .LVU1122
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3710              		.loc 1 1660 12 is_stmt 0 view .LVU1123
 3711 0082 FFF7FEFF 		bl	HAL_GetTick
 3712              	.LVL320:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3713              		.loc 1 1660 26 view .LVU1124
 3714 0086 431B     		subs	r3, r0, r5
ARM GAS  /tmp/ccjQSYCi.s 			page 230


1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 3715              		.loc 1 1660 10 view .LVU1125
 3716 0088 052B     		cmp	r3, #5
 3717 008a EED9     		bls	.L294
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3718              		.loc 1 1663 9 is_stmt 1 view .LVU1126
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3719              		.loc 1 1663 44 is_stmt 0 view .LVU1127
 3720 008c 009B     		ldr	r3, [sp]
 3721              	.LVL321:
 3722              	.LBB530:
 3723              	.LBI530:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3724              		.loc 2 7052 26 is_stmt 1 view .LVU1128
 3725              	.LBB531:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3726              		.loc 2 7054 3 view .LVU1129
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3727              		.loc 2 7054 12 is_stmt 0 view .LVU1130
 3728 008e 9B68     		ldr	r3, [r3, #8]
 3729              	.LVL322:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3730              		.loc 2 7054 74 view .LVU1131
 3731 0090 13F00403 		ands	r3, r3, #4
 3732 0094 00D0     		beq	.L295
 3733 0096 0123     		movs	r3, #1
 3734              	.L295:
 3735              	.LVL323:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3736              		.loc 2 7054 74 view .LVU1132
 3737              	.LBE531:
 3738              	.LBE530:
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 3739              		.loc 1 1665 9 is_stmt 1 view .LVU1133
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
 3740              		.loc 1 1665 13 is_stmt 0 view .LVU1134
 3741 0098 2268     		ldr	r2, [r4]
 3742              	.LVL324:
 3743              	.LBB532:
 3744              	.LBI532:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3745              		.loc 2 7052 26 is_stmt 1 view .LVU1135
 3746              	.LBB533:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3747              		.loc 2 7054 3 view .LVU1136
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3748              		.loc 2 7054 12 is_stmt 0 view .LVU1137
 3749 009a 9268     		ldr	r2, [r2, #8]
 3750              	.LVL325:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3751              		.loc 2 7054 74 view .LVU1138
 3752 009c 12F0040F 		tst	r2, #4
 3753 00a0 01D1     		bne	.L296
 3754              	.LVL326:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3755              		.loc 2 7054 74 view .LVU1139
 3756              	.LBE533:
ARM GAS  /tmp/ccjQSYCi.s 			page 231


 3757              	.LBE532:
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           )
 3758              		.loc 1 1666 12 view .LVU1140
 3759 00a2 012B     		cmp	r3, #1
 3760 00a4 E1D1     		bne	.L294
 3761              	.L296:
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3762              		.loc 1 1670 11 is_stmt 1 view .LVU1141
 3763 00a6 236E     		ldr	r3, [r4, #96]
 3764              	.LVL327:
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3765              		.loc 1 1670 11 is_stmt 0 view .LVU1142
 3766 00a8 43F01003 		orr	r3, r3, #16
 3767 00ac 2366     		str	r3, [r4, #96]
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3768              		.loc 1 1673 11 is_stmt 1 view .LVU1143
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3769              		.loc 1 1673 11 view .LVU1144
 3770 00ae 0023     		movs	r3, #0
 3771 00b0 84F85C30 		strb	r3, [r4, #92]
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3772              		.loc 1 1673 11 view .LVU1145
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 3773              		.loc 1 1675 11 view .LVU1146
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 3774              		.loc 1 1675 18 is_stmt 0 view .LVU1147
 3775 00b4 0120     		movs	r0, #1
 3776 00b6 2AE0     		b	.L287
 3777              	.LVL328:
 3778              	.L297:
 3779              	.LBB534:
 3780              	.LBB527:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3781              		.loc 2 7054 74 view .LVU1148
 3782 00b8 0123     		movs	r3, #1
 3783 00ba DBE7     		b	.L299
 3784              	.LVL329:
 3785              	.L310:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3786              		.loc 2 7054 74 view .LVU1149
 3787              	.LBE527:
 3788              	.LBE534:
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
 3789              		.loc 1 1686 5 is_stmt 1 view .LVU1150
 3790              		.loc 1 1686 22 is_stmt 0 view .LVU1151
 3791 00bc A06D     		ldr	r0, [r4, #88]
 3792 00be FFF7FEFF 		bl	HAL_DMA_Abort
 3793              	.LVL330:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
ARM GAS  /tmp/ccjQSYCi.s 			page 232


 3794              		.loc 1 1689 5 is_stmt 1 view .LVU1152
 3795              		.loc 1 1689 8 is_stmt 0 view .LVU1153
 3796 00c2 18B1     		cbz	r0, .L301
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 3797              		.loc 1 1692 7 is_stmt 1 view .LVU1154
 3798 00c4 236E     		ldr	r3, [r4, #96]
 3799 00c6 43F04003 		orr	r3, r3, #64
 3800 00ca 2366     		str	r3, [r4, #96]
 3801              	.L301:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 3802              		.loc 1 1696 5 view .LVU1155
 3803 00cc 2268     		ldr	r2, [r4]
 3804 00ce 5368     		ldr	r3, [r2, #4]
 3805 00d0 23F01003 		bic	r3, r3, #16
 3806 00d4 5360     		str	r3, [r2, #4]
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3807              		.loc 1 1702 5 view .LVU1156
 3808              		.loc 1 1702 8 is_stmt 0 view .LVU1157
 3809 00d6 B8B9     		cbnz	r0, .L288
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 3810              		.loc 1 1704 7 is_stmt 1 view .LVU1158
 3811              		.loc 1 1704 11 is_stmt 0 view .LVU1159
 3812 00d8 2368     		ldr	r3, [r4]
 3813              	.LVL331:
 3814              	.LBB535:
 3815              	.LBI535:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3816              		.loc 2 7247 26 is_stmt 1 view .LVU1160
 3817              	.LBB536:
 3818              		.loc 2 7249 3 view .LVU1161
 3819              		.loc 2 7249 12 is_stmt 0 view .LVU1162
 3820 00da 9B68     		ldr	r3, [r3, #8]
 3821              	.LVL332:
 3822              		.loc 2 7249 76 view .LVU1163
 3823 00dc 13F0080F 		tst	r3, #8
 3824 00e0 0BD1     		bne	.L302
 3825              	.LVL333:
 3826              		.loc 2 7249 76 view .LVU1164
 3827              	.LBE536:
 3828              	.LBE535:
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
 3829              		.loc 1 1706 9 is_stmt 1 view .LVU1165
 3830              		.loc 1 1706 27 is_stmt 0 view .LVU1166
 3831 00e2 2046     		mov	r0, r4
 3832              	.LVL334:
ARM GAS  /tmp/ccjQSYCi.s 			page 233


 3833              		.loc 1 1706 27 view .LVU1167
 3834 00e4 FFF7FEFF 		bl	ADC_Disable
 3835              	.LVL335:
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 3836              		.loc 1 1707 9 is_stmt 1 view .LVU1168
 3837              		.loc 1 1707 12 is_stmt 0 view .LVU1169
 3838 00e8 38B9     		cbnz	r0, .L302
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmphadcSlave)->Instance) == 0UL)
 3839              		.loc 1 1709 11 is_stmt 1 view .LVU1170
 3840              		.loc 1 1709 15 is_stmt 0 view .LVU1171
 3841 00ea 009B     		ldr	r3, [sp]
 3842              	.LVL336:
 3843              	.LBB537:
 3844              	.LBI537:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3845              		.loc 2 7247 26 is_stmt 1 view .LVU1172
 3846              	.LBB538:
 3847              		.loc 2 7249 3 view .LVU1173
 3848              		.loc 2 7249 12 is_stmt 0 view .LVU1174
 3849 00ec 9B68     		ldr	r3, [r3, #8]
 3850              	.LVL337:
 3851              		.loc 2 7249 76 view .LVU1175
 3852 00ee 13F0080F 		tst	r3, #8
 3853 00f2 02D1     		bne	.L302
 3854              	.LVL338:
 3855              		.loc 2 7249 76 view .LVU1176
 3856              	.LBE538:
 3857              	.LBE537:
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmphadcSlave);
 3858              		.loc 1 1711 13 is_stmt 1 view .LVU1177
 3859              		.loc 1 1711 31 is_stmt 0 view .LVU1178
 3860 00f4 6846     		mov	r0, sp
 3861              	.LVL339:
 3862              		.loc 1 1711 31 view .LVU1179
 3863 00f6 FFF7FEFF 		bl	ADC_Disable
 3864              	.LVL340:
 3865              	.L302:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 3866              		.loc 1 1716 7 is_stmt 1 view .LVU1180
 3867              		.loc 1 1716 10 is_stmt 0 view .LVU1181
 3868 00fa 28B9     		cbnz	r0, .L288
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
 3869              		.loc 1 1720 9 is_stmt 1 view .LVU1182
 3870 00fc 226E     		ldr	r2, [r4, #96]
 3871 00fe 074B     		ldr	r3, .L311+4
 3872 0100 1340     		ands	r3, r3, r2
 3873 0102 43F00103 		orr	r3, r3, #1
 3874 0106 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccjQSYCi.s 			page 234


 3875              	.LVL341:
 3876              	.L288:
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            no Master State change */
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 3877              		.loc 1 1726 7 view .LVU1183
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3878              		.loc 1 1731 3 view .LVU1184
 3879              		.loc 1 1731 3 view .LVU1185
 3880 0108 0023     		movs	r3, #0
 3881 010a 84F85C30 		strb	r3, [r4, #92]
 3882              		.loc 1 1731 3 view .LVU1186
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 3883              		.loc 1 1734 3 view .LVU1187
 3884              	.LVL342:
 3885              	.L287:
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 3886              		.loc 1 1735 1 is_stmt 0 view .LVU1188
 3887 010e 1DB0     		add	sp, sp, #116
 3888              	.LCFI38:
 3889              		.cfi_def_cfa_offset 12
 3890              		@ sp needed
 3891 0110 30BD     		pop	{r4, r5, pc}
 3892              	.LVL343:
 3893              	.L303:
 3894              	.LCFI39:
 3895              		.cfi_def_cfa_offset 0
 3896              		.cfi_restore 4
 3897              		.cfi_restore 5
 3898              		.cfi_restore 14
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 3899              		.loc 1 1620 3 view .LVU1189
 3900 0112 0220     		movs	r0, #2
 3901              	.LVL344:
 3902              		.loc 1 1735 1 view .LVU1190
 3903 0114 7047     		bx	lr
 3904              	.L312:
 3905 0116 00BF     		.align	2
 3906              	.L311:
 3907 0118 00200240 		.word	1073881088
 3908 011c FEEFFFFF 		.word	-4098
 3909              		.cfi_endproc
 3910              	.LFE373:
 3912              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 3913              		.align	1
 3914              		.global	HAL_ADCEx_InjectedConfigChannel
 3915              		.syntax unified
 3916              		.thumb
ARM GAS  /tmp/ccjQSYCi.s 			page 235


 3917              		.thumb_func
 3918              		.fpu fpv5-d16
 3920              	HAL_ADCEx_InjectedConfigChannel:
 3921              	.LVL345:
 3922              	.LFB374:
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @}
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @verbatim
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****  ===============================================================================
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** @endverbatim
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @{
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
ARM GAS  /tmp/ccjQSYCi.s 			page 236


1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         injected group.
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, ADC_InjectionConfTypeDef
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 3923              		.loc 1 1794 1 is_stmt 1 view -0
 3924              		.cfi_startproc
 3925              		@ args = 0, pretend = 0, frame = 8
 3926              		@ frame_needed = 0, uses_anonymous_args = 0
 3927              		.loc 1 1794 1 is_stmt 0 view .LVU1192
 3928 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3929              	.LCFI40:
 3930              		.cfi_def_cfa_offset 20
 3931              		.cfi_offset 4, -20
 3932              		.cfi_offset 5, -16
 3933              		.cfi_offset 6, -12
 3934              		.cfi_offset 7, -8
 3935              		.cfi_offset 14, -4
 3936 0002 83B0     		sub	sp, sp, #12
 3937              	.LCFI41:
 3938              		.cfi_def_cfa_offset 32
 3939 0004 0346     		mov	r3, r0
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3940              		.loc 1 1795 3 is_stmt 1 view .LVU1193
 3941              	.LVL346:
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 3942              		.loc 1 1796 3 view .LVU1194
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 3943              		.loc 1 1797 3 view .LVU1195
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3944              		.loc 1 1798 3 view .LVU1196
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3945              		.loc 1 1799 3 view .LVU1197
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 3946              		.loc 1 1800 3 view .LVU1198
 3947              		.loc 1 1800 17 is_stmt 0 view .LVU1199
 3948 0006 0022     		movs	r2, #0
 3949 0008 0192     		str	r2, [sp, #4]
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
 3950              		.loc 1 1802 3 is_stmt 1 view .LVU1200
 3951              	.LVL347:
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3952              		.loc 1 1805 3 view .LVU1201
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 3953              		.loc 1 1806 3 view .LVU1202
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
 3954              		.loc 1 1807 3 view .LVU1203
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 3955              		.loc 1 1808 3 view .LVU1204
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
 3956              		.loc 1 1809 3 view .LVU1205
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
ARM GAS  /tmp/ccjQSYCi.s 			page 237


 3957              		.loc 1 1810 3 view .LVU1206
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
 3958              		.loc 1 1811 3 view .LVU1207
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
 3959              		.loc 1 1812 3 view .LVU1208
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
 3960              		.loc 1 1813 3 view .LVU1209
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedOffsetSaturation));
 3961              		.loc 1 1815 3 view .LVU1210
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC3)
 3962              		.loc 1 1816 3 view .LVU1211
 3963              		.loc 1 1816 11 is_stmt 0 view .LVU1212
 3964 000a 0468     		ldr	r4, [r0]
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC3_OFFSET_SIGN(sConfigInjected->InjectedOffsetSign));
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 3965              		.loc 1 1824 5 is_stmt 1 view .LVU1213
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 3966              		.loc 1 1827 3 view .LVU1214
 3967              		.loc 1 1827 17 is_stmt 0 view .LVU1215
 3968 000c 0069     		ldr	r0, [r0, #16]
 3969              	.LVL348:
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 3970              		.loc 1 1829 5 is_stmt 1 view .LVU1216
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 3971              		.loc 1 1830 5 view .LVU1217
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 3972              		.loc 1 1831 5 view .LVU1218
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check offset range according to oversampling setting */
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 3973              		.loc 1 1835 3 view .LVU1219
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset / (hadc->In
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 3974              		.loc 1 1841 5 view .LVU1220
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      ignored (considered as reset) */
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (hadc->Instance == ADC3)
 3975              		.loc 1 1846 3 view .LVU1221
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->
ARM GAS  /tmp/ccjQSYCi.s 			page 238


 3976              		.loc 1 1848 5 view .LVU1222
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif  /* ADC_VER_V5_V90 */
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
 3977              		.loc 1 1852 3 view .LVU1223
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
 3978              		.loc 1 1855 3 view .LVU1224
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Verification of channel number */
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 3979              		.loc 1 1858 3 view .LVU1225
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC1)
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC2)
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined (ADC3)
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC3)
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
 3980              		.loc 1 1875 7 view .LVU1226
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3981              		.loc 1 1881 3 view .LVU1227
 3982              		.loc 1 1881 3 view .LVU1228
 3983 000e 93F85C20 		ldrb	r2, [r3, #92]	@ zero_extendqisi2
 3984 0012 012A     		cmp	r2, #1
 3985 0014 00F03B84 		beq	.L424
 3986              		.loc 1 1881 3 discriminator 2 view .LVU1229
 3987 0018 0122     		movs	r2, #1
 3988 001a 83F85C20 		strb	r2, [r3, #92]
 3989              		.loc 1 1881 3 discriminator 2 view .LVU1230
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*                                                                          */
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
ARM GAS  /tmp/ccjQSYCi.s 			page 239


1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 3990              		.loc 1 1904 3 discriminator 2 view .LVU1231
 3991              		.loc 1 1904 6 is_stmt 0 discriminator 2 view .LVU1232
 3992 001e A8B1     		cbz	r0, .L315
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 3993              		.loc 1 1905 23 discriminator 1 view .LVU1233
 3994 0020 4A6A     		ldr	r2, [r1, #36]
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 3995              		.loc 1 1904 54 discriminator 1 view .LVU1234
 3996 0022 012A     		cmp	r2, #1
 3997 0024 12D0     		beq	.L315
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
ARM GAS  /tmp/ccjQSYCi.s 			page 240


1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*                                                                        */
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 3998              		.loc 1 1951 5 is_stmt 1 view .LVU1235
 3999              		.loc 1 1951 30 is_stmt 0 view .LVU1236
 4000 0026 D86E     		ldr	r0, [r3, #108]
 4001              		.loc 1 1951 8 view .LVU1237
 4002 0028 0028     		cmp	r0, #0
 4003 002a 40F0B680 		bne	.L425
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  being built                                                         */
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 4004              		.loc 1 1955 7 is_stmt 1 view .LVU1238
 4005              		.loc 1 1955 42 is_stmt 0 view .LVU1239
 4006 002e DA66     		str	r2, [r3, #108]
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 4007              		.loc 1 1959 7 is_stmt 1 view .LVU1240
 4008              		.loc 1 1959 42 is_stmt 0 view .LVU1241
 4009 0030 0022     		movs	r2, #0
 4010 0032 9A66     		str	r2, [r3, #104]
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* software start.                                                      */
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*       software start.                                                */
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 4011              		.loc 1 1971 7 is_stmt 1 view .LVU1242
 4012              		.loc 1 1971 26 is_stmt 0 view .LVU1243
 4013 0034 CD6A     		ldr	r5, [r1, #44]
 4014              		.loc 1 1971 10 view .LVU1244
 4015 0036 002D     		cmp	r5, #0
 4016 0038 00F0AC80 		beq	.L321
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 4017              		.loc 1 1973 9 is_stmt 1 view .LVU1245
 4018              		.loc 1 1973 60 is_stmt 0 view .LVU1246
 4019 003c 4A6A     		ldr	r2, [r1, #36]
 4020              		.loc 1 1973 86 view .LVU1247
ARM GAS  /tmp/ccjQSYCi.s 			page 241


 4021 003e 013A     		subs	r2, r2, #1
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4022              		.loc 1 1974 86 view .LVU1248
 4023 0040 05F07C05 		and	r5, r5, #124
 4024              		.loc 1 1974 44 view .LVU1249
 4025 0044 2A43     		orrs	r2, r2, r5
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 4026              		.loc 1 1975 61 view .LVU1250
 4027 0046 0D6B     		ldr	r5, [r1, #48]
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4028              		.loc 1 1973 41 view .LVU1251
 4029 0048 1543     		orrs	r5, r5, r2
 4030              	.LVL349:
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4031              		.loc 1 1973 41 view .LVU1252
 4032 004a A7E0     		b	.L320
 4033              	.LVL350:
 4034              	.L315:
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4035              		.loc 1 1914 5 is_stmt 1 view .LVU1253
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4036              		.loc 1 1914 24 is_stmt 0 view .LVU1254
 4037 004c 4A68     		ldr	r2, [r1, #4]
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4038              		.loc 1 1914 8 view .LVU1255
 4039 004e 092A     		cmp	r2, #9
 4040 0050 00F08180 		beq	.L445
 4041              	.LVL351:
 4042              	.L317:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Decrease channel count  */
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
ARM GAS  /tmp/ccjQSYCi.s 			page 242


2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 4043              		.loc 1 2016 3 is_stmt 1 view .LVU1256
 4044              		.loc 1 2016 7 is_stmt 0 view .LVU1257
 4045 0054 1C68     		ldr	r4, [r3]
 4046              	.LVL352:
 4047              	.LBB689:
 4048              	.LBI689:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4049              		.loc 2 7247 26 is_stmt 1 view .LVU1258
 4050              	.LBB690:
 4051              		.loc 2 7249 3 view .LVU1259
 4052              		.loc 2 7249 12 is_stmt 0 view .LVU1260
 4053 0056 A268     		ldr	r2, [r4, #8]
 4054              		.loc 2 7249 76 view .LVU1261
 4055 0058 12F0080F 		tst	r2, #8
 4056 005c 21D1     		bne	.L322
 4057              	.LVL353:
 4058              		.loc 2 7249 76 view .LVU1262
 4059              	.LBE690:
 4060              	.LBE689:
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance != ADC3)
 4061              		.loc 1 2019 5 is_stmt 1 view .LVU1263
 4062              		.loc 1 2019 8 is_stmt 0 view .LVU1264
 4063 005e B74A     		ldr	r2, .L473
 4064 0060 9442     		cmp	r4, r2
 4065 0062 0CD0     		beq	.L323
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* ADC channels preselection */
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->Inject
 4066              		.loc 1 2022 7 is_stmt 1 view .LVU1265
 4067              		.loc 1 2022 46 is_stmt 0 view .LVU1266
 4068 0064 0A68     		ldr	r2, [r1]
 4069 0066 C2F31300 		ubfx	r0, r2, #0, #20
 4070              		.loc 1 2022 42 view .LVU1267
 4071 006a 0028     		cmp	r0, #0
 4072 006c 40F0B480 		bne	.L324
 4073              		.loc 1 2022 46 discriminator 1 view .LVU1268
 4074 0070 C2F38462 		ubfx	r2, r2, #26, #5
 4075              		.loc 1 2022 42 discriminator 1 view .LVU1269
 4076 0074 0120     		movs	r0, #1
 4077 0076 9040     		lsls	r0, r0, r2
 4078              	.L325:
 4079              		.loc 1 2022 34 discriminator 4 view .LVU1270
ARM GAS  /tmp/ccjQSYCi.s 			page 243


 4080 0078 E269     		ldr	r2, [r4, #28]
 4081 007a 0243     		orrs	r2, r2, r0
 4082 007c E261     		str	r2, [r4, #28]
 4083              	.L323:
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* ADC channels preselection */
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChann
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 4084              		.loc 1 2030 5 is_stmt 1 view .LVU1271
 4085              		.loc 1 2030 24 is_stmt 0 view .LVU1272
 4086 007e 91F82920 		ldrb	r2, [r1, #41]	@ zero_extendqisi2
 4087              		.loc 1 2030 8 view .LVU1273
 4088 0082 002A     		cmp	r2, #0
 4089 0084 40F0B480 		bne	.L327
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 4090              		.loc 1 2032 7 is_stmt 1 view .LVU1274
 4091 0088 1C68     		ldr	r4, [r3]
 4092 008a E268     		ldr	r2, [r4, #12]
 4093 008c 22F44012 		bic	r2, r2, #3145728
 4094 0090 91F82A50 		ldrb	r5, [r1, #42]	@ zero_extendqisi2
 4095 0094 91F82800 		ldrb	r0, [r1, #40]	@ zero_extendqisi2
 4096 0098 0005     		lsls	r0, r0, #20
 4097 009a 40EA4550 		orr	r0, r0, r5, lsl #21
 4098 009e 0243     		orrs	r2, r2, r0
 4099 00a0 E260     		str	r2, [r4, #12]
 4100              	.L322:
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* discarded.                                                             */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 4101              		.loc 1 2055 3 view .LVU1275
 4102              		.loc 1 2055 44 is_stmt 0 view .LVU1276
 4103 00a2 1C68     		ldr	r4, [r3]
ARM GAS  /tmp/ccjQSYCi.s 			page 244


 4104              	.LVL354:
 4105              	.LBB691:
 4106              	.LBI691:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4107              		.loc 2 7052 26 is_stmt 1 view .LVU1277
 4108              	.LBB692:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4109              		.loc 2 7054 3 view .LVU1278
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4110              		.loc 2 7054 12 is_stmt 0 view .LVU1279
 4111 00a4 A268     		ldr	r2, [r4, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4112              		.loc 2 7054 74 view .LVU1280
 4113 00a6 12F00402 		ands	r2, r2, #4
 4114 00aa 00D0     		beq	.L328
 4115 00ac 0122     		movs	r2, #1
 4116              	.L328:
 4117              	.LVL355:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4118              		.loc 2 7054 74 view .LVU1281
 4119              	.LBE692:
 4120              	.LBE691:
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4121              		.loc 1 2056 3 is_stmt 1 view .LVU1282
 4122              	.LBB693:
 4123              	.LBI693:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4124              		.loc 2 7247 26 view .LVU1283
 4125              	.LBB694:
 4126              		.loc 2 7249 3 view .LVU1284
 4127              		.loc 2 7249 12 is_stmt 0 view .LVU1285
 4128 00ae A068     		ldr	r0, [r4, #8]
 4129              		.loc 2 7249 76 view .LVU1286
 4130 00b0 10F00800 		ands	r0, r0, #8
 4131 00b4 00D0     		beq	.L329
 4132 00b6 0120     		movs	r0, #1
 4133              	.L329:
 4134              	.LVL356:
 4135              		.loc 2 7249 76 view .LVU1287
 4136              	.LBE694:
 4137              	.LBE693:
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 4138              		.loc 1 2058 3 is_stmt 1 view .LVU1288
 4139              		.loc 1 2058 6 is_stmt 0 view .LVU1289
 4140 00b8 0243     		orrs	r2, r0, r2
 4141              	.LVL357:
 4142              		.loc 1 2058 6 view .LVU1290
 4143 00ba 40F06C82 		bne	.L427
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 4144              		.loc 1 2064 5 is_stmt 1 view .LVU1291
 4145              		.loc 1 2064 25 is_stmt 0 view .LVU1292
ARM GAS  /tmp/ccjQSYCi.s 			page 245


 4146 00be C86A     		ldr	r0, [r1, #44]
 4147              	.LVL358:
 4148              		.loc 1 2064 8 view .LVU1293
 4149 00c0 18B1     		cbz	r0, .L331
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 4150              		.loc 1 2065 28 view .LVU1294
 4151 00c2 086B     		ldr	r0, [r1, #48]
 4152              		.loc 1 2065 9 view .LVU1295
 4153 00c4 0028     		cmp	r0, #0
 4154 00c6 40F0A380 		bne	.L332
 4155              	.L331:
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 4156              		.loc 1 2067 7 is_stmt 1 view .LVU1296
 4157              		.loc 1 2067 26 is_stmt 0 view .LVU1297
 4158 00ca 91F82900 		ldrb	r0, [r1, #41]	@ zero_extendqisi2
 4159              		.loc 1 2067 10 view .LVU1298
 4160 00ce 0128     		cmp	r0, #1
 4161 00d0 00F09880 		beq	.L446
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 4162              		.loc 1 2073 9 is_stmt 1 view .LVU1299
 4163 00d4 E068     		ldr	r0, [r4, #12]
 4164 00d6 20F00070 		bic	r0, r0, #33554432
 4165 00da E060     		str	r0, [r4, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4166              		.loc 1 1795 21 is_stmt 0 view .LVU1300
 4167 00dc 0020     		movs	r0, #0
 4168              	.LVL359:
 4169              	.L334:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 4170              		.loc 1 2093 5 is_stmt 1 view .LVU1301
 4171              		.loc 1 2093 24 is_stmt 0 view .LVU1302
 4172 00de 91F83440 		ldrb	r4, [r1, #52]	@ zero_extendqisi2
ARM GAS  /tmp/ccjQSYCi.s 			page 246


 4173              		.loc 1 2093 8 view .LVU1303
 4174 00e2 012C     		cmp	r4, #1
 4175 00e4 00F0A380 		beq	.L447
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO_ADC3(sConfigInjected->InjecOversampling.Ratio));
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance != ADC3)
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2,
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSR  |
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSS,
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE                                  |
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   ((sConfigInjected->InjecOversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    sConfigInjected->InjecOversampling.RightBitShift
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->CFGR2,
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC3_CFGR2_OVSR  |
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_OVSS,
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE                                  |
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   (sConfigInjected->InjecOversampling.Ratio)        |
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    sConfigInjected->InjecOversampling.RightBitShift
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #else
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE |
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_OVSR  |
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_OVSS,
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            ADC_CFGR2_JOVSE                                  |
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           ((sConfigInjected->InjecOversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****            sConfigInjected->InjecOversampling.RightBitShift
ARM GAS  /tmp/ccjQSYCi.s 			page 247


2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           );
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 4176              		.loc 1 2154 7 is_stmt 1 view .LVU1304
 4177 00e8 1D68     		ldr	r5, [r3]
 4178 00ea 2C69     		ldr	r4, [r5, #16]
 4179 00ec 24F00204 		bic	r4, r4, #2
 4180 00f0 2C61     		str	r4, [r5, #16]
 4181              	.L338:
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected
 4182              		.loc 1 2158 5 view .LVU1305
 4183 00f2 1C68     		ldr	r4, [r3]
 4184 00f4 0E68     		ldr	r6, [r1]
 4185 00f6 8F68     		ldr	r7, [r1, #8]
 4186              	.LVL360:
 4187              	.LBB695:
 4188              	.LBI695:
5402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4189              		.loc 2 5402 22 view .LVU1306
 4190              	.LBB696:
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4191              		.loc 2 5408 3 view .LVU1307
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4192              		.loc 2 5408 25 is_stmt 0 view .LVU1308
 4193 00f8 04F1140C 		add	ip, r4, #20
 4194 00fc 740E     		lsrs	r4, r6, #25
 4195              	.LVL361:
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4196              		.loc 2 5408 25 view .LVU1309
 4197 00fe A400     		lsls	r4, r4, #2
 4198 0100 04F00404 		and	r4, r4, #4
 4199              	.LVL362:
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4200              		.loc 2 5410 3 is_stmt 1 view .LVU1310
 4201 0104 5CF80450 		ldr	r5, [ip, r4]
 4202 0108 C6F30456 		ubfx	r6, r6, #20, #5
 4203              	.LVL363:
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4204              		.loc 2 5410 3 is_stmt 0 view .LVU1311
 4205 010c 4FF0070E 		mov	lr, #7
 4206 0110 0EFA06FE 		lsl	lr, lr, r6
 4207 0114 25EA0E05 		bic	r5, r5, lr
 4208 0118 07FA06F6 		lsl	r6, r7, r6
 4209 011c 3543     		orrs	r5, r5, r6
 4210 011e 4CF80450 		str	r5, [ip, r4]
 4211              	.LVL364:
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 4212              		.loc 2 5410 3 view .LVU1312
 4213              	.LBE696:
 4214              	.LBE695:
ARM GAS  /tmp/ccjQSYCi.s 			page 248


2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (hadc->Instance == ADC3)
 4215              		.loc 1 2165 5 is_stmt 1 view .LVU1313
 4216              		.loc 1 2165 13 is_stmt 0 view .LVU1314
 4217 0122 1F68     		ldr	r7, [r3]
 4218              		.loc 1 2165 8 view .LVU1315
 4219 0124 854C     		ldr	r4, .L473
 4220 0126 A742     		cmp	r7, r4
 4221 0128 00F09D80 		beq	.L448
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 4222              		.loc 1 2172 7 is_stmt 1 view .LVU1316
 4223              		.loc 1 2172 26 is_stmt 0 view .LVU1317
 4224 012c 844C     		ldr	r4, .L473+4
 4225 012e 2468     		ldr	r4, [r4]
 4226 0130 04F07044 		and	r4, r4, #-268435456
 4227 0134 B4F1805F 		cmp	r4, #268435456
 4228 0138 00F0C280 		beq	.L449
 4229              		.loc 1 2172 26 discriminator 2 view .LVU1318
 4230 013c FC68     		ldr	r4, [r7, #12]
 4231 013e 14F0100F 		tst	r4, #16
 4232 0142 40F0C580 		bne	.L342
 4233              		.loc 1 2172 26 discriminator 4 view .LVU1319
 4234 0146 4D69     		ldr	r5, [r1, #20]
 4235 0148 FC68     		ldr	r4, [r7, #12]
 4236 014a C4F38204 		ubfx	r4, r4, #2, #3
 4237 014e 6400     		lsls	r4, r4, #1
 4238 0150 05FA04F4 		lsl	r4, r5, r4
 4239 0154 8EE0     		b	.L340
 4240              	.LVL365:
 4241              	.L445:
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4242              		.loc 1 1921 7 is_stmt 1 view .LVU1320
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4243              		.loc 1 1921 26 is_stmt 0 view .LVU1321
 4244 0156 CD6A     		ldr	r5, [r1, #44]
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4245              		.loc 1 1921 10 view .LVU1322
 4246 0158 B5B1     		cbz	r5, .L318
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4247              		.loc 1 1923 9 is_stmt 1 view .LVU1323
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4248              		.loc 1 1923 44 is_stmt 0 view .LVU1324
 4249 015a 0868     		ldr	r0, [r1]
 4250 015c 820E     		lsrs	r2, r0, #26
 4251 015e 5202     		lsls	r2, r2, #9
 4252 0160 02F47852 		and	r2, r2, #15872
ARM GAS  /tmp/ccjQSYCi.s 			page 249


1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 4253              		.loc 1 1924 86 view .LVU1325
 4254 0164 05F07C05 		and	r5, r5, #124
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 4255              		.loc 1 1924 44 view .LVU1326
 4256 0168 2A43     		orrs	r2, r2, r5
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                           );
 4257              		.loc 1 1925 61 view .LVU1327
 4258 016a 086B     		ldr	r0, [r1, #48]
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 4259              		.loc 1 1923 41 view .LVU1328
 4260 016c 0243     		orrs	r2, r2, r0
 4261              	.LVL366:
 4262              	.L319:
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 4263              		.loc 1 1933 7 is_stmt 1 view .LVU1329
 4264 016e E06C     		ldr	r0, [r4, #76]
 4265 0170 20F07B40 		bic	r0, r0, #-83886080
 4266 0174 20F46F00 		bic	r0, r0, #15663104
 4267 0178 20F43F40 		bic	r0, r0, #48896
 4268 017c 20F0FF00 		bic	r0, r0, #255
 4269 0180 1043     		orrs	r0, r0, r2
 4270 0182 E064     		str	r0, [r4, #76]
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4271              		.loc 1 1935 7 view .LVU1330
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4272              		.loc 1 1935 42 is_stmt 0 view .LVU1331
 4273 0184 9A66     		str	r2, [r3, #104]
 4274 0186 65E7     		b	.L317
 4275              	.LVL367:
 4276              	.L318:
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4277              		.loc 1 1930 9 is_stmt 1 view .LVU1332
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4278              		.loc 1 1930 44 is_stmt 0 view .LVU1333
 4279 0188 0A68     		ldr	r2, [r1]
 4280 018a 920E     		lsrs	r2, r2, #26
 4281 018c 5202     		lsls	r2, r2, #9
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4282              		.loc 1 1930 41 view .LVU1334
 4283 018e 02F47852 		and	r2, r2, #15872
 4284              	.LVL368:
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4285              		.loc 1 1930 41 view .LVU1335
 4286 0192 ECE7     		b	.L319
 4287              	.LVL369:
 4288              	.L321:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4289              		.loc 1 1980 9 is_stmt 1 view .LVU1336
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4290              		.loc 1 1980 60 is_stmt 0 view .LVU1337
 4291 0194 4A6A     		ldr	r2, [r1, #36]
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4292              		.loc 1 1980 41 view .LVU1338
 4293 0196 551E     		subs	r5, r2, #1
 4294              	.LVL370:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/ccjQSYCi.s 			page 250


 4295              		.loc 1 1980 41 view .LVU1339
 4296 0198 00E0     		b	.L320
 4297              	.LVL371:
 4298              	.L425:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4299              		.loc 1 1802 12 view .LVU1340
 4300 019a 0025     		movs	r5, #0
 4301              	.LVL372:
 4302              	.L320:
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4303              		.loc 1 1988 5 is_stmt 1 view .LVU1341
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4304              		.loc 1 1991 5 view .LVU1342
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4305              		.loc 1 1991 40 is_stmt 0 view .LVU1343
 4306 019c 0868     		ldr	r0, [r1]
 4307 019e C0F38460 		ubfx	r0, r0, #26, #5
 4308 01a2 4A68     		ldr	r2, [r1, #4]
 4309 01a4 02F01F02 		and	r2, r2, #31
 4310 01a8 00FA02F2 		lsl	r2, r0, r2
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4311              		.loc 1 1991 37 view .LVU1344
 4312 01ac 2A43     		orrs	r2, r2, r5
 4313              	.LVL373:
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4314              		.loc 1 1994 5 is_stmt 1 view .LVU1345
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4315              		.loc 1 1994 26 is_stmt 0 view .LVU1346
 4316 01ae D86E     		ldr	r0, [r3, #108]
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4317              		.loc 1 1994 39 view .LVU1347
 4318 01b0 0138     		subs	r0, r0, #1
 4319 01b2 D866     		str	r0, [r3, #108]
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4320              		.loc 1 1999 5 is_stmt 1 view .LVU1348
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4321              		.loc 1 1999 40 is_stmt 0 view .LVU1349
 4322 01b4 9D6E     		ldr	r5, [r3, #104]
 4323 01b6 2A43     		orrs	r2, r2, r5
 4324              	.LVL374:
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4325              		.loc 1 1999 40 view .LVU1350
 4326 01b8 9A66     		str	r2, [r3, #104]
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4327              		.loc 1 2003 5 is_stmt 1 view .LVU1351
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
 4328              		.loc 1 2003 8 is_stmt 0 view .LVU1352
 4329 01ba 0028     		cmp	r0, #0
 4330 01bc 7FF44AAF 		bne	.L317
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4331              		.loc 1 2005 7 is_stmt 1 view .LVU1353
 4332 01c0 E06C     		ldr	r0, [r4, #76]
 4333 01c2 20F07B40 		bic	r0, r0, #-83886080
 4334 01c6 20F46F00 		bic	r0, r0, #15663104
 4335 01ca 20F43F40 		bic	r0, r0, #48896
 4336 01ce 20F0FF00 		bic	r0, r0, #255
 4337 01d2 0243     		orrs	r2, r2, r0
ARM GAS  /tmp/ccjQSYCi.s 			page 251


 4338 01d4 E264     		str	r2, [r4, #76]
 4339 01d6 3DE7     		b	.L317
 4340              	.L324:
 4341              	.LVL375:
 4342              	.LBB697:
 4343              	.LBI697:
 4344              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/ccjQSYCi.s 			page 252


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccjQSYCi.s 			page 253


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 254


 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 255


 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 256


 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 257


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 258


 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
ARM GAS  /tmp/ccjQSYCi.s 			page 259


 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
ARM GAS  /tmp/ccjQSYCi.s 			page 260


 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 261


 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
ARM GAS  /tmp/ccjQSYCi.s 			page 262


 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjQSYCi.s 			page 263


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccjQSYCi.s 			page 264


 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccjQSYCi.s 			page 265


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccjQSYCi.s 			page 266


 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccjQSYCi.s 			page 267


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
ARM GAS  /tmp/ccjQSYCi.s 			page 268


 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  /tmp/ccjQSYCi.s 			page 269


1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 4345              		.loc 3 1048 31 discriminator 2 view .LVU1354
 4346              	.LBB698:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 4347              		.loc 3 1050 3 discriminator 2 view .LVU1355
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 4348              		.loc 3 1055 4 discriminator 2 view .LVU1356
 4349              		.syntax unified
 4350              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4351 01d8 92FAA2F2 		rbit r2, r2
 4352              	@ 0 "" 2
 4353              	.LVL376:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccjQSYCi.s 			page 270


1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 4354              		.loc 3 1068 3 discriminator 2 view .LVU1357
 4355              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1358
 4356              		.thumb
 4357              		.syntax unified
 4358              	.LBE698:
 4359              	.LBE697:
 4360              	.LBB699:
 4361              	.LBI699:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 4362              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1359
 4363              	.LBB700:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 4364              		.loc 3 1089 3 discriminator 2 view .LVU1360
 4365              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1361
 4366 01dc 32B1     		cbz	r2, .L426
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 4367              		.loc 3 1093 3 is_stmt 1 view .LVU1362
 4368              		.loc 3 1093 10 is_stmt 0 view .LVU1363
 4369 01de B2FA82F2 		clz	r2, r2
 4370              	.LVL377:
 4371              	.L326:
 4372              		.loc 3 1093 10 view .LVU1364
 4373              	.LBE700:
 4374              	.LBE699:
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4375              		.loc 1 2022 111 view .LVU1365
 4376 01e2 02F01F02 		and	r2, r2, #31
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4377              		.loc 1 2022 42 view .LVU1366
 4378 01e6 0120     		movs	r0, #1
 4379 01e8 9040     		lsls	r0, r0, r2
 4380 01ea 45E7     		b	.L325
 4381              	.LVL378:
 4382              	.L426:
ARM GAS  /tmp/ccjQSYCi.s 			page 271


 4383              	.LBB702:
 4384              	.LBB701:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4385              		.loc 3 1091 12 view .LVU1367
 4386 01ec 2022     		movs	r2, #32
 4387              	.LVL379:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4388              		.loc 3 1091 12 view .LVU1368
 4389 01ee F8E7     		b	.L326
 4390              	.L327:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4391              		.loc 3 1091 12 view .LVU1369
 4392              	.LBE701:
 4393              	.LBE702:
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 4394              		.loc 1 2041 7 is_stmt 1 view .LVU1370
 4395 01f0 1868     		ldr	r0, [r3]
 4396 01f2 C268     		ldr	r2, [r0, #12]
 4397 01f4 22F44012 		bic	r2, r2, #3145728
 4398 01f8 91F82A40 		ldrb	r4, [r1, #42]	@ zero_extendqisi2
 4399 01fc 42EA4452 		orr	r2, r2, r4, lsl #21
 4400 0200 C260     		str	r2, [r0, #12]
 4401 0202 4EE7     		b	.L322
 4402              	.L446:
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4403              		.loc 1 2069 9 view .LVU1371
 4404 0204 E068     		ldr	r0, [r4, #12]
 4405 0206 40F00070 		orr	r0, r0, #33554432
 4406 020a E060     		str	r0, [r4, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4407              		.loc 1 1795 21 is_stmt 0 view .LVU1372
 4408 020c 0020     		movs	r0, #0
 4409 020e 66E7     		b	.L334
 4410              	.L332:
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4411              		.loc 1 2080 7 is_stmt 1 view .LVU1373
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4412              		.loc 1 2080 26 is_stmt 0 view .LVU1374
 4413 0210 91F82900 		ldrb	r0, [r1, #41]	@ zero_extendqisi2
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4414              		.loc 1 2080 10 view .LVU1375
 4415 0214 0128     		cmp	r0, #1
 4416 0216 05D0     		beq	.L450
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4417              		.loc 1 2089 9 is_stmt 1 view .LVU1376
 4418 0218 E068     		ldr	r0, [r4, #12]
 4419 021a 20F00070 		bic	r0, r0, #33554432
 4420 021e E060     		str	r0, [r4, #12]
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 4421              		.loc 1 1795 21 is_stmt 0 view .LVU1377
 4422 0220 0020     		movs	r0, #0
 4423 0222 5CE7     		b	.L334
 4424              	.L450:
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4425              		.loc 1 2083 9 is_stmt 1 view .LVU1378
 4426 0224 1C6E     		ldr	r4, [r3, #96]
 4427 0226 44F02004 		orr	r4, r4, #32
ARM GAS  /tmp/ccjQSYCi.s 			page 272


 4428 022a 1C66     		str	r4, [r3, #96]
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4429              		.loc 1 2085 9 view .LVU1379
 4430              	.LVL380:
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4431              		.loc 1 2085 9 is_stmt 0 view .LVU1380
 4432 022c 57E7     		b	.L334
 4433              	.LVL381:
 4434              	.L447:
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4435              		.loc 1 2096 7 is_stmt 1 view .LVU1381
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4436              		.loc 1 2096 15 is_stmt 0 view .LVU1382
 4437 022e 1D68     		ldr	r5, [r3]
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4438              		.loc 1 2102 9 is_stmt 1 view .LVU1383
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4439              		.loc 1 2107 7 view .LVU1384
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 4440              		.loc 1 2110 7 view .LVU1385
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4441              		.loc 1 2118 7 view .LVU1386
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 4442              		.loc 1 2118 10 is_stmt 0 view .LVU1387
 4443 0230 424C     		ldr	r4, .L473
 4444 0232 A542     		cmp	r5, r4
 4445 0234 0CD0     		beq	.L337
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
 4446              		.loc 1 2120 9 is_stmt 1 view .LVU1388
 4447 0236 2E69     		ldr	r6, [r5, #16]
 4448 0238 424C     		ldr	r4, .L473+8
 4449 023a 3440     		ands	r4, r4, r6
 4450 023c 8E6B     		ldr	r6, [r1, #56]
 4451 023e 771E     		subs	r7, r6, #1
 4452 0240 CE6B     		ldr	r6, [r1, #60]
 4453 0242 46EA0746 		orr	r6, r6, r7, lsl #16
 4454 0246 3443     		orrs	r4, r4, r6
 4455 0248 44F00204 		orr	r4, r4, #2
 4456 024c 2C61     		str	r4, [r5, #16]
 4457 024e 50E7     		b	.L338
 4458              	.L337:
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CFGR2_JOVSE |
 4459              		.loc 1 2131 9 view .LVU1389
 4460 0250 2C69     		ldr	r4, [r5, #16]
 4461 0252 24F4FF74 		bic	r4, r4, #510
 4462 0256 8E6B     		ldr	r6, [r1, #56]
 4463 0258 CF6B     		ldr	r7, [r1, #60]
 4464 025a 3E43     		orrs	r6, r6, r7
 4465 025c 3443     		orrs	r4, r4, r6
 4466 025e 44F00204 		orr	r4, r4, #2
 4467 0262 2C61     		str	r4, [r5, #16]
 4468 0264 45E7     		b	.L338
 4469              	.L448:
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4470              		.loc 1 2167 7 view .LVU1390
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4471              		.loc 1 2167 26 is_stmt 0 view .LVU1391
ARM GAS  /tmp/ccjQSYCi.s 			page 273


 4472 0266 4D69     		ldr	r5, [r1, #20]
 4473 0268 FC68     		ldr	r4, [r7, #12]
 4474 026a C4F3C104 		ubfx	r4, r4, #3, #2
 4475 026e 6400     		lsls	r4, r4, #1
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4476              		.loc 1 2167 24 view .LVU1392
 4477 0270 05FA04F4 		lsl	r4, r5, r4
 4478              	.LVL382:
 4479              	.L340:
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 4480              		.loc 1 2175 5 is_stmt 1 view .LVU1393
 4481              		.loc 1 2175 24 is_stmt 0 view .LVU1394
 4482 0274 0E69     		ldr	r6, [r1, #16]
 4483              		.loc 1 2175 8 view .LVU1395
 4484 0276 042E     		cmp	r6, #4
 4485 0278 66D0     		beq	.L343
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
 4486              		.loc 1 2178 7 is_stmt 1 view .LVU1396
 4487 027a 0D68     		ldr	r5, [r1]
 4488              	.LVL383:
 4489              	.LBB703:
 4490              	.LBI703:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4491              		.loc 2 3372 22 view .LVU1397
 4492              	.LBB704:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4493              		.loc 2 3374 3 view .LVU1398
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4494              		.loc 2 3374 25 is_stmt 0 view .LVU1399
 4495 027c 07F1600C 		add	ip, r7, #96
 4496              	.LVL384:
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4497              		.loc 2 3376 3 is_stmt 1 view .LVU1400
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4498              		.loc 2 3376 6 is_stmt 0 view .LVU1401
 4499 0280 DFF8B8E0 		ldr	lr, .L473
 4500 0284 7745     		cmp	r7, lr
 4501 0286 2CD0     		beq	.L451
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4502              		.loc 2 3385 5 is_stmt 1 view .LVU1402
 4503 0288 5CF82670 		ldr	r7, [ip, r6, lsl #2]
 4504              	.LVL385:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4505              		.loc 2 3385 5 is_stmt 0 view .LVU1403
 4506 028c 07F00047 		and	r7, r7, #-2147483648
 4507 0290 05F0F845 		and	r5, r5, #2080374784
 4508              	.LVL386:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4509              		.loc 2 3385 5 view .LVU1404
 4510 0294 2543     		orrs	r5, r5, r4
 4511 0296 3D43     		orrs	r5, r5, r7
 4512 0298 4CF82650 		str	r5, [ip, r6, lsl #2]
 4513              	.LVL387:
ARM GAS  /tmp/ccjQSYCi.s 			page 274


 4514              	.L345:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4515              		.loc 2 3385 5 view .LVU1405
 4516              	.LBE704:
 4517              	.LBE703:
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
 4518              		.loc 1 2181 7 is_stmt 1 view .LVU1406
 4519              		.loc 1 2181 15 is_stmt 0 view .LVU1407
 4520 029c 1C68     		ldr	r4, [r3]
 4521              		.loc 1 2181 10 view .LVU1408
 4522 029e 274D     		ldr	r5, .L473
 4523 02a0 AC42     		cmp	r4, r5
 4524 02a2 28D0     		beq	.L452
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC selected offset sign & saturation */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSign(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfigInjected->InjectedOffsetNumber, (sConfigI
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Set ADC selected offset signed saturation */
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfigInjected->InjectedOffsetNumber, (sC
 4525              		.loc 1 2191 9 is_stmt 1 view .LVU1409
 4526 02a4 0E69     		ldr	r6, [r1, #16]
 4527              		.loc 1 2191 113 is_stmt 0 view .LVU1410
 4528 02a6 91F82150 		ldrb	r5, [r1, #33]	@ zero_extendqisi2
 4529              		.loc 1 2191 9 view .LVU1411
 4530 02aa 012D     		cmp	r5, #1
 4531 02ac 43D0     		beq	.L453
 4532              	.L348:
 4533              	.LVL388:
 4534              	.LBB706:
 4535              	.LBI706:
3545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4536              		.loc 2 3545 22 is_stmt 1 discriminator 4 view .LVU1412
 4537              	.LBB707:
3548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4538              		.loc 2 3548 3 discriminator 4 view .LVU1413
 4539              	.LBB708:
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 4540              		.loc 2 3555 5 discriminator 4 view .LVU1414
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 4541              		.loc 2 3555 27 is_stmt 0 discriminator 4 view .LVU1415
 4542 02ae 6034     		adds	r4, r4, #96
 4543              	.LVL389:
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 4544              		.loc 2 3556 5 is_stmt 1 discriminator 4 view .LVU1416
 4545 02b0 54F82650 		ldr	r5, [r4, r6, lsl #2]
 4546 02b4 25F00045 		bic	r5, r5, #-2147483648
 4547 02b8 2A43     		orrs	r2, r2, r5
 4548              	.LVL390:
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 4549              		.loc 2 3556 5 is_stmt 0 discriminator 4 view .LVU1417
 4550 02ba 44F82620 		str	r2, [r4, r6, lsl #2]
ARM GAS  /tmp/ccjQSYCi.s 			page 275


 4551              	.LVL391:
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 4552              		.loc 2 3556 5 discriminator 4 view .LVU1418
 4553              	.LBE708:
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4554              		.loc 2 3558 1 discriminator 4 view .LVU1419
 4555 02be 6BE1     		b	.L330
 4556              	.LVL392:
 4557              	.L449:
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4558              		.loc 2 3558 1 discriminator 4 view .LVU1420
 4559              	.LBE707:
 4560              	.LBE706:
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4561              		.loc 1 2172 26 discriminator 1 view .LVU1421
 4562 02c0 4D69     		ldr	r5, [r1, #20]
 4563 02c2 FC68     		ldr	r4, [r7, #12]
 4564 02c4 C4F38204 		ubfx	r4, r4, #2, #3
 4565 02c8 6400     		lsls	r4, r4, #1
 4566 02ca 05FA04F4 		lsl	r4, r5, r4
 4567 02ce D1E7     		b	.L340
 4568              	.L342:
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 4569              		.loc 1 2172 26 discriminator 5 view .LVU1422
 4570 02d0 4D69     		ldr	r5, [r1, #20]
 4571 02d2 FC68     		ldr	r4, [r7, #12]
 4572 02d4 A408     		lsrs	r4, r4, #2
 4573 02d6 04F00404 		and	r4, r4, #4
 4574 02da 6400     		lsls	r4, r4, #1
 4575 02dc 05FA04F4 		lsl	r4, r5, r4
 4576 02e0 C8E7     		b	.L340
 4577              	.LVL393:
 4578              	.L451:
 4579              	.LBB709:
 4580              	.LBB705:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4581              		.loc 2 3378 5 is_stmt 1 view .LVU1423
 4582 02e2 5CF82670 		ldr	r7, [ip, r6, lsl #2]
 4583              	.LVL394:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4584              		.loc 2 3378 5 is_stmt 0 view .LVU1424
 4585 02e6 05F0F845 		and	r5, r5, #2080374784
 4586              	.LVL395:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4587              		.loc 2 3378 5 view .LVU1425
 4588 02ea 2C43     		orrs	r4, r4, r5
 4589              	.LVL396:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4590              		.loc 2 3378 5 view .LVU1426
 4591 02ec 44F00044 		orr	r4, r4, #-2147483648
 4592 02f0 4CF82640 		str	r4, [ip, r6, lsl #2]
 4593              	.LVL397:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4594              		.loc 2 3378 5 view .LVU1427
 4595 02f4 D2E7     		b	.L345
 4596              	.LVL398:
 4597              	.L452:
ARM GAS  /tmp/ccjQSYCi.s 			page 276


3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4598              		.loc 2 3378 5 view .LVU1428
 4599              	.LBE705:
 4600              	.LBE709:
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         LL_ADC_SetOffsetSaturation(hadc->Instance, sConfigInjected->InjectedOffsetNumber, (sConfigI
 4601              		.loc 1 2184 9 is_stmt 1 view .LVU1429
 4602 02f6 0F69     		ldr	r7, [r1, #16]
 4603 02f8 CD69     		ldr	r5, [r1, #28]
 4604              	.LVL399:
 4605              	.LBB710:
 4606              	.LBI710:
3680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4607              		.loc 2 3680 22 view .LVU1430
 4608              	.LBE710:
3682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4609              		.loc 2 3682 3 view .LVU1431
 4610              	.LBB712:
 4611              	.LBB711:
3684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4612              		.loc 2 3684 5 view .LVU1432
3684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4613              		.loc 2 3684 27 is_stmt 0 view .LVU1433
 4614 02fa 6034     		adds	r4, r4, #96
 4615              	.LVL400:
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
 4616              		.loc 2 3686 5 is_stmt 1 view .LVU1434
 4617 02fc 54F82760 		ldr	r6, [r4, r7, lsl #2]
 4618 0300 26F08076 		bic	r6, r6, #16777216
 4619 0304 3543     		orrs	r5, r5, r6
 4620              	.LVL401:
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
 4621              		.loc 2 3686 5 is_stmt 0 view .LVU1435
 4622 0306 44F82750 		str	r5, [r4, r7, lsl #2]
 4623              	.LVL402:
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
 4624              		.loc 2 3686 5 view .LVU1436
 4625              	.LBE711:
 4626              	.LBE712:
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4627              		.loc 1 2185 9 is_stmt 1 view .LVU1437
 4628 030a 1C68     		ldr	r4, [r3]
 4629 030c 0E69     		ldr	r6, [r1, #16]
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4630              		.loc 1 2185 107 is_stmt 0 view .LVU1438
 4631 030e 91F82050 		ldrb	r5, [r1, #32]	@ zero_extendqisi2
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4632              		.loc 1 2185 9 view .LVU1439
 4633 0312 012D     		cmp	r5, #1
 4634 0314 0CD0     		beq	.L454
 4635              	.L347:
 4636              	.LVL403:
 4637              	.LBB713:
 4638              	.LBI713:
3616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4639              		.loc 2 3616 22 is_stmt 1 discriminator 4 view .LVU1440
 4640              	.LBB714:
3618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
ARM GAS  /tmp/ccjQSYCi.s 			page 277


 4641              		.loc 2 3618 3 discriminator 4 view .LVU1441
3618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4642              		.loc 2 3618 6 is_stmt 0 discriminator 4 view .LVU1442
 4643 0316 094D     		ldr	r5, .L473
 4644 0318 AC42     		cmp	r4, r5
 4645 031a 40F03D81 		bne	.L330
 4646              	.LBB715:
3620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4647              		.loc 2 3620 5 is_stmt 1 view .LVU1443
3620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4648              		.loc 2 3620 27 is_stmt 0 view .LVU1444
 4649 031e 6034     		adds	r4, r4, #96
 4650              	.LVL404:
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
 4651              		.loc 2 3622 5 is_stmt 1 view .LVU1445
 4652 0320 54F82650 		ldr	r5, [r4, r6, lsl #2]
 4653 0324 25F00075 		bic	r5, r5, #33554432
 4654 0328 2A43     		orrs	r2, r2, r5
 4655              	.LVL405:
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
 4656              		.loc 2 3622 5 is_stmt 0 view .LVU1446
 4657 032a 44F82620 		str	r2, [r4, r6, lsl #2]
 4658              	.LVL406:
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
 4659              		.loc 2 3622 5 view .LVU1447
 4660 032e 33E1     		b	.L330
 4661              	.LVL407:
 4662              	.L454:
3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
 4663              		.loc 2 3622 5 view .LVU1448
 4664              	.LBE715:
 4665              	.LBE714:
 4666              	.LBE713:
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 4667              		.loc 1 2185 9 view .LVU1449
 4668 0330 4FF00072 		mov	r2, #33554432
 4669 0334 EFE7     		b	.L347
 4670              	.L453:
 4671              		.loc 1 2191 9 view .LVU1450
 4672 0336 4FF00042 		mov	r2, #-2147483648
 4673 033a B8E7     		b	.L348
 4674              	.L474:
 4675              		.align	2
 4676              	.L473:
 4677 033c 00600258 		.word	1476550656
 4678 0340 0010005C 		.word	1543507968
 4679 0344 1DFE00FC 		.word	-67043811
 4680              	.LVL408:
 4681              	.L343:
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #if defined(ADC_VER_V5_V90)
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (hadc->Instance == ADC3)
 4682              		.loc 1 2198 7 is_stmt 1 view .LVU1451
ARM GAS  /tmp/ccjQSYCi.s 			page 278


 4683              		.loc 1 2198 10 is_stmt 0 view .LVU1452
 4684 0348 A74A     		ldr	r2, .L475
 4685 034a 9742     		cmp	r7, r2
 4686 034c 4CD0     		beq	.L455
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** #endif /* ADC_VER_V5_V90 */
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1)
 4687              		.loc 1 2224 9 is_stmt 1 view .LVU1453
 4688              	.LVL409:
 4689              	.LBB716:
 4690              	.LBI716:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4691              		.loc 2 3454 26 view .LVU1454
 4692              	.LBB717:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4693              		.loc 2 3456 3 view .LVU1455
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4694              		.loc 2 3458 3 view .LVU1456
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4695              		.loc 2 3458 10 is_stmt 0 view .LVU1457
 4696 034e 3A6E     		ldr	r2, [r7, #96]
 4697              	.LVL410:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4698              		.loc 2 3458 10 view .LVU1458
 4699              	.LBE717:
 4700              	.LBE716:
 4701              	.LBB718:
 4702              	.LBI718:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4703              		.loc 2 3454 26 is_stmt 1 view .LVU1459
 4704              	.LBB719:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4705              		.loc 2 3456 3 view .LVU1460
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 279


 4706              		.loc 2 3458 3 view .LVU1461
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4707              		.loc 2 3458 10 is_stmt 0 view .LVU1462
 4708 0350 3D6E     		ldr	r5, [r7, #96]
 4709              	.LVL411:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4710              		.loc 2 3458 10 view .LVU1463
 4711              	.LBE719:
 4712              	.LBE718:
 4713              		.loc 1 2224 13 view .LVU1464
 4714 0352 C5F38465 		ubfx	r5, r5, #26, #5
 4715              		.loc 1 2224 105 view .LVU1465
 4716 0356 0C68     		ldr	r4, [r1]
 4717              	.LVL412:
 4718              		.loc 1 2224 105 view .LVU1466
 4719 0358 C4F31302 		ubfx	r2, r4, #0, #20
 4720 035c 002A     		cmp	r2, #0
 4721 035e 40F0C780 		bne	.L368
 4722              		.loc 1 2224 105 discriminator 5 view .LVU1467
 4723 0362 C4F38462 		ubfx	r2, r4, #26, #5
 4724              	.L369:
 4725              		.loc 1 2224 12 discriminator 8 view .LVU1468
 4726 0366 9542     		cmp	r5, r2
 4727 0368 00F0CA80 		beq	.L456
 4728              	.L371:
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_1, sConfigInjected->InjectedChannel, LL_AD
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2)
 4729              		.loc 1 2228 9 is_stmt 1 view .LVU1469
 4730              		.loc 1 2228 13 is_stmt 0 view .LVU1470
 4731 036c 1E68     		ldr	r6, [r3]
 4732              	.LVL413:
 4733              	.LBB720:
 4734              	.LBI720:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4735              		.loc 2 3454 26 is_stmt 1 view .LVU1471
 4736              	.LBB721:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4737              		.loc 2 3456 3 view .LVU1472
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4738              		.loc 2 3458 3 view .LVU1473
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4739              		.loc 2 3458 10 is_stmt 0 view .LVU1474
 4740 036e 726E     		ldr	r2, [r6, #100]
 4741              	.LVL414:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4742              		.loc 2 3458 10 view .LVU1475
 4743              	.LBE721:
 4744              	.LBE720:
 4745              	.LBB722:
 4746              	.LBI722:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4747              		.loc 2 3454 26 is_stmt 1 view .LVU1476
 4748              	.LBB723:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4749              		.loc 2 3456 3 view .LVU1477
ARM GAS  /tmp/ccjQSYCi.s 			page 280


3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4750              		.loc 2 3458 3 view .LVU1478
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4751              		.loc 2 3458 10 is_stmt 0 view .LVU1479
 4752 0370 756E     		ldr	r5, [r6, #100]
 4753              	.LVL415:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4754              		.loc 2 3458 10 view .LVU1480
 4755              	.LBE723:
 4756              	.LBE722:
 4757              		.loc 1 2228 13 view .LVU1481
 4758 0372 C5F38465 		ubfx	r5, r5, #26, #5
 4759              		.loc 1 2228 105 view .LVU1482
 4760 0376 0C68     		ldr	r4, [r1]
 4761 0378 C4F31302 		ubfx	r2, r4, #0, #20
 4762 037c 002A     		cmp	r2, #0
 4763 037e 40F0C780 		bne	.L372
 4764              		.loc 1 2228 105 discriminator 5 view .LVU1483
 4765 0382 C4F38462 		ubfx	r2, r4, #26, #5
 4766              	.L373:
 4767              		.loc 1 2228 12 discriminator 8 view .LVU1484
 4768 0386 9542     		cmp	r5, r2
 4769 0388 00F0CA80 		beq	.L457
 4770              	.L375:
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_2, sConfigInjected->InjectedChannel, LL_AD
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3)
 4771              		.loc 1 2232 9 is_stmt 1 view .LVU1485
 4772              		.loc 1 2232 13 is_stmt 0 view .LVU1486
 4773 038c 1C68     		ldr	r4, [r3]
 4774              	.LVL416:
 4775              	.LBB724:
 4776              	.LBI724:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4777              		.loc 2 3454 26 is_stmt 1 view .LVU1487
 4778              	.LBB725:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4779              		.loc 2 3456 3 view .LVU1488
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4780              		.loc 2 3456 31 is_stmt 0 view .LVU1489
 4781 038e 04F16007 		add	r7, r4, #96
 4782              	.LVL417:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4783              		.loc 2 3458 3 is_stmt 1 view .LVU1490
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4784              		.loc 2 3458 10 is_stmt 0 view .LVU1491
 4785 0392 A26E     		ldr	r2, [r4, #104]
 4786              	.LVL418:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4787              		.loc 2 3458 10 view .LVU1492
 4788              	.LBE725:
 4789              	.LBE724:
 4790              	.LBB726:
 4791              	.LBI726:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4792              		.loc 2 3454 26 is_stmt 1 view .LVU1493
ARM GAS  /tmp/ccjQSYCi.s 			page 281


 4793              	.LBB727:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4794              		.loc 2 3456 3 view .LVU1494
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4795              		.loc 2 3458 3 view .LVU1495
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4796              		.loc 2 3458 10 is_stmt 0 view .LVU1496
 4797 0394 A66E     		ldr	r6, [r4, #104]
 4798              	.LVL419:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4799              		.loc 2 3458 10 view .LVU1497
 4800              	.LBE727:
 4801              	.LBE726:
 4802              		.loc 1 2232 13 view .LVU1498
 4803 0396 C6F38466 		ubfx	r6, r6, #26, #5
 4804              		.loc 1 2232 105 view .LVU1499
 4805 039a 0D68     		ldr	r5, [r1]
 4806 039c C5F31302 		ubfx	r2, r5, #0, #20
 4807 03a0 002A     		cmp	r2, #0
 4808 03a2 40F0CF80 		bne	.L377
 4809              		.loc 1 2232 105 discriminator 5 view .LVU1500
 4810 03a6 C5F38462 		ubfx	r2, r5, #26, #5
 4811              	.L378:
 4812              		.loc 1 2232 12 discriminator 8 view .LVU1501
 4813 03aa 9642     		cmp	r6, r2
 4814 03ac 00F0D280 		beq	.L458
 4815              	.L380:
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_4, sConfigInjected->InjectedChannel, LL_AD
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4)
 4816              		.loc 1 2236 9 is_stmt 1 view .LVU1502
 4817              		.loc 1 2236 13 is_stmt 0 view .LVU1503
 4818 03b0 1E68     		ldr	r6, [r3]
 4819              	.LVL420:
 4820              	.LBB728:
 4821              	.LBI728:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4822              		.loc 2 3454 26 is_stmt 1 view .LVU1504
 4823              	.LBB729:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4824              		.loc 2 3456 3 view .LVU1505
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4825              		.loc 2 3458 3 view .LVU1506
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4826              		.loc 2 3458 10 is_stmt 0 view .LVU1507
 4827 03b2 F26E     		ldr	r2, [r6, #108]
 4828              	.LVL421:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4829              		.loc 2 3458 10 view .LVU1508
 4830              	.LBE729:
 4831              	.LBE728:
 4832              	.LBB730:
 4833              	.LBI730:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4834              		.loc 2 3454 26 is_stmt 1 view .LVU1509
 4835              	.LBB731:
ARM GAS  /tmp/ccjQSYCi.s 			page 282


3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4836              		.loc 2 3456 3 view .LVU1510
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4837              		.loc 2 3458 3 view .LVU1511
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4838              		.loc 2 3458 10 is_stmt 0 view .LVU1512
 4839 03b4 F56E     		ldr	r5, [r6, #108]
 4840              	.LVL422:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4841              		.loc 2 3458 10 view .LVU1513
 4842              	.LBE731:
 4843              	.LBE730:
 4844              		.loc 1 2236 13 view .LVU1514
 4845 03b6 C5F38465 		ubfx	r5, r5, #26, #5
 4846              		.loc 1 2236 105 view .LVU1515
 4847 03ba 0C68     		ldr	r4, [r1]
 4848 03bc C4F31302 		ubfx	r2, r4, #0, #20
 4849 03c0 002A     		cmp	r2, #0
 4850 03c2 40F0D980 		bne	.L382
 4851              		.loc 1 2236 105 discriminator 5 view .LVU1516
 4852 03c6 C4F38462 		ubfx	r2, r4, #26, #5
 4853              	.L383:
 4854              		.loc 1 2236 12 discriminator 8 view .LVU1517
 4855 03ca 9542     		cmp	r5, r2
 4856 03cc 40F0E480 		bne	.L330
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           LL_ADC_SetOffset(hadc->Instance, LL_ADC_OFFSET_4, sConfigInjected->InjectedChannel, LL_AD
 4857              		.loc 1 2238 11 is_stmt 1 view .LVU1518
 4858              	.LVL423:
 4859              	.LBB732:
 4860              	.LBI732:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4861              		.loc 2 3372 22 view .LVU1519
 4862              	.LBB733:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 4863              		.loc 2 3374 3 view .LVU1520
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4864              		.loc 2 3376 3 view .LVU1521
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 4865              		.loc 2 3376 6 is_stmt 0 view .LVU1522
 4866 03d0 854A     		ldr	r2, .L475
 4867 03d2 9642     		cmp	r6, r2
 4868 03d4 00F0D880 		beq	.L459
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4869              		.loc 2 3385 5 is_stmt 1 view .LVU1523
 4870 03d8 F26E     		ldr	r2, [r6, #108]
 4871 03da 02F00042 		and	r2, r2, #-2147483648
 4872 03de 04F0F844 		and	r4, r4, #2080374784
 4873              	.LVL424:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4874              		.loc 2 3385 5 is_stmt 0 view .LVU1524
 4875 03e2 1443     		orrs	r4, r4, r2
 4876 03e4 F466     		str	r4, [r6, #108]
 4877              	.LVL425:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4878              		.loc 2 3385 5 view .LVU1525
 4879 03e6 D7E0     		b	.L330
ARM GAS  /tmp/ccjQSYCi.s 			page 283


 4880              	.LVL426:
 4881              	.L455:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 4882              		.loc 2 3385 5 view .LVU1526
 4883              	.LBE733:
 4884              	.LBE732:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4885              		.loc 1 2202 9 is_stmt 1 view .LVU1527
 4886              	.LBB735:
 4887              	.LBI735:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4888              		.loc 2 3454 26 view .LVU1528
 4889              	.LBB736:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4890              		.loc 2 3456 3 view .LVU1529
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4891              		.loc 2 3458 3 view .LVU1530
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4892              		.loc 2 3458 10 is_stmt 0 view .LVU1531
 4893 03e8 3A6E     		ldr	r2, [r7, #96]
 4894              	.LVL427:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4895              		.loc 2 3458 10 view .LVU1532
 4896              	.LBE736:
 4897              	.LBE735:
 4898              	.LBB737:
 4899              	.LBI737:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4900              		.loc 2 3454 26 is_stmt 1 view .LVU1533
 4901              	.LBB738:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4902              		.loc 2 3456 3 view .LVU1534
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4903              		.loc 2 3458 3 view .LVU1535
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4904              		.loc 2 3458 10 is_stmt 0 view .LVU1536
 4905 03ea 3C6E     		ldr	r4, [r7, #96]
 4906              	.LVL428:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4907              		.loc 2 3458 10 view .LVU1537
 4908              	.LBE738:
 4909              	.LBE737:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4910              		.loc 1 2202 13 view .LVU1538
 4911 03ec C4F38464 		ubfx	r4, r4, #26, #5
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4912              		.loc 1 2202 105 view .LVU1539
 4913 03f0 0A68     		ldr	r2, [r1]
 4914 03f2 C2F31305 		ubfx	r5, r2, #0, #20
 4915 03f6 002D     		cmp	r5, #0
 4916 03f8 36D1     		bne	.L350
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4917              		.loc 1 2202 105 discriminator 5 view .LVU1540
 4918 03fa C2F38462 		ubfx	r2, r2, #26, #5
 4919              	.L351:
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4920              		.loc 1 2202 12 discriminator 8 view .LVU1541
ARM GAS  /tmp/ccjQSYCi.s 			page 284


 4921 03fe 9442     		cmp	r4, r2
 4922 0400 3AD0     		beq	.L460
 4923              	.L353:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4924              		.loc 1 2206 9 is_stmt 1 view .LVU1542
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4925              		.loc 1 2206 13 is_stmt 0 view .LVU1543
 4926 0402 1E68     		ldr	r6, [r3]
 4927              	.LVL429:
 4928              	.LBB739:
 4929              	.LBI739:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4930              		.loc 2 3454 26 is_stmt 1 view .LVU1544
 4931              	.LBB740:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4932              		.loc 2 3456 3 view .LVU1545
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4933              		.loc 2 3458 3 view .LVU1546
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4934              		.loc 2 3458 10 is_stmt 0 view .LVU1547
 4935 0404 726E     		ldr	r2, [r6, #100]
 4936              	.LVL430:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4937              		.loc 2 3458 10 view .LVU1548
 4938              	.LBE740:
 4939              	.LBE739:
 4940              	.LBB741:
 4941              	.LBI741:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4942              		.loc 2 3454 26 is_stmt 1 view .LVU1549
 4943              	.LBB742:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4944              		.loc 2 3456 3 view .LVU1550
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4945              		.loc 2 3458 3 view .LVU1551
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4946              		.loc 2 3458 10 is_stmt 0 view .LVU1552
 4947 0406 746E     		ldr	r4, [r6, #100]
 4948              	.LVL431:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4949              		.loc 2 3458 10 view .LVU1553
 4950              	.LBE742:
 4951              	.LBE741:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4952              		.loc 1 2206 13 view .LVU1554
 4953 0408 C4F38464 		ubfx	r4, r4, #26, #5
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4954              		.loc 1 2206 105 view .LVU1555
 4955 040c 0A68     		ldr	r2, [r1]
 4956 040e C2F31305 		ubfx	r5, r2, #0, #20
 4957 0412 002D     		cmp	r5, #0
 4958 0414 35D1     		bne	.L354
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4959              		.loc 1 2206 105 discriminator 5 view .LVU1556
 4960 0416 C2F38462 		ubfx	r2, r2, #26, #5
 4961              	.L355:
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
ARM GAS  /tmp/ccjQSYCi.s 			page 285


 4962              		.loc 1 2206 12 discriminator 8 view .LVU1557
 4963 041a 9442     		cmp	r4, r2
 4964 041c 39D0     		beq	.L461
 4965              	.L357:
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4966              		.loc 1 2210 9 is_stmt 1 view .LVU1558
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4967              		.loc 1 2210 13 is_stmt 0 view .LVU1559
 4968 041e 1E68     		ldr	r6, [r3]
 4969              	.LVL432:
 4970              	.LBB743:
 4971              	.LBI743:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4972              		.loc 2 3454 26 is_stmt 1 view .LVU1560
 4973              	.LBB744:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4974              		.loc 2 3456 3 view .LVU1561
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4975              		.loc 2 3458 3 view .LVU1562
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4976              		.loc 2 3458 10 is_stmt 0 view .LVU1563
 4977 0420 B26E     		ldr	r2, [r6, #104]
 4978              	.LVL433:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4979              		.loc 2 3458 10 view .LVU1564
 4980              	.LBE744:
 4981              	.LBE743:
 4982              	.LBB745:
 4983              	.LBI745:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4984              		.loc 2 3454 26 is_stmt 1 view .LVU1565
 4985              	.LBB746:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4986              		.loc 2 3456 3 view .LVU1566
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4987              		.loc 2 3458 3 view .LVU1567
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4988              		.loc 2 3458 10 is_stmt 0 view .LVU1568
 4989 0422 B46E     		ldr	r4, [r6, #104]
 4990              	.LVL434:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4991              		.loc 2 3458 10 view .LVU1569
 4992              	.LBE746:
 4993              	.LBE745:
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4994              		.loc 1 2210 13 view .LVU1570
 4995 0424 C4F38464 		ubfx	r4, r4, #26, #5
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 4996              		.loc 1 2210 105 view .LVU1571
 4997 0428 0A68     		ldr	r2, [r1]
 4998 042a C2F31305 		ubfx	r5, r2, #0, #20
 4999 042e 002D     		cmp	r5, #0
 5000 0430 3CD1     		bne	.L359
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5001              		.loc 1 2210 105 discriminator 5 view .LVU1572
 5002 0432 C2F38462 		ubfx	r2, r2, #26, #5
 5003              	.L360:
ARM GAS  /tmp/ccjQSYCi.s 			page 286


2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5004              		.loc 1 2210 12 discriminator 8 view .LVU1573
 5005 0436 9442     		cmp	r4, r2
 5006 0438 40D0     		beq	.L462
 5007              	.L362:
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5008              		.loc 1 2214 9 is_stmt 1 view .LVU1574
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5009              		.loc 1 2214 13 is_stmt 0 view .LVU1575
 5010 043a 1E68     		ldr	r6, [r3]
 5011              	.LVL435:
 5012              	.LBB747:
 5013              	.LBI747:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5014              		.loc 2 3454 26 is_stmt 1 view .LVU1576
 5015              	.LBB748:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5016              		.loc 2 3456 3 view .LVU1577
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5017              		.loc 2 3458 3 view .LVU1578
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5018              		.loc 2 3458 10 is_stmt 0 view .LVU1579
 5019 043c F26E     		ldr	r2, [r6, #108]
 5020              	.LVL436:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5021              		.loc 2 3458 10 view .LVU1580
 5022              	.LBE748:
 5023              	.LBE747:
 5024              	.LBB749:
 5025              	.LBI749:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5026              		.loc 2 3454 26 is_stmt 1 view .LVU1581
 5027              	.LBB750:
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5028              		.loc 2 3456 3 view .LVU1582
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5029              		.loc 2 3458 3 view .LVU1583
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5030              		.loc 2 3458 10 is_stmt 0 view .LVU1584
 5031 043e F46E     		ldr	r4, [r6, #108]
 5032              	.LVL437:
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5033              		.loc 2 3458 10 view .LVU1585
 5034              	.LBE750:
 5035              	.LBE749:
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5036              		.loc 1 2214 13 view .LVU1586
 5037 0440 C4F38464 		ubfx	r4, r4, #26, #5
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5038              		.loc 1 2214 105 view .LVU1587
 5039 0444 0A68     		ldr	r2, [r1]
 5040 0446 C2F31305 		ubfx	r5, r2, #0, #20
 5041 044a 002D     		cmp	r5, #0
 5042 044c 43D1     		bne	.L364
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5043              		.loc 1 2214 105 discriminator 5 view .LVU1588
 5044 044e C2F38462 		ubfx	r2, r2, #26, #5
ARM GAS  /tmp/ccjQSYCi.s 			page 287


 5045              	.L365:
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 5046              		.loc 1 2214 12 discriminator 8 view .LVU1589
 5047 0452 9442     		cmp	r4, r2
 5048 0454 40F0A080 		bne	.L330
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5049              		.loc 1 2216 11 is_stmt 1 view .LVU1590
 5050              	.LVL438:
 5051              	.LBB751:
 5052              	.LBI751:
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5053              		.loc 2 3749 22 view .LVU1591
 5054              	.LBB752:
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
 5055              		.loc 2 3751 3 view .LVU1592
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5056              		.loc 2 3752 3 view .LVU1593
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5057              		.loc 2 3752 6 is_stmt 0 view .LVU1594
 5058 0458 634A     		ldr	r2, .L475
 5059 045a 9642     		cmp	r6, r2
 5060 045c 43D0     		beq	.L463
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
 5061              		.loc 2 3760 5 is_stmt 1 view .LVU1595
 5062 045e F26E     		ldr	r2, [r6, #108]
 5063 0460 22F00042 		bic	r2, r2, #-2147483648
 5064 0464 F266     		str	r2, [r6, #108]
 5065 0466 97E0     		b	.L330
 5066              	.LVL439:
 5067              	.L350:
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
 5068              		.loc 2 3760 5 is_stmt 0 view .LVU1596
 5069              	.LBE752:
 5070              	.LBE751:
 5071              	.LBB754:
 5072              	.LBI754:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5073              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1597
 5074              	.LBB755:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5075              		.loc 3 1050 3 discriminator 6 view .LVU1598
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5076              		.loc 3 1055 4 discriminator 6 view .LVU1599
 5077              		.syntax unified
 5078              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5079 0468 92FAA2F2 		rbit r2, r2
 5080              	@ 0 "" 2
 5081              	.LVL440:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5082              		.loc 3 1068 3 discriminator 6 view .LVU1600
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5083              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1601
 5084              		.thumb
 5085              		.syntax unified
 5086              	.LBE755:
 5087              	.LBE754:
 5088              	.LBB756:
ARM GAS  /tmp/ccjQSYCi.s 			page 288


 5089              	.LBI756:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5090              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1602
 5091              	.LBB757:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5092              		.loc 3 1089 3 discriminator 6 view .LVU1603
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5093              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1604
 5094 046c 12B1     		cbz	r2, .L428
 5095              		.loc 3 1093 3 is_stmt 1 view .LVU1605
 5096              		.loc 3 1093 10 is_stmt 0 view .LVU1606
 5097 046e B2FA82F2 		clz	r2, r2
 5098              	.LVL441:
 5099              		.loc 3 1093 10 view .LVU1607
 5100 0472 C4E7     		b	.L351
 5101              	.LVL442:
 5102              	.L428:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5103              		.loc 3 1091 12 view .LVU1608
 5104 0474 2022     		movs	r2, #32
 5105              	.LVL443:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5106              		.loc 3 1091 12 view .LVU1609
 5107 0476 C2E7     		b	.L351
 5108              	.L460:
 5109              	.LBE757:
 5110              	.LBE756:
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5111              		.loc 1 2204 11 is_stmt 1 view .LVU1610
 5112              	.LVL444:
 5113              	.LBB758:
 5114              	.LBI758:
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5115              		.loc 2 3749 22 view .LVU1611
 5116              	.LBB759:
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
 5117              		.loc 2 3751 3 view .LVU1612
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5118              		.loc 2 3752 3 view .LVU1613
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5119              		.loc 2 3754 5 view .LVU1614
 5120 0478 3A6E     		ldr	r2, [r7, #96]
 5121 047a 22F00042 		bic	r2, r2, #-2147483648
 5122 047e 3A66     		str	r2, [r7, #96]
3764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5123              		.loc 2 3764 1 is_stmt 0 view .LVU1615
 5124 0480 BFE7     		b	.L353
 5125              	.LVL445:
 5126              	.L354:
3764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5127              		.loc 2 3764 1 view .LVU1616
 5128              	.LBE759:
 5129              	.LBE758:
 5130              	.LBB760:
 5131              	.LBI760:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5132              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1617
ARM GAS  /tmp/ccjQSYCi.s 			page 289


 5133              	.LBB761:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5134              		.loc 3 1050 3 discriminator 6 view .LVU1618
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5135              		.loc 3 1055 4 discriminator 6 view .LVU1619
 5136              		.syntax unified
 5137              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5138 0482 92FAA2F2 		rbit r2, r2
 5139              	@ 0 "" 2
 5140              	.LVL446:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5141              		.loc 3 1068 3 discriminator 6 view .LVU1620
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5142              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1621
 5143              		.thumb
 5144              		.syntax unified
 5145              	.LBE761:
 5146              	.LBE760:
 5147              	.LBB762:
 5148              	.LBI762:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5149              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1622
 5150              	.LBB763:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5151              		.loc 3 1089 3 discriminator 6 view .LVU1623
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5152              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1624
 5153 0486 12B1     		cbz	r2, .L429
 5154              		.loc 3 1093 3 is_stmt 1 view .LVU1625
 5155              		.loc 3 1093 10 is_stmt 0 view .LVU1626
 5156 0488 B2FA82F2 		clz	r2, r2
 5157              	.LVL447:
 5158              		.loc 3 1093 10 view .LVU1627
 5159 048c C5E7     		b	.L355
 5160              	.LVL448:
 5161              	.L429:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5162              		.loc 3 1091 12 view .LVU1628
 5163 048e 2022     		movs	r2, #32
 5164              	.LVL449:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5165              		.loc 3 1091 12 view .LVU1629
 5166 0490 C3E7     		b	.L355
 5167              	.L461:
 5168              	.LBE763:
 5169              	.LBE762:
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5170              		.loc 1 2208 11 is_stmt 1 view .LVU1630
 5171              	.LVL450:
 5172              	.LBB764:
 5173              	.LBI764:
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5174              		.loc 2 3749 22 view .LVU1631
 5175              	.LBB765:
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
 5176              		.loc 2 3751 3 view .LVU1632
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
ARM GAS  /tmp/ccjQSYCi.s 			page 290


 5177              		.loc 2 3752 3 view .LVU1633
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5178              		.loc 2 3752 6 is_stmt 0 view .LVU1634
 5179 0492 554A     		ldr	r2, .L475
 5180 0494 9642     		cmp	r6, r2
 5181 0496 04D0     		beq	.L464
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
 5182              		.loc 2 3760 5 is_stmt 1 view .LVU1635
 5183 0498 726E     		ldr	r2, [r6, #100]
 5184 049a 22F00042 		bic	r2, r2, #-2147483648
 5185 049e 7266     		str	r2, [r6, #100]
 5186 04a0 BDE7     		b	.L357
 5187              	.L464:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5188              		.loc 2 3754 5 view .LVU1636
 5189 04a2 726E     		ldr	r2, [r6, #100]
 5190 04a4 22F00042 		bic	r2, r2, #-2147483648
 5191 04a8 7266     		str	r2, [r6, #100]
 5192 04aa B8E7     		b	.L357
 5193              	.LVL451:
 5194              	.L359:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5195              		.loc 2 3754 5 is_stmt 0 view .LVU1637
 5196              	.LBE765:
 5197              	.LBE764:
 5198              	.LBB766:
 5199              	.LBI766:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5200              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1638
 5201              	.LBB767:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5202              		.loc 3 1050 3 discriminator 6 view .LVU1639
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5203              		.loc 3 1055 4 discriminator 6 view .LVU1640
 5204              		.syntax unified
 5205              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5206 04ac 92FAA2F2 		rbit r2, r2
 5207              	@ 0 "" 2
 5208              	.LVL452:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5209              		.loc 3 1068 3 discriminator 6 view .LVU1641
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5210              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1642
 5211              		.thumb
 5212              		.syntax unified
 5213              	.LBE767:
 5214              	.LBE766:
 5215              	.LBB768:
 5216              	.LBI768:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5217              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1643
 5218              	.LBB769:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5219              		.loc 3 1089 3 discriminator 6 view .LVU1644
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5220              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1645
 5221 04b0 12B1     		cbz	r2, .L430
ARM GAS  /tmp/ccjQSYCi.s 			page 291


 5222              		.loc 3 1093 3 is_stmt 1 view .LVU1646
 5223              		.loc 3 1093 10 is_stmt 0 view .LVU1647
 5224 04b2 B2FA82F2 		clz	r2, r2
 5225              	.LVL453:
 5226              		.loc 3 1093 10 view .LVU1648
 5227 04b6 BEE7     		b	.L360
 5228              	.LVL454:
 5229              	.L430:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5230              		.loc 3 1091 12 view .LVU1649
 5231 04b8 2022     		movs	r2, #32
 5232              	.LVL455:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5233              		.loc 3 1091 12 view .LVU1650
 5234 04ba BCE7     		b	.L360
 5235              	.L462:
 5236              	.LBE769:
 5237              	.LBE768:
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5238              		.loc 1 2212 11 is_stmt 1 view .LVU1651
 5239              	.LVL456:
 5240              	.LBB770:
 5241              	.LBI770:
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5242              		.loc 2 3749 22 view .LVU1652
 5243              	.LBB771:
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
 5244              		.loc 2 3751 3 view .LVU1653
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5245              		.loc 2 3752 3 view .LVU1654
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5246              		.loc 2 3752 6 is_stmt 0 view .LVU1655
 5247 04bc 4A4A     		ldr	r2, .L475
 5248 04be 9642     		cmp	r6, r2
 5249 04c0 04D0     		beq	.L465
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
 5250              		.loc 2 3760 5 is_stmt 1 view .LVU1656
 5251 04c2 B26E     		ldr	r2, [r6, #104]
 5252 04c4 22F00042 		bic	r2, r2, #-2147483648
 5253 04c8 B266     		str	r2, [r6, #104]
 5254 04ca B6E7     		b	.L362
 5255              	.L465:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5256              		.loc 2 3754 5 view .LVU1657
 5257 04cc B26E     		ldr	r2, [r6, #104]
 5258 04ce 22F00042 		bic	r2, r2, #-2147483648
 5259 04d2 B266     		str	r2, [r6, #104]
 5260 04d4 B1E7     		b	.L362
 5261              	.LVL457:
 5262              	.L364:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5263              		.loc 2 3754 5 is_stmt 0 view .LVU1658
 5264              	.LBE771:
 5265              	.LBE770:
 5266              	.LBB772:
 5267              	.LBI772:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 292


 5268              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1659
 5269              	.LBB773:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5270              		.loc 3 1050 3 discriminator 6 view .LVU1660
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5271              		.loc 3 1055 4 discriminator 6 view .LVU1661
 5272              		.syntax unified
 5273              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5274 04d6 92FAA2F2 		rbit r2, r2
 5275              	@ 0 "" 2
 5276              	.LVL458:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5277              		.loc 3 1068 3 discriminator 6 view .LVU1662
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5278              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1663
 5279              		.thumb
 5280              		.syntax unified
 5281              	.LBE773:
 5282              	.LBE772:
 5283              	.LBB774:
 5284              	.LBI774:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5285              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1664
 5286              	.LBB775:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5287              		.loc 3 1089 3 discriminator 6 view .LVU1665
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5288              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1666
 5289 04da 12B1     		cbz	r2, .L431
 5290              		.loc 3 1093 3 is_stmt 1 view .LVU1667
 5291              		.loc 3 1093 10 is_stmt 0 view .LVU1668
 5292 04dc B2FA82F2 		clz	r2, r2
 5293              	.LVL459:
 5294              		.loc 3 1093 10 view .LVU1669
 5295 04e0 B7E7     		b	.L365
 5296              	.LVL460:
 5297              	.L431:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5298              		.loc 3 1091 12 view .LVU1670
 5299 04e2 2022     		movs	r2, #32
 5300              	.LVL461:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5301              		.loc 3 1091 12 view .LVU1671
 5302 04e4 B5E7     		b	.L365
 5303              	.LVL462:
 5304              	.L463:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5305              		.loc 3 1091 12 view .LVU1672
 5306              	.LBE775:
 5307              	.LBE774:
 5308              	.LBB776:
 5309              	.LBB753:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5310              		.loc 2 3754 5 is_stmt 1 view .LVU1673
 5311 04e6 F26E     		ldr	r2, [r6, #108]
 5312 04e8 22F00042 		bic	r2, r2, #-2147483648
 5313 04ec F266     		str	r2, [r6, #108]
ARM GAS  /tmp/ccjQSYCi.s 			page 293


 5314 04ee 53E0     		b	.L330
 5315              	.LVL463:
 5316              	.L368:
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
 5317              		.loc 2 3754 5 is_stmt 0 view .LVU1674
 5318              	.LBE753:
 5319              	.LBE776:
 5320              	.LBB777:
 5321              	.LBI777:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5322              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1675
 5323              	.LBB778:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5324              		.loc 3 1050 3 discriminator 6 view .LVU1676
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5325              		.loc 3 1055 4 discriminator 6 view .LVU1677
 5326              		.syntax unified
 5327              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5328 04f0 94FAA4F2 		rbit r2, r4
 5329              	@ 0 "" 2
 5330              	.LVL464:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5331              		.loc 3 1068 3 discriminator 6 view .LVU1678
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5332              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1679
 5333              		.thumb
 5334              		.syntax unified
 5335              	.LBE778:
 5336              	.LBE777:
 5337              	.LBB779:
 5338              	.LBI779:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5339              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1680
 5340              	.LBB780:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5341              		.loc 3 1089 3 discriminator 6 view .LVU1681
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5342              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1682
 5343 04f4 12B1     		cbz	r2, .L432
 5344              		.loc 3 1093 3 is_stmt 1 view .LVU1683
 5345              		.loc 3 1093 10 is_stmt 0 view .LVU1684
 5346 04f6 B2FA82F2 		clz	r2, r2
 5347              	.LVL465:
 5348              		.loc 3 1093 10 view .LVU1685
 5349 04fa 34E7     		b	.L369
 5350              	.LVL466:
 5351              	.L432:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5352              		.loc 3 1091 12 view .LVU1686
 5353 04fc 2022     		movs	r2, #32
 5354              	.LVL467:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5355              		.loc 3 1091 12 view .LVU1687
 5356 04fe 32E7     		b	.L369
 5357              	.L456:
 5358              	.LBE780:
 5359              	.LBE779:
ARM GAS  /tmp/ccjQSYCi.s 			page 294


2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5360              		.loc 1 2226 11 is_stmt 1 view .LVU1688
 5361              	.LVL468:
 5362              	.LBB781:
 5363              	.LBI781:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5364              		.loc 2 3372 22 view .LVU1689
 5365              	.LBB782:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 5366              		.loc 2 3374 3 view .LVU1690
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5367              		.loc 2 3376 3 view .LVU1691
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5368              		.loc 2 3385 5 view .LVU1692
 5369 0500 3A6E     		ldr	r2, [r7, #96]
 5370 0502 02F00042 		and	r2, r2, #-2147483648
 5371 0506 04F0F844 		and	r4, r4, #2080374784
 5372              	.LVL469:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5373              		.loc 2 3385 5 is_stmt 0 view .LVU1693
 5374 050a 1443     		orrs	r4, r4, r2
 5375 050c 3C66     		str	r4, [r7, #96]
 5376              	.LVL470:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5377              		.loc 2 3389 1 view .LVU1694
 5378 050e 2DE7     		b	.L371
 5379              	.LVL471:
 5380              	.L372:
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5381              		.loc 2 3389 1 view .LVU1695
 5382              	.LBE782:
 5383              	.LBE781:
 5384              	.LBB783:
 5385              	.LBI783:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5386              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1696
 5387              	.LBB784:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5388              		.loc 3 1050 3 discriminator 6 view .LVU1697
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5389              		.loc 3 1055 4 discriminator 6 view .LVU1698
 5390              		.syntax unified
 5391              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5392 0510 94FAA4F2 		rbit r2, r4
 5393              	@ 0 "" 2
 5394              	.LVL472:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5395              		.loc 3 1068 3 discriminator 6 view .LVU1699
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5396              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1700
 5397              		.thumb
 5398              		.syntax unified
 5399              	.LBE784:
 5400              	.LBE783:
 5401              	.LBB785:
 5402              	.LBI785:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 295


 5403              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1701
 5404              	.LBB786:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5405              		.loc 3 1089 3 discriminator 6 view .LVU1702
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5406              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1703
 5407 0514 12B1     		cbz	r2, .L433
 5408              		.loc 3 1093 3 is_stmt 1 view .LVU1704
 5409              		.loc 3 1093 10 is_stmt 0 view .LVU1705
 5410 0516 B2FA82F2 		clz	r2, r2
 5411              	.LVL473:
 5412              		.loc 3 1093 10 view .LVU1706
 5413 051a 34E7     		b	.L373
 5414              	.LVL474:
 5415              	.L433:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5416              		.loc 3 1091 12 view .LVU1707
 5417 051c 2022     		movs	r2, #32
 5418              	.LVL475:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5419              		.loc 3 1091 12 view .LVU1708
 5420 051e 32E7     		b	.L373
 5421              	.L457:
 5422              	.LBE786:
 5423              	.LBE785:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5424              		.loc 1 2230 11 is_stmt 1 view .LVU1709
 5425              	.LVL476:
 5426              	.LBB787:
 5427              	.LBI787:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5428              		.loc 2 3372 22 view .LVU1710
 5429              	.LBB788:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 5430              		.loc 2 3374 3 view .LVU1711
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5431              		.loc 2 3376 3 view .LVU1712
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5432              		.loc 2 3376 6 is_stmt 0 view .LVU1713
 5433 0520 314A     		ldr	r2, .L475
 5434 0522 9642     		cmp	r6, r2
 5435 0524 07D0     		beq	.L466
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5436              		.loc 2 3385 5 is_stmt 1 view .LVU1714
 5437 0526 726E     		ldr	r2, [r6, #100]
 5438 0528 02F00042 		and	r2, r2, #-2147483648
 5439 052c 04F0F844 		and	r4, r4, #2080374784
 5440              	.LVL477:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5441              		.loc 2 3385 5 is_stmt 0 view .LVU1715
 5442 0530 1443     		orrs	r4, r4, r2
 5443 0532 7466     		str	r4, [r6, #100]
 5444              	.LVL478:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5445              		.loc 2 3385 5 view .LVU1716
 5446 0534 2AE7     		b	.L375
 5447              	.LVL479:
ARM GAS  /tmp/ccjQSYCi.s 			page 296


 5448              	.L466:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5449              		.loc 2 3378 5 is_stmt 1 view .LVU1717
 5450 0536 726E     		ldr	r2, [r6, #100]
 5451 0538 04F0F842 		and	r2, r4, #2080374784
 5452 053c 42F00042 		orr	r2, r2, #-2147483648
 5453 0540 7266     		str	r2, [r6, #100]
 5454 0542 23E7     		b	.L375
 5455              	.LVL480:
 5456              	.L377:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5457              		.loc 2 3378 5 is_stmt 0 view .LVU1718
 5458              	.LBE788:
 5459              	.LBE787:
 5460              	.LBB789:
 5461              	.LBI789:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5462              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1719
 5463              	.LBB790:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5464              		.loc 3 1050 3 discriminator 6 view .LVU1720
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5465              		.loc 3 1055 4 discriminator 6 view .LVU1721
 5466              		.syntax unified
 5467              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5468 0544 95FAA5F2 		rbit r2, r5
 5469              	@ 0 "" 2
 5470              	.LVL481:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5471              		.loc 3 1068 3 discriminator 6 view .LVU1722
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5472              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1723
 5473              		.thumb
 5474              		.syntax unified
 5475              	.LBE790:
 5476              	.LBE789:
 5477              	.LBB791:
 5478              	.LBI791:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5479              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1724
 5480              	.LBB792:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5481              		.loc 3 1089 3 discriminator 6 view .LVU1725
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5482              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1726
 5483 0548 12B1     		cbz	r2, .L434
 5484              		.loc 3 1093 3 is_stmt 1 view .LVU1727
 5485              		.loc 3 1093 10 is_stmt 0 view .LVU1728
 5486 054a B2FA82F2 		clz	r2, r2
 5487              	.LVL482:
 5488              		.loc 3 1093 10 view .LVU1729
 5489 054e 2CE7     		b	.L378
 5490              	.LVL483:
 5491              	.L434:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5492              		.loc 3 1091 12 view .LVU1730
 5493 0550 2022     		movs	r2, #32
ARM GAS  /tmp/ccjQSYCi.s 			page 297


 5494              	.LVL484:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5495              		.loc 3 1091 12 view .LVU1731
 5496 0552 2AE7     		b	.L378
 5497              	.L458:
 5498              	.LBE792:
 5499              	.LBE791:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
 5500              		.loc 1 2234 11 is_stmt 1 view .LVU1732
 5501              	.LVL485:
 5502              	.LBB793:
 5503              	.LBI793:
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5504              		.loc 2 3372 22 view .LVU1733
 5505              	.LBB794:
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 5506              		.loc 2 3374 3 view .LVU1734
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5507              		.loc 2 3376 3 view .LVU1735
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5508              		.loc 2 3376 6 is_stmt 0 view .LVU1736
 5509 0554 244A     		ldr	r2, .L475
 5510 0556 9442     		cmp	r4, r2
 5511 0558 07D0     		beq	.L467
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5512              		.loc 2 3385 5 is_stmt 1 view .LVU1737
 5513 055a FA68     		ldr	r2, [r7, #12]
 5514 055c 02F00042 		and	r2, r2, #-2147483648
 5515 0560 05F0F845 		and	r5, r5, #2080374784
 5516              	.LVL486:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5517              		.loc 2 3385 5 is_stmt 0 view .LVU1738
 5518 0564 1543     		orrs	r5, r5, r2
 5519 0566 FD60     		str	r5, [r7, #12]
 5520              	.LVL487:
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5521              		.loc 2 3385 5 view .LVU1739
 5522 0568 22E7     		b	.L380
 5523              	.LVL488:
 5524              	.L467:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5525              		.loc 2 3378 5 is_stmt 1 view .LVU1740
 5526 056a FA68     		ldr	r2, [r7, #12]
 5527 056c 05F0F842 		and	r2, r5, #2080374784
 5528 0570 42F00042 		orr	r2, r2, #-2147483648
 5529 0574 FA60     		str	r2, [r7, #12]
 5530 0576 1BE7     		b	.L380
 5531              	.LVL489:
 5532              	.L382:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5533              		.loc 2 3378 5 is_stmt 0 view .LVU1741
 5534              	.LBE794:
 5535              	.LBE793:
 5536              	.LBB795:
 5537              	.LBI795:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5538              		.loc 3 1048 31 is_stmt 1 discriminator 6 view .LVU1742
ARM GAS  /tmp/ccjQSYCi.s 			page 298


 5539              	.LBB796:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5540              		.loc 3 1050 3 discriminator 6 view .LVU1743
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5541              		.loc 3 1055 4 discriminator 6 view .LVU1744
 5542              		.syntax unified
 5543              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5544 0578 94FAA4F2 		rbit r2, r4
 5545              	@ 0 "" 2
 5546              	.LVL490:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5547              		.loc 3 1068 3 discriminator 6 view .LVU1745
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5548              		.loc 3 1068 3 is_stmt 0 discriminator 6 view .LVU1746
 5549              		.thumb
 5550              		.syntax unified
 5551              	.LBE796:
 5552              	.LBE795:
 5553              	.LBB797:
 5554              	.LBI797:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5555              		.loc 3 1078 30 is_stmt 1 discriminator 6 view .LVU1747
 5556              	.LBB798:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5557              		.loc 3 1089 3 discriminator 6 view .LVU1748
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5558              		.loc 3 1089 6 is_stmt 0 discriminator 6 view .LVU1749
 5559 057c 12B1     		cbz	r2, .L435
 5560              		.loc 3 1093 3 is_stmt 1 view .LVU1750
 5561              		.loc 3 1093 10 is_stmt 0 view .LVU1751
 5562 057e B2FA82F2 		clz	r2, r2
 5563              	.LVL491:
 5564              		.loc 3 1093 10 view .LVU1752
 5565 0582 22E7     		b	.L383
 5566              	.LVL492:
 5567              	.L435:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5568              		.loc 3 1091 12 view .LVU1753
 5569 0584 2022     		movs	r2, #32
 5570              	.LVL493:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5571              		.loc 3 1091 12 view .LVU1754
 5572 0586 20E7     		b	.L383
 5573              	.LVL494:
 5574              	.L459:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5575              		.loc 3 1091 12 view .LVU1755
 5576              	.LBE798:
 5577              	.LBE797:
 5578              	.LBB799:
 5579              	.LBB734:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5580              		.loc 2 3378 5 is_stmt 1 view .LVU1756
 5581 0588 F26E     		ldr	r2, [r6, #108]
 5582 058a 04F0F842 		and	r2, r4, #2080374784
 5583 058e 42F00042 		orr	r2, r2, #-2147483648
 5584 0592 F266     		str	r2, [r6, #108]
ARM GAS  /tmp/ccjQSYCi.s 			page 299


 5585 0594 00E0     		b	.L330
 5586              	.LVL495:
 5587              	.L427:
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 5588              		.loc 2 3378 5 is_stmt 0 view .LVU1757
 5589              	.LBE734:
 5590              	.LBE799:
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 5591              		.loc 1 1795 21 view .LVU1758
 5592 0596 0020     		movs	r0, #0
 5593              	.LVL496:
 5594              	.L330:
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 5595              		.loc 1 2249 3 is_stmt 1 view .LVU1759
 5596              		.loc 1 2249 7 is_stmt 0 view .LVU1760
 5597 0598 1A68     		ldr	r2, [r3]
 5598              	.LVL497:
 5599              	.LBB800:
 5600              	.LBI800:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5601              		.loc 2 6920 26 is_stmt 1 view .LVU1761
 5602              	.LBB801:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5603              		.loc 2 6922 3 view .LVU1762
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5604              		.loc 2 6922 12 is_stmt 0 view .LVU1763
 5605 059a 9468     		ldr	r4, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5606              		.loc 2 6922 68 view .LVU1764
 5607 059c 14F0010F 		tst	r4, #1
 5608 05a0 1DD1     		bne	.L386
 5609              	.LVL498:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5610              		.loc 2 6922 68 view .LVU1765
 5611              	.LBE801:
 5612              	.LBE800:
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 5613              		.loc 1 2252 5 is_stmt 1 view .LVU1766
 5614 05a2 0C68     		ldr	r4, [r1]
 5615 05a4 CE68     		ldr	r6, [r1, #12]
 5616              	.LVL499:
 5617              	.LBB802:
 5618              	.LBI802:
5548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5619              		.loc 2 5548 22 view .LVU1767
ARM GAS  /tmp/ccjQSYCi.s 			page 300


 5620              	.LBB803:
5554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5621              		.loc 2 5554 3 view .LVU1768
5554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
 5622              		.loc 2 5554 6 is_stmt 0 view .LVU1769
 5623 05a6 104D     		ldr	r5, .L475
 5624 05a8 AA42     		cmp	r2, r5
 5625 05aa 23D0     		beq	.L468
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5626              		.loc 2 5562 5 is_stmt 1 view .LVU1770
 5627 05ac D2F8C050 		ldr	r5, [r2, #192]
 5628 05b0 C4F31307 		ubfx	r7, r4, #0, #20
 5629 05b4 25EA0705 		bic	r5, r5, r7
 5630 05b8 06F01806 		and	r6, r6, #24
 5631              	.LVL500:
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5632              		.loc 2 5562 5 is_stmt 0 view .LVU1771
 5633 05bc 0B4F     		ldr	r7, .L475+4
 5634 05be 27FA06F6 		lsr	r6, r7, r6
 5635 05c2 3440     		ands	r4, r4, r6
 5636              	.LVL501:
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5637              		.loc 2 5562 5 view .LVU1772
 5638 05c4 C4F31304 		ubfx	r4, r4, #0, #20
 5639 05c8 2C43     		orrs	r4, r4, r5
 5640 05ca C2F8C040 		str	r4, [r2, #192]
 5641              	.LVL502:
 5642              	.L388:
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5643              		.loc 2 5562 5 view .LVU1773
 5644              	.LBE803:
 5645              	.LBE802:
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 5646              		.loc 1 2256 5 is_stmt 1 view .LVU1774
 5647              		.loc 1 2256 24 is_stmt 0 view .LVU1775
 5648 05ce CC68     		ldr	r4, [r1, #12]
 5649              		.loc 1 2256 8 view .LVU1776
 5650 05d0 074A     		ldr	r2, .L475+8
 5651 05d2 9442     		cmp	r4, r2
 5652 05d4 20D0     		beq	.L469
 5653              	.L389:
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 5654              		.loc 1 2268 5 is_stmt 1 view .LVU1777
ARM GAS  /tmp/ccjQSYCi.s 			page 301


 5655              		.loc 1 2268 9 is_stmt 0 view .LVU1778
 5656 05d6 0968     		ldr	r1, [r1]
 5657              	.LVL503:
 5658              		.loc 1 2268 8 view .LVU1779
 5659 05d8 0029     		cmp	r1, #0
 5660 05da C0F2DC80 		blt	.L470
 5661              	.LVL504:
 5662              	.L386:
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* If the requested internal measurement path has already been enabled, */
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* bypass the configuration processing.                                 */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_c
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Delay for temperature sensor stabilization time */
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Wait loop initialization and execution */
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /* Note: Variable divided by 2 to compensate partially              */
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /*       CPU processing cycles, scaling in us split to not          */
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             /*       exceed 32 bits register capacity and handle low frequency. */
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (1000
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****               wait_loop_index--;
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_ch
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           if (ADC_VREFINT_INSTANCE(hadc))
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_IN
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         else
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           /* nothing to do */
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         }
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
ARM GAS  /tmp/ccjQSYCi.s 			page 302


2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       else
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 5663              		.loc 1 2331 3 is_stmt 1 view .LVU1780
 5664              		.loc 1 2331 3 view .LVU1781
 5665 05de 0022     		movs	r2, #0
 5666 05e0 83F85C20 		strb	r2, [r3, #92]
 5667              		.loc 1 2331 3 view .LVU1782
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 5668              		.loc 1 2334 3 view .LVU1783
 5669              	.LVL505:
 5670              	.L314:
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 5671              		.loc 1 2335 1 is_stmt 0 view .LVU1784
 5672 05e4 03B0     		add	sp, sp, #12
 5673              	.LCFI42:
 5674              		.cfi_remember_state
 5675              		.cfi_def_cfa_offset 20
 5676              		@ sp needed
 5677 05e6 F0BD     		pop	{r4, r5, r6, r7, pc}
 5678              	.L476:
 5679              		.align	2
 5680              	.L475:
 5681 05e8 00600258 		.word	1476550656
 5682 05ec FFFF0F00 		.word	1048575
 5683 05f0 0000FF47 		.word	1207894016
 5684              	.LVL506:
 5685              	.L468:
 5686              	.LCFI43:
 5687              		.cfi_restore_state
 5688              	.LBB805:
 5689              	.LBB804:
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5690              		.loc 2 5556 5 is_stmt 1 view .LVU1785
 5691 05f4 D2F8B070 		ldr	r7, [r2, #176]
 5692 05f8 C4F31305 		ubfx	r5, r4, #0, #20
 5693 05fc 27EA0507 		bic	r7, r7, r5
 5694 0600 06F01806 		and	r6, r6, #24
 5695              	.LVL507:
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5696              		.loc 2 5556 5 is_stmt 0 view .LVU1786
 5697 0604 A34D     		ldr	r5, .L477
 5698 0606 25FA06F6 		lsr	r6, r5, r6
 5699 060a 3440     		ands	r4, r4, r6
ARM GAS  /tmp/ccjQSYCi.s 			page 303


 5700              	.LVL508:
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5701              		.loc 2 5556 5 view .LVU1787
 5702 060c C4F31304 		ubfx	r4, r4, #0, #20
 5703 0610 3C43     		orrs	r4, r4, r7
 5704 0612 C2F8B040 		str	r4, [r2, #176]
 5705              	.LVL509:
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5706              		.loc 2 5556 5 view .LVU1788
 5707 0616 DAE7     		b	.L388
 5708              	.LVL510:
 5709              	.L469:
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 5710              		.loc 2 5556 5 view .LVU1789
 5711              	.LBE804:
 5712              	.LBE805:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5713              		.loc 1 2259 7 is_stmt 1 view .LVU1790
 5714 0618 1E68     		ldr	r6, [r3]
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5715              		.loc 1 2259 64 is_stmt 0 view .LVU1791
 5716 061a 0A68     		ldr	r2, [r1]
 5717 061c C2F31307 		ubfx	r7, r2, #0, #20
 5718 0620 002F     		cmp	r7, #0
 5719 0622 38D1     		bne	.L390
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5720              		.loc 1 2259 64 discriminator 1 view .LVU1792
 5721 0624 940E     		lsrs	r4, r2, #26
 5722 0626 0134     		adds	r4, r4, #1
 5723 0628 04F01F04 		and	r4, r4, #31
 5724 062c 092C     		cmp	r4, #9
 5725 062e 8CBF     		ite	hi
 5726 0630 0024     		movhi	r4, #0
 5727 0632 0124     		movls	r4, #1
 5728              	.L391:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5729              		.loc 1 2259 7 discriminator 4 view .LVU1793
 5730 0634 002C     		cmp	r4, #0
 5731 0636 66D0     		beq	.L393
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5732              		.loc 1 2259 64 discriminator 5 view .LVU1794
 5733 0638 002F     		cmp	r7, #0
 5734 063a 3BD1     		bne	.L394
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5735              		.loc 1 2259 64 discriminator 7 view .LVU1795
 5736 063c 950E     		lsrs	r5, r2, #26
 5737 063e 0135     		adds	r5, r5, #1
 5738 0640 AD06     		lsls	r5, r5, #26
 5739 0642 05F0F845 		and	r5, r5, #2080374784
 5740              	.L395:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5741              		.loc 1 2259 64 discriminator 10 view .LVU1796
 5742 0646 002F     		cmp	r7, #0
 5743 0648 40D1     		bne	.L397
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5744              		.loc 1 2259 64 discriminator 11 view .LVU1797
 5745 064a 940E     		lsrs	r4, r2, #26
ARM GAS  /tmp/ccjQSYCi.s 			page 304


 5746 064c 0134     		adds	r4, r4, #1
 5747 064e 04F01F0C 		and	ip, r4, #31
 5748 0652 0124     		movs	r4, #1
 5749 0654 04FA0CF4 		lsl	r4, r4, ip
 5750              	.L398:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5751              		.loc 1 2259 64 discriminator 14 view .LVU1798
 5752 0658 2543     		orrs	r5, r5, r4
 5753 065a 002F     		cmp	r7, #0
 5754 065c 45D1     		bne	.L400
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5755              		.loc 1 2259 64 discriminator 15 view .LVU1799
 5756 065e 920E     		lsrs	r2, r2, #26
 5757 0660 0132     		adds	r2, r2, #1
 5758 0662 02F01F02 		and	r2, r2, #31
 5759 0666 02EB4202 		add	r2, r2, r2, lsl #1
 5760 066a 1205     		lsls	r2, r2, #20
 5761              	.L401:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5762              		.loc 1 2259 7 discriminator 18 view .LVU1800
 5763 066c 2A43     		orrs	r2, r2, r5
 5764              	.L403:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5765              		.loc 1 2259 7 discriminator 32 view .LVU1801
 5766 066e 8D68     		ldr	r5, [r1, #8]
 5767              	.LVL511:
 5768              	.LBB806:
 5769              	.LBI806:
5402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5770              		.loc 2 5402 22 is_stmt 1 discriminator 32 view .LVU1802
 5771              	.LBB807:
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5772              		.loc 2 5408 3 discriminator 32 view .LVU1803
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5773              		.loc 2 5408 25 is_stmt 0 discriminator 32 view .LVU1804
 5774 0670 1436     		adds	r6, r6, #20
 5775              	.LVL512:
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5776              		.loc 2 5408 25 discriminator 32 view .LVU1805
 5777 0672 540E     		lsrs	r4, r2, #25
 5778 0674 A400     		lsls	r4, r4, #2
 5779 0676 04F00404 		and	r4, r4, #4
 5780              	.LVL513:
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 5781              		.loc 2 5410 3 is_stmt 1 discriminator 32 view .LVU1806
 5782 067a 3759     		ldr	r7, [r6, r4]
 5783 067c C2F30452 		ubfx	r2, r2, #20, #5
 5784              	.LVL514:
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 5785              		.loc 2 5410 3 is_stmt 0 discriminator 32 view .LVU1807
 5786 0680 4FF0070C 		mov	ip, #7
 5787 0684 0CFA02FC 		lsl	ip, ip, r2
 5788 0688 27EA0C07 		bic	r7, r7, ip
 5789 068c 05FA02F2 		lsl	r2, r5, r2
 5790 0690 3A43     		orrs	r2, r2, r7
 5791 0692 3251     		str	r2, [r6, r4]
 5792              	.LVL515:
ARM GAS  /tmp/ccjQSYCi.s 			page 305


5413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5793              		.loc 2 5413 1 discriminator 32 view .LVU1808
 5794 0694 9FE7     		b	.L389
 5795              	.LVL516:
 5796              	.L390:
5413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5797              		.loc 2 5413 1 discriminator 32 view .LVU1809
 5798              	.LBE807:
 5799              	.LBE806:
 5800              	.LBB808:
 5801              	.LBI808:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5802              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1810
 5803              	.LBB809:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5804              		.loc 3 1050 3 discriminator 2 view .LVU1811
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5805              		.loc 3 1055 4 discriminator 2 view .LVU1812
 5806              		.syntax unified
 5807              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5808 0696 92FAA2F4 		rbit r4, r2
 5809              	@ 0 "" 2
 5810              	.LVL517:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5811              		.loc 3 1068 3 discriminator 2 view .LVU1813
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5812              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1814
 5813              		.thumb
 5814              		.syntax unified
 5815              	.LBE809:
 5816              	.LBE808:
 5817              	.LBB810:
 5818              	.LBI810:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5819              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1815
 5820              	.LBB811:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5821              		.loc 3 1089 3 discriminator 2 view .LVU1816
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5822              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1817
 5823 069a 4CB1     		cbz	r4, .L436
 5824              		.loc 3 1093 3 is_stmt 1 view .LVU1818
 5825              		.loc 3 1093 10 is_stmt 0 view .LVU1819
 5826 069c B4FA84F4 		clz	r4, r4
 5827              	.LVL518:
 5828              	.L392:
 5829              		.loc 3 1093 10 view .LVU1820
 5830              	.LBE811:
 5831              	.LBE810:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5832              		.loc 1 2259 64 view .LVU1821
 5833 06a0 0134     		adds	r4, r4, #1
 5834 06a2 04F01F04 		and	r4, r4, #31
 5835 06a6 092C     		cmp	r4, #9
 5836 06a8 8CBF     		ite	hi
 5837 06aa 0024     		movhi	r4, #0
 5838 06ac 0124     		movls	r4, #1
ARM GAS  /tmp/ccjQSYCi.s 			page 306


 5839 06ae C1E7     		b	.L391
 5840              	.LVL519:
 5841              	.L436:
 5842              	.LBB813:
 5843              	.LBB812:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5844              		.loc 3 1091 12 view .LVU1822
 5845 06b0 2024     		movs	r4, #32
 5846              	.LVL520:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5847              		.loc 3 1091 12 view .LVU1823
 5848 06b2 F5E7     		b	.L392
 5849              	.L394:
 5850              	.LVL521:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5851              		.loc 3 1091 12 view .LVU1824
 5852              	.LBE812:
 5853              	.LBE813:
 5854              	.LBB814:
 5855              	.LBI814:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5856              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU1825
 5857              	.LBB815:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5858              		.loc 3 1050 3 discriminator 8 view .LVU1826
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5859              		.loc 3 1055 4 discriminator 8 view .LVU1827
 5860              		.syntax unified
 5861              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5862 06b4 92FAA2F5 		rbit r5, r2
 5863              	@ 0 "" 2
 5864              	.LVL522:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5865              		.loc 3 1068 3 discriminator 8 view .LVU1828
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5866              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU1829
 5867              		.thumb
 5868              		.syntax unified
 5869              	.LBE815:
 5870              	.LBE814:
 5871              	.LBB816:
 5872              	.LBI816:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5873              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU1830
 5874              	.LBB817:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5875              		.loc 3 1089 3 discriminator 8 view .LVU1831
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5876              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU1832
 5877 06b8 35B1     		cbz	r5, .L437
 5878              		.loc 3 1093 3 is_stmt 1 view .LVU1833
 5879              		.loc 3 1093 10 is_stmt 0 view .LVU1834
 5880 06ba B5FA85F5 		clz	r5, r5
 5881              	.LVL523:
 5882              	.L396:
 5883              		.loc 3 1093 10 view .LVU1835
 5884              	.LBE817:
ARM GAS  /tmp/ccjQSYCi.s 			page 307


 5885              	.LBE816:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5886              		.loc 1 2259 64 view .LVU1836
 5887 06be 0135     		adds	r5, r5, #1
 5888 06c0 AD06     		lsls	r5, r5, #26
 5889 06c2 05F0F845 		and	r5, r5, #2080374784
 5890 06c6 BEE7     		b	.L395
 5891              	.LVL524:
 5892              	.L437:
 5893              	.LBB819:
 5894              	.LBB818:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5895              		.loc 3 1091 12 view .LVU1837
 5896 06c8 2025     		movs	r5, #32
 5897              	.LVL525:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5898              		.loc 3 1091 12 view .LVU1838
 5899 06ca F8E7     		b	.L396
 5900              	.L397:
 5901              	.LVL526:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5902              		.loc 3 1091 12 view .LVU1839
 5903              	.LBE818:
 5904              	.LBE819:
 5905              	.LBB820:
 5906              	.LBI820:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5907              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU1840
 5908              	.LBB821:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5909              		.loc 3 1050 3 discriminator 12 view .LVU1841
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5910              		.loc 3 1055 4 discriminator 12 view .LVU1842
 5911              		.syntax unified
 5912              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5913 06cc 92FAA2F4 		rbit r4, r2
 5914              	@ 0 "" 2
 5915              	.LVL527:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5916              		.loc 3 1068 3 discriminator 12 view .LVU1843
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5917              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU1844
 5918              		.thumb
 5919              		.syntax unified
 5920              	.LBE821:
 5921              	.LBE820:
 5922              	.LBB822:
 5923              	.LBI822:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5924              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU1845
 5925              	.LBB823:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5926              		.loc 3 1089 3 discriminator 12 view .LVU1846
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5927              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU1847
 5928 06d0 4CB1     		cbz	r4, .L438
 5929              		.loc 3 1093 3 is_stmt 1 view .LVU1848
ARM GAS  /tmp/ccjQSYCi.s 			page 308


 5930              		.loc 3 1093 10 is_stmt 0 view .LVU1849
 5931 06d2 B4FA84F4 		clz	r4, r4
 5932              	.LVL528:
 5933              	.L399:
 5934              		.loc 3 1093 10 view .LVU1850
 5935              	.LBE823:
 5936              	.LBE822:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5937              		.loc 1 2259 64 view .LVU1851
 5938 06d6 0134     		adds	r4, r4, #1
 5939 06d8 04F01F04 		and	r4, r4, #31
 5940 06dc 4FF0010C 		mov	ip, #1
 5941 06e0 0CFA04F4 		lsl	r4, ip, r4
 5942 06e4 B8E7     		b	.L398
 5943              	.LVL529:
 5944              	.L438:
 5945              	.LBB825:
 5946              	.LBB824:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5947              		.loc 3 1091 12 view .LVU1852
 5948 06e6 2024     		movs	r4, #32
 5949              	.LVL530:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5950              		.loc 3 1091 12 view .LVU1853
 5951 06e8 F5E7     		b	.L399
 5952              	.L400:
 5953              	.LVL531:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5954              		.loc 3 1091 12 view .LVU1854
 5955              	.LBE824:
 5956              	.LBE825:
 5957              	.LBB826:
 5958              	.LBI826:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5959              		.loc 3 1048 31 is_stmt 1 discriminator 16 view .LVU1855
 5960              	.LBB827:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 5961              		.loc 3 1050 3 discriminator 16 view .LVU1856
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5962              		.loc 3 1055 4 discriminator 16 view .LVU1857
 5963              		.syntax unified
 5964              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5965 06ea 92FAA2F2 		rbit r2, r2
 5966              	@ 0 "" 2
 5967              	.LVL532:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5968              		.loc 3 1068 3 discriminator 16 view .LVU1858
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5969              		.loc 3 1068 3 is_stmt 0 discriminator 16 view .LVU1859
 5970              		.thumb
 5971              		.syntax unified
 5972              	.LBE827:
 5973              	.LBE826:
 5974              	.LBB828:
 5975              	.LBI828:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 5976              		.loc 3 1078 30 is_stmt 1 discriminator 16 view .LVU1860
ARM GAS  /tmp/ccjQSYCi.s 			page 309


 5977              	.LBB829:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5978              		.loc 3 1089 3 discriminator 16 view .LVU1861
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5979              		.loc 3 1089 6 is_stmt 0 discriminator 16 view .LVU1862
 5980 06ee 42B1     		cbz	r2, .L439
 5981              		.loc 3 1093 3 is_stmt 1 view .LVU1863
 5982              		.loc 3 1093 10 is_stmt 0 view .LVU1864
 5983 06f0 B2FA82F2 		clz	r2, r2
 5984              	.LVL533:
 5985              	.L402:
 5986              		.loc 3 1093 10 view .LVU1865
 5987              	.LBE829:
 5988              	.LBE828:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 5989              		.loc 1 2259 64 view .LVU1866
 5990 06f4 0132     		adds	r2, r2, #1
 5991 06f6 02F01F02 		and	r2, r2, #31
 5992 06fa 02EB4202 		add	r2, r2, r2, lsl #1
 5993 06fe 1205     		lsls	r2, r2, #20
 5994 0700 B4E7     		b	.L401
 5995              	.LVL534:
 5996              	.L439:
 5997              	.LBB831:
 5998              	.LBB830:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5999              		.loc 3 1091 12 view .LVU1867
 6000 0702 2022     		movs	r2, #32
 6001              	.LVL535:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6002              		.loc 3 1091 12 view .LVU1868
 6003 0704 F6E7     		b	.L402
 6004              	.L393:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6005              		.loc 3 1091 12 view .LVU1869
 6006              	.LBE830:
 6007              	.LBE831:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6008              		.loc 1 2259 64 discriminator 6 view .LVU1870
 6009 0706 D7B9     		cbnz	r7, .L404
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6010              		.loc 1 2259 64 discriminator 20 view .LVU1871
 6011 0708 950E     		lsrs	r5, r2, #26
 6012 070a 0135     		adds	r5, r5, #1
 6013 070c AD06     		lsls	r5, r5, #26
 6014 070e 05F0F845 		and	r5, r5, #2080374784
 6015              	.L405:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6016              		.loc 1 2259 64 discriminator 23 view .LVU1872
 6017 0712 07BB     		cbnz	r7, .L407
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6018              		.loc 1 2259 64 discriminator 24 view .LVU1873
 6019 0714 940E     		lsrs	r4, r2, #26
 6020 0716 0134     		adds	r4, r4, #1
 6021 0718 04F01F0C 		and	ip, r4, #31
 6022 071c 0124     		movs	r4, #1
 6023 071e 04FA0CF4 		lsl	r4, r4, ip
ARM GAS  /tmp/ccjQSYCi.s 			page 310


 6024              	.L408:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6025              		.loc 1 2259 64 discriminator 27 view .LVU1874
 6026 0722 2543     		orrs	r5, r5, r4
 6027 0724 37BB     		cbnz	r7, .L410
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6028              		.loc 1 2259 64 discriminator 28 view .LVU1875
 6029 0726 940E     		lsrs	r4, r2, #26
 6030 0728 0134     		adds	r4, r4, #1
 6031 072a 04F01F04 		and	r4, r4, #31
 6032 072e 04EB4402 		add	r2, r4, r4, lsl #1
 6033 0732 1E3A     		subs	r2, r2, #30
 6034 0734 1205     		lsls	r2, r2, #20
 6035 0736 42F00072 		orr	r2, r2, #33554432
 6036              	.L411:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6037              		.loc 1 2259 7 discriminator 31 view .LVU1876
 6038 073a 2A43     		orrs	r2, r2, r5
 6039 073c 97E7     		b	.L403
 6040              	.L404:
 6041              	.LVL536:
 6042              	.LBB832:
 6043              	.LBI832:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6044              		.loc 3 1048 31 is_stmt 1 discriminator 21 view .LVU1877
 6045              	.LBB833:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 6046              		.loc 3 1050 3 discriminator 21 view .LVU1878
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6047              		.loc 3 1055 4 discriminator 21 view .LVU1879
 6048              		.syntax unified
 6049              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6050 073e 92FAA2F5 		rbit r5, r2
 6051              	@ 0 "" 2
 6052              	.LVL537:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6053              		.loc 3 1068 3 discriminator 21 view .LVU1880
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6054              		.loc 3 1068 3 is_stmt 0 discriminator 21 view .LVU1881
 6055              		.thumb
 6056              		.syntax unified
 6057              	.LBE833:
 6058              	.LBE832:
 6059              	.LBB834:
 6060              	.LBI834:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6061              		.loc 3 1078 30 is_stmt 1 discriminator 21 view .LVU1882
 6062              	.LBB835:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6063              		.loc 3 1089 3 discriminator 21 view .LVU1883
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6064              		.loc 3 1089 6 is_stmt 0 discriminator 21 view .LVU1884
 6065 0742 35B1     		cbz	r5, .L440
 6066              		.loc 3 1093 3 is_stmt 1 view .LVU1885
 6067              		.loc 3 1093 10 is_stmt 0 view .LVU1886
 6068 0744 B5FA85F5 		clz	r5, r5
 6069              	.LVL538:
ARM GAS  /tmp/ccjQSYCi.s 			page 311


 6070              	.L406:
 6071              		.loc 3 1093 10 view .LVU1887
 6072              	.LBE835:
 6073              	.LBE834:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6074              		.loc 1 2259 64 view .LVU1888
 6075 0748 0135     		adds	r5, r5, #1
 6076 074a AD06     		lsls	r5, r5, #26
 6077 074c 05F0F845 		and	r5, r5, #2080374784
 6078 0750 DFE7     		b	.L405
 6079              	.LVL539:
 6080              	.L440:
 6081              	.LBB837:
 6082              	.LBB836:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6083              		.loc 3 1091 12 view .LVU1889
 6084 0752 2025     		movs	r5, #32
 6085              	.LVL540:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6086              		.loc 3 1091 12 view .LVU1890
 6087 0754 F8E7     		b	.L406
 6088              	.L407:
 6089              	.LVL541:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6090              		.loc 3 1091 12 view .LVU1891
 6091              	.LBE836:
 6092              	.LBE837:
 6093              	.LBB838:
 6094              	.LBI838:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6095              		.loc 3 1048 31 is_stmt 1 discriminator 25 view .LVU1892
 6096              	.LBB839:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 6097              		.loc 3 1050 3 discriminator 25 view .LVU1893
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6098              		.loc 3 1055 4 discriminator 25 view .LVU1894
 6099              		.syntax unified
 6100              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6101 0756 92FAA2F4 		rbit r4, r2
 6102              	@ 0 "" 2
 6103              	.LVL542:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6104              		.loc 3 1068 3 discriminator 25 view .LVU1895
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6105              		.loc 3 1068 3 is_stmt 0 discriminator 25 view .LVU1896
 6106              		.thumb
 6107              		.syntax unified
 6108              	.LBE839:
 6109              	.LBE838:
 6110              	.LBB840:
 6111              	.LBI840:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6112              		.loc 3 1078 30 is_stmt 1 discriminator 25 view .LVU1897
 6113              	.LBB841:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6114              		.loc 3 1089 3 discriminator 25 view .LVU1898
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  /tmp/ccjQSYCi.s 			page 312


 6115              		.loc 3 1089 6 is_stmt 0 discriminator 25 view .LVU1899
 6116 075a 4CB1     		cbz	r4, .L441
 6117              		.loc 3 1093 3 is_stmt 1 view .LVU1900
 6118              		.loc 3 1093 10 is_stmt 0 view .LVU1901
 6119 075c B4FA84F4 		clz	r4, r4
 6120              	.LVL543:
 6121              	.L409:
 6122              		.loc 3 1093 10 view .LVU1902
 6123              	.LBE841:
 6124              	.LBE840:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6125              		.loc 1 2259 64 view .LVU1903
 6126 0760 0134     		adds	r4, r4, #1
 6127 0762 04F01F04 		and	r4, r4, #31
 6128 0766 4FF0010C 		mov	ip, #1
 6129 076a 0CFA04F4 		lsl	r4, ip, r4
 6130 076e D8E7     		b	.L408
 6131              	.LVL544:
 6132              	.L441:
 6133              	.LBB843:
 6134              	.LBB842:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6135              		.loc 3 1091 12 view .LVU1904
 6136 0770 2024     		movs	r4, #32
 6137              	.LVL545:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6138              		.loc 3 1091 12 view .LVU1905
 6139 0772 F5E7     		b	.L409
 6140              	.L410:
 6141              	.LVL546:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6142              		.loc 3 1091 12 view .LVU1906
 6143              	.LBE842:
 6144              	.LBE843:
 6145              	.LBB844:
 6146              	.LBI844:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6147              		.loc 3 1048 31 is_stmt 1 discriminator 29 view .LVU1907
 6148              	.LBB845:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 6149              		.loc 3 1050 3 discriminator 29 view .LVU1908
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 6150              		.loc 3 1055 4 discriminator 29 view .LVU1909
 6151              		.syntax unified
 6152              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6153 0774 92FAA2F2 		rbit r2, r2
 6154              	@ 0 "" 2
 6155              	.LVL547:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6156              		.loc 3 1068 3 discriminator 29 view .LVU1910
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6157              		.loc 3 1068 3 is_stmt 0 discriminator 29 view .LVU1911
 6158              		.thumb
 6159              		.syntax unified
 6160              	.LBE845:
 6161              	.LBE844:
 6162              	.LBB846:
ARM GAS  /tmp/ccjQSYCi.s 			page 313


 6163              	.LBI846:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 6164              		.loc 3 1078 30 is_stmt 1 discriminator 29 view .LVU1912
 6165              	.LBB847:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6166              		.loc 3 1089 3 discriminator 29 view .LVU1913
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 6167              		.loc 3 1089 6 is_stmt 0 discriminator 29 view .LVU1914
 6168 0778 5AB1     		cbz	r2, .L442
 6169              		.loc 3 1093 3 is_stmt 1 view .LVU1915
 6170              		.loc 3 1093 10 is_stmt 0 view .LVU1916
 6171 077a B2FA82F4 		clz	r4, r2
 6172              	.L412:
 6173              	.LVL548:
 6174              		.loc 3 1093 10 view .LVU1917
 6175              	.LBE847:
 6176              	.LBE846:
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
 6177              		.loc 1 2259 64 view .LVU1918
 6178 077e 0134     		adds	r4, r4, #1
 6179 0780 04F01F04 		and	r4, r4, #31
 6180 0784 04EB4402 		add	r2, r4, r4, lsl #1
 6181 0788 1E3A     		subs	r2, r2, #30
 6182 078a 1205     		lsls	r2, r2, #20
 6183 078c 42F00072 		orr	r2, r2, #33554432
 6184 0790 D3E7     		b	.L411
 6185              	.LVL549:
 6186              	.L442:
 6187              	.LBB849:
 6188              	.LBB848:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6189              		.loc 3 1091 12 view .LVU1919
 6190 0792 2024     		movs	r4, #32
 6191 0794 F3E7     		b	.L412
 6192              	.LVL550:
 6193              	.L470:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 6194              		.loc 3 1091 12 view .LVU1920
 6195              	.LBE848:
 6196              	.LBE849:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6197              		.loc 1 2273 7 is_stmt 1 view .LVU1921
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6198              		.loc 1 2273 11 is_stmt 0 view .LVU1922
 6199 0796 1C68     		ldr	r4, [r3]
 6200 0798 3F4D     		ldr	r5, .L477+4
 6201 079a 404A     		ldr	r2, .L477+8
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6202              		.loc 1 2273 93 view .LVU1923
 6203 079c 9442     		cmp	r4, r2
 6204 079e 18BF     		it	ne
 6205 07a0 AC42     		cmpne	r4, r5
 6206 07a2 0CBF     		ite	eq
 6207 07a4 0125     		moveq	r5, #1
 6208 07a6 0025     		movne	r5, #0
 6209 07a8 31D1     		bne	.L413
 6210              	.LVL551:
ARM GAS  /tmp/ccjQSYCi.s 			page 314


 6211              	.LBB850:
 6212              	.LBI850:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6213              		.loc 2 6920 26 is_stmt 1 view .LVU1924
 6214              	.LBB851:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6215              		.loc 2 6922 3 view .LVU1925
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6216              		.loc 2 6922 12 is_stmt 0 view .LVU1926
 6217 07aa A2F58072 		sub	r2, r2, #256
 6218 07ae 9268     		ldr	r2, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6219              		.loc 2 6922 68 view .LVU1927
 6220 07b0 12F00102 		ands	r2, r2, #1
 6221 07b4 00D0     		beq	.L414
 6222 07b6 0122     		movs	r2, #1
 6223              	.L414:
 6224              	.LVL552:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6225              		.loc 2 6922 68 view .LVU1928
 6226              	.LBE851:
 6227              	.LBE850:
 6228              	.LBB852:
 6229              	.LBI852:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6230              		.loc 2 6920 26 is_stmt 1 view .LVU1929
 6231              	.LBB853:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6232              		.loc 2 6922 3 view .LVU1930
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6233              		.loc 2 6922 12 is_stmt 0 view .LVU1931
 6234 07b8 384E     		ldr	r6, .L477+8
 6235 07ba B668     		ldr	r6, [r6, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6236              		.loc 2 6922 68 view .LVU1932
 6237 07bc 16F00106 		ands	r6, r6, #1
 6238 07c0 00D0     		beq	.L415
 6239 07c2 0126     		movs	r6, #1
 6240              	.L415:
 6241              	.LVL553:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6242              		.loc 2 6922 68 view .LVU1933
 6243              	.LBE853:
 6244              	.LBE852:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6245              		.loc 1 2273 93 view .LVU1934
 6246 07c4 3243     		orrs	r2, r6, r2
 6247 07c6 0CBF     		ite	eq
 6248 07c8 0122     		moveq	r2, #1
 6249 07ca 0022     		movne	r2, #0
 6250              	.L416:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6251              		.loc 1 2273 10 discriminator 4 view .LVU1935
 6252 07cc 002A     		cmp	r2, #0
 6253 07ce 58D0     		beq	.L418
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6254              		.loc 1 2275 9 is_stmt 1 view .LVU1936
ARM GAS  /tmp/ccjQSYCi.s 			page 315


2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6255              		.loc 1 2275 39 is_stmt 0 view .LVU1937
 6256 07d0 35B3     		cbz	r5, .L443
 6257 07d2 334D     		ldr	r5, .L477+12
 6258              	.L419:
 6259              	.LVL554:
 6260              	.LBB854:
 6261              	.LBI854:
2746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6262              		.loc 2 2746 26 is_stmt 1 discriminator 4 view .LVU1938
 6263              	.LBB855:
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6264              		.loc 2 2748 3 discriminator 4 view .LVU1939
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6265              		.loc 2 2748 21 is_stmt 0 discriminator 4 view .LVU1940
 6266 07d4 AA68     		ldr	r2, [r5, #8]
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6267              		.loc 2 2748 10 discriminator 4 view .LVU1941
 6268 07d6 02F0E077 		and	r7, r2, #29360128
 6269              	.LVL555:
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6270              		.loc 2 2748 10 discriminator 4 view .LVU1942
 6271              	.LBE855:
 6272              	.LBE854:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6273              		.loc 1 2279 9 is_stmt 1 discriminator 4 view .LVU1943
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6274              		.loc 1 2279 12 is_stmt 0 discriminator 4 view .LVU1944
 6275 07da 324E     		ldr	r6, .L477+16
 6276 07dc B142     		cmp	r1, r6
 6277 07de 21D0     		beq	.L471
 6278              	.L420:
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6279              		.loc 1 2297 14 is_stmt 1 view .LVU1945
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6280              		.loc 1 2297 17 is_stmt 0 view .LVU1946
 6281 07e0 314E     		ldr	r6, .L477+20
 6282 07e2 B142     		cmp	r1, r6
 6283 07e4 3ED0     		beq	.L472
 6284              	.L423:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6285              		.loc 1 2304 14 is_stmt 1 view .LVU1947
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6286              		.loc 1 2304 17 is_stmt 0 view .LVU1948
 6287 07e6 314E     		ldr	r6, .L477+24
 6288 07e8 B142     		cmp	r1, r6
 6289 07ea 7FF4F8AE 		bne	.L386
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6290              		.loc 1 2304 76 discriminator 1 view .LVU1949
 6291 07ee 12F4800F 		tst	r2, #4194304
 6292 07f2 7FF4F4AE 		bne	.L386
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6293              		.loc 1 2306 11 is_stmt 1 view .LVU1950
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6294              		.loc 1 2306 14 is_stmt 0 view .LVU1951
 6295 07f6 2E4A     		ldr	r2, .L477+28
 6296 07f8 9442     		cmp	r4, r2
ARM GAS  /tmp/ccjQSYCi.s 			page 316


 6297 07fa 7FF4F0AE 		bne	.L386
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 6298              		.loc 1 2308 13 is_stmt 1 discriminator 4 view .LVU1952
 6299 07fe 47F48002 		orr	r2, r7, #4194304
 6300              	.LVL556:
 6301              	.LBB856:
 6302              	.LBI856:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6303              		.loc 2 2724 22 discriminator 4 view .LVU1953
 6304              	.LBB857:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6305              		.loc 2 2726 3 discriminator 4 view .LVU1954
 6306 0802 A968     		ldr	r1, [r5, #8]
 6307 0804 21F0E071 		bic	r1, r1, #29360128
 6308 0808 0A43     		orrs	r2, r2, r1
 6309              	.LVL557:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6310              		.loc 2 2726 3 is_stmt 0 discriminator 4 view .LVU1955
 6311 080a AA60     		str	r2, [r5, #8]
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 6312              		.loc 2 2727 1 discriminator 4 view .LVU1956
 6313 080c E7E6     		b	.L386
 6314              	.LVL558:
 6315              	.L413:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 6316              		.loc 2 2727 1 discriminator 4 view .LVU1957
 6317              	.LBE857:
 6318              	.LBE856:
 6319              	.LBB858:
 6320              	.LBI858:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6321              		.loc 2 6920 26 is_stmt 1 view .LVU1958
 6322              	.LBB859:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6323              		.loc 2 6922 3 view .LVU1959
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6324              		.loc 2 6922 12 is_stmt 0 view .LVU1960
 6325 080e 284A     		ldr	r2, .L477+28
 6326 0810 9268     		ldr	r2, [r2, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6327              		.loc 2 6922 68 view .LVU1961
 6328 0812 12F00102 		ands	r2, r2, #1
 6329 0816 00D0     		beq	.L417
 6330 0818 0122     		movs	r2, #1
 6331              	.L417:
 6332              	.LVL559:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6333              		.loc 2 6922 68 view .LVU1962
 6334              	.LBE859:
 6335              	.LBE858:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6336              		.loc 1 2273 93 view .LVU1963
 6337 081a 82F00102 		eor	r2, r2, #1
 6338 081e D5E7     		b	.L416
 6339              	.L443:
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6340              		.loc 1 2275 39 view .LVU1964
ARM GAS  /tmp/ccjQSYCi.s 			page 317


 6341 0820 244D     		ldr	r5, .L477+32
 6342 0822 D7E7     		b	.L419
 6343              	.LVL560:
 6344              	.L471:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6345              		.loc 1 2279 74 discriminator 1 view .LVU1965
 6346 0824 12F4000F 		tst	r2, #8388608
 6347 0828 DAD1     		bne	.L420
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6348              		.loc 1 2281 11 is_stmt 1 view .LVU1966
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6349              		.loc 1 2281 14 is_stmt 0 view .LVU1967
 6350 082a 214A     		ldr	r2, .L477+28
 6351 082c 9442     		cmp	r4, r2
 6352 082e 7FF4D6AE 		bne	.L386
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6353              		.loc 1 2283 13 is_stmt 1 discriminator 4 view .LVU1968
 6354 0832 47F40002 		orr	r2, r7, #8388608
 6355              	.LVL561:
 6356              	.LBB860:
 6357              	.LBI860:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6358              		.loc 2 2724 22 discriminator 4 view .LVU1969
 6359              	.LBB861:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6360              		.loc 2 2726 3 discriminator 4 view .LVU1970
 6361 0836 A968     		ldr	r1, [r5, #8]
 6362 0838 21F0E071 		bic	r1, r1, #29360128
 6363 083c 0A43     		orrs	r2, r2, r1
 6364              	.LVL562:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6365              		.loc 2 2726 3 is_stmt 0 discriminator 4 view .LVU1971
 6366 083e AA60     		str	r2, [r5, #8]
 6367              	.LVL563:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6368              		.loc 2 2726 3 discriminator 4 view .LVU1972
 6369              	.LBE861:
 6370              	.LBE860:
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 6371              		.loc 1 2290 13 is_stmt 1 discriminator 4 view .LVU1973
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 6372              		.loc 1 2290 93 is_stmt 0 discriminator 4 view .LVU1974
 6373 0840 1D4A     		ldr	r2, .L477+36
 6374 0842 1268     		ldr	r2, [r2]
 6375 0844 9209     		lsrs	r2, r2, #6
 6376 0846 1D49     		ldr	r1, .L477+40
 6377 0848 A1FB0212 		umull	r1, r2, r1, r2
 6378 084c 9209     		lsrs	r2, r2, #6
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 6379              		.loc 1 2290 113 discriminator 4 view .LVU1975
 6380 084e 0132     		adds	r2, r2, #1
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 6381              		.loc 1 2290 73 discriminator 4 view .LVU1976
 6382 0850 5200     		lsls	r2, r2, #1
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             while (wait_loop_index != 0UL)
 6383              		.loc 1 2290 29 discriminator 4 view .LVU1977
 6384 0852 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccjQSYCi.s 			page 318


2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 6385              		.loc 1 2291 13 is_stmt 1 discriminator 4 view .LVU1978
 6386              	.L421:
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 6387              		.loc 1 2291 19 view .LVU1979
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 6388              		.loc 1 2291 36 is_stmt 0 view .LVU1980
 6389 0854 019A     		ldr	r2, [sp, #4]
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             {
 6390              		.loc 1 2291 19 view .LVU1981
 6391 0856 002A     		cmp	r2, #0
 6392 0858 3FF4C1AE 		beq	.L386
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
 6393              		.loc 1 2293 15 is_stmt 1 view .LVU1982
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****             }
 6394              		.loc 1 2293 30 is_stmt 0 view .LVU1983
 6395 085c 019A     		ldr	r2, [sp, #4]
 6396 085e 013A     		subs	r2, r2, #1
 6397 0860 0192     		str	r2, [sp, #4]
 6398 0862 F7E7     		b	.L421
 6399              	.L472:
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         {
 6400              		.loc 1 2297 73 discriminator 1 view .LVU1984
 6401 0864 12F0807F 		tst	r2, #16777216
 6402 0868 BDD1     		bne	.L423
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6403              		.loc 1 2299 11 is_stmt 1 view .LVU1985
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           {
 6404              		.loc 1 2299 14 is_stmt 0 view .LVU1986
 6405 086a 114A     		ldr	r2, .L477+28
 6406 086c 9442     		cmp	r4, r2
 6407 086e 7FF4B6AE 		bne	.L386
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****           }
 6408              		.loc 1 2301 13 is_stmt 1 discriminator 4 view .LVU1987
 6409 0872 47F08072 		orr	r2, r7, #16777216
 6410              	.LVL564:
 6411              	.LBB862:
 6412              	.LBI862:
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6413              		.loc 2 2724 22 discriminator 4 view .LVU1988
 6414              	.LBB863:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6415              		.loc 2 2726 3 discriminator 4 view .LVU1989
 6416 0876 A968     		ldr	r1, [r5, #8]
 6417 0878 21F0E071 		bic	r1, r1, #29360128
 6418 087c 0A43     		orrs	r2, r2, r1
 6419              	.LVL565:
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6420              		.loc 2 2726 3 is_stmt 0 discriminator 4 view .LVU1990
 6421 087e AA60     		str	r2, [r5, #8]
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 6422              		.loc 2 2727 1 discriminator 4 view .LVU1991
 6423 0880 ADE6     		b	.L386
 6424              	.LVL566:
 6425              	.L418:
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 6426              		.loc 2 2727 1 discriminator 4 view .LVU1992
ARM GAS  /tmp/ccjQSYCi.s 			page 319


 6427              	.LBE863:
 6428              	.LBE862:
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6429              		.loc 1 2322 9 is_stmt 1 view .LVU1993
 6430 0882 1A6E     		ldr	r2, [r3, #96]
 6431 0884 42F02002 		orr	r2, r2, #32
 6432 0888 1A66     		str	r2, [r3, #96]
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 6433              		.loc 1 2324 9 view .LVU1994
 6434              	.LVL567:
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
 6435              		.loc 1 2324 24 is_stmt 0 view .LVU1995
 6436 088a 0120     		movs	r0, #1
 6437 088c A7E6     		b	.L386
 6438              	.LVL568:
 6439              	.L424:
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6440              		.loc 1 1881 3 view .LVU1996
 6441 088e 0220     		movs	r0, #2
 6442 0890 A8E6     		b	.L314
 6443              	.L478:
 6444 0892 00BF     		.align	2
 6445              	.L477:
 6446 0894 FFFF0F00 		.word	1048575
 6447 0898 00200240 		.word	1073881088
 6448 089c 00210240 		.word	1073881344
 6449 08a0 00230240 		.word	1073881856
 6450 08a4 000052C7 		.word	-950927360
 6451 08a8 000021C3 		.word	-1021247488
 6452 08ac 000084CB 		.word	-880541696
 6453 08b0 00600258 		.word	1476550656
 6454 08b4 00630258 		.word	1476551424
 6455 08b8 00000000 		.word	SystemCoreClock
 6456 08bc 632D3E05 		.word	87960931
 6457              		.cfi_endproc
 6458              	.LFE374:
 6460              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 6461              		.align	1
 6462              		.global	HAL_ADCEx_MultiModeConfigChannel
 6463              		.syntax unified
 6464              		.thumb
 6465              		.thumb_func
 6466              		.fpu fpv5-d16
 6468              	HAL_ADCEx_MultiModeConfigChannel:
 6469              	.LVL569:
 6470              	.LFB375:
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         the ADCs.
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
ARM GAS  /tmp/ccjQSYCi.s 			page 320


2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param multimode Structure of ADC multimode configuration
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *m
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 6471              		.loc 1 2354 1 is_stmt 1 view -0
 6472              		.cfi_startproc
 6473              		@ args = 0, pretend = 0, frame = 112
 6474              		@ frame_needed = 0, uses_anonymous_args = 0
 6475              		@ link register save eliminated.
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6476              		.loc 1 2355 3 view .LVU1998
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6477              		.loc 1 2356 3 view .LVU1999
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_HandleTypeDef  tmphadcSlave;
 6478              		.loc 1 2357 3 view .LVU2000
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 6479              		.loc 1 2358 3 view .LVU2001
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 6480              		.loc 1 2361 3 view .LVU2002
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(multimode->Mode));
 6481              		.loc 1 2362 3 view .LVU2003
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (multimode->Mode != ADC_MODE_INDEPENDENT)
 6482              		.loc 1 2363 3 view .LVU2004
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_DUAL_DATA_MODE(multimode->DualModeData));
 6483              		.loc 1 2365 5 view .LVU2005
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
 6484              		.loc 1 2366 5 view .LVU2006
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process locked */
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 6485              		.loc 1 2370 3 view .LVU2007
 6486              		.loc 1 2370 3 view .LVU2008
 6487 0000 90F85C20 		ldrb	r2, [r0, #92]	@ zero_extendqisi2
 6488 0004 012A     		cmp	r2, #1
 6489 0006 00F0A180 		beq	.L499
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6490              		.loc 1 2354 1 is_stmt 0 discriminator 2 view .LVU2009
 6491 000a 30B4     		push	{r4, r5}
 6492              	.LCFI44:
 6493              		.cfi_def_cfa_offset 8
 6494              		.cfi_offset 4, -8
 6495              		.cfi_offset 5, -4
 6496 000c 9CB0     		sub	sp, sp, #112
 6497              	.LCFI45:
 6498              		.cfi_def_cfa_offset 120
 6499 000e 0346     		mov	r3, r0
 6500              		.loc 1 2370 3 is_stmt 1 discriminator 2 view .LVU2010
 6501 0010 0122     		movs	r2, #1
 6502 0012 80F85C20 		strb	r2, [r0, #92]
ARM GAS  /tmp/ccjQSYCi.s 			page 321


 6503              		.loc 1 2370 3 discriminator 2 view .LVU2011
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave.State = HAL_ADC_STATE_RESET;
 6504              		.loc 1 2372 3 discriminator 2 view .LVU2012
 6505              		.loc 1 2372 22 is_stmt 0 discriminator 2 view .LVU2013
 6506 0016 0022     		movs	r2, #0
 6507 0018 1892     		str	r2, [sp, #96]
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave.ErrorCode = HAL_ADC_ERROR_NONE;
 6508              		.loc 1 2373 3 is_stmt 1 discriminator 2 view .LVU2014
 6509              		.loc 1 2373 26 is_stmt 0 discriminator 2 view .LVU2015
 6510 001a 1992     		str	r2, [sp, #100]
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 6511              		.loc 1 2375 3 is_stmt 1 discriminator 2 view .LVU2016
 6512 001c 0068     		ldr	r0, [r0]
 6513              	.LVL570:
 6514              		.loc 1 2375 3 is_stmt 0 discriminator 2 view .LVU2017
 6515 001e 4C4A     		ldr	r2, .L509
 6516 0020 9042     		cmp	r0, r2
 6517 0022 42D0     		beq	.L507
 6518 0024 0022     		movs	r2, #0
 6519 0026 0092     		str	r2, [sp]
 6520              	.L482:
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
 6521              		.loc 1 2377 3 is_stmt 1 view .LVU2018
 6522              		.loc 1 2377 19 is_stmt 0 view .LVU2019
 6523 0028 009A     		ldr	r2, [sp]
 6524              		.loc 1 2377 6 view .LVU2020
 6525 002a 002A     		cmp	r2, #0
 6526 002c 41D0     		beq	.L508
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Process unlocked */
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     return HAL_ERROR;
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /*  - Multimode DATA Format configuration                                   */
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 6527              		.loc 1 2392 3 is_stmt 1 view .LVU2021
 6528              	.LVL571:
 6529              	.LBB864:
 6530              	.LBI864:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6531              		.loc 2 7052 26 view .LVU2022
 6532              	.LBB865:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6533              		.loc 2 7054 3 view .LVU2023
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6534              		.loc 2 7054 12 is_stmt 0 view .LVU2024
ARM GAS  /tmp/ccjQSYCi.s 			page 322


 6535 002e 9268     		ldr	r2, [r2, #8]
 6536              	.LVL572:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6537              		.loc 2 7054 74 view .LVU2025
 6538 0030 12F00402 		ands	r2, r2, #4
 6539 0034 00D0     		beq	.L484
 6540 0036 0122     		movs	r2, #1
 6541              	.L484:
 6542              	.LVL573:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6543              		.loc 2 7054 74 view .LVU2026
 6544              	.LBE865:
 6545              	.LBE864:
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 6546              		.loc 1 2393 3 is_stmt 1 view .LVU2027
 6547              	.LBB866:
 6548              	.LBI866:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6549              		.loc 2 7052 26 view .LVU2028
 6550              	.LBB867:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6551              		.loc 2 7054 3 view .LVU2029
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6552              		.loc 2 7054 12 is_stmt 0 view .LVU2030
 6553 0038 8468     		ldr	r4, [r0, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6554              		.loc 2 7054 74 view .LVU2031
 6555 003a 14F0040F 		tst	r4, #4
 6556 003e 76D1     		bne	.L485
 6557              	.LVL574:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6558              		.loc 2 7054 74 view .LVU2032
 6559              	.LBE867:
 6560              	.LBE866:
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmphadcSlave_conversion_on_going == 0UL))
 6561              		.loc 1 2394 7 view .LVU2033
 6562 0040 002A     		cmp	r2, #0
 6563 0042 74D1     		bne	.L485
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 6564              		.loc 1 2397 5 is_stmt 1 view .LVU2034
 6565              		.loc 1 2397 21 is_stmt 0 view .LVU2035
 6566 0044 424C     		ldr	r4, .L509
 6567 0046 434A     		ldr	r2, .L509+4
 6568              	.LVL575:
 6569              		.loc 1 2397 21 view .LVU2036
 6570 0048 9042     		cmp	r0, r2
 6571 004a 18BF     		it	ne
 6572 004c A042     		cmpne	r0, r4
 6573 004e 39D1     		bne	.L500
 6574 0050 02F50072 		add	r2, r2, #512
 6575              	.L486:
 6576              	.LVL576:
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
ARM GAS  /tmp/ccjQSYCi.s 			page 323


2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     if (multimode->Mode != ADC_MODE_INDEPENDENT)
 6577              		.loc 1 2402 5 is_stmt 1 discriminator 4 view .LVU2037
 6578              		.loc 1 2402 18 is_stmt 0 discriminator 4 view .LVU2038
 6579 0054 0868     		ldr	r0, [r1]
 6580              		.loc 1 2402 8 discriminator 4 view .LVU2039
 6581 0056 0028     		cmp	r0, #0
 6582 0058 3FD0     		beq	.L487
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_DAMDF, multimode->DualModeData);
 6583              		.loc 1 2404 7 is_stmt 1 view .LVU2040
 6584 005a 9068     		ldr	r0, [r2, #8]
 6585 005c 20F44040 		bic	r0, r0, #49152
 6586 0060 4C68     		ldr	r4, [r1, #4]
 6587 0062 2043     		orrs	r0, r0, r4
 6588 0064 9060     		str	r0, [r2, #8]
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:              */
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                            */
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                     */
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 16 bits                              */
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 9 clock cycles for 14 bits,                             */
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 12 bits                              */
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 10 and 8 bits                        */
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay  */
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*    range                                                               */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 6589              		.loc 1 2417 7 view .LVU2041
 6590              		.loc 1 2417 11 is_stmt 0 view .LVU2042
 6591 0066 1868     		ldr	r0, [r3]
 6592              		.loc 1 2417 93 view .LVU2043
 6593 0068 394D     		ldr	r5, .L509
 6594 006a 3A4C     		ldr	r4, .L509+4
 6595 006c A042     		cmp	r0, r4
 6596 006e 18BF     		it	ne
 6597 0070 A842     		cmpne	r0, r5
 6598 0072 29D1     		bne	.L488
 6599              	.LVL577:
 6600              	.LBB868:
 6601              	.LBI868:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6602              		.loc 2 6920 26 is_stmt 1 view .LVU2044
 6603              	.LBB869:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6604              		.loc 2 6922 3 view .LVU2045
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6605              		.loc 2 6922 12 is_stmt 0 view .LVU2046
 6606 0074 A868     		ldr	r0, [r5, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6607              		.loc 2 6922 68 view .LVU2047
 6608 0076 10F00100 		ands	r0, r0, #1
 6609 007a 00D0     		beq	.L489
 6610 007c 0120     		movs	r0, #1
 6611              	.L489:
 6612              	.LVL578:
ARM GAS  /tmp/ccjQSYCi.s 			page 324


6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6613              		.loc 2 6922 68 view .LVU2048
 6614              	.LBE869:
 6615              	.LBE868:
 6616              	.LBB870:
 6617              	.LBI870:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6618              		.loc 2 6920 26 is_stmt 1 view .LVU2049
 6619              	.LBB871:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6620              		.loc 2 6922 3 view .LVU2050
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6621              		.loc 2 6922 12 is_stmt 0 view .LVU2051
 6622 007e 354C     		ldr	r4, .L509+4
 6623 0080 A468     		ldr	r4, [r4, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6624              		.loc 2 6922 68 view .LVU2052
 6625 0082 14F00104 		ands	r4, r4, #1
 6626 0086 00D0     		beq	.L490
 6627 0088 0124     		movs	r4, #1
 6628              	.L490:
 6629              	.LVL579:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6630              		.loc 2 6922 68 view .LVU2053
 6631              	.LBE871:
 6632              	.LBE870:
 6633              		.loc 1 2417 93 view .LVU2054
 6634 008a 2043     		orrs	r0, r4, r0
 6635 008c 0CBF     		ite	eq
 6636 008e 0120     		moveq	r0, #1
 6637 0090 0020     		movne	r0, #0
 6638              	.L491:
 6639              		.loc 1 2417 10 discriminator 4 view .LVU2055
 6640 0092 0028     		cmp	r0, #0
 6641 0094 56D0     		beq	.L501
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
 6642              		.loc 1 2419 9 is_stmt 1 view .LVU2056
 6643 0096 9468     		ldr	r4, [r2, #8]
 6644 0098 2F48     		ldr	r0, .L509+8
 6645 009a 2040     		ands	r0, r0, r4
 6646 009c 0C68     		ldr	r4, [r1]
 6647 009e 8968     		ldr	r1, [r1, #8]
 6648              	.LVL580:
 6649              		.loc 1 2419 9 is_stmt 0 view .LVU2057
 6650 00a0 2143     		orrs	r1, r1, r4
 6651 00a2 0843     		orrs	r0, r0, r1
 6652 00a4 9060     		str	r0, [r2, #8]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6653              		.loc 1 2355 21 view .LVU2058
 6654 00a6 0020     		movs	r0, #0
 6655 00a8 46E0     		b	.L493
 6656              	.LVL581:
 6657              	.L507:
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6658              		.loc 1 2375 3 discriminator 1 view .LVU2059
 6659 00aa 02F58072 		add	r2, r2, #256
ARM GAS  /tmp/ccjQSYCi.s 			page 325


 6660 00ae 0092     		str	r2, [sp]
 6661 00b0 BAE7     		b	.L482
 6662              	.L508:
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6663              		.loc 1 2380 5 is_stmt 1 view .LVU2060
 6664 00b2 1A6E     		ldr	r2, [r3, #96]
 6665 00b4 42F02002 		orr	r2, r2, #32
 6666 00b8 1A66     		str	r2, [r3, #96]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6667              		.loc 1 2383 5 view .LVU2061
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6668              		.loc 1 2383 5 view .LVU2062
 6669 00ba 0022     		movs	r2, #0
 6670 00bc 83F85C20 		strb	r2, [r3, #92]
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6671              		.loc 1 2383 5 view .LVU2063
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 6672              		.loc 1 2385 5 view .LVU2064
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
 6673              		.loc 1 2385 12 is_stmt 0 view .LVU2065
 6674 00c0 0120     		movs	r0, #1
 6675 00c2 3CE0     		b	.L480
 6676              	.L500:
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6677              		.loc 1 2397 21 view .LVU2066
 6678 00c4 254A     		ldr	r2, .L509+12
 6679 00c6 C5E7     		b	.L486
 6680              	.LVL582:
 6681              	.L488:
 6682              	.LBB872:
 6683              	.LBI872:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6684              		.loc 2 6920 26 is_stmt 1 view .LVU2067
 6685              	.LBB873:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6686              		.loc 2 6922 3 view .LVU2068
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6687              		.loc 2 6922 12 is_stmt 0 view .LVU2069
 6688 00c8 2548     		ldr	r0, .L509+16
 6689 00ca 8068     		ldr	r0, [r0, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6690              		.loc 2 6922 68 view .LVU2070
 6691 00cc 10F00100 		ands	r0, r0, #1
 6692 00d0 00D0     		beq	.L492
 6693 00d2 0120     		movs	r0, #1
 6694              	.L492:
 6695              	.LVL583:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6696              		.loc 2 6922 68 view .LVU2071
 6697              	.LBE873:
 6698              	.LBE872:
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6699              		.loc 1 2417 93 view .LVU2072
 6700 00d4 80F00100 		eor	r0, r0, #1
 6701 00d8 DBE7     		b	.L491
 6702              	.L487:
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
ARM GAS  /tmp/ccjQSYCi.s 			page 326


2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    multimode->Mode |
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****                   );
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     {
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DAMDF);
 6703              		.loc 1 2429 7 is_stmt 1 view .LVU2073
 6704 00da 9168     		ldr	r1, [r2, #8]
 6705              	.LVL584:
 6706              		.loc 1 2429 7 is_stmt 0 view .LVU2074
 6707 00dc 21F44041 		bic	r1, r1, #49152
 6708 00e0 9160     		str	r1, [r2, #8]
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 6709              		.loc 1 2434 7 is_stmt 1 view .LVU2075
 6710              		.loc 1 2434 11 is_stmt 0 view .LVU2076
 6711 00e2 1968     		ldr	r1, [r3]
 6712              		.loc 1 2434 93 view .LVU2077
 6713 00e4 1A4C     		ldr	r4, .L509
 6714 00e6 1B48     		ldr	r0, .L509+4
 6715 00e8 8142     		cmp	r1, r0
 6716 00ea 18BF     		it	ne
 6717 00ec A142     		cmpne	r1, r4
 6718 00ee 15D1     		bne	.L494
 6719              	.LVL585:
 6720              	.LBB874:
 6721              	.LBI874:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6722              		.loc 2 6920 26 is_stmt 1 view .LVU2078
 6723              	.LBB875:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6724              		.loc 2 6922 3 view .LVU2079
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6725              		.loc 2 6922 12 is_stmt 0 view .LVU2080
 6726 00f0 A168     		ldr	r1, [r4, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6727              		.loc 2 6922 68 view .LVU2081
 6728 00f2 11F00101 		ands	r1, r1, #1
 6729 00f6 00D0     		beq	.L495
 6730 00f8 0121     		movs	r1, #1
 6731              	.L495:
 6732              	.LVL586:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6733              		.loc 2 6922 68 view .LVU2082
 6734              	.LBE875:
 6735              	.LBE874:
 6736              	.LBB876:
 6737              	.LBI876:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6738              		.loc 2 6920 26 is_stmt 1 view .LVU2083
 6739              	.LBB877:
ARM GAS  /tmp/ccjQSYCi.s 			page 327


6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6740              		.loc 2 6922 3 view .LVU2084
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6741              		.loc 2 6922 12 is_stmt 0 view .LVU2085
 6742 00fa 1648     		ldr	r0, .L509+4
 6743 00fc 8068     		ldr	r0, [r0, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6744              		.loc 2 6922 68 view .LVU2086
 6745 00fe 10F00100 		ands	r0, r0, #1
 6746 0102 00D0     		beq	.L496
 6747 0104 0120     		movs	r0, #1
 6748              	.L496:
 6749              	.LVL587:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6750              		.loc 2 6922 68 view .LVU2087
 6751              	.LBE877:
 6752              	.LBE876:
 6753              		.loc 1 2434 93 view .LVU2088
 6754 0106 0143     		orrs	r1, r0, r1
 6755 0108 0CBF     		ite	eq
 6756 010a 0121     		moveq	r1, #1
 6757 010c 0021     		movne	r1, #0
 6758              	.L497:
 6759              		.loc 1 2434 10 discriminator 4 view .LVU2089
 6760 010e D9B1     		cbz	r1, .L502
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 6761              		.loc 1 2436 9 is_stmt 1 view .LVU2090
 6762 0110 9068     		ldr	r0, [r2, #8]
 6763 0112 1149     		ldr	r1, .L509+8
 6764 0114 0140     		ands	r1, r1, r0
 6765 0116 9160     		str	r1, [r2, #8]
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6766              		.loc 1 2355 21 is_stmt 0 view .LVU2091
 6767 0118 0020     		movs	r0, #0
 6768 011a 0DE0     		b	.L493
 6769              	.L494:
 6770              	.LVL588:
 6771              	.LBB878:
 6772              	.LBI878:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6773              		.loc 2 6920 26 is_stmt 1 view .LVU2092
 6774              	.LBB879:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6775              		.loc 2 6922 3 view .LVU2093
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6776              		.loc 2 6922 12 is_stmt 0 view .LVU2094
 6777 011c 1049     		ldr	r1, .L509+16
 6778 011e 8968     		ldr	r1, [r1, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6779              		.loc 2 6922 68 view .LVU2095
 6780 0120 11F00101 		ands	r1, r1, #1
 6781 0124 00D0     		beq	.L498
 6782 0126 0121     		movs	r1, #1
 6783              	.L498:
 6784              	.LVL589:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  /tmp/ccjQSYCi.s 			page 328


 6785              		.loc 2 6922 68 view .LVU2096
 6786              	.LBE879:
 6787              	.LBE878:
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       {
 6788              		.loc 1 2434 93 view .LVU2097
 6789 0128 81F00101 		eor	r1, r1, #1
 6790 012c EFE7     		b	.L497
 6791              	.LVL590:
 6792              	.L485:
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       }
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     }
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 6793              		.loc 1 2445 5 is_stmt 1 view .LVU2098
 6794 012e 1A6E     		ldr	r2, [r3, #96]
 6795              	.LVL591:
 6796              		.loc 1 2445 5 is_stmt 0 view .LVU2099
 6797 0130 42F02002 		orr	r2, r2, #32
 6798 0134 1A66     		str	r2, [r3, #96]
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6799              		.loc 1 2447 5 is_stmt 1 view .LVU2100
 6800              	.LVL592:
 6801              		.loc 1 2447 20 is_stmt 0 view .LVU2101
 6802 0136 0120     		movs	r0, #1
 6803              	.LVL593:
 6804              	.L493:
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Process unlocked */
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 6805              		.loc 1 2451 3 is_stmt 1 view .LVU2102
 6806              		.loc 1 2451 3 view .LVU2103
 6807 0138 0022     		movs	r2, #0
 6808 013a 83F85C20 		strb	r2, [r3, #92]
 6809              		.loc 1 2451 3 view .LVU2104
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Return function status */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 6810              		.loc 1 2454 3 view .LVU2105
 6811              	.LVL594:
 6812              	.L480:
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 6813              		.loc 1 2455 1 is_stmt 0 view .LVU2106
 6814 013e 1CB0     		add	sp, sp, #112
 6815              	.LCFI46:
 6816              		.cfi_remember_state
 6817              		.cfi_def_cfa_offset 8
 6818              		@ sp needed
 6819 0140 30BC     		pop	{r4, r5}
 6820              	.LCFI47:
 6821              		.cfi_restore 5
ARM GAS  /tmp/ccjQSYCi.s 			page 329


 6822              		.cfi_restore 4
 6823              		.cfi_def_cfa_offset 0
 6824 0142 7047     		bx	lr
 6825              	.LVL595:
 6826              	.L501:
 6827              	.LCFI48:
 6828              		.cfi_restore_state
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6829              		.loc 1 2355 21 view .LVU2107
 6830 0144 0020     		movs	r0, #0
 6831 0146 F7E7     		b	.L493
 6832              	.LVL596:
 6833              	.L502:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6834              		.loc 1 2355 21 view .LVU2108
 6835 0148 0020     		movs	r0, #0
 6836 014a F5E7     		b	.L493
 6837              	.LVL597:
 6838              	.L499:
 6839              	.LCFI49:
 6840              		.cfi_def_cfa_offset 0
 6841              		.cfi_restore 4
 6842              		.cfi_restore 5
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
 6843              		.loc 1 2370 3 view .LVU2109
 6844 014c 0220     		movs	r0, #2
 6845              	.LVL598:
 6846              		.loc 1 2455 1 view .LVU2110
 6847 014e 7047     		bx	lr
 6848              	.L510:
 6849              		.align	2
 6850              	.L509:
 6851 0150 00200240 		.word	1073881088
 6852 0154 00210240 		.word	1073881344
 6853 0158 E0F0FFFF 		.word	-3872
 6854 015c 00630258 		.word	1476551424
 6855 0160 00600258 		.word	1476550656
 6856              		.cfi_endproc
 6857              	.LFE375:
 6859              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 6860              		.align	1
 6861              		.global	HAL_ADCEx_EnableInjectedQueue
 6862              		.syntax unified
 6863              		.thumb
 6864              		.thumb_func
 6865              		.fpu fpv5-d16
 6867              	HAL_ADCEx_EnableInjectedQueue:
 6868              	.LVL599:
 6869              	.LFB376:
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
ARM GAS  /tmp/ccjQSYCi.s 			page 330


2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 6870              		.loc 1 2467 1 is_stmt 1 view -0
 6871              		.cfi_startproc
 6872              		@ args = 0, pretend = 0, frame = 0
 6873              		@ frame_needed = 0, uses_anonymous_args = 0
 6874              		@ link register save eliminated.
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 6875              		.loc 1 2468 3 view .LVU2112
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6876              		.loc 1 2469 3 view .LVU2113
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 6877              		.loc 1 2470 3 view .LVU2114
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 6878              		.loc 1 2473 3 view .LVU2115
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 6879              		.loc 1 2475 3 view .LVU2116
 6880              		.loc 1 2475 44 is_stmt 0 view .LVU2117
 6881 0000 0168     		ldr	r1, [r0]
 6882              	.LVL600:
 6883              	.LBB880:
 6884              	.LBI880:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6885              		.loc 2 7052 26 is_stmt 1 view .LVU2118
 6886              	.LBB881:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6887              		.loc 2 7054 3 view .LVU2119
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6888              		.loc 2 7054 12 is_stmt 0 view .LVU2120
 6889 0002 8B68     		ldr	r3, [r1, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6890              		.loc 2 7054 74 view .LVU2121
 6891 0004 13F00403 		ands	r3, r3, #4
 6892 0008 00D0     		beq	.L512
 6893 000a 0123     		movs	r3, #1
 6894              	.L512:
 6895              	.LVL601:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6896              		.loc 2 7054 74 view .LVU2122
 6897              	.LBE881:
 6898              	.LBE880:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 6899              		.loc 1 2476 3 is_stmt 1 view .LVU2123
 6900              	.LBB882:
 6901              	.LBI882:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6902              		.loc 2 7247 26 view .LVU2124
 6903              	.LBB883:
 6904              		.loc 2 7249 3 view .LVU2125
 6905              		.loc 2 7249 12 is_stmt 0 view .LVU2126
 6906 000c 8A68     		ldr	r2, [r1, #8]
 6907              		.loc 2 7249 76 view .LVU2127
ARM GAS  /tmp/ccjQSYCi.s 			page 331


 6908 000e 12F00802 		ands	r2, r2, #8
 6909 0012 00D0     		beq	.L513
 6910 0014 0122     		movs	r2, #1
 6911              	.L513:
 6912              	.LVL602:
 6913              		.loc 2 7249 76 view .LVU2128
 6914              	.LBE883:
 6915              	.LBE882:
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 6916              		.loc 1 2479 3 is_stmt 1 view .LVU2129
 6917              		.loc 1 2479 6 is_stmt 0 view .LVU2130
 6918 0016 1343     		orrs	r3, r2, r3
 6919              	.LVL603:
 6920              		.loc 1 2479 6 view .LVU2131
 6921 0018 09D1     		bne	.L515
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 6922              		.loc 1 2483 5 is_stmt 1 view .LVU2132
 6923 001a CB68     		ldr	r3, [r1, #12]
 6924 001c 23F00043 		bic	r3, r3, #-2147483648
 6925 0020 CB60     		str	r3, [r1, #12]
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 6926              		.loc 1 2486 5 view .LVU2133
 6927 0022 036E     		ldr	r3, [r0, #96]
 6928 0024 23F48043 		bic	r3, r3, #16384
 6929 0028 0366     		str	r3, [r0, #96]
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 6930              		.loc 1 2488 5 view .LVU2134
 6931              	.LVL604:
 6932              		.loc 1 2488 20 is_stmt 0 view .LVU2135
 6933 002a 0020     		movs	r0, #0
 6934              	.LVL605:
 6935              		.loc 1 2488 20 view .LVU2136
 6936 002c 7047     		bx	lr
 6937              	.LVL606:
 6938              	.L515:
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6939              		.loc 1 2492 20 view .LVU2137
 6940 002e 0120     		movs	r0, #1
 6941              	.LVL607:
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 6942              		.loc 1 2495 3 is_stmt 1 view .LVU2138
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 6943              		.loc 1 2496 1 is_stmt 0 view .LVU2139
 6944 0030 7047     		bx	lr
ARM GAS  /tmp/ccjQSYCi.s 			page 332


 6945              		.cfi_endproc
 6946              	.LFE376:
 6948              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 6949              		.align	1
 6950              		.global	HAL_ADCEx_DisableInjectedQueue
 6951              		.syntax unified
 6952              		.thumb
 6953              		.thumb_func
 6954              		.fpu fpv5-d16
 6956              	HAL_ADCEx_DisableInjectedQueue:
 6957              	.LVL608:
 6958              	.LFB377:
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         conversion is ongoing.
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
 6959              		.loc 1 2508 1 is_stmt 1 view -0
 6960              		.cfi_startproc
 6961              		@ args = 0, pretend = 0, frame = 0
 6962              		@ frame_needed = 0, uses_anonymous_args = 0
 6963              		@ link register save eliminated.
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 6964              		.loc 1 2509 3 view .LVU2141
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6965              		.loc 1 2510 3 view .LVU2142
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 6966              		.loc 1 2511 3 view .LVU2143
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 6967              		.loc 1 2514 3 view .LVU2144
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 6968              		.loc 1 2516 3 view .LVU2145
 6969              		.loc 1 2516 44 is_stmt 0 view .LVU2146
 6970 0000 0168     		ldr	r1, [r0]
 6971              	.LVL609:
 6972              	.LBB884:
 6973              	.LBI884:
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6974              		.loc 2 7052 26 is_stmt 1 view .LVU2147
 6975              	.LBB885:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6976              		.loc 2 7054 3 view .LVU2148
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6977              		.loc 2 7054 12 is_stmt 0 view .LVU2149
 6978 0002 8B68     		ldr	r3, [r1, #8]
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6979              		.loc 2 7054 74 view .LVU2150
ARM GAS  /tmp/ccjQSYCi.s 			page 333


 6980 0004 13F00403 		ands	r3, r3, #4
 6981 0008 00D0     		beq	.L517
 6982 000a 0123     		movs	r3, #1
 6983              	.L517:
 6984              	.LVL610:
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6985              		.loc 2 7054 74 view .LVU2151
 6986              	.LBE885:
 6987              	.LBE884:
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 6988              		.loc 1 2517 3 is_stmt 1 view .LVU2152
 6989              	.LBB886:
 6990              	.LBI886:
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6991              		.loc 2 7247 26 view .LVU2153
 6992              	.LBB887:
 6993              		.loc 2 7249 3 view .LVU2154
 6994              		.loc 2 7249 12 is_stmt 0 view .LVU2155
 6995 000c 8A68     		ldr	r2, [r1, #8]
 6996              		.loc 2 7249 76 view .LVU2156
 6997 000e 12F00802 		ands	r2, r2, #8
 6998 0012 00D0     		beq	.L518
 6999 0014 0122     		movs	r2, #1
 7000              	.L518:
 7001              	.LVL611:
 7002              		.loc 2 7249 76 view .LVU2157
 7003              	.LBE887:
 7004              	.LBE886:
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 7005              		.loc 1 2520 3 is_stmt 1 view .LVU2158
 7006              		.loc 1 2520 6 is_stmt 0 view .LVU2159
 7007 0016 1343     		orrs	r3, r2, r3
 7008              	.LVL612:
 7009              		.loc 1 2520 6 view .LVU2160
 7010 0018 07D1     		bne	.L520
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****      )
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 7011              		.loc 1 2524 5 is_stmt 1 view .LVU2161
 7012              	.LVL613:
 7013              	.LBB888:
 7014              	.LBI888:
5056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7015              		.loc 2 5056 22 view .LVU2162
 7016              	.LBB889:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7017              		.loc 2 5058 3 view .LVU2163
 7018 001a CA68     		ldr	r2, [r1, #12]
 7019              	.LVL614:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7020              		.loc 2 5058 3 is_stmt 0 view .LVU2164
 7021 001c 044B     		ldr	r3, .L521
 7022 001e 1340     		ands	r3, r3, r2
 7023 0020 43F00043 		orr	r3, r3, #-2147483648
ARM GAS  /tmp/ccjQSYCi.s 			page 334


 7024 0024 CB60     		str	r3, [r1, #12]
 7025              	.LVL615:
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7026              		.loc 2 5058 3 view .LVU2165
 7027              	.LBE889:
 7028              	.LBE888:
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 7029              		.loc 1 2525 5 is_stmt 1 view .LVU2166
 7030              		.loc 1 2525 20 is_stmt 0 view .LVU2167
 7031 0026 0020     		movs	r0, #0
 7032              	.LVL616:
 7033              		.loc 1 2525 20 view .LVU2168
 7034 0028 7047     		bx	lr
 7035              	.LVL617:
 7036              	.L520:
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 7037              		.loc 1 2529 20 view .LVU2169
 7038 002a 0120     		movs	r0, #1
 7039              	.LVL618:
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 7040              		.loc 1 2532 3 is_stmt 1 view .LVU2170
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 7041              		.loc 1 2533 1 is_stmt 0 view .LVU2171
 7042 002c 7047     		bx	lr
 7043              	.L522:
 7044 002e 00BF     		.align	2
 7045              	.L521:
 7046 0030 FFFFDF7F 		.word	2145386495
 7047              		.cfi_endproc
 7048              	.LFE377:
 7050              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 7051              		.align	1
 7052              		.global	HAL_ADCEx_DisableVoltageRegulator
 7053              		.syntax unified
 7054              		.thumb
 7055              		.thumb_func
 7056              		.fpu fpv5-d16
 7058              	HAL_ADCEx_DisableVoltageRegulator:
 7059              	.LVL619:
 7060              	.LFB378:
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 335


 7061              		.loc 1 2545 1 is_stmt 1 view -0
 7062              		.cfi_startproc
 7063              		@ args = 0, pretend = 0, frame = 0
 7064              		@ frame_needed = 0, uses_anonymous_args = 0
 7065              		@ link register save eliminated.
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 7066              		.loc 1 2546 3 view .LVU2173
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 7067              		.loc 1 2549 3 view .LVU2174
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 7068              		.loc 1 2552 3 view .LVU2175
 7069              		.loc 1 2552 7 is_stmt 0 view .LVU2176
 7070 0000 0368     		ldr	r3, [r0]
 7071              	.LVL620:
 7072              	.LBB890:
 7073              	.LBI890:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7074              		.loc 2 6920 26 is_stmt 1 view .LVU2177
 7075              	.LBB891:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7076              		.loc 2 6922 3 view .LVU2178
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7077              		.loc 2 6922 12 is_stmt 0 view .LVU2179
 7078 0002 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7079              		.loc 2 6922 68 view .LVU2180
 7080 0004 12F0010F 		tst	r2, #1
 7081 0008 05D1     		bne	.L525
 7082              	.LVL621:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7083              		.loc 2 6922 68 view .LVU2181
 7084              	.LBE891:
 7085              	.LBE890:
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 7086              		.loc 1 2554 5 is_stmt 1 view .LVU2182
 7087              	.LBB892:
 7088              	.LBI892:
6849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7089              		.loc 2 6849 22 view .LVU2183
 7090              	.LBB893:
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7091              		.loc 2 6851 3 view .LVU2184
 7092 000a 9968     		ldr	r1, [r3, #8]
 7093 000c 034A     		ldr	r2, .L526
 7094 000e 0A40     		ands	r2, r2, r1
 7095 0010 9A60     		str	r2, [r3, #8]
 7096              	.LVL622:
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7097              		.loc 2 6851 3 is_stmt 0 view .LVU2185
 7098              	.LBE893:
 7099              	.LBE892:
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
ARM GAS  /tmp/ccjQSYCi.s 			page 336


 7100              		.loc 1 2555 5 is_stmt 1 view .LVU2186
 7101              		.loc 1 2555 20 is_stmt 0 view .LVU2187
 7102 0012 0020     		movs	r0, #0
 7103              	.LVL623:
 7104              		.loc 1 2555 20 view .LVU2188
 7105 0014 7047     		bx	lr
 7106              	.LVL624:
 7107              	.L525:
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 7108              		.loc 1 2559 20 view .LVU2189
 7109 0016 0120     		movs	r0, #1
 7110              	.LVL625:
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 7111              		.loc 1 2562 3 is_stmt 1 view .LVU2190
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 7112              		.loc 1 2563 1 is_stmt 0 view .LVU2191
 7113 0018 7047     		bx	lr
 7114              	.L527:
 7115 001a 00BF     		.align	2
 7116              	.L526:
 7117 001c C0FFFF6F 		.word	1879048128
 7118              		.cfi_endproc
 7119              	.LFE378:
 7121              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 7122              		.align	1
 7123              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 7124              		.syntax unified
 7125              		.thumb
 7126              		.thumb_func
 7127              		.fpu fpv5-d16
 7129              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 7130              	.LVL626:
 7131              	.LFB379:
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** /**
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         entering stop modes.
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         calibration is lost.
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   *         saved calibration factor.
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @param hadc ADC handle
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   * @retval HAL status
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   */
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** {
ARM GAS  /tmp/ccjQSYCi.s 			page 337


 7132              		.loc 1 2582 1 is_stmt 1 view -0
 7133              		.cfi_startproc
 7134              		@ args = 0, pretend = 0, frame = 0
 7135              		@ frame_needed = 0, uses_anonymous_args = 0
 7136              		@ link register save eliminated.
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 7137              		.loc 1 2583 3 view .LVU2193
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Check the parameters */
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 7138              		.loc 1 2586 3 view .LVU2194
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 7139              		.loc 1 2589 3 view .LVU2195
 7140              		.loc 1 2589 7 is_stmt 0 view .LVU2196
 7141 0000 0368     		ldr	r3, [r0]
 7142              	.LVL627:
 7143              	.LBB894:
 7144              	.LBI894:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7145              		.loc 2 6920 26 is_stmt 1 view .LVU2197
 7146              	.LBB895:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7147              		.loc 2 6922 3 view .LVU2198
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7148              		.loc 2 6922 12 is_stmt 0 view .LVU2199
 7149 0002 9A68     		ldr	r2, [r3, #8]
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7150              		.loc 2 6922 68 view .LVU2200
 7151 0004 12F0010F 		tst	r2, #1
 7152 0008 07D1     		bne	.L530
 7153              	.LVL628:
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7154              		.loc 2 6922 68 view .LVU2201
 7155              	.LBE895:
 7156              	.LBE894:
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
 7157              		.loc 1 2591 5 is_stmt 1 view .LVU2202
 7158              	.LBB896:
 7159              	.LBI896:
6774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7160              		.loc 2 6774 22 view .LVU2203
 7161              	.LBB897:
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 7162              		.loc 2 6779 3 view .LVU2204
 7163 000a 9968     		ldr	r1, [r3, #8]
 7164 000c 044A     		ldr	r2, .L531
 7165 000e 0A40     		ands	r2, r2, r1
 7166 0010 42F00052 		orr	r2, r2, #536870912
 7167 0014 9A60     		str	r2, [r3, #8]
 7168              	.LVL629:
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 7169              		.loc 2 6779 3 is_stmt 0 view .LVU2205
 7170              	.LBE897:
 7171              	.LBE896:
ARM GAS  /tmp/ccjQSYCi.s 			page 338


2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 7172              		.loc 1 2592 5 is_stmt 1 view .LVU2206
 7173              		.loc 1 2592 20 is_stmt 0 view .LVU2207
 7174 0016 0020     		movs	r0, #0
 7175              	.LVL630:
 7176              		.loc 1 2592 20 view .LVU2208
 7177 0018 7047     		bx	lr
 7178              	.LVL631:
 7179              	.L530:
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   else
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   {
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 7180              		.loc 1 2596 20 view .LVU2209
 7181 001a 0120     		movs	r0, #1
 7182              	.LVL632:
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   }
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** 
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c ****   return tmp_hal_status;
 7183              		.loc 1 2599 3 is_stmt 1 view .LVU2210
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc_ex.c **** }
 7184              		.loc 1 2600 1 is_stmt 0 view .LVU2211
 7185 001c 7047     		bx	lr
 7186              	.L532:
 7187 001e 00BF     		.align	2
 7188              	.L531:
 7189 0020 C0FFFF5F 		.word	1610612672
 7190              		.cfi_endproc
 7191              	.LFE379:
 7193              		.text
 7194              	.Letext0:
 7195              		.file 4 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 7196              		.file 5 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 7197              		.file 6 "Drivers/CMSIS/Include/core_cm7.h"
 7198              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 7199              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 7200              		.file 9 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 7201              		.file 10 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/lib/gcc/arm-none-eabi
 7202              		.file 11 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 7203              		.file 12 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 7204              		.file 13 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 7205              		.file 14 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 7206              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 7207              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 7208              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 7209              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 7210              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 7211              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 7212              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccjQSYCi.s 			page 339


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_adc_ex.c
     /tmp/ccjQSYCi.s:17     .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/ccjQSYCi.s:25     .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/ccjQSYCi.s:194    .text.HAL_ADCEx_Calibration_Start:000000000000009c $d
     /tmp/ccjQSYCi.s:201    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:208    .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/ccjQSYCi.s:249    .text.HAL_ADCEx_LinearCalibration_GetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:256    .text.HAL_ADCEx_LinearCalibration_GetValue:0000000000000000 HAL_ADCEx_LinearCalibration_GetValue
     /tmp/ccjQSYCi.s:458    .text.HAL_ADCEx_LinearCalibration_GetValue:0000000000000090 $d
     /tmp/ccjQSYCi.s:464    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:471    .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/ccjQSYCi.s:640    .text.HAL_ADCEx_LinearCalibration_SetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:647    .text.HAL_ADCEx_LinearCalibration_SetValue:0000000000000000 HAL_ADCEx_LinearCalibration_SetValue
     /tmp/ccjQSYCi.s:1033   .text.HAL_ADCEx_LinearCalibration_SetValue:000000000000015c $d
     /tmp/ccjQSYCi.s:1042   .text.HAL_ADCEx_LinearCalibration_FactorLoad:0000000000000000 $t
     /tmp/ccjQSYCi.s:1049   .text.HAL_ADCEx_LinearCalibration_FactorLoad:0000000000000000 HAL_ADCEx_LinearCalibration_FactorLoad
     /tmp/ccjQSYCi.s:1145   .text.HAL_ADCEx_LinearCalibration_FactorLoad:0000000000000048 $d
     /tmp/ccjQSYCi.s:1151   .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/ccjQSYCi.s:1158   .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/ccjQSYCi.s:1416   .text.HAL_ADCEx_InjectedStart:00000000000000f8 $d
     /tmp/ccjQSYCi.s:1425   .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/ccjQSYCi.s:1432   .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/ccjQSYCi.s:1531   .text.HAL_ADCEx_InjectedStop:0000000000000050 $d
     /tmp/ccjQSYCi.s:1536   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/ccjQSYCi.s:1543   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/ccjQSYCi.s:1848   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000110 $d
     /tmp/ccjQSYCi.s:1856   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/ccjQSYCi.s:1863   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/ccjQSYCi.s:2165   .text.HAL_ADCEx_InjectedStart_IT:000000000000013c $d
     /tmp/ccjQSYCi.s:2174   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/ccjQSYCi.s:2181   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
     /tmp/ccjQSYCi.s:2285   .text.HAL_ADCEx_InjectedStop_IT:000000000000005c $d
     /tmp/ccjQSYCi.s:2290   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
     /tmp/ccjQSYCi.s:2297   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
     /tmp/ccjQSYCi.s:2555   .text.HAL_ADCEx_MultiModeStart_DMA:00000000000000e4 $d
     /tmp/ccjQSYCi.s:2567   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
     /tmp/ccjQSYCi.s:2574   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
     /tmp/ccjQSYCi.s:2910   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000118 $d
     /tmp/ccjQSYCi.s:2916   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:2923   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
     /tmp/ccjQSYCi.s:2960   .text.HAL_ADCEx_MultiModeGetValue:0000000000000018 $d
     /tmp/ccjQSYCi.s:2968   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/ccjQSYCi.s:2975   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/ccjQSYCi.s:3040   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/ccjQSYCi.s:3047   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccjQSYCi.s:3062   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/ccjQSYCi.s:3069   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/ccjQSYCi.s:3084   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/ccjQSYCi.s:3091   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/ccjQSYCi.s:3106   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/ccjQSYCi.s:3113   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/ccjQSYCi.s:3128   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 $t
     /tmp/ccjQSYCi.s:3135   .text.HAL_ADCEx_EndOfSamplingCallback:0000000000000000 HAL_ADCEx_EndOfSamplingCallback
     /tmp/ccjQSYCi.s:3150   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/ccjQSYCi.s:3157   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/ccjQSYCi.s:3259   .text.HAL_ADCEx_RegularStop:0000000000000058 $d
ARM GAS  /tmp/ccjQSYCi.s 			page 340


     /tmp/ccjQSYCi.s:3264   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/ccjQSYCi.s:3271   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
     /tmp/ccjQSYCi.s:3378   .text.HAL_ADCEx_RegularStop_IT:0000000000000060 $d
     /tmp/ccjQSYCi.s:3383   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/ccjQSYCi.s:3390   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/ccjQSYCi.s:3538   .text.HAL_ADCEx_RegularStop_DMA:0000000000000090 $d
     /tmp/ccjQSYCi.s:3543   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 $t
     /tmp/ccjQSYCi.s:3550   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 HAL_ADCEx_RegularMultiModeStop_DMA
     /tmp/ccjQSYCi.s:3907   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000118 $d
     /tmp/ccjQSYCi.s:3913   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/ccjQSYCi.s:3920   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/ccjQSYCi.s:4677   .text.HAL_ADCEx_InjectedConfigChannel:000000000000033c $d
     /tmp/ccjQSYCi.s:4684   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000348 $t
     /tmp/ccjQSYCi.s:5681   .text.HAL_ADCEx_InjectedConfigChannel:00000000000005e8 $d
     /tmp/ccjQSYCi.s:5691   .text.HAL_ADCEx_InjectedConfigChannel:00000000000005f4 $t
     /tmp/ccjQSYCi.s:6446   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000894 $d
     /tmp/ccjQSYCi.s:6461   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
     /tmp/ccjQSYCi.s:6468   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
     /tmp/ccjQSYCi.s:6851   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000150 $d
     /tmp/ccjQSYCi.s:6860   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 $t
     /tmp/ccjQSYCi.s:6867   .text.HAL_ADCEx_EnableInjectedQueue:0000000000000000 HAL_ADCEx_EnableInjectedQueue
     /tmp/ccjQSYCi.s:6949   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 $t
     /tmp/ccjQSYCi.s:6956   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000000 HAL_ADCEx_DisableInjectedQueue
     /tmp/ccjQSYCi.s:7046   .text.HAL_ADCEx_DisableInjectedQueue:0000000000000030 $d
     /tmp/ccjQSYCi.s:7051   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 $t
     /tmp/ccjQSYCi.s:7058   .text.HAL_ADCEx_DisableVoltageRegulator:0000000000000000 HAL_ADCEx_DisableVoltageRegulator
     /tmp/ccjQSYCi.s:7117   .text.HAL_ADCEx_DisableVoltageRegulator:000000000000001c $d
     /tmp/ccjQSYCi.s:7122   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 $t
     /tmp/ccjQSYCi.s:7129   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000000 HAL_ADCEx_EnterADCDeepPowerDownMode
     /tmp/ccjQSYCi.s:7189   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:0000000000000020 $d

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
SystemCoreClock
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Start_IT
ADC_DMAConvCplt
ADC_DMAHalfConvCplt
ADC_DMAError
HAL_DMA_Abort
