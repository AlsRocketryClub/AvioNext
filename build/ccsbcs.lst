ARM GAS  /tmp/ccrdNCqL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ccsbcs.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ff_convert,"ax",%progbits
  17              		.align	1
  18              		.global	ff_convert
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	ff_convert:
  26              	.LVL0:
  27              	.LFB350:
  28              		.file 1 "Middlewares/Third_Party/FatFs/src/option/ccsbcs.c"
   1:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /*------------------------------------------------------------------------*/
   2:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /* Unicode - Local code bidirectional converter  (C)ChaN, 2015            */
   3:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /* (SBCS code pages)                                                      */
   4:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /*------------------------------------------------------------------------*/
   5:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /*  437   U.S.
   6:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   720   Arabic
   7:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   737   Greek
   8:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   771   KBL
   9:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   775   Baltic
  10:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   850   Latin 1
  11:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   852   Latin 2
  12:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   855   Cyrillic
  13:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   857   Turkish
  14:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   860   Portuguese
  15:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   861   Icelandic
  16:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   862   Hebrew
  17:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   863   Canadian French
  18:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   864   Arabic
  19:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   865   Nordic
  20:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   866   Russian
  21:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** /   869   Greek 2
  22:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** */
  23:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  24:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #include "../ff.h"
  25:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  26:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  27:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #if _CODE_PAGE == 437
  28:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  29:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
  30:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP437(0x80-0xFF) to Unicode conversion table */
ARM GAS  /tmp/ccrdNCqL.s 			page 2


  31:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
  32:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00A2, 0x
  33:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x
  34:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
  35:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
  36:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
  37:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
  38:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
  39:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
  40:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  41:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 720
  42:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  43:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
  44:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP720(0x80-0xFF) to Unicode conversion table */
  45:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0000, 0x0000, 0x00E9, 0x00E2, 0x0000, 0x00E0, 0x0000, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
  46:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0000, 0x0651, 0x0652, 0x00F4, 0x00A4, 0x0640, 0x00FB, 0x00F9, 0x0621, 0x0622, 0x0623, 0x0624, 0x
  47:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0628, 0x0629, 0x062A, 0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x
  48:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
  49:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
  50:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
  51:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0641, 0x00B5, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x
  52:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x064B, 0x064C, 0x064D, 0x064E, 0x064F, 0x0650, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
  53:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
  54:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  55:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 737
  56:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  57:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
  58:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP737(0x80-0xFF) to Unicode conversion table */
  59:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 0x0399, 0x039A, 0x039B, 0x039C, 0x
  60:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03A1, 0x03A3, 0x03A4, 0x03A5, 0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x03B1, 0x03B2, 0x03B3, 0x03B4, 0x
  61:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B9, 0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C3, 0x03C2, 0x03C4, 0x
  62:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
  63:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
  64:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
  65:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03C9, 0x03AC, 0x03AD, 0x03AE, 0x03CA, 0x03AF, 0x03CC, 0x03CD, 0x03CB, 0x03CE, 0x0386, 0x0388, 0x
  66:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x038F, 0x00B1, 0x2265, 0x2264, 0x03AA, 0x03AB, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
  67:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
  68:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  69:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 771
  70:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  71:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
  72:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP771(0x80-0xFF) to Unicode conversion table */
  73:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x
  74:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x
  75:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x
  76:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
  77:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
  78:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
  79:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x
  80:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0118, 0x0119, 0x0116, 0x0117, 0x012E, 0x012F, 0x0160, 0x0161, 0x0172, 0x0173, 0x016A, 0x016B, 0x
  81:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
  82:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  83:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 775
  84:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  85:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
  86:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP775(0x80-0xFF) to Unicode conversion table */
  87:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0106, 0x00FC, 0x00E9, 0x0101, 0x00E4, 0x0123, 0x00E5, 0x0107, 0x0142, 0x0113, 0x0156, 0x0157, 0x
ARM GAS  /tmp/ccrdNCqL.s 			page 3


  88:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00E6, 0x00C6, 0x014D, 0x00F6, 0x0122, 0x00A2, 0x015A, 0x015B, 0x00D6, 0x00DC, 0x00F8, 0x
  89:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0100, 0x012A, 0x00F3, 0x017B, 0x017C, 0x017A, 0x201D, 0x00A6, 0x00A9, 0x00AE, 0x00AC, 0x00BD, 0x
  90:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x0104, 0x010C, 0x0118, 0x0116, 0x2563, 0x2551, 0x2557, 0x
  91:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0172, 0x016A, 0x255A, 0x2554, 0x2569, 0x2566, 0x
  92:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0105, 0x010D, 0x0119, 0x0117, 0x012F, 0x0161, 0x0173, 0x016B, 0x017E, 0x2518, 0x250C, 0x2588, 0x
  93:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00D3, 0x00DF, 0x014C, 0x0143, 0x00F5, 0x00D5, 0x00B5, 0x0144, 0x0136, 0x0137, 0x013B, 0x013C, 0x
  94:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x00B1, 0x201C, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x201E, 0x00B0, 0x2219, 0x00B7, 0x00B9, 0x
  95:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
  96:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  97:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 850
  98:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
  99:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 100:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP850(0x80-0xFF) to Unicode conversion table */
 101:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
 102:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00F8, 0x
 103:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x00AE, 0x00AC, 0x00BD, 0x
 104:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x00C0, 0x00A9, 0x2563, 0x2551, 0x2557, 0x
 105:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x00E3, 0x00C3, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 106:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00F0, 0x00D0, 0x00CA, 0x00CB, 0x00C8, 0x0131, 0x00CD, 0x00CE, 0x00CF, 0x2518, 0x250C, 0x2588, 0x
 107:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00D3, 0x00DF, 0x00D4, 0x00D2, 0x00F5, 0x00D5, 0x00B5, 0x00FE, 0x00DE, 0x00DA, 0x00DB, 0x00D9, 0x
 108:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x00B1, 0x2017, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x00B7, 0x00B9, 0x
 109:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 110:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 111:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 852
 112:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 113:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 114:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP852(0x80-0xFF) to Unicode conversion table */
 115:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x016F, 0x0107, 0x00E7, 0x0142, 0x00EB, 0x0150, 0x0151, 0x
 116:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x0139, 0x013A, 0x00F4, 0x00F6, 0x013D, 0x013E, 0x015A, 0x015B, 0x00D6, 0x00DC, 0x0164, 0x
 117:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x0104, 0x0105, 0x017D, 0x017E, 0x0118, 0x0119, 0x00AC, 0x017A, 0x
 118:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x011A, 0x015E, 0x2563, 0x2551, 0x2557, 0x
 119:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0102, 0x0103, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 120:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0111, 0x0110, 0x010E, 0x00CB, 0x010F, 0x0147, 0x00CD, 0x00CE, 0x011B, 0x2518, 0x250C, 0x2588, 0x
 121:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00D3, 0x00DF, 0x00D4, 0x0143, 0x0144, 0x0148, 0x0160, 0x0161, 0x0154, 0x00DA, 0x0155, 0x0170, 0x
 122:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x02DD, 0x02DB, 0x02C7, 0x02D8, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x02D9, 0x0171, 0x
 123:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 124:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 125:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 855
 126:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 127:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 128:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP855(0x80-0xFF) to Unicode conversion table */
 129:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0452, 0x0402, 0x0453, 0x0403, 0x0451, 0x0401, 0x0454, 0x0404, 0x0455, 0x0405, 0x0456, 0x0406, 0x
 130:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0459, 0x0409, 0x045A, 0x040A, 0x045B, 0x040B, 0x045C, 0x040C, 0x045E, 0x040E, 0x045F, 0x040F, 0x
 131:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0430, 0x0410, 0x0431, 0x0411, 0x0446, 0x0426, 0x0434, 0x0414, 0x0435, 0x0415, 0x0444, 0x0424, 0x
 132:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x0445, 0x0425, 0x0438, 0x0418, 0x2563, 0x2551, 0x2557, 0x
 133:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x043A, 0x041A, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 134:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x043B, 0x041B, 0x043C, 0x041C, 0x043D, 0x041D, 0x043E, 0x041E, 0x043F, 0x2518, 0x250C, 0x2588, 0x
 135:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x042F, 0x0440, 0x0420, 0x0441, 0x0421, 0x0442, 0x0422, 0x0443, 0x0423, 0x0436, 0x0416, 0x0432, 0x
 136:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x044B, 0x042B, 0x0437, 0x0417, 0x0448, 0x0428, 0x044D, 0x042D, 0x0449, 0x0429, 0x0447, 0x
 137:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 138:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 139:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 857
 140:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 141:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 142:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP857(0x80-0xFF) to Unicode conversion table */
 143:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
 144:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x0130, 0x00D6, 0x00DC, 0x00F8, 0x
ARM GAS  /tmp/ccrdNCqL.s 			page 4


 145:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x011E, 0x011F, 0x00BF, 0x00AE, 0x00AC, 0x00BD, 0x
 146:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x00C0, 0x00A9, 0x2563, 0x2551, 0x2557, 0x
 147:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x00E3, 0x00C3, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 148:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00BA, 0x00AA, 0x00CA, 0x00CB, 0x00C8, 0x0000, 0x00CD, 0x00CE, 0x00CF, 0x2518, 0x250C, 0x2588, 0x
 149:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00D3, 0x00DF, 0x00D4, 0x00D2, 0x00F5, 0x00D5, 0x00B5, 0x0000, 0x00D7, 0x00DA, 0x00DB, 0x00D9, 0x
 150:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x00B1, 0x0000, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x00B7, 0x00B9, 0x
 151:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 152:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 153:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 860
 154:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 155:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 156:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP860(0x80-0xFF) to Unicode conversion table */
 157:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E3, 0x00E0, 0x00C1, 0x00E7, 0x00EA, 0x00CA, 0x00E8, 0x00CD, 0x
 158:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00C0, 0x00C8, 0x00F4, 0x00F5, 0x00F2, 0x00DA, 0x00F9, 0x00CC, 0x00D5, 0x00DC, 0x00A2, 0x
 159:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x00D2, 0x00AC, 0x00BD, 0x
 160:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 161:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 162:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 163:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
 164:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 165:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 166:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 167:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 861
 168:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 169:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 170:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP861(0x80-0xFF) to Unicode conversion table */
 171:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E6, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00D0, 0x
 172:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00FE, 0x00FB, 0x00DD, 0x00FD, 0x00D6, 0x00DC, 0x00F8, 0x
 173:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00C1, 0x00CD, 0x00D3, 0x00DA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x
 174:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 175:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 176:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 177:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
 178:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 179:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 180:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 181:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 862
 182:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 183:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 184:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP862(0x80-0xFF) to Unicode conversion table */
 185:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x05D0, 0x05D1, 0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, 0x05D7, 0x05D8, 0x05D9, 0x05DA, 0x05DB, 0x
 186:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x05E0, 0x05E1, 0x05E2, 0x05E3, 0x05E4, 0x05E5, 0x05E6, 0x05E7, 0x05E8, 0x05E9, 0x05EA, 0x00A2, 0x
 187:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x
 188:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 189:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 190:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 191:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
 192:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 193:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 194:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 195:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 863
 196:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 197:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 198:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP863(0x80-0xFF) to Unicode conversion table */
 199:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00C2, 0x00E0, 0x00B6, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
 200:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C9, 0x00C8, 0x00CA, 0x00F4, 0x00CB, 0x00CF, 0x00FB, 0x00F9, 0x00A4, 0x00D4, 0x00DC, 0x00A2, 0x
 201:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00A6, 0x00B4, 0x00F3, 0x00FA, 0x00A8, 0x00BB, 0x00B3, 0x00AF, 0x00CE, 0x3210, 0x00AC, 0x00BD, 0x
ARM GAS  /tmp/ccrdNCqL.s 			page 5


 202:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 203:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 204:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 205:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
 206:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 207:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 208:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 209:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 864
 210:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 211:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 212:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP864(0x80-0xFF) to Unicode conversion table */
 213:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00B0, 0x00B7, 0x2219, 0x221A, 0x2592, 0x2500, 0x2502, 0x253C, 0x2524, 0x252C, 0x251C, 0x2534, 0x
 214:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B2, 0x221E, 0x03C6, 0x00B1, 0x00BD, 0x00BC, 0x2248, 0x00AB, 0x00BB, 0xFEF7, 0xFEF8, 0x0000, 0x
 215:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00A0, 0x00AD, 0xFE82, 0x00A3, 0x00A4, 0xFE84, 0x0000, 0x20AC, 0xFE8E, 0xFE8F, 0xFE95, 0xFE99, 0x
 216:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0660, 0x0661, 0x0662, 0x0663, 0x0664, 0x0665, 0x0666, 0x0667, 0x0668, 0x0669, 0xFED1, 0x061B, 0x
 217:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00A2, 0xFE80, 0xFE81, 0xFE83, 0xFE85, 0xFECA, 0xFE8B, 0xFE8D, 0xFE91, 0xFE93, 0xFE97, 0xFE9B, 0x
 218:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0xFEAB, 0xFEAD, 0xFEAF, 0xFEB3, 0xFEB7, 0xFEBB, 0xFEBF, 0xFEC1, 0xFEC5, 0xFECB, 0xFECF, 0x00A6, 0x
 219:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0640, 0xFED3, 0xFED7, 0xFEDB, 0xFEDF, 0xFEE3, 0xFEE7, 0xFEEB, 0xFEED, 0xFEEF, 0xFEF3, 0xFEBD, 0x
 220:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0xFE7D, 0x0651, 0xFEE5, 0xFEE9, 0xFEEC, 0xFEF0, 0xFEF2, 0xFED0, 0xFED5, 0xFEF5, 0xFEF6, 0xFEDD, 0x
 221:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 222:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 223:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 865
 224:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 225:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 226:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP865(0x80-0xFF) to Unicode conversion table */
 227:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x
 228:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00C5, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00F8, 0x
 229:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x
 230:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 231:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 232:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 233:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x
 234:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 235:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 236:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 237:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 866
 238:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 239:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 240:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP866(0x80-0xFF) to Unicode conversion table */
 241:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x
 242:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x
 243:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x
 244:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x
 245:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 246:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x
 247:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x
 248:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x0401, 0x0451, 0x0404, 0x0454, 0x0407, 0x0457, 0x040E, 0x045E, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x
 249:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 250:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 251:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #elif _CODE_PAGE == 869
 252:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #define _TBLDEF 1
 253:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** static
 254:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** const WCHAR Tbl[] = {	/*  CP869(0x80-0xFF) to Unicode conversion table */
 255:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x0386, 0x00B7, 0x00B7, 0x00AC, 0x00A6, 0x2018, 0x
 256:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x038A, 0x03AA, 0x038C, 0x00B7, 0x00B7, 0x038E, 0x03AB, 0x00A9, 0x038F, 0x00B2, 0x00B3, 0x03AC, 0x
 257:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03CA, 0x0390, 0x03CC, 0x03CD, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x00BD, 0x
 258:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x039A, 0x039B, 0x039C, 0x039D, 0x2563, 0x2551, 0x2557, 0x
ARM GAS  /tmp/ccrdNCqL.s 			page 6


 259:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0A30, 0x03A1, 0x255A, 0x2554, 0x2569, 0x2566, 0x
 260:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03A4, 0x03A5, 0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x03B1, 0x03B2, 0x03B3, 0x2518, 0x250C, 0x2588, 0x
 261:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x03B6, 0x03B7, 0x03B8, 0x03B9, 0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x
 262:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	0x00AD, 0x00B1, 0x03C5, 0x03C6, 0x03C7, 0x00A7, 0x03C8, 0x0385, 0x00B0, 0x00A8, 0x03C9, 0x03CB, 0x
 263:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** };
 264:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 265:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #endif
 266:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 267:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 268:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #if !_TBLDEF || !_USE_LFN
 269:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #error This file is not needed at current configuration. Remove from the project.
 270:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** #endif
 271:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 272:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 273:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 274:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 275:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** WCHAR ff_convert (	/* Converted character, Returns zero on error */
 276:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	WCHAR	chr,	/* Character code to be converted */
 277:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	UINT	dir		/* 0: Unicode to OEM code, 1: OEM code to Unicode */
 278:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** )
 279:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** {
  29              		.loc 1 279 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 280:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	WCHAR c;
  34              		.loc 1 280 2 view .LVU1
 281:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 282:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 283:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	if (chr < 0x80) {	/* ASCII */
  35              		.loc 1 283 2 view .LVU2
  36              		.loc 1 283 5 is_stmt 0 view .LVU3
  37 0000 7F28     		cmp	r0, #127
  38 0002 17D9     		bls	.L2
 284:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		c = chr;
 285:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 286:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	} else {
 287:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (dir) {		/* OEM code to Unicode */
  39              		.loc 1 287 3 is_stmt 1 view .LVU4
  40              		.loc 1 287 6 is_stmt 0 view .LVU5
  41 0004 99B1     		cbz	r1, .L6
 288:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			c = (chr >= 0x100) ? 0 : Tbl[chr - 0x80];
  42              		.loc 1 288 4 is_stmt 1 view .LVU6
  43              		.loc 1 288 6 is_stmt 0 view .LVU7
  44 0006 FF28     		cmp	r0, #255
  45 0008 13D8     		bhi	.L7
  46              		.loc 1 288 37 discriminator 1 view .LVU8
  47 000a 8038     		subs	r0, r0, #128
  48              	.LVL1:
  49              		.loc 1 288 6 discriminator 1 view .LVU9
  50 000c 0A4B     		ldr	r3, .L9
  51 000e 33F81000 		ldrh	r0, [r3, r0, lsl #1]
  52 0012 7047     		bx	lr
  53              	.LVL2:
  54              	.L8:
 289:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
ARM GAS  /tmp/ccrdNCqL.s 			page 7


 290:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		} else {		/* Unicode to OEM code */
 291:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			for (c = 0; c < 0x80; c++) {
  55              		.loc 1 291 26 is_stmt 1 discriminator 2 view .LVU10
  56              		.loc 1 291 27 is_stmt 0 discriminator 2 view .LVU11
  57 0014 0133     		adds	r3, r3, #1
  58              	.LVL3:
  59              		.loc 1 291 27 discriminator 2 view .LVU12
  60 0016 9BB2     		uxth	r3, r3
  61              	.LVL4:
  62              	.L3:
  63              		.loc 1 291 16 is_stmt 1 discriminator 1 view .LVU13
  64              		.loc 1 291 4 is_stmt 0 discriminator 1 view .LVU14
  65 0018 7F2B     		cmp	r3, #127
  66 001a 04D8     		bhi	.L4
 292:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 				if (chr == Tbl[c]) break;
  67              		.loc 1 292 5 is_stmt 1 view .LVU15
  68              		.loc 1 292 19 is_stmt 0 view .LVU16
  69 001c 064A     		ldr	r2, .L9
  70 001e 32F81320 		ldrh	r2, [r2, r3, lsl #1]
  71              		.loc 1 292 8 view .LVU17
  72 0022 8242     		cmp	r2, r0
  73 0024 F6D1     		bne	.L8
  74              	.L4:
 293:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 294:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			c = (c + 0x80) & 0xFF;
  75              		.loc 1 294 4 is_stmt 1 view .LVU18
  76              		.loc 1 294 11 is_stmt 0 view .LVU19
  77 0026 03F18000 		add	r0, r3, #128
  78              	.LVL5:
  79              		.loc 1 294 6 view .LVU20
  80 002a C0B2     		uxtb	r0, r0
  81              	.LVL6:
  82              		.loc 1 294 6 view .LVU21
  83 002c 7047     		bx	lr
  84              	.LVL7:
  85              	.L6:
 291:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 				if (chr == Tbl[c]) break;
  86              		.loc 1 291 11 view .LVU22
  87 002e 0023     		movs	r3, #0
  88 0030 F2E7     		b	.L3
  89              	.L7:
 288:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
  90              		.loc 1 288 6 view .LVU23
  91 0032 0020     		movs	r0, #0
  92              	.LVL8:
  93              	.L2:
 295:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		}
 296:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	}
 297:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 298:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	return c;
  94              		.loc 1 298 2 is_stmt 1 view .LVU24
 299:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** }
  95              		.loc 1 299 1 is_stmt 0 view .LVU25
  96 0034 7047     		bx	lr
  97              	.L10:
  98 0036 00BF     		.align	2
  99              	.L9:
ARM GAS  /tmp/ccrdNCqL.s 			page 8


 100 0038 00000000 		.word	.LANCHOR0
 101              		.cfi_endproc
 102              	.LFE350:
 104              		.section	.text.ff_wtoupper,"ax",%progbits
 105              		.align	1
 106              		.global	ff_wtoupper
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv5-d16
 112              	ff_wtoupper:
 113              	.LVL9:
 114              	.LFB351:
 300:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 301:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 302:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 303:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** WCHAR ff_wtoupper (	/* Returns upper converted character */
 304:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	WCHAR chr		/* Unicode character to be upper converted (BMP only) */
 305:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** )
 306:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** {
 115              		.loc 1 306 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              		.loc 1 306 1 is_stmt 0 view .LVU27
 121 0000 F0B4     		push	{r4, r5, r6, r7}
 122              	.LCFI0:
 123              		.cfi_def_cfa_offset 16
 124              		.cfi_offset 4, -16
 125              		.cfi_offset 5, -12
 126              		.cfi_offset 6, -8
 127              		.cfi_offset 7, -4
 307:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	/* Compressed upper conversion table */
 308:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	static const WCHAR cvt1[] = {	/* U+0000 - U+0FFF */
 128              		.loc 1 308 2 is_stmt 1 view .LVU28
 309:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Basic Latin */
 310:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0061,0x031A,
 311:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Latin-1 Supplement */
 312:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x00E0,0x0317,  0x00F8,0x0307,  0x00FF,0x0001,0x0178,
 313:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Latin Extended-A */
 314:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0100,0x0130,  0x0132,0x0106,  0x0139,0x0110,  0x014A,0x012E,  0x0179,0x0106,
 315:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Latin Extended-B */
 316:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0180,0x004D,0x0243,0x0181,0x0182,0x0182,0x0184,0x0184,0x0186,0x0187,0x0187,0x0189,0x018A,0x018B
 317:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x01CD,0x0110,  0x01DD,0x0001,0x018E,  0x01DE,0x0112,  0x01F3,0x0003,0x01F1,0x01F4,0x01F4,  0x01F
 318:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0222,0x0112,  0x023A,0x0009,0x2C65,0x023B,0x023B,0x023D,0x2C66,0x023F,0x0240,0x0241,0x0241,  0x
 319:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* IPA Extensions */
 320:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0253,0x0040,0x0181,0x0186,0x0255,0x0189,0x018A,0x0258,0x018F,0x025A,0x0190,0x025C,0x025D,0x025E
 321:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Greek, Coptic */
 322:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x037B,0x0003,0x03FD,0x03FE,0x03FF,  0x03AC,0x0004,0x0386,0x0388,0x0389,0x038A,  0x03B1,0x0311,
 323:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x03C2,0x0002,0x03A3,0x03A3,  0x03C4,0x0308,  0x03CC,0x0003,0x038C,0x038E,0x038F,  0x03D8,0x0118,
 324:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x03F2,0x000A,0x03F9,0x03F3,0x03F4,0x03F5,0x03F6,0x03F7,0x03F7,0x03F9,0x03FA,0x03FA,
 325:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Cyrillic */
 326:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0430,0x0320,  0x0450,0x0710,  0x0460,0x0122,  0x048A,0x0136,  0x04C1,0x010E,  0x04CF,0x0001,0x0
 327:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Armenian */
 328:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0561,0x0426,
 329:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
ARM GAS  /tmp/ccrdNCqL.s 			page 9


 330:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0000
 331:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	};
 332:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	static const WCHAR cvt2[] = {	/* U+1000 - U+FFFF */
 129              		.loc 1 332 2 view .LVU29
 333:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Phonetic Extensions */
 334:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1D7D,0x0001,0x2C63,
 335:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Latin Extended Additional */
 336:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1E00,0x0196,  0x1EA0,0x015A,
 337:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Greek Extended */
 338:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1F00,0x0608,  0x1F10,0x0606,  0x1F20,0x0608,  0x1F30,0x0608,  0x1F40,0x0606,
 339:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1F51,0x0007,0x1F59,0x1F52,0x1F5B,0x1F54,0x1F5D,0x1F56,0x1F5F,  0x1F60,0x0608,
 340:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1F70,0x000E,0x1FBA,0x1FBB,0x1FC8,0x1FC9,0x1FCA,0x1FCB,0x1FDA,0x1FDB,0x1FF8,0x1FF9,0x1FEA,0x1FEB
 341:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1F80,0x0608,  0x1F90,0x0608,  0x1FA0,0x0608,  0x1FB0,0x0004,0x1FB8,0x1FB9,0x1FB2,0x1FBC,
 342:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x1FCC,0x0001,0x1FC3,  0x1FD0,0x0602,  0x1FE0,0x0602,  0x1FE5,0x0001,0x1FEC,  0x1FF2,0x0001,0x1FF
 343:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Letterlike Symbols */
 344:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x214E,0x0001,0x2132,
 345:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Number forms */
 346:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x2170,0x0210,  0x2184,0x0001,0x2183,
 347:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Enclosed Alphanumerics */
 348:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x24D0,0x051A,  0x2C30,0x042F,
 349:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Latin Extended-C */
 350:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x2C60,0x0102,  0x2C67,0x0106, 0x2C75,0x0102,
 351:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Coptic */
 352:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x2C80,0x0164,
 353:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Georgian Supplement */
 354:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x2D00,0x0826,
 355:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		/* Full-width */
 356:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0xFF41,0x031A,
 357:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 358:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		0x0000
 359:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	};
 360:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	const WCHAR *p;
 130              		.loc 1 360 2 view .LVU30
 361:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	WCHAR bc, nc, cmd;
 131              		.loc 1 361 2 view .LVU31
 362:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 363:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 364:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	p = chr < 0x1000 ? cvt1 : cvt2;
 132              		.loc 1 364 2 view .LVU32
 133              		.loc 1 364 26 is_stmt 0 view .LVU33
 134 0002 B0F5805F 		cmp	r0, #4096
 135 0006 01D2     		bcs	.L27
 136 0008 214B     		ldr	r3, .L31
 137 000a 02E0     		b	.L25
 138              	.L27:
 139 000c 214B     		ldr	r3, .L31+4
 140 000e 00E0     		b	.L25
 141              	.LVL10:
 142              	.L28:
 365:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	for (;;) {
 366:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		bc = *p++;								/* Get block base */
 367:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (!bc || chr < bc) break;
 368:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 143              		.loc 1 368 10 view .LVU34
 144 0010 2B46     		mov	r3, r5
 145              	.LVL11:
 146              	.L25:
ARM GAS  /tmp/ccrdNCqL.s 			page 10


 365:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	for (;;) {
 147              		.loc 1 365 2 is_stmt 1 view .LVU35
 366:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (!bc || chr < bc) break;
 148              		.loc 1 366 3 view .LVU36
 366:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (!bc || chr < bc) break;
 149              		.loc 1 366 6 is_stmt 0 view .LVU37
 150 0012 1A88     		ldrh	r2, [r3]
 151              	.LVL12:
 367:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 152              		.loc 1 367 3 is_stmt 1 view .LVU38
 367:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 153              		.loc 1 367 18 is_stmt 0 view .LVU39
 154 0014 9042     		cmp	r0, r2
 155 0016 2CBF     		ite	cs
 156 0018 0021     		movcs	r1, #0
 157 001a 0121     		movcc	r1, #1
 367:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 158              		.loc 1 367 11 view .LVU40
 159 001c 002A     		cmp	r2, #0
 160 001e 08BF     		it	eq
 161 0020 0121     		moveq	r1, #1
 367:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		nc = *p++; cmd = nc >> 8; nc &= 0xFF;	/* Get processing command and block size */
 162              		.loc 1 367 6 view .LVU41
 163 0022 B9B9     		cbnz	r1, .L13
 164              		.loc 1 368 3 is_stmt 1 view .LVU42
 165              		.loc 1 368 10 is_stmt 0 view .LVU43
 166 0024 1D1D     		adds	r5, r3, #4
 167              	.LVL13:
 168              		.loc 1 368 6 view .LVU44
 169 0026 5B88     		ldrh	r3, [r3, #2]
 170              	.LVL14:
 171              		.loc 1 368 14 is_stmt 1 view .LVU45
 172              		.loc 1 368 18 is_stmt 0 view .LVU46
 173 0028 190A     		lsrs	r1, r3, #8
 174              	.LVL15:
 175              		.loc 1 368 29 is_stmt 1 view .LVU47
 176              		.loc 1 368 32 is_stmt 0 view .LVU48
 177 002a DBB2     		uxtb	r3, r3
 178              	.LVL16:
 369:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (chr < bc + nc) {	/* In the block? */
 179              		.loc 1 369 3 is_stmt 1 view .LVU49
 180              		.loc 1 369 16 is_stmt 0 view .LVU50
 181 002c 9C18     		adds	r4, r3, r2
 182              		.loc 1 369 6 view .LVU51
 183 002e A042     		cmp	r0, r4
 184 0030 04DB     		blt	.L30
 370:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			switch (cmd) {
 371:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 0:	chr = p[chr - bc]; break;		/* Table conversion */
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 380:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
ARM GAS  /tmp/ccrdNCqL.s 			page 11


 381:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			break;
 382:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		}
 383:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 		if (!cmd) p += nc;
 185              		.loc 1 383 3 is_stmt 1 view .LVU52
 186              		.loc 1 383 6 is_stmt 0 view .LVU53
 187 0032 0029     		cmp	r1, #0
 188 0034 ECD1     		bne	.L28
 189              		.loc 1 383 13 is_stmt 1 discriminator 1 view .LVU54
 190              		.loc 1 383 15 is_stmt 0 discriminator 1 view .LVU55
 191 0036 05EB4303 		add	r3, r5, r3, lsl #1
 192              	.LVL17:
 193              		.loc 1 383 15 discriminator 1 view .LVU56
 194 003a EAE7     		b	.L25
 195              	.LVL18:
 196              	.L30:
 370:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			switch (cmd) {
 197              		.loc 1 370 4 is_stmt 1 view .LVU57
 198 003c 0829     		cmp	r1, #8
 199 003e 09D8     		bhi	.L13
 200 0040 DFE801F0 		tbb	[pc, r1]
 201              	.LVL19:
 202              	.L16:
 203 0044 05       		.byte	(.L24-.L16)/2
 204 0045 0A       		.byte	(.L23-.L16)/2
 205 0046 10       		.byte	(.L22-.L16)/2
 206 0047 13       		.byte	(.L21-.L16)/2
 207 0048 16       		.byte	(.L20-.L16)/2
 208 0049 19       		.byte	(.L19-.L16)/2
 209 004a 1C       		.byte	(.L18-.L16)/2
 210 004b 1F       		.byte	(.L17-.L16)/2
 211 004c 22       		.byte	(.L15-.L16)/2
 212 004d 00       		.p2align 1
 213              	.L24:
 371:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 214              		.loc 1 371 12 view .LVU58
 371:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 215              		.loc 1 371 24 is_stmt 0 view .LVU59
 216 004e 861A     		subs	r6, r0, r2
 371:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 217              		.loc 1 371 16 view .LVU60
 218 0050 35F81600 		ldrh	r0, [r5, r6, lsl #1]
 219              	.LVL20:
 371:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 1:	chr -= (chr - bc) & 1; break;	/* Case pairs */
 220              		.loc 1 371 31 is_stmt 1 view .LVU61
 221              	.L13:
 384:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	}
 385:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 
 386:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 	return chr;
 222              		.loc 1 386 2 view .LVU62
 387:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** }
 223              		.loc 1 387 1 is_stmt 0 view .LVU63
 224 0054 F0BC     		pop	{r4, r5, r6, r7}
 225              	.LCFI1:
 226              		.cfi_remember_state
 227              		.cfi_restore 7
 228              		.cfi_restore 6
 229              		.cfi_restore 5
ARM GAS  /tmp/ccrdNCqL.s 			page 12


 230              		.cfi_restore 4
 231              		.cfi_def_cfa_offset 0
 232 0056 7047     		bx	lr
 233              	.LVL21:
 234              	.L23:
 235              	.LCFI2:
 236              		.cfi_restore_state
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 237              		.loc 1 372 12 is_stmt 1 view .LVU64
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 238              		.loc 1 372 30 is_stmt 0 view .LVU65
 239 0058 821A     		subs	r2, r0, r2
 240              	.LVL22:
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 241              		.loc 1 372 30 view .LVU66
 242 005a 02F00103 		and	r3, r2, #1
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 243              		.loc 1 372 16 view .LVU67
 244 005e C01A     		subs	r0, r0, r3
 245              	.LVL23:
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 246              		.loc 1 372 16 view .LVU68
 247 0060 80B2     		uxth	r0, r0
 248              	.LVL24:
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 249              		.loc 1 372 35 is_stmt 1 view .LVU69
 372:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 2: chr -= 16; break;				/* Shift -16 */
 250              		.loc 1 372 4 is_stmt 0 view .LVU70
 251 0062 F7E7     		b	.L13
 252              	.LVL25:
 253              	.L22:
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 254              		.loc 1 373 12 is_stmt 1 view .LVU71
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 255              		.loc 1 373 16 is_stmt 0 view .LVU72
 256 0064 1038     		subs	r0, r0, #16
 257              	.LVL26:
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 258              		.loc 1 373 16 view .LVU73
 259 0066 80B2     		uxth	r0, r0
 260              	.LVL27:
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 261              		.loc 1 373 23 is_stmt 1 view .LVU74
 373:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 3:	chr -= 32; break;				/* Shift -32 */
 262              		.loc 1 373 4 is_stmt 0 view .LVU75
 263 0068 F4E7     		b	.L13
 264              	.L21:
 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 265              		.loc 1 374 12 is_stmt 1 view .LVU76
 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 266              		.loc 1 374 16 is_stmt 0 view .LVU77
 267 006a 2038     		subs	r0, r0, #32
 268              	.LVL28:
 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 269              		.loc 1 374 16 view .LVU78
 270 006c 80B2     		uxth	r0, r0
 271              	.LVL29:
ARM GAS  /tmp/ccrdNCqL.s 			page 13


 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 272              		.loc 1 374 23 is_stmt 1 view .LVU79
 374:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 4:	chr -= 48; break;				/* Shift -48 */
 273              		.loc 1 374 4 is_stmt 0 view .LVU80
 274 006e F1E7     		b	.L13
 275              	.L20:
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 276              		.loc 1 375 12 is_stmt 1 view .LVU81
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 277              		.loc 1 375 16 is_stmt 0 view .LVU82
 278 0070 3038     		subs	r0, r0, #48
 279              	.LVL30:
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 280              		.loc 1 375 16 view .LVU83
 281 0072 80B2     		uxth	r0, r0
 282              	.LVL31:
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 283              		.loc 1 375 23 is_stmt 1 view .LVU84
 375:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 5:	chr -= 26; break;				/* Shift -26 */
 284              		.loc 1 375 4 is_stmt 0 view .LVU85
 285 0074 EEE7     		b	.L13
 286              	.L19:
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 287              		.loc 1 376 12 is_stmt 1 view .LVU86
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 288              		.loc 1 376 16 is_stmt 0 view .LVU87
 289 0076 1A38     		subs	r0, r0, #26
 290              	.LVL32:
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 291              		.loc 1 376 16 view .LVU88
 292 0078 80B2     		uxth	r0, r0
 293              	.LVL33:
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 294              		.loc 1 376 23 is_stmt 1 view .LVU89
 376:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 6:	chr += 8; break;				/* Shift +8 */
 295              		.loc 1 376 4 is_stmt 0 view .LVU90
 296 007a EBE7     		b	.L13
 297              	.L18:
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 298              		.loc 1 377 12 is_stmt 1 view .LVU91
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 299              		.loc 1 377 16 is_stmt 0 view .LVU92
 300 007c 0830     		adds	r0, r0, #8
 301              	.LVL34:
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 302              		.loc 1 377 16 view .LVU93
 303 007e 80B2     		uxth	r0, r0
 304              	.LVL35:
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 305              		.loc 1 377 22 is_stmt 1 view .LVU94
 377:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 7: chr -= 80; break;				/* Shift -80 */
 306              		.loc 1 377 4 is_stmt 0 view .LVU95
 307 0080 E8E7     		b	.L13
 308              	.L17:
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 309              		.loc 1 378 12 is_stmt 1 view .LVU96
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
ARM GAS  /tmp/ccrdNCqL.s 			page 14


 310              		.loc 1 378 16 is_stmt 0 view .LVU97
 311 0082 5038     		subs	r0, r0, #80
 312              	.LVL36:
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 313              		.loc 1 378 16 view .LVU98
 314 0084 80B2     		uxth	r0, r0
 315              	.LVL37:
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 316              		.loc 1 378 23 is_stmt 1 view .LVU99
 378:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			case 8:	chr -= 0x1C60; break;			/* Shift -0x1C60 */
 317              		.loc 1 378 4 is_stmt 0 view .LVU100
 318 0086 E5E7     		b	.L13
 319              	.L15:
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 320              		.loc 1 379 12 is_stmt 1 view .LVU101
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 321              		.loc 1 379 16 is_stmt 0 view .LVU102
 322 0088 A0F5E350 		sub	r0, r0, #7264
 323              	.LVL38:
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 324              		.loc 1 379 16 view .LVU103
 325 008c 80B2     		uxth	r0, r0
 326              	.LVL39:
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 327              		.loc 1 379 27 is_stmt 1 view .LVU104
 379:Middlewares/Third_Party/FatFs/src/option/ccsbcs.c **** 			}
 328              		.loc 1 379 4 is_stmt 0 view .LVU105
 329 008e E1E7     		b	.L13
 330              	.L32:
 331              		.align	2
 332              	.L31:
 333 0090 00000000 		.word	.LANCHOR2
 334 0094 00000000 		.word	.LANCHOR1
 335              		.cfi_endproc
 336              	.LFE351:
 338              		.section	.rodata.Tbl,"a"
 339              		.align	2
 340              		.set	.LANCHOR0,. + 0
 343              	Tbl:
 344 0000 C700     		.short	199
 345 0002 FC00     		.short	252
 346 0004 E900     		.short	233
 347 0006 E200     		.short	226
 348 0008 E400     		.short	228
 349 000a E000     		.short	224
 350 000c E500     		.short	229
 351 000e E700     		.short	231
 352 0010 EA00     		.short	234
 353 0012 EB00     		.short	235
 354 0014 E800     		.short	232
 355 0016 EF00     		.short	239
 356 0018 EE00     		.short	238
 357 001a EC00     		.short	236
 358 001c C400     		.short	196
 359 001e C500     		.short	197
 360 0020 C900     		.short	201
 361 0022 E600     		.short	230
ARM GAS  /tmp/ccrdNCqL.s 			page 15


 362 0024 C600     		.short	198
 363 0026 F400     		.short	244
 364 0028 F600     		.short	246
 365 002a F200     		.short	242
 366 002c FB00     		.short	251
 367 002e F900     		.short	249
 368 0030 FF00     		.short	255
 369 0032 D600     		.short	214
 370 0034 DC00     		.short	220
 371 0036 F800     		.short	248
 372 0038 A300     		.short	163
 373 003a D800     		.short	216
 374 003c D700     		.short	215
 375 003e 9201     		.short	402
 376 0040 E100     		.short	225
 377 0042 ED00     		.short	237
 378 0044 F300     		.short	243
 379 0046 FA00     		.short	250
 380 0048 F100     		.short	241
 381 004a D100     		.short	209
 382 004c AA00     		.short	170
 383 004e BA00     		.short	186
 384 0050 BF00     		.short	191
 385 0052 AE00     		.short	174
 386 0054 AC00     		.short	172
 387 0056 BD00     		.short	189
 388 0058 BC00     		.short	188
 389 005a A100     		.short	161
 390 005c AB00     		.short	171
 391 005e BB00     		.short	187
 392 0060 9125     		.short	9617
 393 0062 9225     		.short	9618
 394 0064 9325     		.short	9619
 395 0066 0225     		.short	9474
 396 0068 2425     		.short	9508
 397 006a C100     		.short	193
 398 006c C200     		.short	194
 399 006e C000     		.short	192
 400 0070 A900     		.short	169
 401 0072 6325     		.short	9571
 402 0074 5125     		.short	9553
 403 0076 5725     		.short	9559
 404 0078 5D25     		.short	9565
 405 007a A200     		.short	162
 406 007c A500     		.short	165
 407 007e 1025     		.short	9488
 408 0080 1425     		.short	9492
 409 0082 3425     		.short	9524
 410 0084 2C25     		.short	9516
 411 0086 1C25     		.short	9500
 412 0088 0025     		.short	9472
 413 008a 3C25     		.short	9532
 414 008c E300     		.short	227
 415 008e C300     		.short	195
 416 0090 5A25     		.short	9562
 417 0092 5425     		.short	9556
 418 0094 6925     		.short	9577
ARM GAS  /tmp/ccrdNCqL.s 			page 16


 419 0096 6625     		.short	9574
 420 0098 6025     		.short	9568
 421 009a 5025     		.short	9552
 422 009c 6C25     		.short	9580
 423 009e A400     		.short	164
 424 00a0 F000     		.short	240
 425 00a2 D000     		.short	208
 426 00a4 CA00     		.short	202
 427 00a6 CB00     		.short	203
 428 00a8 C800     		.short	200
 429 00aa 3101     		.short	305
 430 00ac CD00     		.short	205
 431 00ae CE00     		.short	206
 432 00b0 CF00     		.short	207
 433 00b2 1825     		.short	9496
 434 00b4 0C25     		.short	9484
 435 00b6 8825     		.short	9608
 436 00b8 8425     		.short	9604
 437 00ba A600     		.short	166
 438 00bc CC00     		.short	204
 439 00be 8025     		.short	9600
 440 00c0 D300     		.short	211
 441 00c2 DF00     		.short	223
 442 00c4 D400     		.short	212
 443 00c6 D200     		.short	210
 444 00c8 F500     		.short	245
 445 00ca D500     		.short	213
 446 00cc B500     		.short	181
 447 00ce FE00     		.short	254
 448 00d0 DE00     		.short	222
 449 00d2 DA00     		.short	218
 450 00d4 DB00     		.short	219
 451 00d6 D900     		.short	217
 452 00d8 FD00     		.short	253
 453 00da DD00     		.short	221
 454 00dc AF00     		.short	175
 455 00de B400     		.short	180
 456 00e0 AD00     		.short	173
 457 00e2 B100     		.short	177
 458 00e4 1720     		.short	8215
 459 00e6 BE00     		.short	190
 460 00e8 B600     		.short	182
 461 00ea A700     		.short	167
 462 00ec F700     		.short	247
 463 00ee B800     		.short	184
 464 00f0 B000     		.short	176
 465 00f2 A800     		.short	168
 466 00f4 B700     		.short	183
 467 00f6 B900     		.short	185
 468 00f8 B300     		.short	179
 469 00fa B200     		.short	178
 470 00fc A025     		.short	9632
 471 00fe A000     		.short	160
 472              		.section	.rodata.cvt1.13941,"a"
 473              		.align	2
 474              		.set	.LANCHOR2,. + 0
 477              	cvt1.13941:
ARM GAS  /tmp/ccrdNCqL.s 			page 17


 478 0000 6100     		.short	97
 479 0002 1A03     		.short	794
 480 0004 E000     		.short	224
 481 0006 1703     		.short	791
 482 0008 F800     		.short	248
 483 000a 0703     		.short	775
 484 000c FF00     		.short	255
 485 000e 0100     		.short	1
 486 0010 7801     		.short	376
 487 0012 0001     		.short	256
 488 0014 3001     		.short	304
 489 0016 3201     		.short	306
 490 0018 0601     		.short	262
 491 001a 3901     		.short	313
 492 001c 1001     		.short	272
 493 001e 4A01     		.short	330
 494 0020 2E01     		.short	302
 495 0022 7901     		.short	377
 496 0024 0601     		.short	262
 497 0026 8001     		.short	384
 498 0028 4D00     		.short	77
 499 002a 4302     		.short	579
 500 002c 8101     		.short	385
 501 002e 8201     		.short	386
 502 0030 8201     		.short	386
 503 0032 8401     		.short	388
 504 0034 8401     		.short	388
 505 0036 8601     		.short	390
 506 0038 8701     		.short	391
 507 003a 8701     		.short	391
 508 003c 8901     		.short	393
 509 003e 8A01     		.short	394
 510 0040 8B01     		.short	395
 511 0042 8B01     		.short	395
 512 0044 8D01     		.short	397
 513 0046 8E01     		.short	398
 514 0048 8F01     		.short	399
 515 004a 9001     		.short	400
 516 004c 9101     		.short	401
 517 004e 9101     		.short	401
 518 0050 9301     		.short	403
 519 0052 9401     		.short	404
 520 0054 F601     		.short	502
 521 0056 9601     		.short	406
 522 0058 9701     		.short	407
 523 005a 9801     		.short	408
 524 005c 9801     		.short	408
 525 005e 3D02     		.short	573
 526 0060 9B01     		.short	411
 527 0062 9C01     		.short	412
 528 0064 9D01     		.short	413
 529 0066 2002     		.short	544
 530 0068 9F01     		.short	415
 531 006a A001     		.short	416
 532 006c A001     		.short	416
 533 006e A201     		.short	418
 534 0070 A201     		.short	418
ARM GAS  /tmp/ccrdNCqL.s 			page 18


 535 0072 A401     		.short	420
 536 0074 A401     		.short	420
 537 0076 A601     		.short	422
 538 0078 A701     		.short	423
 539 007a A701     		.short	423
 540 007c A901     		.short	425
 541 007e AA01     		.short	426
 542 0080 AB01     		.short	427
 543 0082 AC01     		.short	428
 544 0084 AC01     		.short	428
 545 0086 AE01     		.short	430
 546 0088 AF01     		.short	431
 547 008a AF01     		.short	431
 548 008c B101     		.short	433
 549 008e B201     		.short	434
 550 0090 B301     		.short	435
 551 0092 B301     		.short	435
 552 0094 B501     		.short	437
 553 0096 B501     		.short	437
 554 0098 B701     		.short	439
 555 009a B801     		.short	440
 556 009c B801     		.short	440
 557 009e BA01     		.short	442
 558 00a0 BB01     		.short	443
 559 00a2 BC01     		.short	444
 560 00a4 BC01     		.short	444
 561 00a6 BE01     		.short	446
 562 00a8 F701     		.short	503
 563 00aa C001     		.short	448
 564 00ac C101     		.short	449
 565 00ae C201     		.short	450
 566 00b0 C301     		.short	451
 567 00b2 C401     		.short	452
 568 00b4 C501     		.short	453
 569 00b6 C401     		.short	452
 570 00b8 C701     		.short	455
 571 00ba C801     		.short	456
 572 00bc C701     		.short	455
 573 00be CA01     		.short	458
 574 00c0 CB01     		.short	459
 575 00c2 CA01     		.short	458
 576 00c4 CD01     		.short	461
 577 00c6 1001     		.short	272
 578 00c8 DD01     		.short	477
 579 00ca 0100     		.short	1
 580 00cc 8E01     		.short	398
 581 00ce DE01     		.short	478
 582 00d0 1201     		.short	274
 583 00d2 F301     		.short	499
 584 00d4 0300     		.short	3
 585 00d6 F101     		.short	497
 586 00d8 F401     		.short	500
 587 00da F401     		.short	500
 588 00dc F801     		.short	504
 589 00de 2801     		.short	296
 590 00e0 2202     		.short	546
 591 00e2 1201     		.short	274
ARM GAS  /tmp/ccrdNCqL.s 			page 19


 592 00e4 3A02     		.short	570
 593 00e6 0900     		.short	9
 594 00e8 652C     		.short	11365
 595 00ea 3B02     		.short	571
 596 00ec 3B02     		.short	571
 597 00ee 3D02     		.short	573
 598 00f0 662C     		.short	11366
 599 00f2 3F02     		.short	575
 600 00f4 4002     		.short	576
 601 00f6 4102     		.short	577
 602 00f8 4102     		.short	577
 603 00fa 4602     		.short	582
 604 00fc 0A01     		.short	266
 605 00fe 5302     		.short	595
 606 0100 4000     		.short	64
 607 0102 8101     		.short	385
 608 0104 8601     		.short	390
 609 0106 5502     		.short	597
 610 0108 8901     		.short	393
 611 010a 8A01     		.short	394
 612 010c 5802     		.short	600
 613 010e 8F01     		.short	399
 614 0110 5A02     		.short	602
 615 0112 9001     		.short	400
 616 0114 5C02     		.short	604
 617 0116 5D02     		.short	605
 618 0118 5E02     		.short	606
 619 011a 5F02     		.short	607
 620 011c 9301     		.short	403
 621 011e 6102     		.short	609
 622 0120 6202     		.short	610
 623 0122 9401     		.short	404
 624 0124 6402     		.short	612
 625 0126 6502     		.short	613
 626 0128 6602     		.short	614
 627 012a 6702     		.short	615
 628 012c 9701     		.short	407
 629 012e 9601     		.short	406
 630 0130 6A02     		.short	618
 631 0132 622C     		.short	11362
 632 0134 6C02     		.short	620
 633 0136 6D02     		.short	621
 634 0138 6E02     		.short	622
 635 013a 9C01     		.short	412
 636 013c 7002     		.short	624
 637 013e 7102     		.short	625
 638 0140 9D01     		.short	413
 639 0142 7302     		.short	627
 640 0144 7402     		.short	628
 641 0146 9F01     		.short	415
 642 0148 7602     		.short	630
 643 014a 7702     		.short	631
 644 014c 7802     		.short	632
 645 014e 7902     		.short	633
 646 0150 7A02     		.short	634
 647 0152 7B02     		.short	635
 648 0154 7C02     		.short	636
ARM GAS  /tmp/ccrdNCqL.s 			page 20


 649 0156 642C     		.short	11364
 650 0158 7E02     		.short	638
 651 015a 7F02     		.short	639
 652 015c A601     		.short	422
 653 015e 8102     		.short	641
 654 0160 8202     		.short	642
 655 0162 A901     		.short	425
 656 0164 8402     		.short	644
 657 0166 8502     		.short	645
 658 0168 8602     		.short	646
 659 016a 8702     		.short	647
 660 016c AE01     		.short	430
 661 016e 4402     		.short	580
 662 0170 B101     		.short	433
 663 0172 B201     		.short	434
 664 0174 4502     		.short	581
 665 0176 8D02     		.short	653
 666 0178 8E02     		.short	654
 667 017a 8F02     		.short	655
 668 017c 9002     		.short	656
 669 017e 9102     		.short	657
 670 0180 B701     		.short	439
 671 0182 7B03     		.short	891
 672 0184 0300     		.short	3
 673 0186 FD03     		.short	1021
 674 0188 FE03     		.short	1022
 675 018a FF03     		.short	1023
 676 018c AC03     		.short	940
 677 018e 0400     		.short	4
 678 0190 8603     		.short	902
 679 0192 8803     		.short	904
 680 0194 8903     		.short	905
 681 0196 8A03     		.short	906
 682 0198 B103     		.short	945
 683 019a 1103     		.short	785
 684 019c C203     		.short	962
 685 019e 0200     		.short	2
 686 01a0 A303     		.short	931
 687 01a2 A303     		.short	931
 688 01a4 C403     		.short	964
 689 01a6 0803     		.short	776
 690 01a8 CC03     		.short	972
 691 01aa 0300     		.short	3
 692 01ac 8C03     		.short	908
 693 01ae 8E03     		.short	910
 694 01b0 8F03     		.short	911
 695 01b2 D803     		.short	984
 696 01b4 1801     		.short	280
 697 01b6 F203     		.short	1010
 698 01b8 0A00     		.short	10
 699 01ba F903     		.short	1017
 700 01bc F303     		.short	1011
 701 01be F403     		.short	1012
 702 01c0 F503     		.short	1013
 703 01c2 F603     		.short	1014
 704 01c4 F703     		.short	1015
 705 01c6 F703     		.short	1015
ARM GAS  /tmp/ccrdNCqL.s 			page 21


 706 01c8 F903     		.short	1017
 707 01ca FA03     		.short	1018
 708 01cc FA03     		.short	1018
 709 01ce 3004     		.short	1072
 710 01d0 2003     		.short	800
 711 01d2 5004     		.short	1104
 712 01d4 1007     		.short	1808
 713 01d6 6004     		.short	1120
 714 01d8 2201     		.short	290
 715 01da 8A04     		.short	1162
 716 01dc 3601     		.short	310
 717 01de C104     		.short	1217
 718 01e0 0E01     		.short	270
 719 01e2 CF04     		.short	1231
 720 01e4 0100     		.short	1
 721 01e6 C004     		.short	1216
 722 01e8 D004     		.short	1232
 723 01ea 4401     		.short	324
 724 01ec 6105     		.short	1377
 725 01ee 2604     		.short	1062
 726 01f0 0000     		.short	0
 727              		.section	.rodata.cvt2.13942,"a"
 728              		.align	2
 729              		.set	.LANCHOR1,. + 0
 732              	cvt2.13942:
 733 0000 7D1D     		.short	7549
 734 0002 0100     		.short	1
 735 0004 632C     		.short	11363
 736 0006 001E     		.short	7680
 737 0008 9601     		.short	406
 738 000a A01E     		.short	7840
 739 000c 5A01     		.short	346
 740 000e 001F     		.short	7936
 741 0010 0806     		.short	1544
 742 0012 101F     		.short	7952
 743 0014 0606     		.short	1542
 744 0016 201F     		.short	7968
 745 0018 0806     		.short	1544
 746 001a 301F     		.short	7984
 747 001c 0806     		.short	1544
 748 001e 401F     		.short	8000
 749 0020 0606     		.short	1542
 750 0022 511F     		.short	8017
 751 0024 0700     		.short	7
 752 0026 591F     		.short	8025
 753 0028 521F     		.short	8018
 754 002a 5B1F     		.short	8027
 755 002c 541F     		.short	8020
 756 002e 5D1F     		.short	8029
 757 0030 561F     		.short	8022
 758 0032 5F1F     		.short	8031
 759 0034 601F     		.short	8032
 760 0036 0806     		.short	1544
 761 0038 701F     		.short	8048
 762 003a 0E00     		.short	14
 763 003c BA1F     		.short	8122
 764 003e BB1F     		.short	8123
ARM GAS  /tmp/ccrdNCqL.s 			page 22


 765 0040 C81F     		.short	8136
 766 0042 C91F     		.short	8137
 767 0044 CA1F     		.short	8138
 768 0046 CB1F     		.short	8139
 769 0048 DA1F     		.short	8154
 770 004a DB1F     		.short	8155
 771 004c F81F     		.short	8184
 772 004e F91F     		.short	8185
 773 0050 EA1F     		.short	8170
 774 0052 EB1F     		.short	8171
 775 0054 FA1F     		.short	8186
 776 0056 FB1F     		.short	8187
 777 0058 801F     		.short	8064
 778 005a 0806     		.short	1544
 779 005c 901F     		.short	8080
 780 005e 0806     		.short	1544
 781 0060 A01F     		.short	8096
 782 0062 0806     		.short	1544
 783 0064 B01F     		.short	8112
 784 0066 0400     		.short	4
 785 0068 B81F     		.short	8120
 786 006a B91F     		.short	8121
 787 006c B21F     		.short	8114
 788 006e BC1F     		.short	8124
 789 0070 CC1F     		.short	8140
 790 0072 0100     		.short	1
 791 0074 C31F     		.short	8131
 792 0076 D01F     		.short	8144
 793 0078 0206     		.short	1538
 794 007a E01F     		.short	8160
 795 007c 0206     		.short	1538
 796 007e E51F     		.short	8165
 797 0080 0100     		.short	1
 798 0082 EC1F     		.short	8172
 799 0084 F21F     		.short	8178
 800 0086 0100     		.short	1
 801 0088 FC1F     		.short	8188
 802 008a 4E21     		.short	8526
 803 008c 0100     		.short	1
 804 008e 3221     		.short	8498
 805 0090 7021     		.short	8560
 806 0092 1002     		.short	528
 807 0094 8421     		.short	8580
 808 0096 0100     		.short	1
 809 0098 8321     		.short	8579
 810 009a D024     		.short	9424
 811 009c 1A05     		.short	1306
 812 009e 302C     		.short	11312
 813 00a0 2F04     		.short	1071
 814 00a2 602C     		.short	11360
 815 00a4 0201     		.short	258
 816 00a6 672C     		.short	11367
 817 00a8 0601     		.short	262
 818 00aa 752C     		.short	11381
 819 00ac 0201     		.short	258
 820 00ae 802C     		.short	11392
 821 00b0 6401     		.short	356
ARM GAS  /tmp/ccrdNCqL.s 			page 23


 822 00b2 002D     		.short	11520
 823 00b4 2608     		.short	2086
 824 00b6 41FF     		.short	-191
 825 00b8 1A03     		.short	794
 826 00ba 0000     		.short	0
 827              		.text
 828              	.Letext0:
 829              		.file 2 "Middlewares/Third_Party/FatFs/src/option/../integer.h"
 830              		.file 3 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 831              		.file 4 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 832              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 833              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 834              		.file 7 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/lib/gcc/arm-none-eabi/
 835              		.file 8 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 836              		.file 9 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 837              		.file 10 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 838              		.file 11 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 839              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 840              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 841              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 842              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 843              		.file 16 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
ARM GAS  /tmp/ccrdNCqL.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ccsbcs.c
     /tmp/ccrdNCqL.s:17     .text.ff_convert:0000000000000000 $t
     /tmp/ccrdNCqL.s:25     .text.ff_convert:0000000000000000 ff_convert
     /tmp/ccrdNCqL.s:100    .text.ff_convert:0000000000000038 $d
     /tmp/ccrdNCqL.s:105    .text.ff_wtoupper:0000000000000000 $t
     /tmp/ccrdNCqL.s:112    .text.ff_wtoupper:0000000000000000 ff_wtoupper
     /tmp/ccrdNCqL.s:203    .text.ff_wtoupper:0000000000000044 $d
     /tmp/ccrdNCqL.s:333    .text.ff_wtoupper:0000000000000090 $d
     /tmp/ccrdNCqL.s:339    .rodata.Tbl:0000000000000000 $d
     /tmp/ccrdNCqL.s:343    .rodata.Tbl:0000000000000000 Tbl
     /tmp/ccrdNCqL.s:473    .rodata.cvt1.13941:0000000000000000 $d
     /tmp/ccrdNCqL.s:477    .rodata.cvt1.13941:0000000000000000 cvt1.13941
     /tmp/ccrdNCqL.s:728    .rodata.cvt2.13942:0000000000000000 $d
     /tmp/ccrdNCqL.s:732    .rodata.cvt2.13942:0000000000000000 cvt2.13942
     /tmp/ccrdNCqL.s:212    .text.ff_wtoupper:000000000000004d $d
     /tmp/ccrdNCqL.s:212    .text.ff_wtoupper:000000000000004e $t

NO UNDEFINED SYMBOLS
