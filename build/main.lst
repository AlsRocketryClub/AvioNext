ARM GAS  /tmp/ccrX756S.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC2_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC2_SD_Init:
  25              	.LFB369:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "LoRA"
  27:Core/Src/main.c **** #include "AvioNEXT.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "LG_IMU.h"
  30:Core/Src/main.c **** #include "max_m10s.h"
  31:Core/Src/main.c **** #include "StatusDisplay.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccrX756S.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** uint16_t DMA_data;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** uint16_t read_Data;
  45:Core/Src/main.c **** ;
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  55:Core/Src/main.c **** ADC_HandleTypeDef hadc3;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc3;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** RNG_HandleTypeDef hrng;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** SD_HandleTypeDef hsd2;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  68:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  69:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  72:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  73:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  74:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  75:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  76:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  77:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch3;
  78:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch2;
  79:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch1;
  80:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim4_ch3;
  81:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim5_ch4;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** UART_HandleTypeDef huart4;
  84:Core/Src/main.c **** UART_HandleTypeDef huart6;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE BEGIN PV */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PV */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 3


  90:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  91:Core/Src/main.c **** void SystemClock_Config(void);
  92:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  93:Core/Src/main.c **** static void MX_GPIO_Init(void);
  94:Core/Src/main.c **** static void MX_DMA_Init(void);
  95:Core/Src/main.c **** static void MX_SPI3_Init(void);
  96:Core/Src/main.c **** static void MX_FDCAN3_Init(void);
  97:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  98:Core/Src/main.c **** static void MX_ADC1_Init(void);
  99:Core/Src/main.c **** static void MX_TIM4_Init(void);
 100:Core/Src/main.c **** static void MX_ADC3_Init(void);
 101:Core/Src/main.c **** static void MX_SPI2_Init(void);
 102:Core/Src/main.c **** static void MX_I2C2_Init(void);
 103:Core/Src/main.c **** static void MX_TIM2_Init(void);
 104:Core/Src/main.c **** static void MX_TIM5_Init(void);
 105:Core/Src/main.c **** static void MX_TIM3_Init(void);
 106:Core/Src/main.c **** static void MX_SPI1_Init(void);
 107:Core/Src/main.c **** static void MX_UART4_Init(void);
 108:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void);
 109:Core/Src/main.c **** static void MX_TIM13_Init(void);
 110:Core/Src/main.c **** static void MX_TIM14_Init(void);
 111:Core/Src/main.c **** static void MX_RNG_Init(void);
 112:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END PFP */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 117:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** volatile int datasentflag = 0;
 120:Core/Src/main.c **** uint8_t LED_Color_Data[14][3];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** int disarm(char *state) {
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 124:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 0);
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 129:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 0);
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 134:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	setStatus("ARM", 2);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	strcpy(state, "DISARMED");
 140:Core/Src/main.c **** 	return 0;
 141:Core/Src/main.c **** }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** int arm(char *state) {
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 145:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 4


 147:Core/Src/main.c **** 	strcpy(state, "ARMED");
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	setStatus("ARM", 0);
 150:Core/Src/main.c **** 	return 0;
 151:Core/Src/main.c **** }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** double x[4];
 154:Core/Src/main.c **** void multiplyQuat(double r[4], double s[4]) {
 155:Core/Src/main.c **** 	float temp[4];
 156:Core/Src/main.c **** 	temp[0] = r[0] * s[0] - r[1] * s[1] - r[2] * s[2] - r[3] * s[3];
 157:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 158:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 159:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 160:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 161:Core/Src/main.c **** 		x[i] = temp[i];
 162:Core/Src/main.c **** 	}
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** uint8_t Baro2_Read_Register(uint8_t addr) {
 166:Core/Src/main.c **** 	uint8_t reg_value;
 167:Core/Src/main.c **** 	addr |= (1 << 7);
 168:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 171:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	return reg_value;
 176:Core/Src/main.c **** }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** void Baro2_Write_Register(uint8_t addr, uint8_t data) {
 179:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 180:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 181:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 182:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** void Baro2_Configure(){
 187:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 188:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 189:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 	Baro2_Write_Register(0x18, cal_L);
 192:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** 	Baro2_Write_Register(0x10, 0b01000000); //50Hz refresh rate, low pass off
 196:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** int32_t Baro2_Get_Pressure(){
 200:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 201:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 202:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 203:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 5


 204:Core/Src/main.c **** 	int32_t BARO = 0;
 205:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 206:Core/Src/main.c **** 	return BARO;
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** /* USER CODE END 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief  The application entry point.
 213:Core/Src/main.c ****   * @retval int
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** int main(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** 	char state[50] = "DISARMED";
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** 	FRESULT res; /* FatFs function common result code */
 223:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 224:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 225:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 226:Core/Src/main.c ****   /* USER CODE END 1 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 231:Core/Src/main.c ****   HAL_Init();
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END Init */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* Configure the system clock */
 238:Core/Src/main.c ****   SystemClock_Config();
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /* Configure the peripherals common clocks */
 241:Core/Src/main.c ****   PeriphCommonClock_Config();
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END SysInit */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* Initialize all configured peripherals */
 248:Core/Src/main.c ****   MX_GPIO_Init();
 249:Core/Src/main.c ****   MX_DMA_Init();
 250:Core/Src/main.c ****   MX_SPI3_Init();
 251:Core/Src/main.c ****   MX_FDCAN3_Init();
 252:Core/Src/main.c ****   MX_USART6_UART_Init();
 253:Core/Src/main.c ****   MX_ADC1_Init();
 254:Core/Src/main.c ****   MX_TIM4_Init();
 255:Core/Src/main.c ****   MX_ADC3_Init();
 256:Core/Src/main.c ****   MX_SPI2_Init();
 257:Core/Src/main.c ****   MX_I2C2_Init();
 258:Core/Src/main.c ****   MX_TIM2_Init();
 259:Core/Src/main.c ****   MX_TIM5_Init();
 260:Core/Src/main.c ****   MX_TIM3_Init();
ARM GAS  /tmp/ccrX756S.s 			page 6


 261:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 262:Core/Src/main.c ****   MX_SPI1_Init();
 263:Core/Src/main.c ****   MX_UART4_Init();
 264:Core/Src/main.c ****   MX_FATFS_Init();
 265:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 266:Core/Src/main.c ****   MX_TIM13_Init();
 267:Core/Src/main.c ****   MX_TIM14_Init();
 268:Core/Src/main.c ****   MX_RNG_Init();
 269:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 270:Core/Src/main.c ****   while(1) {
 271:Core/Src/main.c ****     CDC_Transmit_HS((uint8_t*)"not Hi\n", strlen("not hi\n"));
 272:Core/Src/main.c ****     HAL_Delay(1000);
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c **** 	//if (MAX_M10s_init(&hi2c2))
 275:Core/Src/main.c **** 	//	Error_Handler();
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** 	//MAX_M10S_init(&hi2c2);
 278:Core/Src/main.c **** 	const int MAX = 50;
 279:Core/Src/main.c **** 	const double SPEED = 2.0 / 2000;
 280:Core/Src/main.c **** 	const double r_offset = 0;
 281:Core/Src/main.c **** 	const double g_offset = 1;
 282:Core/Src/main.c **** 	const double b_offset = 2;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** 	uint8_t LG_status = LG_Check();
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 	if(LG_status & 1){
 288:Core/Src/main.c **** 		setStatus("LG 1", 2);
 289:Core/Src/main.c **** 	}else{
 290:Core/Src/main.c **** 		setStatus("LG 1", 0);
 291:Core/Src/main.c **** 	}
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 	if(LG_status & 2){
 294:Core/Src/main.c **** 		setStatus("LG 2", 2);
 295:Core/Src/main.c **** 	}else{
 296:Core/Src/main.c **** 		setStatus("LG 2", 0);
 297:Core/Src/main.c **** 	}
 298:Core/Src/main.c **** 	LG_Configure();
 299:Core/Src/main.c **** 	HAL_Delay(3000);
 300:Core/Src/main.c **** 	HG2_Write_Register(0x1C, 0b10111111);
 301:Core/Src/main.c **** 	HAL_Delay(2);
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b01011000);
 304:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b11011000);
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** 	Baro2_Configure();
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** 	double temperature = 275.15;
 309:Core/Src/main.c **** 	double sea_level_pressure = 101.7;
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 	int index = 0;
 312:Core/Src/main.c **** 	double avg_tab[100];
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** 	for(int i = 0; i < 14; i++){
 315:Core/Src/main.c **** 		LED_Color_Data[i][0] = 0;
 316:Core/Src/main.c **** 		LED_Color_Data[i][1] = 255;
 317:Core/Src/main.c **** 		LED_Color_Data[i][2] = 0;
ARM GAS  /tmp/ccrX756S.s 			page 7


 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** 	}
 320:Core/Src/main.c **** 	disarm(state);
 321:Core/Src/main.c **** 	setLEDs(LED_Color_Data);
 322:Core/Src/main.c **** 	setStatus("CAN", 1);
 323:Core/Src/main.c **** 	for(int i = 0; i < 100; i++){
 324:Core/Src/main.c **** 		avg_tab[i] = 0;
 325:Core/Src/main.c **** 	}
 326:Core/Src/main.c **** 	while (1) {
 327:Core/Src/main.c **** 		int32_t int_pressure = Baro2_Get_Pressure();
 328:Core/Src/main.c **** 		double float_pressure = (double)int_pressure / (40960.0 * 256.0);
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** 		avg_tab[index] = float_pressure;
 331:Core/Src/main.c **** 		index++;
 332:Core/Src/main.c **** 		if(index > 99){
 333:Core/Src/main.c **** 			index = 0;
 334:Core/Src/main.c **** 		}
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** 		double sum = 0;
 337:Core/Src/main.c **** 		for(int i = 0; i < 100; i++){
 338:Core/Src/main.c **** 			sum += avg_tab[i];
 339:Core/Src/main.c **** 		}
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** 		sum /= 100;
 342:Core/Src/main.c **** 		double altitude = (temperature/0.0065) *(1- pow((sum/sea_level_pressure), (1/5.256)));
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** 		uint8_t* data_gyro[50];
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 		double test = LG_Get_Acc_Z();
 347:Core/Src/main.c **** 		sprintf(data_gyro, "%f\n", test);
 348:Core/Src/main.c **** 		CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 349:Core/Src/main.c **** 		HAL_Delay(20);
 350:Core/Src/main.c **** 		updateStatus();
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 	}
 353:Core/Src/main.c **** 	float rotZ = 0;
 354:Core/Src/main.c **** 	uint32_t lastTime = 0;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 	float calOmegaX = 0;
 357:Core/Src/main.c **** 	float calOmegaY = 0;
 358:Core/Src/main.c **** 	float calOmegaZ = 0;
 359:Core/Src/main.c **** 	HAL_Delay(2000);
 360:Core/Src/main.c **** 	for (int i = 0; i < 500; i++) {
 361:Core/Src/main.c **** 		if (LG_Read_Register(0x1E) | (1 << 1)) {
 362:Core/Src/main.c **** 			calOmegaX += LG_Get_Gyro_X();
 363:Core/Src/main.c **** 			calOmegaY += LG_Get_Gyro_Y();
 364:Core/Src/main.c **** 			calOmegaZ += LG_Get_Gyro_Z();
 365:Core/Src/main.c **** 		}
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 		//HAL_Delay(20);
 368:Core/Src/main.c **** 	}
 369:Core/Src/main.c **** 	calOmegaX /= 500;
 370:Core/Src/main.c **** 	calOmegaY /= 500;
 371:Core/Src/main.c **** 	calOmegaZ /= 500;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 1);
 374:Core/Src/main.c **** 	HAL_Delay(200);
ARM GAS  /tmp/ccrX756S.s 			page 8


 375:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 0);
 376:Core/Src/main.c **** 	HAL_Delay(200);
 377:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 1);
 378:Core/Src/main.c **** 	HAL_Delay(200);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, 1);
 381:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_3, 1);
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 384:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 385:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 386:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	setServo(1, 90);
 389:Core/Src/main.c **** 	setServo(2, 180);
 390:Core/Src/main.c **** 	setServo(3, 0);
 391:Core/Src/main.c **** 	setServo(4, 45);
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** 	LoRA_begin(868000000);
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** 	//HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** 	int connected = 0;
 398:Core/Src/main.c **** 	long last_packet = 0;
 399:Core/Src/main.c **** 	int ARMED = 0;
 400:Core/Src/main.c ****   /* USER CODE END 2 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* Infinite loop */
 403:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 404:Core/Src/main.c **** 	//HAL_ADC_Start_DMA(&hadc3, &read_Data, 1);
 405:Core/Src/main.c **** 	while (1) {
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 		char command[50];
 408:Core/Src/main.c **** 		char acknowledge[50];
 409:Core/Src/main.c **** 		char recieved_packet[50];
 410:Core/Src/main.c **** 		char response_packet[50];
 411:Core/Src/main.c **** 		char sendMessage[50];
 412:Core/Src/main.c **** 		int last = 0;
 413:Core/Src/main.c **** 		int packetId;
 414:Core/Src/main.c **** 		char communication_state[50] = "RECIEVING";
 415:Core/Src/main.c **** 		int isReceived = 0;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 		x[0] = 0;
 418:Core/Src/main.c **** 		x[1] = 1;
 419:Core/Src/main.c **** 		x[2] = 0;
 420:Core/Src/main.c **** 		x[3] = 0;
 421:Core/Src/main.c **** 		double rotQuaternion[4];
 422:Core/Src/main.c **** 		uint16_t lastMeasure = 0;
 423:Core/Src/main.c **** 		rotQuaternion[0] = 1;
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** 		HAL_TIM_Base_Start(&htim13);
 426:Core/Src/main.c **** 		TIM13->CNT = 0;
 427:Core/Src/main.c **** 		double elapsedTime = 0;
 428:Core/Src/main.c **** 		int counter = 0;
 429:Core/Src/main.c **** 		while (1) {
 430:Core/Src/main.c **** 			float Gx;
 431:Core/Src/main.c **** 			float Gy;
ARM GAS  /tmp/ccrX756S.s 			page 9


 432:Core/Src/main.c **** 			float Gz;
 433:Core/Src/main.c **** 			if (LG_Read_Register(0x1E) & (1 << 1)) {
 434:Core/Src/main.c **** 				elapsedTime = (TIM13->CNT / 1000.0);
 435:Core/Src/main.c **** 				TIM13->CNT = 0;
 436:Core/Src/main.c **** 				Gx = LG_Get_Gyro_X();
 437:Core/Src/main.c **** 				Gy = LG_Get_Gyro_Y();
 438:Core/Src/main.c **** 				Gz = LG_Get_Gyro_Z();
 439:Core/Src/main.c **** 				rotQuaternion[1] = (Gx - calOmegaX) * (3.1415 / 360000)
 440:Core/Src/main.c **** 						* elapsedTime;
 441:Core/Src/main.c **** 				rotQuaternion[2] = (Gy - calOmegaY) * (3.1415 / 360000)
 442:Core/Src/main.c **** 						* elapsedTime;
 443:Core/Src/main.c **** 				rotQuaternion[3] = (Gz - calOmegaZ) * (3.1415 / 360000)
 444:Core/Src/main.c **** 						* elapsedTime;
 445:Core/Src/main.c **** 				rotQuaternion[0] = sqrt(
 446:Core/Src/main.c **** 						1 - (rotQuaternion[1] * rotQuaternion[1])
 447:Core/Src/main.c **** 								- (rotQuaternion[2] * rotQuaternion[2])
 448:Core/Src/main.c **** 								- (rotQuaternion[3] * rotQuaternion[3]));
 449:Core/Src/main.c **** 				counter++;
 450:Core/Src/main.c **** 				lastMeasure = HAL_GetTick();
 451:Core/Src/main.c **** 				multiplyQuat(rotQuaternion, x);
 452:Core/Src/main.c **** 				rotQuaternion[1] = -rotQuaternion[1];
 453:Core/Src/main.c **** 				rotQuaternion[2] = -rotQuaternion[2];
 454:Core/Src/main.c **** 				rotQuaternion[3] = -rotQuaternion[3];
 455:Core/Src/main.c **** 				multiplyQuat(x, rotQuaternion);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** 			}
 458:Core/Src/main.c **** 			if (counter > 50) {
 459:Core/Src/main.c **** 				counter = 0;
 460:Core/Src/main.c **** 				float pitch = 180 * (asin(x[3]) / 3.1415);
 461:Core/Src/main.c **** 				//float magnitude = sqrt((x[1]*x[1]) + (x[2]*x[2]) + x[3] * x[3]);
 462:Core/Src/main.c **** 				uint8_t* data_gyro[50];
 463:Core/Src/main.c **** 				sprintf(data_gyro, "%f, %f, %f, %f\n", pitch, x[1], x[2], x[3]);
 464:Core/Src/main.c **** 				CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 465:Core/Src/main.c **** 			}
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 		}
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** 		while (1) {
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 			if (strcmp(communication_state, "RECIEVING") == 0) {
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** 				if (isReceived) {
 474:Core/Src/main.c **** 					//if crc then:
 475:Core/Src/main.c **** 					//send acknowledge
 476:Core/Src/main.c **** 					//{
 477:Core/Src/main.c **** 					strcpy(command, recieved_packet);
 478:Core/Src/main.c **** 					LoRA_sendPacket(recieved_packet);
 479:Core/Src/main.c **** 					strcpy(communication_state, "WAITING FOR PRIVILIGE");
 480:Core/Src/main.c **** 					//}
 481:Core/Src/main.c **** 				} else {
 482:Core/Src/main.c **** 					//give up MASTER
 483:Core/Src/main.c **** 					LoRA_sendPacket("$");
 484:Core/Src/main.c **** 					isReceived = 0;
 485:Core/Src/main.c **** 					for (int i = 0; i < 1000; i++) {
 486:Core/Src/main.c **** 						if (recv_packet(recieved_packet, 50)) {
 487:Core/Src/main.c **** 							isReceived = 1;
 488:Core/Src/main.c **** 						}
ARM GAS  /tmp/ccrX756S.s 			page 10


 489:Core/Src/main.c **** 						HAL_Delay(1);
 490:Core/Src/main.c **** 					}
 491:Core/Src/main.c **** 					//LoRA_parsePacket();
 492:Core/Src/main.c **** 					//char gotten[50];
 493:Core/Src/main.c **** 					//sprintf(gotten,"gotten: %d",LoRA_parsePacket());
 494:Core/Src/main.c **** 					//LoRA_sendPacket(gotten);
 495:Core/Src/main.c **** 					//HAL_Delay(1000);
 496:Core/Src/main.c **** 				}
 497:Core/Src/main.c **** 			} else if (strcmp(communication_state, "WAITING FOR PRIVILIGE")
 498:Core/Src/main.c **** 					== 0) {
 499:Core/Src/main.c **** 				if (recv_packet(recieved_packet, 50)) {
 500:Core/Src/main.c **** 					LoRA_sendPacket("Recived packet");
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** 					//if crc then:
 503:Core/Src/main.c **** 					//{
 504:Core/Src/main.c **** 					if (strcmp(recieved_packet, "$") == 0) {
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 						strcpy(communication_state, "MASTER");
 507:Core/Src/main.c **** 					} else {
 508:Core/Src/main.c **** 						LoRA_sendPacket("Received not $");
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** 						//send acknowledge again
 511:Core/Src/main.c **** 						strcpy(command, recieved_packet);
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** 					}
 514:Core/Src/main.c **** 					//}
 515:Core/Src/main.c **** 				}
 516:Core/Src/main.c **** 			} else if (strcmp(communication_state, "MASTER") == 0) {
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 				LoRA_sendPacket("MASTER");
 519:Core/Src/main.c **** 				strcpy(communication_state, "RECIEVING");
 520:Core/Src/main.c **** //        if(strcmp(state, "DISARMED") == 0)
 521:Core/Src/main.c **** //        {
 522:Core/Src/main.c **** //          if(strcmp(command, "ARM") == 0)
 523:Core/Src/main.c **** //          {
 524:Core/Src/main.c **** //            if(!arm(state))
 525:Core/Src/main.c **** //            {
 526:Core/Src/main.c **** //              reliable_send_packet("ARM SUCCESS");
 527:Core/Src/main.c **** //            }
 528:Core/Src/main.c **** //            else
 529:Core/Src/main.c **** //            {
 530:Core/Src/main.c **** //              reliable_send_packet("ARM UNSUCCESSFUL");
 531:Core/Src/main.c **** //            }
 532:Core/Src/main.c **** //          }
 533:Core/Src/main.c **** //          else if(strcmp(command, "DISARM") == 0)
 534:Core/Src/main.c **** //          {
 535:Core/Src/main.c **** //            reliable_send_packet("ALREADY DISARMED");
 536:Core/Src/main.c **** //          }
 537:Core/Src/main.c **** //          else if(strcmp(command, "CONT") == 0)
 538:Core/Src/main.c **** //          {
 539:Core/Src/main.c **** //            uint8_t CONTS[8];
 540:Core/Src/main.c **** //            CONTS[0] = HAL_GPIO_ReadPin(CONT1_GPIO_Port, CONT1_Pin);
 541:Core/Src/main.c **** //            CONTS[1] = HAL_GPIO_ReadPin(CONT2_GPIO_Port, CONT2_Pin);
 542:Core/Src/main.c **** //            CONTS[2] = HAL_GPIO_ReadPin(CONT3_GPIO_Port, CONT3_Pin);
 543:Core/Src/main.c **** //            CONTS[3] = HAL_GPIO_ReadPin(CONT4_GPIO_Port, CONT4_Pin);
 544:Core/Src/main.c **** //            CONTS[4] = HAL_GPIO_ReadPin(CONT5_GPIO_Port, CONT5_Pin);
 545:Core/Src/main.c **** //            CONTS[5] = HAL_GPIO_ReadPin(CONT6_GPIO_Port, CONT6_Pin);
ARM GAS  /tmp/ccrX756S.s 			page 11


 546:Core/Src/main.c **** //            CONTS[6] = HAL_GPIO_ReadPin(CONT7_GPIO_Port, CONT7_Pin);
 547:Core/Src/main.c **** //            CONTS[7] = HAL_GPIO_ReadPin(CONT8_GPIO_Port, CONT8_Pin);
 548:Core/Src/main.c **** //
 549:Core/Src/main.c **** //            char message[100];
 550:Core/Src/main.c **** //            for(int i=0; i<8; i++)
 551:Core/Src/main.c **** //            {
 552:Core/Src/main.c **** //              if(CONTS[i])
 553:Core/Src/main.c **** //              {
 554:Core/Src/main.c **** //                sprintf( message,  "PYRO %d DOESN'T HAVE CONTINUITY", i+1);
 555:Core/Src/main.c **** //              }
 556:Core/Src/main.c **** //              else
 557:Core/Src/main.c **** //              {
 558:Core/Src/main.c **** //                sprintf( message,  "PYRO %d HAS CONTINUITY", i+1);
 559:Core/Src/main.c **** //              }
 560:Core/Src/main.c **** //
 561:Core/Src/main.c **** //              reliable_send_packet(message);
 562:Core/Src/main.c **** //          }
 563:Core/Src/main.c **** //        }
 564:Core/Src/main.c **** //        else if(strcmp(state, "ARMED") == 0)
 565:Core/Src/main.c **** //        {
 566:Core/Src/main.c **** //          if(strcmp(command, "DISARM") == 0)
 567:Core/Src/main.c **** //          {
 568:Core/Src/main.c **** //            if(disarm(state))
 569:Core/Src/main.c **** //            {
 570:Core/Src/main.c **** //              //not success
 571:Core/Src/main.c **** //            }
 572:Core/Src/main.c **** //            else
 573:Core/Src/main.c **** //            {
 574:Core/Src/main.c **** //              //success
 575:Core/Src/main.c **** //            }
 576:Core/Src/main.c **** //
 577:Core/Src/main.c **** //          }
 578:Core/Src/main.c **** //        }
 579:Core/Src/main.c **** //        else if(strcmp(state, "STATIC_FIRE_LOGGING") == 0)
 580:Core/Src/main.c **** //        {
 581:Core/Src/main.c **** //          if(strcmp(command, "STOP") == 0)
 582:Core/Src/main.c **** //          {
 583:Core/Src/main.c **** //            strcpy(state,"ARMED");
 584:Core/Src/main.c **** //          }
 585:Core/Src/main.c **** //        }
 586:Core/Src/main.c **** //        else
 587:Core/Src/main.c **** //        {
 588:Core/Src/main.c **** //
 589:Core/Src/main.c **** //        }
 590:Core/Src/main.c **** //      }
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** 			}
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** 			//WS2812_Send();
 595:Core/Src/main.c **** 			//HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 596:Core/Src/main.c **** 			//TIM4->CCR3 = *ptr;
 597:Core/Src/main.c **** 			/*
 598:Core/Src/main.c **** 			 for(int i = 0; i < 14; i++){
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** 			 int time = HAL_GetTick();
 601:Core/Src/main.c **** 			 double height_offset = LED_order[i]*1.0/LED_num_max;
 602:Core/Src/main.c **** 			 double color_offset = time*SPEED + height_offset;
ARM GAS  /tmp/ccrX756S.s 			page 12


 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** 			 LED_Color_Data[i][0] = (uint32_t)MAX*triangle_space(color_offset+r_offset);
 605:Core/Src/main.c **** 			 LED_Color_Data[i][1] = (uint32_t)MAX*triangle_space(color_offset+g_offset);
 606:Core/Src/main.c **** 			 LED_Color_Data[i][2] = (uint32_t)MAX*triangle_space(color_offset+b_offset);
 607:Core/Src/main.c **** 			 }
 608:Core/Src/main.c **** 			 setLEDs();
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** 			 uint8_t* data_gyro[100];
 611:Core/Src/main.c **** 			 //		for(int i = 0; i < 14; i++){
 612:Core/Src/main.c **** 			 //
 613:Core/Src/main.c **** 			 //			int time = HAL_GetTick();
 614:Core/Src/main.c **** 			 //			double height_offset = LED_order[i]*1.0/LED_num_max;
 615:Core/Src/main.c **** 			 //			double color_offset = time*SPEED + height_offset;
 616:Core/Src/main.c **** 			 //
 617:Core/Src/main.c **** 			 //			LED_Color_Data[i][0] = (uint32_t)MAX*triangle_space(color_offset+r_offset);
 618:Core/Src/main.c **** 			 //			LED_Color_Data[i][1] = (uint32_t)MAX*triangle_space(color_offset+g_offset);
 619:Core/Src/main.c **** 			 //			LED_Color_Data[i][2] = (uint32_t)MAX*triangle_space(color_offset+b_offset);
 620:Core/Src/main.c **** 			 //		}
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** 			 float timeElapsed = ((float)(HAL_GetTick() - lastTime)) / 1000;
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** 			 //float omegaZ = LG_Get_Gyro_Z() - calOmegaZ;
 625:Core/Src/main.c **** 			 //rotZ += omegaZ * timeElapsed;
 626:Core/Src/main.c **** 
 627:Core/Src/main.c **** 			 //int16_t accZ = LG_Get_Acc_X();
 628:Core/Src/main.c **** 
 629:Core/Src/main.c **** 			 //HG2_Get_Acc();
 630:Core/Src/main.c **** 			 //int16_t AccX = (int16_t)(HG2_Acc[1] << 8) | HG2_Acc[0];
 631:Core/Src/main.c **** 			 //float AccX = LG_Get_Acc_X();
 632:Core/Src/main.c **** 			 //float AccY = LG_Get_Acc_Y();
 633:Core/Src/main.c **** 			 //float AccZ = LG_Get_Acc_Z();
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** 			 //float GyroX = LG_Get_Gyro_X() - calOmegaX;
 636:Core/Src/main.c **** 			 //float GyroY = LG_Get_Gyro_Y() - calOmegaY;
 637:Core/Src/main.c **** 			 //float GyroZ = LG_Get_Gyro_Z() - calOmegaZ;
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** 			 lastTime = HAL_GetTick();
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** 			 int a = add(2, 5);
 642:Core/Src/main.c **** 
 643:Core/Src/main.c **** 			 int btr = MAX_M10s_bytesToRead(&hi2c2);
 644:Core/Src/main.c **** 			 if (btr == -1) Error_Handler();
 645:Core/Src/main.c **** 			 for (int i = 0; i < btr; i++)
 646:Core/Src/main.c **** 			 MAX_M10s_poll(&hi2c2);
 647:Core/Src/main.c **** 			 MAX_M10S_parse();
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** 			 /*
 650:Core/Src/main.c **** 			 sprintf(data_gyro, "%d\n", a);
 651:Core/Src/main.c **** 			 //sprintf( data_gyro,  "%d,%d,%d,%d\n", (int)(GyroX*1000), (int)(GyroY*1000), (int)(GyroZ*1000)
 652:Core/Src/main.c **** 			 CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** 			 HAL_Delay(1000);
 655:Core/Src/main.c **** 			 */
 656:Core/Src/main.c **** //		int packetLenght = LoRA_parsePacket();
 657:Core/Src/main.c **** //		if(packetLenght > 0){
 658:Core/Src/main.c **** //			for(int i = 0; i < packetLenght; i++){
 659:Core/Src/main.c **** //				data_gyro[i] = LoRA_Read_Register(0x00);
ARM GAS  /tmp/ccrX756S.s 			page 13


 660:Core/Src/main.c **** //			}
 661:Core/Src/main.c **** //		    CDC_Transmit_HS(data_gyro, strlen(packetLenght));
 662:Core/Src/main.c **** //
 663:Core/Src/main.c **** //		}
 664:Core/Src/main.c **** 			//write_EEPROM(1, 1);
 665:Core/Src/main.c **** 			// Start ADC Conversion
 666:Core/Src/main.c **** 			//HAL_Delay(100);
 667:Core/Src/main.c **** 			if (HAL_GetTick() - last_packet > 1000) {
 668:Core/Src/main.c **** 				connected = 0;
 669:Core/Src/main.c **** 			}
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** 			if (connected) {
 672:Core/Src/main.c **** 				LED_Color_Data[2][0] = 255;
 673:Core/Src/main.c **** 				LED_Color_Data[2][1] = 0;
 674:Core/Src/main.c **** 				LED_Color_Data[2][2] = 0;
 675:Core/Src/main.c **** 			} else {
 676:Core/Src/main.c **** 				LED_Color_Data[2][0] = 120;
 677:Core/Src/main.c **** 				LED_Color_Data[2][1] = 255;
 678:Core/Src/main.c **** 				LED_Color_Data[2][2] = 0;
 679:Core/Src/main.c **** 			}
 680:Core/Src/main.c **** 
 681:Core/Src/main.c **** 			if (!ARMED) {
 682:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 683:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 0);
 686:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 687:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 688:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 689:Core/Src/main.c **** 
 690:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 0);
 691:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 692:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 693:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 694:Core/Src/main.c **** 
 695:Core/Src/main.c **** 				LED_Color_Data[7][0] = 255;
 696:Core/Src/main.c **** 				LED_Color_Data[7][1] = 0;
 697:Core/Src/main.c **** 				LED_Color_Data[7][2] = 0;
 698:Core/Src/main.c **** 			} else {
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 701:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** 				LED_Color_Data[7][0] = 0;
 704:Core/Src/main.c **** 				LED_Color_Data[7][1] = 255;
 705:Core/Src/main.c **** 				LED_Color_Data[7][2] = 0;
 706:Core/Src/main.c **** 			}
 707:Core/Src/main.c **** 
 708:Core/Src/main.c **** 			int packet_lenght = LoRA_parsePacket();
 709:Core/Src/main.c **** 			char LoRA_data[50];
 710:Core/Src/main.c **** 			if (packet_lenght) {
 711:Core/Src/main.c **** 
 712:Core/Src/main.c **** 				connected = 1;
 713:Core/Src/main.c **** 				last_packet = HAL_GetTick();
 714:Core/Src/main.c **** 				for (int i = 0; i < packet_lenght; i++) {
 715:Core/Src/main.c **** 					LoRA_data[i] = LoRA_Read_Register(0x00);
 716:Core/Src/main.c **** 				}
ARM GAS  /tmp/ccrX756S.s 			page 14


 717:Core/Src/main.c **** 				LoRA_data[packet_lenght] = '\0';
 718:Core/Src/main.c **** 				//LoRA_data[packet_lenght+1] = '';
 719:Core/Src/main.c **** 				uint8_t* data_gyro[50];
 720:Core/Src/main.c **** 				//sprintf( data_gyro,  "%d   %d\n", strlen(LoRA_data), packet_lenght);
 721:Core/Src/main.c **** 				//CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 722:Core/Src/main.c **** 
 723:Core/Src/main.c **** 				//CDC_Transmit_HS(LoRA_data, packet_lenght);
 724:Core/Src/main.c **** 
 725:Core/Src/main.c **** 				if (strcmp(LoRA_data, "ARM") == 0) {
 726:Core/Src/main.c **** 					ARMED = 1;
 727:Core/Src/main.c **** 					LoRA_sendPacket("ARM SUCCESS");
 728:Core/Src/main.c **** 				}
 729:Core/Src/main.c **** 				if (strcmp(LoRA_data, "DISARM") == 0) {
 730:Core/Src/main.c **** 					ARMED = 0;
 731:Core/Src/main.c **** 					LoRA_sendPacket("DISARM SUCCESS");
 732:Core/Src/main.c **** 				}
 733:Core/Src/main.c **** 				if (strcmp(LoRA_data, "CONT") == 0) {
 734:Core/Src/main.c **** 
 735:Core/Src/main.c **** 					char cont_str[150];
 736:Core/Src/main.c **** 					uint8_t CONTS[8];
 737:Core/Src/main.c **** 					CONTS[0] = HAL_GPIO_ReadPin(CONT1_GPIO_Port, CONT1_Pin);
 738:Core/Src/main.c **** 					CONTS[1] = HAL_GPIO_ReadPin(CONT2_GPIO_Port, CONT2_Pin);
 739:Core/Src/main.c **** 					CONTS[2] = HAL_GPIO_ReadPin(CONT3_GPIO_Port, CONT3_Pin);
 740:Core/Src/main.c **** 					CONTS[3] = HAL_GPIO_ReadPin(CONT4_GPIO_Port, CONT4_Pin);
 741:Core/Src/main.c **** 					CONTS[4] = HAL_GPIO_ReadPin(CONT5_GPIO_Port, CONT5_Pin);
 742:Core/Src/main.c **** 					CONTS[5] = HAL_GPIO_ReadPin(CONT6_GPIO_Port, CONT6_Pin);
 743:Core/Src/main.c **** 					CONTS[6] = HAL_GPIO_ReadPin(CONT7_GPIO_Port, CONT7_Pin);
 744:Core/Src/main.c **** 					CONTS[7] = HAL_GPIO_ReadPin(CONT8_GPIO_Port, CONT8_Pin);
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** 					char message[100];
 747:Core/Src/main.c **** 					for (int i = 0; i < 8; i++) {
 748:Core/Src/main.c **** 						if (CONTS[i]) {
 749:Core/Src/main.c **** 							sprintf(message, "PYRO %d DOESN'T HAVE CONTINUITY",
 750:Core/Src/main.c **** 									i + 1);
 751:Core/Src/main.c **** 						} else {
 752:Core/Src/main.c **** 							sprintf(message, "PYRO %d HAS CONTINUITY", i + 1);
 753:Core/Src/main.c **** 						}
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** 						LoRA_sendPacket(message);
 756:Core/Src/main.c **** 						HAL_Delay(100);
 757:Core/Src/main.c **** 					}
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** 				}
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** 				if (strcmp(LoRA_data, "STATIC_FIRE") == 0) {
 762:Core/Src/main.c **** 					if (ARMED) {
 763:Core/Src/main.c **** 						LoRA_sendPacket("PYRO 1 FIRED");
 764:Core/Src/main.c **** 						//HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 1);
 765:Core/Src/main.c **** 						char LoRA_data[50];
 766:Core/Src/main.c **** 						int logging = 1;
 767:Core/Src/main.c **** 						while (logging) {
 768:Core/Src/main.c **** 							int packet_lenght;
 769:Core/Src/main.c **** 							long startTime = HAL_GetTick();
 770:Core/Src/main.c **** 							while (HAL_GetTick() - startTime < 10) {
 771:Core/Src/main.c **** 								packet_lenght = LoRA_parsePacket();
 772:Core/Src/main.c **** 								HAL_Delay(0.1);
 773:Core/Src/main.c **** 							}
ARM GAS  /tmp/ccrX756S.s 			page 15


 774:Core/Src/main.c **** 							if (packet_lenght) {
 775:Core/Src/main.c **** 								//flush data from buffer
 776:Core/Src/main.c **** 								//last_packet = HAL_GetTick();
 777:Core/Src/main.c **** 								for (int i = 0; i < packet_lenght; i++) {
 778:Core/Src/main.c **** 									LoRA_data[i] = LoRA_Read_Register(0x00);
 779:Core/Src/main.c **** 								}
 780:Core/Src/main.c **** 								LoRA_data[packet_lenght] = '\0';
 781:Core/Src/main.c **** 								if (strcmp(LoRA_data, "STOP") == 0) {
 782:Core/Src/main.c **** 									logging = 0;
 783:Core/Src/main.c **** 								}
 784:Core/Src/main.c **** 							}
 785:Core/Src/main.c **** 							LoRA_sendPacket("Fake data: 21231, 99999");
 786:Core/Src/main.c **** 						}
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** 					}
 789:Core/Src/main.c **** 
 790:Core/Src/main.c **** 				}
 791:Core/Src/main.c **** 
 792:Core/Src/main.c **** 				int channel_num;
 793:Core/Src/main.c **** 				char fire_data[50];
 794:Core/Src/main.c **** 				sscanf(LoRA_data, "%s %d", fire_data, &channel_num);
 795:Core/Src/main.c **** 				if (strcmp(fire_data, "FIRE") == 0) {
 796:Core/Src/main.c **** 					if (ARMED) {
 797:Core/Src/main.c **** 						switch (channel_num) {
 798:Core/Src/main.c **** 						case 1:
 799:Core/Src/main.c **** 							LoRA_sendPacket("PYRO 1 FIRED");
 800:Core/Src/main.c **** 
 801:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 1);
 802:Core/Src/main.c **** 							break;
 803:Core/Src/main.c **** 						case 2:
 804:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 1);
 805:Core/Src/main.c **** 							break;
 806:Core/Src/main.c **** 						case 3:
 807:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 1);
 808:Core/Src/main.c **** 							break;
 809:Core/Src/main.c **** 						case 4:
 810:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 1);
 811:Core/Src/main.c **** 							break;
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** 						case 5:
 814:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 1);
 815:Core/Src/main.c **** 							break;
 816:Core/Src/main.c **** 						case 6:
 817:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 1);
 818:Core/Src/main.c **** 							break;
 819:Core/Src/main.c **** 						case 7:
 820:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 1);
 821:Core/Src/main.c **** 							break;
 822:Core/Src/main.c **** 						case 8:
 823:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 1);
 824:Core/Src/main.c **** 							break;
 825:Core/Src/main.c **** 						default:
 826:Core/Src/main.c **** 							break;
 827:Core/Src/main.c **** 						}
 828:Core/Src/main.c **** 					} else {
 829:Core/Src/main.c **** 						LoRA_sendPacket("CANNOT FIRE, BOARD NOT ARMED");
 830:Core/Src/main.c **** 					}
ARM GAS  /tmp/ccrX756S.s 			page 16


 831:Core/Src/main.c **** 				}
 832:Core/Src/main.c **** 			}
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** 			//uint8_t data = read_EEPROM(1);
 835:Core/Src/main.c **** 			//sprintf( data_gyro,  "%d\n", DMA_data);
 836:Core/Src/main.c **** 
 837:Core/Src/main.c **** 			//HAL_Delay(1000);
 838:Core/Src/main.c ****     /* USER CODE END WHILE */
 839:Core/Src/main.c **** 
 840:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 841:Core/Src/main.c **** 		}
 842:Core/Src/main.c **** 	}
 843:Core/Src/main.c ****   /* USER CODE END 3 */
 844:Core/Src/main.c **** }
 845:Core/Src/main.c **** 
 846:Core/Src/main.c **** /**
 847:Core/Src/main.c ****   * @brief System Clock Configuration
 848:Core/Src/main.c ****   * @retval None
 849:Core/Src/main.c ****   */
 850:Core/Src/main.c **** void SystemClock_Config(void)
 851:Core/Src/main.c **** {
 852:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 853:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 854:Core/Src/main.c **** 
 855:Core/Src/main.c ****   /** Supply configuration update enable
 856:Core/Src/main.c ****   */
 857:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 858:Core/Src/main.c **** 
 859:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 860:Core/Src/main.c ****   */
 861:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 862:Core/Src/main.c **** 
 863:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 864:Core/Src/main.c **** 
 865:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 866:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 867:Core/Src/main.c ****   */
 868:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSI;
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 871:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 881:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 882:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 883:Core/Src/main.c ****   {
 884:Core/Src/main.c ****     Error_Handler();
 885:Core/Src/main.c ****   }
 886:Core/Src/main.c **** 
 887:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccrX756S.s 			page 17


 888:Core/Src/main.c ****   */
 889:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 890:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 891:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 893:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 894:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 898:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 899:Core/Src/main.c **** 
 900:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 901:Core/Src/main.c ****   {
 902:Core/Src/main.c ****     Error_Handler();
 903:Core/Src/main.c ****   }
 904:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 905:Core/Src/main.c **** }
 906:Core/Src/main.c **** 
 907:Core/Src/main.c **** /**
 908:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 909:Core/Src/main.c ****   * @retval None
 910:Core/Src/main.c ****   */
 911:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 912:Core/Src/main.c **** {
 913:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****   /** Initializes the peripherals clock
 916:Core/Src/main.c ****   */
 917:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_SPI3
 918:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 926:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 927:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 928:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 929:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 930:Core/Src/main.c ****   {
 931:Core/Src/main.c ****     Error_Handler();
 932:Core/Src/main.c ****   }
 933:Core/Src/main.c **** }
 934:Core/Src/main.c **** 
 935:Core/Src/main.c **** /**
 936:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 937:Core/Src/main.c ****   * @param None
 938:Core/Src/main.c ****   * @retval None
 939:Core/Src/main.c ****   */
 940:Core/Src/main.c **** static void MX_ADC1_Init(void)
 941:Core/Src/main.c **** {
 942:Core/Src/main.c **** 
 943:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 944:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 18


 945:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 946:Core/Src/main.c **** 
 947:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 948:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 949:Core/Src/main.c **** 
 950:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 951:Core/Src/main.c **** 
 952:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 953:Core/Src/main.c **** 
 954:Core/Src/main.c ****   /** Common config
 955:Core/Src/main.c ****   */
 956:Core/Src/main.c ****   hadc1.Instance = ADC1;
 957:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 958:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 959:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 960:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 961:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 962:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 963:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 964:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 966:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 967:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 968:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 969:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 970:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 971:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 972:Core/Src/main.c ****   {
 973:Core/Src/main.c ****     Error_Handler();
 974:Core/Src/main.c ****   }
 975:Core/Src/main.c **** 
 976:Core/Src/main.c ****   /** Configure the ADC multi-mode
 977:Core/Src/main.c ****   */
 978:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 979:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 980:Core/Src/main.c ****   {
 981:Core/Src/main.c ****     Error_Handler();
 982:Core/Src/main.c ****   }
 983:Core/Src/main.c **** 
 984:Core/Src/main.c ****   /** Configure Regular Channel
 985:Core/Src/main.c ****   */
 986:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_14;
 987:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 988:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 989:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 990:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 991:Core/Src/main.c ****   sConfig.Offset = 0;
 992:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 993:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 994:Core/Src/main.c ****   {
 995:Core/Src/main.c ****     Error_Handler();
 996:Core/Src/main.c ****   }
 997:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
1000:Core/Src/main.c **** 
1001:Core/Src/main.c **** }
ARM GAS  /tmp/ccrX756S.s 			page 19


1002:Core/Src/main.c **** 
1003:Core/Src/main.c **** /**
1004:Core/Src/main.c ****   * @brief ADC3 Initialization Function
1005:Core/Src/main.c ****   * @param None
1006:Core/Src/main.c ****   * @retval None
1007:Core/Src/main.c ****   */
1008:Core/Src/main.c **** static void MX_ADC3_Init(void)
1009:Core/Src/main.c **** {
1010:Core/Src/main.c **** 
1011:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 0 */
1012:Core/Src/main.c **** 
1013:Core/Src/main.c ****   /* USER CODE END ADC3_Init 0 */
1014:Core/Src/main.c **** 
1015:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
1016:Core/Src/main.c **** 
1017:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 1 */
1018:Core/Src/main.c **** 
1019:Core/Src/main.c ****   /* USER CODE END ADC3_Init 1 */
1020:Core/Src/main.c **** 
1021:Core/Src/main.c ****   /** Common config
1022:Core/Src/main.c ****   */
1023:Core/Src/main.c ****   hadc3.Instance = ADC3;
1024:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
1025:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
1026:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
1027:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
1028:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
1029:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
1030:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
1031:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
1032:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
1034:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
1035:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
1036:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
1037:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
1038:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
1039:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
1040:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
1041:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
1042:Core/Src/main.c ****   {
1043:Core/Src/main.c ****     Error_Handler();
1044:Core/Src/main.c ****   }
1045:Core/Src/main.c **** 
1046:Core/Src/main.c ****   /** Configure Regular Channel
1047:Core/Src/main.c ****   */
1048:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
1049:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
1050:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
1051:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
1052:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
1053:Core/Src/main.c ****   sConfig.Offset = 0;
1054:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
1055:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
1056:Core/Src/main.c ****   {
1057:Core/Src/main.c ****     Error_Handler();
1058:Core/Src/main.c ****   }
ARM GAS  /tmp/ccrX756S.s 			page 20


1059:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 2 */
1060:Core/Src/main.c **** 
1061:Core/Src/main.c ****   /* USER CODE END ADC3_Init 2 */
1062:Core/Src/main.c **** 
1063:Core/Src/main.c **** }
1064:Core/Src/main.c **** 
1065:Core/Src/main.c **** /**
1066:Core/Src/main.c ****   * @brief FDCAN3 Initialization Function
1067:Core/Src/main.c ****   * @param None
1068:Core/Src/main.c ****   * @retval None
1069:Core/Src/main.c ****   */
1070:Core/Src/main.c **** static void MX_FDCAN3_Init(void)
1071:Core/Src/main.c **** {
1072:Core/Src/main.c **** 
1073:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 0 */
1074:Core/Src/main.c **** 
1075:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 0 */
1076:Core/Src/main.c **** 
1077:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 1 */
1078:Core/Src/main.c **** 
1079:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 1 */
1080:Core/Src/main.c ****   hfdcan3.Instance = FDCAN3;
1081:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
1082:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
1083:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
1084:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
1085:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
1086:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
1087:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
1089:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
1090:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
1091:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
1093:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
1094:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
1095:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
1096:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
1100:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
1101:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
1102:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
1103:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
1104:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
1106:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
1107:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
1108:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
1109:Core/Src/main.c ****   {
1110:Core/Src/main.c ****     Error_Handler();
1111:Core/Src/main.c ****   }
1112:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 2 */
1113:Core/Src/main.c **** 
1114:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 2 */
1115:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 21


1116:Core/Src/main.c **** }
1117:Core/Src/main.c **** 
1118:Core/Src/main.c **** /**
1119:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1120:Core/Src/main.c ****   * @param None
1121:Core/Src/main.c ****   * @retval None
1122:Core/Src/main.c ****   */
1123:Core/Src/main.c **** static void MX_I2C2_Init(void)
1124:Core/Src/main.c **** {
1125:Core/Src/main.c **** 
1126:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1127:Core/Src/main.c **** 
1128:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1129:Core/Src/main.c **** 
1130:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1131:Core/Src/main.c **** 
1132:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1133:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1134:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
1135:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1136:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1137:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1139:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
1140:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1141:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1142:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1143:Core/Src/main.c ****   {
1144:Core/Src/main.c ****     Error_Handler();
1145:Core/Src/main.c ****   }
1146:Core/Src/main.c **** 
1147:Core/Src/main.c ****   /** Configure Analogue filter
1148:Core/Src/main.c ****   */
1149:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
1150:Core/Src/main.c ****   {
1151:Core/Src/main.c ****     Error_Handler();
1152:Core/Src/main.c ****   }
1153:Core/Src/main.c **** 
1154:Core/Src/main.c ****   /** Configure Digital filter
1155:Core/Src/main.c ****   */
1156:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
1157:Core/Src/main.c ****   {
1158:Core/Src/main.c ****     Error_Handler();
1159:Core/Src/main.c ****   }
1160:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1161:Core/Src/main.c **** 
1162:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1163:Core/Src/main.c **** 
1164:Core/Src/main.c **** }
1165:Core/Src/main.c **** 
1166:Core/Src/main.c **** /**
1167:Core/Src/main.c ****   * @brief RNG Initialization Function
1168:Core/Src/main.c ****   * @param None
1169:Core/Src/main.c ****   * @retval None
1170:Core/Src/main.c ****   */
1171:Core/Src/main.c **** static void MX_RNG_Init(void)
1172:Core/Src/main.c **** {
ARM GAS  /tmp/ccrX756S.s 			page 22


1173:Core/Src/main.c **** 
1174:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 0 */
1175:Core/Src/main.c **** 
1176:Core/Src/main.c ****   /* USER CODE END RNG_Init 0 */
1177:Core/Src/main.c **** 
1178:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 1 */
1179:Core/Src/main.c **** 
1180:Core/Src/main.c ****   /* USER CODE END RNG_Init 1 */
1181:Core/Src/main.c ****   hrng.Instance = RNG;
1182:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
1183:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
1184:Core/Src/main.c ****   {
1185:Core/Src/main.c ****     Error_Handler();
1186:Core/Src/main.c ****   }
1187:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 2 */
1188:Core/Src/main.c **** 
1189:Core/Src/main.c ****   /* USER CODE END RNG_Init 2 */
1190:Core/Src/main.c **** 
1191:Core/Src/main.c **** }
1192:Core/Src/main.c **** 
1193:Core/Src/main.c **** /**
1194:Core/Src/main.c ****   * @brief SDMMC2 Initialization Function
1195:Core/Src/main.c ****   * @param None
1196:Core/Src/main.c ****   * @retval None
1197:Core/Src/main.c ****   */
1198:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void)
1199:Core/Src/main.c **** {
  27              		.loc 1 1199 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1200:Core/Src/main.c **** 
1201:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 0 */
1202:Core/Src/main.c **** 
1203:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 0 */
1204:Core/Src/main.c **** 
1205:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 1 */
1206:Core/Src/main.c **** 
1207:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 1 */
1208:Core/Src/main.c ****   hsd2.Instance = SDMMC2;
  32              		.loc 1 1208 3 view .LVU1
  33              		.loc 1 1208 17 is_stmt 0 view .LVU2
  34 0000 064B     		ldr	r3, .L2
  35 0002 074A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
1209:Core/Src/main.c ****   hsd2.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 1209 3 is_stmt 1 view .LVU3
  38              		.loc 1 1209 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
1210:Core/Src/main.c ****   hsd2.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 1210 3 is_stmt 1 view .LVU5
  42              		.loc 1 1210 28 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
1211:Core/Src/main.c ****   hsd2.Init.BusWide = SDMMC_BUS_WIDE_4B;
  44              		.loc 1 1211 3 is_stmt 1 view .LVU7
ARM GAS  /tmp/ccrX756S.s 			page 23


  45              		.loc 1 1211 21 is_stmt 0 view .LVU8
  46 000c 4FF48041 		mov	r1, #16384
  47 0010 D960     		str	r1, [r3, #12]
1212:Core/Src/main.c ****   hsd2.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  48              		.loc 1 1212 3 is_stmt 1 view .LVU9
  49              		.loc 1 1212 33 is_stmt 0 view .LVU10
  50 0012 1A61     		str	r2, [r3, #16]
1213:Core/Src/main.c ****   hsd2.Init.ClockDiv = 8;
  51              		.loc 1 1213 3 is_stmt 1 view .LVU11
  52              		.loc 1 1213 22 is_stmt 0 view .LVU12
  53 0014 0822     		movs	r2, #8
  54 0016 5A61     		str	r2, [r3, #20]
1214:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 2 */
1215:Core/Src/main.c **** 
1216:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 2 */
1217:Core/Src/main.c **** 
1218:Core/Src/main.c **** }
  55              		.loc 1 1218 1 view .LVU13
  56 0018 7047     		bx	lr
  57              	.L3:
  58 001a 00BF     		.align	2
  59              	.L2:
  60 001c 00000000 		.word	hsd2
  61 0020 00240248 		.word	1208099840
  62              		.cfi_endproc
  63              	.LFE369:
  65              		.section	.text.MX_GPIO_Init,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-d16
  72              	MX_GPIO_Init:
  73              	.LFB382:
1219:Core/Src/main.c **** 
1220:Core/Src/main.c **** /**
1221:Core/Src/main.c ****   * @brief SPI1 Initialization Function
1222:Core/Src/main.c ****   * @param None
1223:Core/Src/main.c ****   * @retval None
1224:Core/Src/main.c ****   */
1225:Core/Src/main.c **** static void MX_SPI1_Init(void)
1226:Core/Src/main.c **** {
1227:Core/Src/main.c **** 
1228:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
1229:Core/Src/main.c **** 
1230:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
1231:Core/Src/main.c **** 
1232:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
1233:Core/Src/main.c **** 
1234:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
1235:Core/Src/main.c ****   /* SPI1 parameter configuration*/
1236:Core/Src/main.c ****   hspi1.Instance = SPI1;
1237:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
1238:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
1239:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
1240:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
1241:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  /tmp/ccrX756S.s 			page 24


1242:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
1243:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
1244:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
1245:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
1246:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1247:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
1248:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1249:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1250:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
1251:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1252:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1253:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1254:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1255:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1256:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1257:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1258:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
1259:Core/Src/main.c ****   {
1260:Core/Src/main.c ****     Error_Handler();
1261:Core/Src/main.c ****   }
1262:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
1263:Core/Src/main.c **** 
1264:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
1265:Core/Src/main.c **** 
1266:Core/Src/main.c **** }
1267:Core/Src/main.c **** 
1268:Core/Src/main.c **** /**
1269:Core/Src/main.c ****   * @brief SPI2 Initialization Function
1270:Core/Src/main.c ****   * @param None
1271:Core/Src/main.c ****   * @retval None
1272:Core/Src/main.c ****   */
1273:Core/Src/main.c **** static void MX_SPI2_Init(void)
1274:Core/Src/main.c **** {
1275:Core/Src/main.c **** 
1276:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
1277:Core/Src/main.c **** 
1278:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
1279:Core/Src/main.c **** 
1280:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
1281:Core/Src/main.c **** 
1282:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
1283:Core/Src/main.c ****   /* SPI2 parameter configuration*/
1284:Core/Src/main.c ****   hspi2.Instance = SPI2;
1285:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
1286:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
1287:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
1288:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
1289:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
1290:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
1291:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
1292:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
1293:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
1294:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1295:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
1296:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1297:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1298:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
ARM GAS  /tmp/ccrX756S.s 			page 25


1299:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1300:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1301:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1302:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1303:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1304:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1305:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1306:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
1307:Core/Src/main.c ****   {
1308:Core/Src/main.c ****     Error_Handler();
1309:Core/Src/main.c ****   }
1310:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
1311:Core/Src/main.c **** 
1312:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
1313:Core/Src/main.c **** 
1314:Core/Src/main.c **** }
1315:Core/Src/main.c **** 
1316:Core/Src/main.c **** /**
1317:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1318:Core/Src/main.c ****   * @param None
1319:Core/Src/main.c ****   * @retval None
1320:Core/Src/main.c ****   */
1321:Core/Src/main.c **** static void MX_SPI3_Init(void)
1322:Core/Src/main.c **** {
1323:Core/Src/main.c **** 
1324:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1325:Core/Src/main.c **** 
1326:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1327:Core/Src/main.c **** 
1328:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1329:Core/Src/main.c **** 
1330:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1331:Core/Src/main.c ****   /* SPI3 parameter configuration*/
1332:Core/Src/main.c ****   hspi3.Instance = SPI3;
1333:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1334:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1335:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1336:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1337:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1338:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1339:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
1340:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1341:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1342:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1343:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
1344:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1345:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1346:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
1347:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1348:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1349:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1350:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1351:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1352:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1353:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1354:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1355:Core/Src/main.c ****   {
ARM GAS  /tmp/ccrX756S.s 			page 26


1356:Core/Src/main.c ****     Error_Handler();
1357:Core/Src/main.c ****   }
1358:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1359:Core/Src/main.c **** 
1360:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1361:Core/Src/main.c **** 
1362:Core/Src/main.c **** }
1363:Core/Src/main.c **** 
1364:Core/Src/main.c **** /**
1365:Core/Src/main.c ****   * @brief TIM2 Initialization Function
1366:Core/Src/main.c ****   * @param None
1367:Core/Src/main.c ****   * @retval None
1368:Core/Src/main.c ****   */
1369:Core/Src/main.c **** static void MX_TIM2_Init(void)
1370:Core/Src/main.c **** {
1371:Core/Src/main.c **** 
1372:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
1373:Core/Src/main.c **** 
1374:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
1375:Core/Src/main.c **** 
1376:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1377:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1378:Core/Src/main.c **** 
1379:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
1380:Core/Src/main.c **** 
1381:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
1382:Core/Src/main.c ****   htim2.Instance = TIM2;
1383:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
1384:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1385:Core/Src/main.c ****   htim2.Init.Period = 90;
1386:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1387:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1388:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
1389:Core/Src/main.c ****   {
1390:Core/Src/main.c ****     Error_Handler();
1391:Core/Src/main.c ****   }
1392:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1393:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1394:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
1395:Core/Src/main.c ****   {
1396:Core/Src/main.c ****     Error_Handler();
1397:Core/Src/main.c ****   }
1398:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1399:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1400:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1401:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1402:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
1403:Core/Src/main.c ****   {
1404:Core/Src/main.c ****     Error_Handler();
1405:Core/Src/main.c ****   }
1406:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
1407:Core/Src/main.c **** 
1408:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
1409:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
1410:Core/Src/main.c **** 
1411:Core/Src/main.c **** }
1412:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 27


1413:Core/Src/main.c **** /**
1414:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1415:Core/Src/main.c ****   * @param None
1416:Core/Src/main.c ****   * @retval None
1417:Core/Src/main.c ****   */
1418:Core/Src/main.c **** static void MX_TIM3_Init(void)
1419:Core/Src/main.c **** {
1420:Core/Src/main.c **** 
1421:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1422:Core/Src/main.c **** 
1423:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1424:Core/Src/main.c **** 
1425:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1426:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1427:Core/Src/main.c **** 
1428:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1429:Core/Src/main.c **** 
1430:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1431:Core/Src/main.c ****   htim3.Instance = TIM3;
1432:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
1433:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1434:Core/Src/main.c ****   htim3.Init.Period = 90;
1435:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1436:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1437:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1438:Core/Src/main.c ****   {
1439:Core/Src/main.c ****     Error_Handler();
1440:Core/Src/main.c ****   }
1441:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1442:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1443:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1444:Core/Src/main.c ****   {
1445:Core/Src/main.c ****     Error_Handler();
1446:Core/Src/main.c ****   }
1447:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1448:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1449:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1450:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1451:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1452:Core/Src/main.c ****   {
1453:Core/Src/main.c ****     Error_Handler();
1454:Core/Src/main.c ****   }
1455:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
1456:Core/Src/main.c ****   {
1457:Core/Src/main.c ****     Error_Handler();
1458:Core/Src/main.c ****   }
1459:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1460:Core/Src/main.c **** 
1461:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1462:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
1463:Core/Src/main.c **** 
1464:Core/Src/main.c **** }
1465:Core/Src/main.c **** 
1466:Core/Src/main.c **** /**
1467:Core/Src/main.c ****   * @brief TIM4 Initialization Function
1468:Core/Src/main.c ****   * @param None
1469:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccrX756S.s 			page 28


1470:Core/Src/main.c ****   */
1471:Core/Src/main.c **** static void MX_TIM4_Init(void)
1472:Core/Src/main.c **** {
1473:Core/Src/main.c **** 
1474:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
1475:Core/Src/main.c **** 
1476:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
1477:Core/Src/main.c **** 
1478:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1479:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1480:Core/Src/main.c **** 
1481:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
1482:Core/Src/main.c **** 
1483:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
1484:Core/Src/main.c ****   htim4.Instance = TIM4;
1485:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
1486:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
1487:Core/Src/main.c ****   htim4.Init.Period = 9999;
1488:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1489:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1490:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
1491:Core/Src/main.c ****   {
1492:Core/Src/main.c ****     Error_Handler();
1493:Core/Src/main.c ****   }
1494:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1495:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1496:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
1497:Core/Src/main.c ****   {
1498:Core/Src/main.c ****     Error_Handler();
1499:Core/Src/main.c ****   }
1500:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1501:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1502:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1503:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1504:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1505:Core/Src/main.c ****   {
1506:Core/Src/main.c ****     Error_Handler();
1507:Core/Src/main.c ****   }
1508:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
1509:Core/Src/main.c ****   {
1510:Core/Src/main.c ****     Error_Handler();
1511:Core/Src/main.c ****   }
1512:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
1513:Core/Src/main.c ****   {
1514:Core/Src/main.c ****     Error_Handler();
1515:Core/Src/main.c ****   }
1516:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1517:Core/Src/main.c ****   {
1518:Core/Src/main.c ****     Error_Handler();
1519:Core/Src/main.c ****   }
1520:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
1521:Core/Src/main.c **** 
1522:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
1523:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
1524:Core/Src/main.c **** 
1525:Core/Src/main.c **** }
1526:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 29


1527:Core/Src/main.c **** /**
1528:Core/Src/main.c ****   * @brief TIM5 Initialization Function
1529:Core/Src/main.c ****   * @param None
1530:Core/Src/main.c ****   * @retval None
1531:Core/Src/main.c ****   */
1532:Core/Src/main.c **** static void MX_TIM5_Init(void)
1533:Core/Src/main.c **** {
1534:Core/Src/main.c **** 
1535:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
1536:Core/Src/main.c **** 
1537:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
1538:Core/Src/main.c **** 
1539:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1540:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1541:Core/Src/main.c **** 
1542:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
1543:Core/Src/main.c **** 
1544:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
1545:Core/Src/main.c ****   htim5.Instance = TIM5;
1546:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
1547:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1548:Core/Src/main.c ****   htim5.Init.Period = 90;
1549:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1550:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1551:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1552:Core/Src/main.c ****   {
1553:Core/Src/main.c ****     Error_Handler();
1554:Core/Src/main.c ****   }
1555:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1556:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1557:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1558:Core/Src/main.c ****   {
1559:Core/Src/main.c ****     Error_Handler();
1560:Core/Src/main.c ****   }
1561:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1562:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1563:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1564:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1565:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1566:Core/Src/main.c ****   {
1567:Core/Src/main.c ****     Error_Handler();
1568:Core/Src/main.c ****   }
1569:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
1570:Core/Src/main.c **** 
1571:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
1572:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
1573:Core/Src/main.c **** 
1574:Core/Src/main.c **** }
1575:Core/Src/main.c **** 
1576:Core/Src/main.c **** /**
1577:Core/Src/main.c ****   * @brief TIM13 Initialization Function
1578:Core/Src/main.c ****   * @param None
1579:Core/Src/main.c ****   * @retval None
1580:Core/Src/main.c ****   */
1581:Core/Src/main.c **** static void MX_TIM13_Init(void)
1582:Core/Src/main.c **** {
1583:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 30


1584:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
1585:Core/Src/main.c **** 
1586:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
1587:Core/Src/main.c **** 
1588:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
1589:Core/Src/main.c **** 
1590:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
1591:Core/Src/main.c ****   htim13.Instance = TIM13;
1592:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
1593:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
1594:Core/Src/main.c ****   htim13.Init.Period = 65535;
1595:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1596:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1597:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
1598:Core/Src/main.c ****   {
1599:Core/Src/main.c ****     Error_Handler();
1600:Core/Src/main.c ****   }
1601:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
1602:Core/Src/main.c **** 
1603:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
1604:Core/Src/main.c **** 
1605:Core/Src/main.c **** }
1606:Core/Src/main.c **** 
1607:Core/Src/main.c **** /**
1608:Core/Src/main.c ****   * @brief TIM14 Initialization Function
1609:Core/Src/main.c ****   * @param None
1610:Core/Src/main.c ****   * @retval None
1611:Core/Src/main.c ****   */
1612:Core/Src/main.c **** static void MX_TIM14_Init(void)
1613:Core/Src/main.c **** {
1614:Core/Src/main.c **** 
1615:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
1616:Core/Src/main.c **** 
1617:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
1618:Core/Src/main.c **** 
1619:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
1620:Core/Src/main.c **** 
1621:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
1622:Core/Src/main.c ****   htim14.Instance = TIM14;
1623:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
1624:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
1625:Core/Src/main.c ****   htim14.Init.Period = 65535;
1626:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1627:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1628:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
1629:Core/Src/main.c ****   {
1630:Core/Src/main.c ****     Error_Handler();
1631:Core/Src/main.c ****   }
1632:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
1633:Core/Src/main.c **** 
1634:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
1635:Core/Src/main.c **** 
1636:Core/Src/main.c **** }
1637:Core/Src/main.c **** 
1638:Core/Src/main.c **** /**
1639:Core/Src/main.c ****   * @brief UART4 Initialization Function
1640:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/ccrX756S.s 			page 31


1641:Core/Src/main.c ****   * @retval None
1642:Core/Src/main.c ****   */
1643:Core/Src/main.c **** static void MX_UART4_Init(void)
1644:Core/Src/main.c **** {
1645:Core/Src/main.c **** 
1646:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
1647:Core/Src/main.c **** 
1648:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
1649:Core/Src/main.c **** 
1650:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
1651:Core/Src/main.c **** 
1652:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
1653:Core/Src/main.c ****   huart4.Instance = UART4;
1654:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
1655:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
1656:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
1657:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
1658:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
1659:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1660:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
1661:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1662:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1663:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1664:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
1665:Core/Src/main.c ****   {
1666:Core/Src/main.c ****     Error_Handler();
1667:Core/Src/main.c ****   }
1668:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1669:Core/Src/main.c ****   {
1670:Core/Src/main.c ****     Error_Handler();
1671:Core/Src/main.c ****   }
1672:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1673:Core/Src/main.c ****   {
1674:Core/Src/main.c ****     Error_Handler();
1675:Core/Src/main.c ****   }
1676:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
1677:Core/Src/main.c ****   {
1678:Core/Src/main.c ****     Error_Handler();
1679:Core/Src/main.c ****   }
1680:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
1681:Core/Src/main.c **** 
1682:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
1683:Core/Src/main.c **** 
1684:Core/Src/main.c **** }
1685:Core/Src/main.c **** 
1686:Core/Src/main.c **** /**
1687:Core/Src/main.c ****   * @brief USART6 Initialization Function
1688:Core/Src/main.c ****   * @param None
1689:Core/Src/main.c ****   * @retval None
1690:Core/Src/main.c ****   */
1691:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
1692:Core/Src/main.c **** {
1693:Core/Src/main.c **** 
1694:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
1695:Core/Src/main.c **** 
1696:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
1697:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 32


1698:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
1699:Core/Src/main.c **** 
1700:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
1701:Core/Src/main.c ****   huart6.Instance = USART6;
1702:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
1703:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1704:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
1705:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
1706:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
1707:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1708:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1709:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1710:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1711:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1712:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1713:Core/Src/main.c ****   {
1714:Core/Src/main.c ****     Error_Handler();
1715:Core/Src/main.c ****   }
1716:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart6, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1717:Core/Src/main.c ****   {
1718:Core/Src/main.c ****     Error_Handler();
1719:Core/Src/main.c ****   }
1720:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart6, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1721:Core/Src/main.c ****   {
1722:Core/Src/main.c ****     Error_Handler();
1723:Core/Src/main.c ****   }
1724:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart6) != HAL_OK)
1725:Core/Src/main.c ****   {
1726:Core/Src/main.c ****     Error_Handler();
1727:Core/Src/main.c ****   }
1728:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
1729:Core/Src/main.c **** 
1730:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
1731:Core/Src/main.c **** 
1732:Core/Src/main.c **** }
1733:Core/Src/main.c **** 
1734:Core/Src/main.c **** /**
1735:Core/Src/main.c ****   * Enable DMA controller clock
1736:Core/Src/main.c ****   */
1737:Core/Src/main.c **** static void MX_DMA_Init(void)
1738:Core/Src/main.c **** {
1739:Core/Src/main.c **** 
1740:Core/Src/main.c ****   /* DMA controller clock enable */
1741:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
1742:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
1743:Core/Src/main.c **** 
1744:Core/Src/main.c ****   /* DMA interrupt init */
1745:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
1746:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
1747:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
1748:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
1749:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
1750:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
1751:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
1752:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
1753:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
1754:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
ARM GAS  /tmp/ccrX756S.s 			page 33


1755:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
1756:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
1757:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
1758:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
1759:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
1760:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
1761:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
1762:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
1763:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
1764:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
1765:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
1766:Core/Src/main.c **** 
1767:Core/Src/main.c **** }
1768:Core/Src/main.c **** 
1769:Core/Src/main.c **** /**
1770:Core/Src/main.c ****   * @brief GPIO Initialization Function
1771:Core/Src/main.c ****   * @param None
1772:Core/Src/main.c ****   * @retval None
1773:Core/Src/main.c ****   */
1774:Core/Src/main.c **** static void MX_GPIO_Init(void)
1775:Core/Src/main.c **** {
  74              		.loc 1 1775 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 48
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 36
  81              		.cfi_offset 4, -36
  82              		.cfi_offset 5, -32
  83              		.cfi_offset 6, -28
  84              		.cfi_offset 7, -24
  85              		.cfi_offset 8, -20
  86              		.cfi_offset 9, -16
  87              		.cfi_offset 10, -12
  88              		.cfi_offset 11, -8
  89              		.cfi_offset 14, -4
  90 0004 8DB0     		sub	sp, sp, #52
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 88
1776:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  93              		.loc 1 1776 3 view .LVU15
  94              		.loc 1 1776 20 is_stmt 0 view .LVU16
  95 0006 0024     		movs	r4, #0
  96 0008 0794     		str	r4, [sp, #28]
  97 000a 0894     		str	r4, [sp, #32]
  98 000c 0994     		str	r4, [sp, #36]
  99 000e 0A94     		str	r4, [sp, #40]
 100 0010 0B94     		str	r4, [sp, #44]
1777:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1778:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1779:Core/Src/main.c **** 
1780:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1781:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 101              		.loc 1 1781 3 is_stmt 1 view .LVU17
 102              	.LBB4:
 103              		.loc 1 1781 3 view .LVU18
ARM GAS  /tmp/ccrX756S.s 			page 34


 104              		.loc 1 1781 3 view .LVU19
 105 0012 824B     		ldr	r3, .L6
 106 0014 D3F8E020 		ldr	r2, [r3, #224]
 107 0018 42F01002 		orr	r2, r2, #16
 108 001c C3F8E020 		str	r2, [r3, #224]
 109              		.loc 1 1781 3 view .LVU20
 110 0020 D3F8E020 		ldr	r2, [r3, #224]
 111 0024 02F01002 		and	r2, r2, #16
 112 0028 0092     		str	r2, [sp]
 113              		.loc 1 1781 3 view .LVU21
 114 002a 009A     		ldr	r2, [sp]
 115              	.LBE4:
 116              		.loc 1 1781 3 view .LVU22
1782:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 117              		.loc 1 1782 3 view .LVU23
 118              	.LBB5:
 119              		.loc 1 1782 3 view .LVU24
 120              		.loc 1 1782 3 view .LVU25
 121 002c D3F8E020 		ldr	r2, [r3, #224]
 122 0030 42F02002 		orr	r2, r2, #32
 123 0034 C3F8E020 		str	r2, [r3, #224]
 124              		.loc 1 1782 3 view .LVU26
 125 0038 D3F8E020 		ldr	r2, [r3, #224]
 126 003c 02F02002 		and	r2, r2, #32
 127 0040 0192     		str	r2, [sp, #4]
 128              		.loc 1 1782 3 view .LVU27
 129 0042 019A     		ldr	r2, [sp, #4]
 130              	.LBE5:
 131              		.loc 1 1782 3 view .LVU28
1783:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 132              		.loc 1 1783 3 view .LVU29
 133              	.LBB6:
 134              		.loc 1 1783 3 view .LVU30
 135              		.loc 1 1783 3 view .LVU31
 136 0044 D3F8E020 		ldr	r2, [r3, #224]
 137 0048 42F00402 		orr	r2, r2, #4
 138 004c C3F8E020 		str	r2, [r3, #224]
 139              		.loc 1 1783 3 view .LVU32
 140 0050 D3F8E020 		ldr	r2, [r3, #224]
 141 0054 02F00402 		and	r2, r2, #4
 142 0058 0292     		str	r2, [sp, #8]
 143              		.loc 1 1783 3 view .LVU33
 144 005a 029A     		ldr	r2, [sp, #8]
 145              	.LBE6:
 146              		.loc 1 1783 3 view .LVU34
1784:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 147              		.loc 1 1784 3 view .LVU35
 148              	.LBB7:
 149              		.loc 1 1784 3 view .LVU36
 150              		.loc 1 1784 3 view .LVU37
 151 005c D3F8E020 		ldr	r2, [r3, #224]
 152 0060 42F00102 		orr	r2, r2, #1
 153 0064 C3F8E020 		str	r2, [r3, #224]
 154              		.loc 1 1784 3 view .LVU38
 155 0068 D3F8E020 		ldr	r2, [r3, #224]
 156 006c 02F00102 		and	r2, r2, #1
 157 0070 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccrX756S.s 			page 35


 158              		.loc 1 1784 3 view .LVU39
 159 0072 039A     		ldr	r2, [sp, #12]
 160              	.LBE7:
 161              		.loc 1 1784 3 view .LVU40
1785:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 162              		.loc 1 1785 3 view .LVU41
 163              	.LBB8:
 164              		.loc 1 1785 3 view .LVU42
 165              		.loc 1 1785 3 view .LVU43
 166 0074 D3F8E020 		ldr	r2, [r3, #224]
 167 0078 42F00202 		orr	r2, r2, #2
 168 007c C3F8E020 		str	r2, [r3, #224]
 169              		.loc 1 1785 3 view .LVU44
 170 0080 D3F8E020 		ldr	r2, [r3, #224]
 171 0084 02F00202 		and	r2, r2, #2
 172 0088 0492     		str	r2, [sp, #16]
 173              		.loc 1 1785 3 view .LVU45
 174 008a 049A     		ldr	r2, [sp, #16]
 175              	.LBE8:
 176              		.loc 1 1785 3 view .LVU46
1786:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 177              		.loc 1 1786 3 view .LVU47
 178              	.LBB9:
 179              		.loc 1 1786 3 view .LVU48
 180              		.loc 1 1786 3 view .LVU49
 181 008c D3F8E020 		ldr	r2, [r3, #224]
 182 0090 42F04002 		orr	r2, r2, #64
 183 0094 C3F8E020 		str	r2, [r3, #224]
 184              		.loc 1 1786 3 view .LVU50
 185 0098 D3F8E020 		ldr	r2, [r3, #224]
 186 009c 02F04002 		and	r2, r2, #64
 187 00a0 0592     		str	r2, [sp, #20]
 188              		.loc 1 1786 3 view .LVU51
 189 00a2 059A     		ldr	r2, [sp, #20]
 190              	.LBE9:
 191              		.loc 1 1786 3 view .LVU52
1787:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 192              		.loc 1 1787 3 view .LVU53
 193              	.LBB10:
 194              		.loc 1 1787 3 view .LVU54
 195              		.loc 1 1787 3 view .LVU55
 196 00a4 D3F8E020 		ldr	r2, [r3, #224]
 197 00a8 42F00802 		orr	r2, r2, #8
 198 00ac C3F8E020 		str	r2, [r3, #224]
 199              		.loc 1 1787 3 view .LVU56
 200 00b0 D3F8E030 		ldr	r3, [r3, #224]
 201 00b4 03F00803 		and	r3, r3, #8
 202 00b8 0693     		str	r3, [sp, #24]
 203              		.loc 1 1787 3 view .LVU57
 204 00ba 069B     		ldr	r3, [sp, #24]
 205              	.LBE10:
 206              		.loc 1 1787 3 view .LVU58
1788:Core/Src/main.c **** 
1789:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1790:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin, GPIO_PIN_RESET);
 207              		.loc 1 1790 3 view .LVU59
 208 00bc DFF86C81 		ldr	r8, .L6+16
ARM GAS  /tmp/ccrX756S.s 			page 36


 209 00c0 2246     		mov	r2, r4
 210 00c2 41F20451 		movw	r1, #5380
 211 00c6 4046     		mov	r0, r8
 212 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL0:
1791:Core/Src/main.c **** 
1792:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1793:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ARM1_Pin|GPIO_PIN_15, GPIO_PIN_RESET);
 214              		.loc 1 1793 3 view .LVU60
 215 00cc 544F     		ldr	r7, .L6+4
 216 00ce 2246     		mov	r2, r4
 217 00d0 48F20201 		movw	r1, #32770
 218 00d4 3846     		mov	r0, r7
 219 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL1:
1794:Core/Src/main.c **** 
1795:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1796:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 221              		.loc 1 1796 3 view .LVU61
 222 00da DFF854B1 		ldr	fp, .L6+20
 223 00de 2246     		mov	r2, r4
 224 00e0 3021     		movs	r1, #48
 225 00e2 5846     		mov	r0, fp
 226 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL2:
1797:Core/Src/main.c **** 
1798:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1799:Core/Src/main.c ****   HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, GPIO_PIN_RESET);
 228              		.loc 1 1799 3 view .LVU62
 229 00e8 DFF848A1 		ldr	r10, .L6+24
 230 00ec 2246     		mov	r2, r4
 231 00ee 0221     		movs	r1, #2
 232 00f0 5046     		mov	r0, r10
 233 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL3:
1800:Core/Src/main.c **** 
1801:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1802:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, PYRO2_Pin|PYRO3_Pin|PYRO4_Pin, GPIO_PIN_RESET);
 235              		.loc 1 1802 3 view .LVU63
 236 00f6 DFF84091 		ldr	r9, .L6+28
 237 00fa 2246     		mov	r2, r4
 238 00fc 4FF42841 		mov	r1, #43008
 239 0100 4846     		mov	r0, r9
 240 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL4:
1803:Core/Src/main.c **** 
1804:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1805:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3, GPIO_PIN_RESET);
 242              		.loc 1 1805 3 view .LVU64
 243 0106 474E     		ldr	r6, .L6+8
 244 0108 2246     		mov	r2, r4
 245 010a 0E21     		movs	r1, #14
 246 010c 3046     		mov	r0, r6
 247 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL5:
1806:Core/Src/main.c **** 
1807:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccrX756S.s 			page 37


1808:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0, GPIO_PIN_RESET);
 249              		.loc 1 1808 3 view .LVU65
 250 0112 2246     		mov	r2, r4
 251 0114 40F20131 		movw	r1, #769
 252 0118 4348     		ldr	r0, .L6+12
 253 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL6:
1809:Core/Src/main.c **** 
1810:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PYRO6_Pin PYRO7_Pin PYRO8_Pin */
1811:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin;
 255              		.loc 1 1811 3 view .LVU66
 256              		.loc 1 1811 23 is_stmt 0 view .LVU67
 257 011e 41F20453 		movw	r3, #5380
 258 0122 0793     		str	r3, [sp, #28]
1812:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 259              		.loc 1 1812 3 is_stmt 1 view .LVU68
 260              		.loc 1 1812 24 is_stmt 0 view .LVU69
 261 0124 0125     		movs	r5, #1
 262 0126 0895     		str	r5, [sp, #32]
1813:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 1813 3 is_stmt 1 view .LVU70
 264              		.loc 1 1813 24 is_stmt 0 view .LVU71
 265 0128 0994     		str	r4, [sp, #36]
1814:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 266              		.loc 1 1814 3 is_stmt 1 view .LVU72
 267              		.loc 1 1814 25 is_stmt 0 view .LVU73
 268 012a 0A94     		str	r4, [sp, #40]
1815:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 269              		.loc 1 1815 3 is_stmt 1 view .LVU74
 270 012c 07A9     		add	r1, sp, #28
 271 012e 4046     		mov	r0, r8
 272 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL7:
1816:Core/Src/main.c **** 
1817:Core/Src/main.c ****   /*Configure GPIO pins : ARM1_Pin PA15 */
1818:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARM1_Pin|GPIO_PIN_15;
 274              		.loc 1 1818 3 view .LVU75
 275              		.loc 1 1818 23 is_stmt 0 view .LVU76
 276 0134 48F20203 		movw	r3, #32770
 277 0138 0793     		str	r3, [sp, #28]
1819:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 278              		.loc 1 1819 3 is_stmt 1 view .LVU77
 279              		.loc 1 1819 24 is_stmt 0 view .LVU78
 280 013a 0895     		str	r5, [sp, #32]
1820:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 281              		.loc 1 1820 3 is_stmt 1 view .LVU79
 282              		.loc 1 1820 24 is_stmt 0 view .LVU80
 283 013c 0994     		str	r4, [sp, #36]
1821:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 284              		.loc 1 1821 3 is_stmt 1 view .LVU81
 285              		.loc 1 1821 25 is_stmt 0 view .LVU82
 286 013e 0A94     		str	r4, [sp, #40]
1822:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 287              		.loc 1 1822 3 is_stmt 1 view .LVU83
 288 0140 07A9     		add	r1, sp, #28
 289 0142 3846     		mov	r0, r7
 290 0144 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccrX756S.s 			page 38


 291              	.LVL8:
1823:Core/Src/main.c **** 
1824:Core/Src/main.c ****   /*Configure GPIO pins : PC4 PC5 */
1825:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 292              		.loc 1 1825 3 view .LVU84
 293              		.loc 1 1825 23 is_stmt 0 view .LVU85
 294 0148 3023     		movs	r3, #48
 295 014a 0793     		str	r3, [sp, #28]
1826:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 296              		.loc 1 1826 3 is_stmt 1 view .LVU86
 297              		.loc 1 1826 24 is_stmt 0 view .LVU87
 298 014c 0895     		str	r5, [sp, #32]
1827:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 1827 3 is_stmt 1 view .LVU88
 300              		.loc 1 1827 24 is_stmt 0 view .LVU89
 301 014e 0994     		str	r4, [sp, #36]
1828:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 302              		.loc 1 1828 3 is_stmt 1 view .LVU90
 303              		.loc 1 1828 25 is_stmt 0 view .LVU91
 304 0150 0A94     		str	r4, [sp, #40]
1829:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 305              		.loc 1 1829 3 is_stmt 1 view .LVU92
 306 0152 07A9     		add	r1, sp, #28
 307 0154 5846     		mov	r0, fp
 308 0156 FFF7FEFF 		bl	HAL_GPIO_Init
 309              	.LVL9:
1830:Core/Src/main.c **** 
1831:Core/Src/main.c ****   /*Configure GPIO pin : PYRO1_Pin */
1832:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO1_Pin;
 310              		.loc 1 1832 3 view .LVU93
 311              		.loc 1 1832 23 is_stmt 0 view .LVU94
 312 015a 4FF0020B 		mov	fp, #2
 313 015e CDF81CB0 		str	fp, [sp, #28]
1833:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 314              		.loc 1 1833 3 is_stmt 1 view .LVU95
 315              		.loc 1 1833 24 is_stmt 0 view .LVU96
 316 0162 0895     		str	r5, [sp, #32]
1834:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 317              		.loc 1 1834 3 is_stmt 1 view .LVU97
 318              		.loc 1 1834 24 is_stmt 0 view .LVU98
 319 0164 0994     		str	r4, [sp, #36]
1835:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 320              		.loc 1 1835 3 is_stmt 1 view .LVU99
 321              		.loc 1 1835 25 is_stmt 0 view .LVU100
 322 0166 0A94     		str	r4, [sp, #40]
1836:Core/Src/main.c ****   HAL_GPIO_Init(PYRO1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 1836 3 is_stmt 1 view .LVU101
 324 0168 07A9     		add	r1, sp, #28
 325 016a 5046     		mov	r0, r10
 326 016c FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL10:
1837:Core/Src/main.c **** 
1838:Core/Src/main.c ****   /*Configure GPIO pin : CONT1_Pin */
1839:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT1_Pin;
 328              		.loc 1 1839 3 view .LVU102
 329              		.loc 1 1839 23 is_stmt 0 view .LVU103
 330 0170 0423     		movs	r3, #4
ARM GAS  /tmp/ccrX756S.s 			page 39


 331 0172 0793     		str	r3, [sp, #28]
1840:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 332              		.loc 1 1840 3 is_stmt 1 view .LVU104
 333              		.loc 1 1840 24 is_stmt 0 view .LVU105
 334 0174 0894     		str	r4, [sp, #32]
1841:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 335              		.loc 1 1841 3 is_stmt 1 view .LVU106
 336              		.loc 1 1841 24 is_stmt 0 view .LVU107
 337 0176 0995     		str	r5, [sp, #36]
1842:Core/Src/main.c ****   HAL_GPIO_Init(CONT1_GPIO_Port, &GPIO_InitStruct);
 338              		.loc 1 1842 3 is_stmt 1 view .LVU108
 339 0178 07A9     		add	r1, sp, #28
 340 017a 5046     		mov	r0, r10
 341 017c FFF7FEFF 		bl	HAL_GPIO_Init
 342              	.LVL11:
1843:Core/Src/main.c **** 
1844:Core/Src/main.c ****   /*Configure GPIO pins : PYRO2_Pin PYRO3_Pin PYRO4_Pin */
1845:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO2_Pin|PYRO3_Pin|PYRO4_Pin;
 343              		.loc 1 1845 3 view .LVU109
 344              		.loc 1 1845 23 is_stmt 0 view .LVU110
 345 0180 4FF42843 		mov	r3, #43008
 346 0184 0793     		str	r3, [sp, #28]
1846:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 347              		.loc 1 1846 3 is_stmt 1 view .LVU111
 348              		.loc 1 1846 24 is_stmt 0 view .LVU112
 349 0186 0895     		str	r5, [sp, #32]
1847:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 1847 3 is_stmt 1 view .LVU113
 351              		.loc 1 1847 24 is_stmt 0 view .LVU114
 352 0188 0994     		str	r4, [sp, #36]
1848:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 353              		.loc 1 1848 3 is_stmt 1 view .LVU115
 354              		.loc 1 1848 25 is_stmt 0 view .LVU116
 355 018a 0A94     		str	r4, [sp, #40]
1849:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 356              		.loc 1 1849 3 is_stmt 1 view .LVU117
 357 018c 07A9     		add	r1, sp, #28
 358 018e 4846     		mov	r0, r9
 359 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL12:
1850:Core/Src/main.c **** 
1851:Core/Src/main.c ****   /*Configure GPIO pins : CONT2_Pin CONT3_Pin */
1852:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT2_Pin|CONT3_Pin;
 361              		.loc 1 1852 3 view .LVU118
 362              		.loc 1 1852 23 is_stmt 0 view .LVU119
 363 0194 4FF4A043 		mov	r3, #20480
 364 0198 0793     		str	r3, [sp, #28]
1853:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 365              		.loc 1 1853 3 is_stmt 1 view .LVU120
 366              		.loc 1 1853 24 is_stmt 0 view .LVU121
 367 019a 0894     		str	r4, [sp, #32]
1854:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 368              		.loc 1 1854 3 is_stmt 1 view .LVU122
 369              		.loc 1 1854 24 is_stmt 0 view .LVU123
 370 019c 0995     		str	r5, [sp, #36]
1855:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 371              		.loc 1 1855 3 is_stmt 1 view .LVU124
ARM GAS  /tmp/ccrX756S.s 			page 40


 372 019e 07A9     		add	r1, sp, #28
 373 01a0 4846     		mov	r0, r9
 374 01a2 FFF7FEFF 		bl	HAL_GPIO_Init
 375              	.LVL13:
1856:Core/Src/main.c **** 
1857:Core/Src/main.c ****   /*Configure GPIO pin : CONT4_Pin */
1858:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT4_Pin;
 376              		.loc 1 1858 3 view .LVU125
 377              		.loc 1 1858 23 is_stmt 0 view .LVU126
 378 01a6 0795     		str	r5, [sp, #28]
1859:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 379              		.loc 1 1859 3 is_stmt 1 view .LVU127
 380              		.loc 1 1859 24 is_stmt 0 view .LVU128
 381 01a8 0894     		str	r4, [sp, #32]
1860:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 382              		.loc 1 1860 3 is_stmt 1 view .LVU129
 383              		.loc 1 1860 24 is_stmt 0 view .LVU130
 384 01aa 0995     		str	r5, [sp, #36]
1861:Core/Src/main.c ****   HAL_GPIO_Init(CONT4_GPIO_Port, &GPIO_InitStruct);
 385              		.loc 1 1861 3 is_stmt 1 view .LVU131
 386 01ac 07A9     		add	r1, sp, #28
 387 01ae 3046     		mov	r0, r6
 388 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 389              	.LVL14:
1862:Core/Src/main.c **** 
1863:Core/Src/main.c ****   /*Configure GPIO pins : PYRO5_Pin PG2 PG3 */
1864:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3;
 390              		.loc 1 1864 3 view .LVU132
 391              		.loc 1 1864 23 is_stmt 0 view .LVU133
 392 01b4 0E23     		movs	r3, #14
 393 01b6 0793     		str	r3, [sp, #28]
1865:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 394              		.loc 1 1865 3 is_stmt 1 view .LVU134
 395              		.loc 1 1865 24 is_stmt 0 view .LVU135
 396 01b8 0895     		str	r5, [sp, #32]
1866:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 1866 3 is_stmt 1 view .LVU136
 398              		.loc 1 1866 24 is_stmt 0 view .LVU137
 399 01ba 0994     		str	r4, [sp, #36]
1867:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 400              		.loc 1 1867 3 is_stmt 1 view .LVU138
 401              		.loc 1 1867 25 is_stmt 0 view .LVU139
 402 01bc 0A94     		str	r4, [sp, #40]
1868:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 403              		.loc 1 1868 3 is_stmt 1 view .LVU140
 404 01be 07A9     		add	r1, sp, #28
 405 01c0 3046     		mov	r0, r6
 406 01c2 FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL15:
1869:Core/Src/main.c **** 
1870:Core/Src/main.c ****   /*Configure GPIO pins : CONT5_Pin CONT6_Pin CONT7_Pin CONT8_Pin */
1871:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT5_Pin|CONT6_Pin|CONT7_Pin|CONT8_Pin;
 408              		.loc 1 1871 3 view .LVU141
 409              		.loc 1 1871 23 is_stmt 0 view .LVU142
 410 01c6 4FF42A53 		mov	r3, #10880
 411 01ca 0793     		str	r3, [sp, #28]
1872:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/ccrX756S.s 			page 41


 412              		.loc 1 1872 3 is_stmt 1 view .LVU143
 413              		.loc 1 1872 24 is_stmt 0 view .LVU144
 414 01cc 0894     		str	r4, [sp, #32]
1873:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 415              		.loc 1 1873 3 is_stmt 1 view .LVU145
 416              		.loc 1 1873 24 is_stmt 0 view .LVU146
 417 01ce 0995     		str	r5, [sp, #36]
1874:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 418              		.loc 1 1874 3 is_stmt 1 view .LVU147
 419 01d0 07A9     		add	r1, sp, #28
 420 01d2 4046     		mov	r0, r8
 421 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 422              	.LVL16:
1875:Core/Src/main.c **** 
1876:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD0 */
1877:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0;
 423              		.loc 1 1877 3 view .LVU148
 424              		.loc 1 1877 23 is_stmt 0 view .LVU149
 425 01d8 40F20133 		movw	r3, #769
 426 01dc 0793     		str	r3, [sp, #28]
1878:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 427              		.loc 1 1878 3 is_stmt 1 view .LVU150
 428              		.loc 1 1878 24 is_stmt 0 view .LVU151
 429 01de 0895     		str	r5, [sp, #32]
1879:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 430              		.loc 1 1879 3 is_stmt 1 view .LVU152
 431              		.loc 1 1879 24 is_stmt 0 view .LVU153
 432 01e0 0994     		str	r4, [sp, #36]
1880:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 433              		.loc 1 1880 3 is_stmt 1 view .LVU154
 434              		.loc 1 1880 25 is_stmt 0 view .LVU155
 435 01e2 0A94     		str	r4, [sp, #40]
1881:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 436              		.loc 1 1881 3 is_stmt 1 view .LVU156
 437 01e4 07A9     		add	r1, sp, #28
 438 01e6 1048     		ldr	r0, .L6+12
 439 01e8 FFF7FEFF 		bl	HAL_GPIO_Init
 440              	.LVL17:
1882:Core/Src/main.c **** 
1883:Core/Src/main.c ****   /*Configure GPIO pin : Servo_ARM_CHECK_Pin */
1884:Core/Src/main.c ****   GPIO_InitStruct.Pin = Servo_ARM_CHECK_Pin;
 441              		.loc 1 1884 3 view .LVU157
 442              		.loc 1 1884 23 is_stmt 0 view .LVU158
 443 01ec 1023     		movs	r3, #16
 444 01ee 0793     		str	r3, [sp, #28]
1885:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 445              		.loc 1 1885 3 is_stmt 1 view .LVU159
 446              		.loc 1 1885 24 is_stmt 0 view .LVU160
 447 01f0 0894     		str	r4, [sp, #32]
1886:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 448              		.loc 1 1886 3 is_stmt 1 view .LVU161
 449              		.loc 1 1886 24 is_stmt 0 view .LVU162
 450 01f2 0994     		str	r4, [sp, #36]
1887:Core/Src/main.c ****   HAL_GPIO_Init(Servo_ARM_CHECK_GPIO_Port, &GPIO_InitStruct);
 451              		.loc 1 1887 3 is_stmt 1 view .LVU163
 452 01f4 07A9     		add	r1, sp, #28
 453 01f6 3046     		mov	r0, r6
ARM GAS  /tmp/ccrX756S.s 			page 42


 454 01f8 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL18:
1888:Core/Src/main.c **** 
1889:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
1890:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 456              		.loc 1 1890 3 view .LVU164
 457              		.loc 1 1890 23 is_stmt 0 view .LVU165
 458 01fc 4FF48073 		mov	r3, #256
 459 0200 0793     		str	r3, [sp, #28]
1891:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 1891 3 is_stmt 1 view .LVU166
 461              		.loc 1 1891 24 is_stmt 0 view .LVU167
 462 0202 CDF820B0 		str	fp, [sp, #32]
1892:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 1892 3 is_stmt 1 view .LVU168
 464              		.loc 1 1892 24 is_stmt 0 view .LVU169
 465 0206 0994     		str	r4, [sp, #36]
1893:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 1893 3 is_stmt 1 view .LVU170
 467              		.loc 1 1893 25 is_stmt 0 view .LVU171
 468 0208 0A94     		str	r4, [sp, #40]
1894:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 469              		.loc 1 1894 3 is_stmt 1 view .LVU172
 470              		.loc 1 1894 29 is_stmt 0 view .LVU173
 471 020a 0B94     		str	r4, [sp, #44]
1895:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 472              		.loc 1 1895 3 is_stmt 1 view .LVU174
 473 020c 07A9     		add	r1, sp, #28
 474 020e 3846     		mov	r0, r7
 475 0210 FFF7FEFF 		bl	HAL_GPIO_Init
 476              	.LVL19:
1896:Core/Src/main.c **** 
1897:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1898:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1899:Core/Src/main.c **** }
 477              		.loc 1 1899 1 is_stmt 0 view .LVU175
 478 0214 0DB0     		add	sp, sp, #52
 479              	.LCFI2:
 480              		.cfi_def_cfa_offset 36
 481              		@ sp needed
 482 0216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 483              	.L7:
 484 021a 00BF     		.align	2
 485              	.L6:
 486 021c 00440258 		.word	1476543488
 487 0220 00000258 		.word	1476526080
 488 0224 00180258 		.word	1476532224
 489 0228 000C0258 		.word	1476529152
 490 022c 00100258 		.word	1476530176
 491 0230 00080258 		.word	1476528128
 492 0234 00040258 		.word	1476527104
 493 0238 00140258 		.word	1476531200
 494              		.cfi_endproc
 495              	.LFE382:
 497              		.section	.text.MX_DMA_Init,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
ARM GAS  /tmp/ccrX756S.s 			page 43


 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	MX_DMA_Init:
 505              	.LFB381:
1738:Core/Src/main.c **** 
 506              		.loc 1 1738 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 00B5     		push	{lr}
 511              	.LCFI3:
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 14, -4
 514 0002 83B0     		sub	sp, sp, #12
 515              	.LCFI4:
 516              		.cfi_def_cfa_offset 16
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 517              		.loc 1 1741 3 view .LVU177
 518              	.LBB11:
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 519              		.loc 1 1741 3 view .LVU178
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 520              		.loc 1 1741 3 view .LVU179
 521 0004 294B     		ldr	r3, .L10
 522 0006 D3F8D820 		ldr	r2, [r3, #216]
 523 000a 42F00102 		orr	r2, r2, #1
 524 000e C3F8D820 		str	r2, [r3, #216]
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 525              		.loc 1 1741 3 view .LVU180
 526 0012 D3F8D820 		ldr	r2, [r3, #216]
 527 0016 02F00102 		and	r2, r2, #1
 528 001a 0092     		str	r2, [sp]
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 529              		.loc 1 1741 3 view .LVU181
 530 001c 009A     		ldr	r2, [sp]
 531              	.LBE11:
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 532              		.loc 1 1741 3 view .LVU182
1742:Core/Src/main.c **** 
 533              		.loc 1 1742 3 view .LVU183
 534              	.LBB12:
1742:Core/Src/main.c **** 
 535              		.loc 1 1742 3 view .LVU184
1742:Core/Src/main.c **** 
 536              		.loc 1 1742 3 view .LVU185
 537 001e D3F8D820 		ldr	r2, [r3, #216]
 538 0022 42F00202 		orr	r2, r2, #2
 539 0026 C3F8D820 		str	r2, [r3, #216]
1742:Core/Src/main.c **** 
 540              		.loc 1 1742 3 view .LVU186
 541 002a D3F8D830 		ldr	r3, [r3, #216]
 542 002e 03F00203 		and	r3, r3, #2
 543 0032 0193     		str	r3, [sp, #4]
1742:Core/Src/main.c **** 
 544              		.loc 1 1742 3 view .LVU187
 545 0034 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccrX756S.s 			page 44


 546              	.LBE12:
1742:Core/Src/main.c **** 
 547              		.loc 1 1742 3 view .LVU188
1746:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 548              		.loc 1 1746 3 view .LVU189
 549 0036 0022     		movs	r2, #0
 550 0038 1146     		mov	r1, r2
 551 003a 0B20     		movs	r0, #11
 552 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 553              	.LVL20:
1747:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 554              		.loc 1 1747 3 view .LVU190
 555 0040 0B20     		movs	r0, #11
 556 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 557              	.LVL21:
1749:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 558              		.loc 1 1749 3 view .LVU191
 559 0046 0022     		movs	r2, #0
 560 0048 1146     		mov	r1, r2
 561 004a 0C20     		movs	r0, #12
 562 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 563              	.LVL22:
1750:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 564              		.loc 1 1750 3 view .LVU192
 565 0050 0C20     		movs	r0, #12
 566 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 567              	.LVL23:
1752:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 568              		.loc 1 1752 3 view .LVU193
 569 0056 0022     		movs	r2, #0
 570 0058 1146     		mov	r1, r2
 571 005a 0D20     		movs	r0, #13
 572 005c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 573              	.LVL24:
1753:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
 574              		.loc 1 1753 3 view .LVU194
 575 0060 0D20     		movs	r0, #13
 576 0062 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 577              	.LVL25:
1755:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 578              		.loc 1 1755 3 view .LVU195
 579 0066 0022     		movs	r2, #0
 580 0068 1146     		mov	r1, r2
 581 006a 0E20     		movs	r0, #14
 582 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 583              	.LVL26:
1756:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 584              		.loc 1 1756 3 view .LVU196
 585 0070 0E20     		movs	r0, #14
 586 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 587              	.LVL27:
1758:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 588              		.loc 1 1758 3 view .LVU197
 589 0076 0022     		movs	r2, #0
 590 0078 1146     		mov	r1, r2
 591 007a 0F20     		movs	r0, #15
 592 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccrX756S.s 			page 45


 593              	.LVL28:
1759:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 594              		.loc 1 1759 3 view .LVU198
 595 0080 0F20     		movs	r0, #15
 596 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 597              	.LVL29:
1761:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 598              		.loc 1 1761 3 view .LVU199
 599 0086 0022     		movs	r2, #0
 600 0088 1146     		mov	r1, r2
 601 008a 1020     		movs	r0, #16
 602 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 603              	.LVL30:
1762:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 604              		.loc 1 1762 3 view .LVU200
 605 0090 1020     		movs	r0, #16
 606 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 607              	.LVL31:
1764:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 608              		.loc 1 1764 3 view .LVU201
 609 0096 0022     		movs	r2, #0
 610 0098 1146     		mov	r1, r2
 611 009a 4620     		movs	r0, #70
 612 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 613              	.LVL32:
1765:Core/Src/main.c **** 
 614              		.loc 1 1765 3 view .LVU202
 615 00a0 4620     		movs	r0, #70
 616 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 617              	.LVL33:
1767:Core/Src/main.c **** 
 618              		.loc 1 1767 1 is_stmt 0 view .LVU203
 619 00a6 03B0     		add	sp, sp, #12
 620              	.LCFI5:
 621              		.cfi_def_cfa_offset 4
 622              		@ sp needed
 623 00a8 5DF804FB 		ldr	pc, [sp], #4
 624              	.L11:
 625              		.align	2
 626              	.L10:
 627 00ac 00440258 		.word	1476543488
 628              		.cfi_endproc
 629              	.LFE381:
 631              		.section	.rodata.disarm.str1.4,"aMS",%progbits,1
 632              		.align	2
 633              	.LC0:
 634 0000 41524D00 		.ascii	"ARM\000"
 635              		.align	2
 636              	.LC1:
 637 0004 44495341 		.ascii	"DISARMED\000"
 637      524D4544 
 637      00
 638              		.section	.text.disarm,"ax",%progbits
 639              		.align	1
 640              		.global	disarm
 641              		.syntax unified
 642              		.thumb
ARM GAS  /tmp/ccrX756S.s 			page 46


 643              		.thumb_func
 644              		.fpu fpv5-d16
 646              	disarm:
 647              	.LVL34:
 648              	.LFB354:
 122:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 649              		.loc 1 122 25 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 653              		.loc 1 122 25 is_stmt 0 view .LVU205
 654 0000 38B5     		push	{r3, r4, r5, lr}
 655              	.LCFI6:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 3, -16
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 0446     		mov	r4, r0
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 662              		.loc 1 123 2 is_stmt 1 view .LVU206
 663 0004 244D     		ldr	r5, .L14
 664 0006 0022     		movs	r2, #0
 665 0008 0221     		movs	r1, #2
 666 000a 2846     		mov	r0, r5
 667              	.LVL35:
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 668              		.loc 1 123 2 is_stmt 0 view .LVU207
 669 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 670              	.LVL36:
 124:Core/Src/main.c **** 
 671              		.loc 1 124 2 is_stmt 1 view .LVU208
 672 0010 0022     		movs	r2, #0
 673 0012 0421     		movs	r1, #4
 674 0014 2846     		mov	r0, r5
 675 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 676              	.LVL37:
 126:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 677              		.loc 1 126 2 view .LVU209
 678 001a 0022     		movs	r2, #0
 679 001c 0221     		movs	r1, #2
 680 001e 1F48     		ldr	r0, .L14+4
 681 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 682              	.LVL38:
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 683              		.loc 1 127 2 view .LVU210
 684 0024 05F5A055 		add	r5, r5, #5120
 685 0028 0022     		movs	r2, #0
 686 002a 4FF40061 		mov	r1, #2048
 687 002e 2846     		mov	r0, r5
 688 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689              	.LVL39:
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 690              		.loc 1 128 2 view .LVU211
 691 0034 0022     		movs	r2, #0
 692 0036 4FF40051 		mov	r1, #8192
ARM GAS  /tmp/ccrX756S.s 			page 47


 693 003a 2846     		mov	r0, r5
 694 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 695              	.LVL40:
 129:Core/Src/main.c **** 
 696              		.loc 1 129 2 view .LVU212
 697 0040 0022     		movs	r2, #0
 698 0042 4FF40041 		mov	r1, #32768
 699 0046 2846     		mov	r0, r5
 700 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 701              	.LVL41:
 131:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 702              		.loc 1 131 2 view .LVU213
 703 004c 0022     		movs	r2, #0
 704 004e 0221     		movs	r1, #2
 705 0050 1348     		ldr	r0, .L14+8
 706 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 707              	.LVL42:
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 708              		.loc 1 132 2 view .LVU214
 709 0056 A5F58065 		sub	r5, r5, #1024
 710 005a 0022     		movs	r2, #0
 711 005c 4FF48071 		mov	r1, #256
 712 0060 2846     		mov	r0, r5
 713 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 714              	.LVL43:
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 715              		.loc 1 133 2 view .LVU215
 716 0066 0022     		movs	r2, #0
 717 0068 4FF48061 		mov	r1, #1024
 718 006c 2846     		mov	r0, r5
 719 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 720              	.LVL44:
 134:Core/Src/main.c **** 
 721              		.loc 1 134 2 view .LVU216
 722 0072 0022     		movs	r2, #0
 723 0074 4FF48051 		mov	r1, #4096
 724 0078 2846     		mov	r0, r5
 725 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 726              	.LVL45:
 137:Core/Src/main.c **** 
 727              		.loc 1 137 2 view .LVU217
 728 007e 0221     		movs	r1, #2
 729 0080 0848     		ldr	r0, .L14+12
 730 0082 FFF7FEFF 		bl	setStatus
 731              	.LVL46:
 139:Core/Src/main.c **** 	return 0;
 732              		.loc 1 139 2 view .LVU218
 733 0086 084B     		ldr	r3, .L14+16
 734 0088 03CB     		ldmia	r3!, {r0, r1}
 735 008a 2060     		str	r0, [r4]	@ unaligned
 736 008c 6160     		str	r1, [r4, #4]	@ unaligned
 737 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0090 2372     		strb	r3, [r4, #8]
 140:Core/Src/main.c **** }
 739              		.loc 1 140 2 view .LVU219
 141:Core/Src/main.c **** 
 740              		.loc 1 141 1 is_stmt 0 view .LVU220
ARM GAS  /tmp/ccrX756S.s 			page 48


 741 0092 0020     		movs	r0, #0
 742 0094 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL47:
 744              	.L15:
 141:Core/Src/main.c **** 
 745              		.loc 1 141 1 view .LVU221
 746 0096 00BF     		.align	2
 747              	.L14:
 748 0098 00000258 		.word	1476526080
 749 009c 00040258 		.word	1476527104
 750 00a0 00180258 		.word	1476532224
 751 00a4 00000000 		.word	.LC0
 752 00a8 04000000 		.word	.LC1
 753              		.cfi_endproc
 754              	.LFE354:
 756              		.section	.rodata.arm.str1.4,"aMS",%progbits,1
 757              		.align	2
 758              	.LC2:
 759 0000 41524D45 		.ascii	"ARMED\000"
 759      4400
 760              		.section	.text.arm,"ax",%progbits
 761              		.align	1
 762              		.global	arm
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv5-d16
 768              	arm:
 769              	.LVL48:
 770              	.LFB355:
 143:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 771              		.loc 1 143 22 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 775              		.loc 1 143 22 is_stmt 0 view .LVU223
 776 0000 38B5     		push	{r3, r4, r5, lr}
 777              	.LCFI7:
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 3, -16
 780              		.cfi_offset 4, -12
 781              		.cfi_offset 5, -8
 782              		.cfi_offset 14, -4
 783 0002 0446     		mov	r4, r0
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 784              		.loc 1 144 2 is_stmt 1 view .LVU224
 785 0004 0A4D     		ldr	r5, .L18
 786 0006 0122     		movs	r2, #1
 787 0008 0221     		movs	r1, #2
 788 000a 2846     		mov	r0, r5
 789              	.LVL49:
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 790              		.loc 1 144 2 is_stmt 0 view .LVU225
 791 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 792              	.LVL50:
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccrX756S.s 			page 49


 793              		.loc 1 145 2 is_stmt 1 view .LVU226
 794 0010 0122     		movs	r2, #1
 795 0012 0421     		movs	r1, #4
 796 0014 2846     		mov	r0, r5
 797 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 798              	.LVL51:
 147:Core/Src/main.c **** 
 799              		.loc 1 147 2 view .LVU227
 800 001a 064B     		ldr	r3, .L18+4
 801 001c 1868     		ldr	r0, [r3]
 802 001e 2060     		str	r0, [r4]	@ unaligned
 803 0020 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 804 0022 A380     		strh	r3, [r4, #4]	@ unaligned
 149:Core/Src/main.c **** 	return 0;
 805              		.loc 1 149 2 view .LVU228
 806 0024 0021     		movs	r1, #0
 807 0026 0448     		ldr	r0, .L18+8
 808 0028 FFF7FEFF 		bl	setStatus
 809              	.LVL52:
 150:Core/Src/main.c **** }
 810              		.loc 1 150 2 view .LVU229
 151:Core/Src/main.c **** 
 811              		.loc 1 151 1 is_stmt 0 view .LVU230
 812 002c 0020     		movs	r0, #0
 813 002e 38BD     		pop	{r3, r4, r5, pc}
 814              	.LVL53:
 815              	.L19:
 151:Core/Src/main.c **** 
 816              		.loc 1 151 1 view .LVU231
 817              		.align	2
 818              	.L18:
 819 0030 00000258 		.word	1476526080
 820 0034 00000000 		.word	.LC2
 821 0038 00000000 		.word	.LC0
 822              		.cfi_endproc
 823              	.LFE355:
 825              		.section	.text.multiplyQuat,"ax",%progbits
 826              		.align	1
 827              		.global	multiplyQuat
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv5-d16
 833              	multiplyQuat:
 834              	.LVL54:
 835              	.LFB356:
 154:Core/Src/main.c **** 	float temp[4];
 836              		.loc 1 154 45 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 154:Core/Src/main.c **** 	float temp[4];
 841              		.loc 1 154 45 is_stmt 0 view .LVU233
 842 0000 2DED028B 		vpush.64	{d8}
 843              	.LCFI8:
 844              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccrX756S.s 			page 50


 845              		.cfi_offset 80, -8
 846              		.cfi_offset 81, -4
 847 0004 84B0     		sub	sp, sp, #16
 848              	.LCFI9:
 849              		.cfi_def_cfa_offset 24
 155:Core/Src/main.c **** 	temp[0] = r[0] * s[0] - r[1] * s[1] - r[2] * s[2] - r[3] * s[3];
 850              		.loc 1 155 2 is_stmt 1 view .LVU234
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 851              		.loc 1 156 2 view .LVU235
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 852              		.loc 1 156 13 is_stmt 0 view .LVU236
 853 0006 90ED000B 		vldr.64	d0, [r0]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 854              		.loc 1 156 20 view .LVU237
 855 000a 91ED004B 		vldr.64	d4, [r1]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 856              		.loc 1 156 27 view .LVU238
 857 000e 90ED027B 		vldr.64	d7, [r0, #8]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 858              		.loc 1 156 34 view .LVU239
 859 0012 91ED022B 		vldr.64	d2, [r1, #8]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 860              		.loc 1 156 31 view .LVU240
 861 0016 27EE026B 		vmul.f64	d6, d7, d2
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 862              		.loc 1 156 24 view .LVU241
 863 001a 10EE046B 		vnmls.f64	d6, d0, d4
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 864              		.loc 1 156 41 view .LVU242
 865 001e 90ED043B 		vldr.64	d3, [r0, #16]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 866              		.loc 1 156 48 view .LVU243
 867 0022 91ED048B 		vldr.64	d8, [r1, #16]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 868              		.loc 1 156 38 view .LVU244
 869 0026 03EE486B 		vmls.f64	d6, d3, d8
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 870              		.loc 1 156 55 view .LVU245
 871 002a 90ED065B 		vldr.64	d5, [r0, #24]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 872              		.loc 1 156 62 view .LVU246
 873 002e 91ED061B 		vldr.64	d1, [r1, #24]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 874              		.loc 1 156 52 view .LVU247
 875 0032 05EE416B 		vmls.f64	d6, d5, d1
 876 0036 B7EEC66B 		vcvt.f32.f64	s12, d6
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 877              		.loc 1 156 10 view .LVU248
 878 003a 8DED006A 		vstr.32	s12, [sp]
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 879              		.loc 1 157 2 is_stmt 1 view .LVU249
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 880              		.loc 1 157 31 is_stmt 0 view .LVU250
 881 003e 24EE076B 		vmul.f64	d6, d4, d7
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 882              		.loc 1 157 24 view .LVU251
 883 0042 00EE026B 		vmla.f64	d6, d0, d2
ARM GAS  /tmp/ccrX756S.s 			page 51


 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 884              		.loc 1 157 38 view .LVU252
 885 0046 03EE416B 		vmls.f64	d6, d3, d1
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 886              		.loc 1 157 52 view .LVU253
 887 004a 08EE056B 		vmla.f64	d6, d8, d5
 888 004e B7EEC66B 		vcvt.f32.f64	s12, d6
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 889              		.loc 1 157 10 view .LVU254
 890 0052 8DED016A 		vstr.32	s12, [sp, #4]
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 891              		.loc 1 158 2 is_stmt 1 view .LVU255
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 892              		.loc 1 158 31 is_stmt 0 view .LVU256
 893 0056 27EE016B 		vmul.f64	d6, d7, d1
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 894              		.loc 1 158 24 view .LVU257
 895 005a 00EE086B 		vmla.f64	d6, d0, d8
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 896              		.loc 1 158 38 view .LVU258
 897 005e 04EE036B 		vmla.f64	d6, d4, d3
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 898              		.loc 1 158 52 view .LVU259
 899 0062 02EE456B 		vmls.f64	d6, d2, d5
 900 0066 B7EEC66B 		vcvt.f32.f64	s12, d6
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 901              		.loc 1 158 10 view .LVU260
 902 006a 8DED026A 		vstr.32	s12, [sp, #8]
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 903              		.loc 1 159 2 is_stmt 1 view .LVU261
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 904              		.loc 1 159 31 is_stmt 0 view .LVU262
 905 006e 27EE087B 		vmul.f64	d7, d7, d8
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 906              		.loc 1 159 24 view .LVU263
 907 0072 10EE017B 		vnmls.f64	d7, d0, d1
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 908              		.loc 1 159 38 view .LVU264
 909 0076 02EE037B 		vmla.f64	d7, d2, d3
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 910              		.loc 1 159 52 view .LVU265
 911 007a 04EE057B 		vmla.f64	d7, d4, d5
 912 007e B7EEC77B 		vcvt.f32.f64	s14, d7
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 913              		.loc 1 159 10 view .LVU266
 914 0082 8DED037A 		vstr.32	s14, [sp, #12]
 160:Core/Src/main.c **** 		x[i] = temp[i];
 915              		.loc 1 160 2 is_stmt 1 view .LVU267
 916              	.LBB13:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 917              		.loc 1 160 7 view .LVU268
 918              	.LVL55:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 919              		.loc 1 160 11 is_stmt 0 view .LVU269
 920 0086 0023     		movs	r3, #0
 160:Core/Src/main.c **** 		x[i] = temp[i];
 921              		.loc 1 160 2 view .LVU270
ARM GAS  /tmp/ccrX756S.s 			page 52


 922 0088 0CE0     		b	.L21
 923              	.LVL56:
 924              	.L22:
 161:Core/Src/main.c **** 	}
 925              		.loc 1 161 3 is_stmt 1 discriminator 3 view .LVU271
 161:Core/Src/main.c **** 	}
 926              		.loc 1 161 14 is_stmt 0 discriminator 3 view .LVU272
 927 008a 04AA     		add	r2, sp, #16
 928 008c 02EB8302 		add	r2, r2, r3, lsl #2
 929 0090 12ED047A 		vldr.32	s14, [r2, #-16]
 930 0094 B7EEC77A 		vcvt.f64.f32	d7, s14
 161:Core/Src/main.c **** 	}
 931              		.loc 1 161 8 discriminator 3 view .LVU273
 932 0098 054A     		ldr	r2, .L24
 933 009a 02EBC302 		add	r2, r2, r3, lsl #3
 934 009e 82ED007B 		vstr.64	d7, [r2]
 160:Core/Src/main.c **** 		x[i] = temp[i];
 935              		.loc 1 160 25 is_stmt 1 discriminator 3 view .LVU274
 160:Core/Src/main.c **** 		x[i] = temp[i];
 936              		.loc 1 160 26 is_stmt 0 discriminator 3 view .LVU275
 937 00a2 0133     		adds	r3, r3, #1
 938              	.LVL57:
 939              	.L21:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 940              		.loc 1 160 18 is_stmt 1 discriminator 1 view .LVU276
 160:Core/Src/main.c **** 		x[i] = temp[i];
 941              		.loc 1 160 2 is_stmt 0 discriminator 1 view .LVU277
 942 00a4 032B     		cmp	r3, #3
 943 00a6 F0DD     		ble	.L22
 944              	.LBE13:
 163:Core/Src/main.c **** 
 945              		.loc 1 163 1 view .LVU278
 946 00a8 04B0     		add	sp, sp, #16
 947              	.LCFI10:
 948              		.cfi_def_cfa_offset 8
 949              		@ sp needed
 950 00aa BDEC028B 		vldm	sp!, {d8}
 951              	.LCFI11:
 952              		.cfi_restore 80
 953              		.cfi_restore 81
 954              		.cfi_def_cfa_offset 0
 955 00ae 7047     		bx	lr
 956              	.L25:
 957              		.align	2
 958              	.L24:
 959 00b0 00000000 		.word	x
 960              		.cfi_endproc
 961              	.LFE356:
 963              		.section	.text.Baro2_Read_Register,"ax",%progbits
 964              		.align	1
 965              		.global	Baro2_Read_Register
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu fpv5-d16
 971              	Baro2_Read_Register:
 972              	.LVL58:
ARM GAS  /tmp/ccrX756S.s 			page 53


 973              	.LFB357:
 165:Core/Src/main.c **** 	uint8_t reg_value;
 974              		.loc 1 165 43 is_stmt 1 view -0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 16
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Core/Src/main.c **** 	uint8_t reg_value;
 978              		.loc 1 165 43 is_stmt 0 view .LVU280
 979 0000 30B5     		push	{r4, r5, lr}
 980              	.LCFI12:
 981              		.cfi_def_cfa_offset 12
 982              		.cfi_offset 4, -12
 983              		.cfi_offset 5, -8
 984              		.cfi_offset 14, -4
 985 0002 85B0     		sub	sp, sp, #20
 986              	.LCFI13:
 987              		.cfi_def_cfa_offset 32
 166:Core/Src/main.c **** 	addr |= (1 << 7);
 988              		.loc 1 166 2 is_stmt 1 view .LVU281
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 989              		.loc 1 167 2 view .LVU282
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 990              		.loc 1 167 7 is_stmt 0 view .LVU283
 991 0004 60F07F00 		orn	r0, r0, #127
 992              	.LVL59:
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 993              		.loc 1 167 7 view .LVU284
 994 0008 8DF80700 		strb	r0, [sp, #7]
 168:Core/Src/main.c **** 
 995              		.loc 1 168 2 is_stmt 1 view .LVU285
 996 000c 0F4C     		ldr	r4, .L28
 997 000e 0022     		movs	r2, #0
 998 0010 4FF48061 		mov	r1, #1024
 999 0014 2046     		mov	r0, r4
 1000 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1001              	.LVL60:
 170:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 1002              		.loc 1 170 2 view .LVU286
 1003 001a 0D4D     		ldr	r5, .L28+4
 1004 001c 6423     		movs	r3, #100
 1005 001e 0122     		movs	r2, #1
 1006 0020 0DF10701 		add	r1, sp, #7
 1007 0024 2846     		mov	r0, r5
 1008 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 1009              	.LVL61:
 171:Core/Src/main.c **** 
 1010              		.loc 1 171 2 view .LVU287
 1011 002a 6423     		movs	r3, #100
 1012 002c 0122     		movs	r2, #1
 1013 002e 0DF10F01 		add	r1, sp, #15
 1014 0032 2846     		mov	r0, r5
 1015 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 1016              	.LVL62:
 173:Core/Src/main.c **** 
 1017              		.loc 1 173 2 view .LVU288
 1018 0038 0122     		movs	r2, #1
 1019 003a 4FF48061 		mov	r1, #1024
ARM GAS  /tmp/ccrX756S.s 			page 54


 1020 003e 2046     		mov	r0, r4
 1021 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1022              	.LVL63:
 175:Core/Src/main.c **** }
 1023              		.loc 1 175 2 view .LVU289
 176:Core/Src/main.c **** 
 1024              		.loc 1 176 1 is_stmt 0 view .LVU290
 1025 0044 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 1026 0048 05B0     		add	sp, sp, #20
 1027              	.LCFI14:
 1028              		.cfi_def_cfa_offset 12
 1029              		@ sp needed
 1030 004a 30BD     		pop	{r4, r5, pc}
 1031              	.L29:
 1032              		.align	2
 1033              	.L28:
 1034 004c 000C0258 		.word	1476529152
 1035 0050 00000000 		.word	hspi2
 1036              		.cfi_endproc
 1037              	.LFE357:
 1039              		.section	.text.Baro2_Write_Register,"ax",%progbits
 1040              		.align	1
 1041              		.global	Baro2_Write_Register
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	Baro2_Write_Register:
 1048              	.LVL64:
 1049              	.LFB358:
 178:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 1050              		.loc 1 178 55 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 8
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 178:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 1054              		.loc 1 178 55 is_stmt 0 view .LVU292
 1055 0000 30B5     		push	{r4, r5, lr}
 1056              	.LCFI15:
 1057              		.cfi_def_cfa_offset 12
 1058              		.cfi_offset 4, -12
 1059              		.cfi_offset 5, -8
 1060              		.cfi_offset 14, -4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              	.LCFI16:
 1063              		.cfi_def_cfa_offset 24
 1064 0004 8DF80700 		strb	r0, [sp, #7]
 1065 0008 8DF80610 		strb	r1, [sp, #6]
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1066              		.loc 1 179 2 is_stmt 1 view .LVU293
 1067 000c 0E4C     		ldr	r4, .L32
 1068 000e 0022     		movs	r2, #0
 1069 0010 4FF48061 		mov	r1, #1024
 1070              	.LVL65:
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1071              		.loc 1 179 2 is_stmt 0 view .LVU294
 1072 0014 2046     		mov	r0, r4
ARM GAS  /tmp/ccrX756S.s 			page 55


 1073              	.LVL66:
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1074              		.loc 1 179 2 view .LVU295
 1075 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1076              	.LVL67:
 180:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 1077              		.loc 1 180 2 is_stmt 1 view .LVU296
 1078 001a 0C4D     		ldr	r5, .L32+4
 1079 001c 6423     		movs	r3, #100
 1080 001e 0122     		movs	r2, #1
 1081 0020 0DF10701 		add	r1, sp, #7
 1082 0024 2846     		mov	r0, r5
 1083 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 1084              	.LVL68:
 181:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 1085              		.loc 1 181 2 view .LVU297
 1086 002a 6423     		movs	r3, #100
 1087 002c 0122     		movs	r2, #1
 1088 002e 0DF10601 		add	r1, sp, #6
 1089 0032 2846     		mov	r0, r5
 1090 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 1091              	.LVL69:
 182:Core/Src/main.c **** 
 1092              		.loc 1 182 2 view .LVU298
 1093 0038 0122     		movs	r2, #1
 1094 003a 4FF48061 		mov	r1, #1024
 1095 003e 2046     		mov	r0, r4
 1096 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1097              	.LVL70:
 184:Core/Src/main.c **** 
 1098              		.loc 1 184 1 is_stmt 0 view .LVU299
 1099 0044 03B0     		add	sp, sp, #12
 1100              	.LCFI17:
 1101              		.cfi_def_cfa_offset 12
 1102              		@ sp needed
 1103 0046 30BD     		pop	{r4, r5, pc}
 1104              	.L33:
 1105              		.align	2
 1106              	.L32:
 1107 0048 000C0258 		.word	1476529152
 1108 004c 00000000 		.word	hspi2
 1109              		.cfi_endproc
 1110              	.LFE358:
 1112              		.section	.text.Baro2_Configure,"ax",%progbits
 1113              		.align	1
 1114              		.global	Baro2_Configure
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv5-d16
 1120              	Baro2_Configure:
 1121              	.LFB359:
 186:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 1122              		.loc 1 186 23 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccrX756S.s 			page 56


 1126 0000 08B5     		push	{r3, lr}
 1127              	.LCFI18:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 187:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 1131              		.loc 1 187 2 view .LVU301
 1132              	.LVL71:
 188:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 1133              		.loc 1 188 2 view .LVU302
 189:Core/Src/main.c **** 
 1134              		.loc 1 189 2 view .LVU303
 191:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 1135              		.loc 1 191 2 view .LVU304
 1136 0002 0021     		movs	r1, #0
 1137 0004 1820     		movs	r0, #24
 1138 0006 FFF7FEFF 		bl	Baro2_Write_Register
 1139              	.LVL72:
 192:Core/Src/main.c **** 
 1140              		.loc 1 192 2 view .LVU305
 1141 000a 0021     		movs	r1, #0
 1142 000c 1920     		movs	r0, #25
 1143 000e FFF7FEFF 		bl	Baro2_Write_Register
 1144              	.LVL73:
 195:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 1145              		.loc 1 195 2 view .LVU306
 1146 0012 4021     		movs	r1, #64
 1147 0014 1020     		movs	r0, #16
 1148 0016 FFF7FEFF 		bl	Baro2_Write_Register
 1149              	.LVL74:
 196:Core/Src/main.c **** }
 1150              		.loc 1 196 2 view .LVU307
 1151 001a 0221     		movs	r1, #2
 1152 001c 1120     		movs	r0, #17
 1153 001e FFF7FEFF 		bl	Baro2_Write_Register
 1154              	.LVL75:
 197:Core/Src/main.c **** 
 1155              		.loc 1 197 1 is_stmt 0 view .LVU308
 1156 0022 08BD     		pop	{r3, pc}
 1157              		.cfi_endproc
 1158              	.LFE359:
 1160              		.section	.text.Baro2_Get_Pressure,"ax",%progbits
 1161              		.align	1
 1162              		.global	Baro2_Get_Pressure
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv5-d16
 1168              	Baro2_Get_Pressure:
 1169              	.LFB360:
 199:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 1170              		.loc 1 199 29 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174 0000 38B5     		push	{r3, r4, r5, lr}
 1175              	.LCFI19:
ARM GAS  /tmp/ccrX756S.s 			page 57


 1176              		.cfi_def_cfa_offset 16
 1177              		.cfi_offset 3, -16
 1178              		.cfi_offset 4, -12
 1179              		.cfi_offset 5, -8
 1180              		.cfi_offset 14, -4
 200:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 1181              		.loc 1 200 2 view .LVU310
 200:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 1182              		.loc 1 200 19 is_stmt 0 view .LVU311
 1183 0002 2820     		movs	r0, #40
 1184 0004 FFF7FEFF 		bl	Baro2_Read_Register
 1185              	.LVL76:
 1186 0008 0546     		mov	r5, r0
 1187              	.LVL77:
 201:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 1188              		.loc 1 201 2 is_stmt 1 view .LVU312
 201:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 1189              		.loc 1 201 19 is_stmt 0 view .LVU313
 1190 000a 2920     		movs	r0, #41
 1191 000c FFF7FEFF 		bl	Baro2_Read_Register
 1192              	.LVL78:
 1193 0010 0446     		mov	r4, r0
 1194              	.LVL79:
 202:Core/Src/main.c **** 
 1195              		.loc 1 202 2 is_stmt 1 view .LVU314
 202:Core/Src/main.c **** 
 1196              		.loc 1 202 19 is_stmt 0 view .LVU315
 1197 0012 2A20     		movs	r0, #42
 1198 0014 FFF7FEFF 		bl	Baro2_Read_Register
 1199              	.LVL80:
 204:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 1200              		.loc 1 204 2 is_stmt 1 view .LVU316
 205:Core/Src/main.c **** 	return BARO;
 1201              		.loc 1 205 2 view .LVU317
 205:Core/Src/main.c **** 	return BARO;
 1202              		.loc 1 205 52 is_stmt 0 view .LVU318
 1203 0018 2404     		lsls	r4, r4, #16
 1204              	.LVL81:
 205:Core/Src/main.c **** 	return BARO;
 1205              		.loc 1 205 33 view .LVU319
 1206 001a 44EA0060 		orr	r0, r4, r0, lsl #24
 1207              	.LVL82:
 206:Core/Src/main.c **** 
 1208              		.loc 1 206 2 is_stmt 1 view .LVU320
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1209              		.loc 1 208 1 is_stmt 0 view .LVU321
 1210 001e 40EA0520 		orr	r0, r0, r5, lsl #8
 1211              	.LVL83:
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1212              		.loc 1 208 1 view .LVU322
 1213 0022 38BD     		pop	{r3, r4, r5, pc}
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1214              		.loc 1 208 1 view .LVU323
 1215              		.cfi_endproc
 1216              	.LFE360:
 1218              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 1219              		.align	1
ARM GAS  /tmp/ccrX756S.s 			page 58


 1220              		.global	HAL_I2C_MasterRxCpltCallback
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv5-d16
 1226              	HAL_I2C_MasterRxCpltCallback:
 1227              	.LVL84:
 1228              	.LFB383:
1900:Core/Src/main.c **** 
1901:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1902:Core/Src/main.c **** 
1903:Core/Src/main.c **** void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 1229              		.loc 1 1903 60 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
1904:Core/Src/main.c **** //MAX_M10s_irq_handler(hi2c);
1905:Core/Src/main.c **** }
 1234              		.loc 1 1905 1 view .LVU325
 1235 0000 7047     		bx	lr
 1236              		.cfi_endproc
 1237              	.LFE383:
 1239              		.section	.rodata.HAL_ADC_ConvHalfCpltCallback.str1.4,"aMS",%progbits,1
 1240              		.align	2
 1241              	.LC3:
 1242 0000 610A00   		.ascii	"a\012\000"
 1243              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1244              		.align	1
 1245              		.global	HAL_ADC_ConvHalfCpltCallback
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv5-d16
 1251              	HAL_ADC_ConvHalfCpltCallback:
 1252              	.LVL85:
 1253              	.LFB384:
1906:Core/Src/main.c **** 
1907:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) {
 1254              		.loc 1 1907 60 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 400
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		.loc 1 1907 60 is_stmt 0 view .LVU327
 1259 0000 00B5     		push	{lr}
 1260              	.LCFI20:
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 14, -4
 1263 0002 E5B0     		sub	sp, sp, #404
 1264              	.LCFI21:
 1265              		.cfi_def_cfa_offset 408
1908:Core/Src/main.c **** DMA_data = read_Data;
 1266              		.loc 1 1908 1 is_stmt 1 view .LVU328
 1267              		.loc 1 1908 10 is_stmt 0 view .LVU329
 1268 0004 0A4B     		ldr	r3, .L41
 1269 0006 1A88     		ldrh	r2, [r3]
 1270 0008 0A4B     		ldr	r3, .L41+4
ARM GAS  /tmp/ccrX756S.s 			page 59


 1271 000a 1A80     		strh	r2, [r3]	@ movhi
1909:Core/Src/main.c **** uint8_t* data_gyro[100];
 1272              		.loc 1 1909 1 is_stmt 1 view .LVU330
1910:Core/Src/main.c **** sprintf(data_gyro, "a\n");
 1273              		.loc 1 1910 1 view .LVU331
 1274 000c 0A4B     		ldr	r3, .L41+8
 1275 000e 1B68     		ldr	r3, [r3]
 1276 0010 ADF80030 		strh	r3, [sp]	@ movhi
 1277 0014 1B0C     		lsrs	r3, r3, #16
 1278 0016 8DF80230 		strb	r3, [sp, #2]
1911:Core/Src/main.c **** CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 1279              		.loc 1 1911 1 view .LVU332
 1280              		.loc 1 1911 28 is_stmt 0 view .LVU333
 1281 001a 6846     		mov	r0, sp
 1282              	.LVL86:
 1283              		.loc 1 1911 28 view .LVU334
 1284 001c FFF7FEFF 		bl	strlen
 1285              	.LVL87:
 1286              		.loc 1 1911 1 view .LVU335
 1287 0020 81B2     		uxth	r1, r0
 1288 0022 6846     		mov	r0, sp
 1289 0024 FFF7FEFF 		bl	CDC_Transmit_HS
 1290              	.LVL88:
1912:Core/Src/main.c **** }
 1291              		.loc 1 1912 1 view .LVU336
 1292 0028 65B0     		add	sp, sp, #404
 1293              	.LCFI22:
 1294              		.cfi_def_cfa_offset 4
 1295              		@ sp needed
 1296 002a 5DF804FB 		ldr	pc, [sp], #4
 1297              	.L42:
 1298 002e 00BF     		.align	2
 1299              	.L41:
 1300 0030 00000000 		.word	read_Data
 1301 0034 00000000 		.word	DMA_data
 1302 0038 00000000 		.word	.LC3
 1303              		.cfi_endproc
 1304              	.LFE384:
 1306              		.section	.text.Error_Handler,"ax",%progbits
 1307              		.align	1
 1308              		.global	Error_Handler
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu fpv5-d16
 1314              	Error_Handler:
 1315              	.LFB385:
1913:Core/Src/main.c **** /* USER CODE END 4 */
1914:Core/Src/main.c **** 
1915:Core/Src/main.c **** /**
1916:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1917:Core/Src/main.c ****   * @retval None
1918:Core/Src/main.c ****   */
1919:Core/Src/main.c **** void Error_Handler(void)
1920:Core/Src/main.c **** {
 1316              		.loc 1 1920 1 is_stmt 1 view -0
 1317              		.cfi_startproc
ARM GAS  /tmp/ccrX756S.s 			page 60


 1318              		@ Volatile: function does not return.
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
1921:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1922:Core/Src/main.c **** /* User can add his own implementation to report the HAL error return state */
1923:Core/Src/main.c **** __disable_irq();
 1322              		.loc 1 1923 1 view .LVU338
 1323              	.LBB14:
 1324              	.LBI14:
 1325              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccrX756S.s 			page 61


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccrX756S.s 			page 62


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  /tmp/ccrX756S.s 			page 63


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1326              		.loc 2 207 27 view .LVU339
 1327              	.LBB15:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1328              		.loc 2 209 3 view .LVU340
 1329              		.syntax unified
 1330              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1331 0000 72B6     		cpsid i
 1332              	@ 0 "" 2
 1333              		.thumb
ARM GAS  /tmp/ccrX756S.s 			page 64


 1334              		.syntax unified
 1335              	.L44:
 1336              	.LBE15:
 1337              	.LBE14:
1924:Core/Src/main.c **** while (1) {
 1338              		.loc 1 1924 1 discriminator 1 view .LVU341
1925:Core/Src/main.c **** }
 1339              		.loc 1 1925 1 discriminator 1 view .LVU342
1924:Core/Src/main.c **** while (1) {
 1340              		.loc 1 1924 7 discriminator 1 view .LVU343
 1341 0002 FEE7     		b	.L44
 1342              		.cfi_endproc
 1343              	.LFE385:
 1345              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1346              		.align	1
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1350              		.fpu fpv5-d16
 1352              	MX_SPI3_Init:
 1353              	.LFB372:
1322:Core/Src/main.c **** 
 1354              		.loc 1 1322 1 view -0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 0
 1357              		@ frame_needed = 0, uses_anonymous_args = 0
 1358 0000 08B5     		push	{r3, lr}
 1359              	.LCFI23:
 1360              		.cfi_def_cfa_offset 8
 1361              		.cfi_offset 3, -8
 1362              		.cfi_offset 14, -4
1332:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1363              		.loc 1 1332 3 view .LVU345
1332:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1364              		.loc 1 1332 18 is_stmt 0 view .LVU346
 1365 0002 1448     		ldr	r0, .L49
 1366 0004 144B     		ldr	r3, .L49+4
 1367 0006 0360     		str	r3, [r0]
1333:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1368              		.loc 1 1333 3 is_stmt 1 view .LVU347
1333:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1369              		.loc 1 1333 19 is_stmt 0 view .LVU348
 1370 0008 4FF48003 		mov	r3, #4194304
 1371 000c 4360     		str	r3, [r0, #4]
1334:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1372              		.loc 1 1334 3 is_stmt 1 view .LVU349
1334:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1373              		.loc 1 1334 24 is_stmt 0 view .LVU350
 1374 000e 0023     		movs	r3, #0
 1375 0010 8360     		str	r3, [r0, #8]
1335:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1376              		.loc 1 1335 3 is_stmt 1 view .LVU351
1335:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1377              		.loc 1 1335 23 is_stmt 0 view .LVU352
 1378 0012 0722     		movs	r2, #7
 1379 0014 C260     		str	r2, [r0, #12]
1336:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  /tmp/ccrX756S.s 			page 65


 1380              		.loc 1 1336 3 is_stmt 1 view .LVU353
1336:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1381              		.loc 1 1336 26 is_stmt 0 view .LVU354
 1382 0016 0361     		str	r3, [r0, #16]
1337:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1383              		.loc 1 1337 3 is_stmt 1 view .LVU355
1337:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1384              		.loc 1 1337 23 is_stmt 0 view .LVU356
 1385 0018 4361     		str	r3, [r0, #20]
1338:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1386              		.loc 1 1338 3 is_stmt 1 view .LVU357
1338:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1387              		.loc 1 1338 18 is_stmt 0 view .LVU358
 1388 001a 4FF08062 		mov	r2, #67108864
 1389 001e 8261     		str	r2, [r0, #24]
1339:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1390              		.loc 1 1339 3 is_stmt 1 view .LVU359
1339:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1391              		.loc 1 1339 32 is_stmt 0 view .LVU360
 1392 0020 4FF0C042 		mov	r2, #1610612736
 1393 0024 C261     		str	r2, [r0, #28]
1340:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1394              		.loc 1 1340 3 is_stmt 1 view .LVU361
1340:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1395              		.loc 1 1340 23 is_stmt 0 view .LVU362
 1396 0026 0362     		str	r3, [r0, #32]
1341:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1397              		.loc 1 1341 3 is_stmt 1 view .LVU363
1341:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1398              		.loc 1 1341 21 is_stmt 0 view .LVU364
 1399 0028 4362     		str	r3, [r0, #36]
1342:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1400              		.loc 1 1342 3 is_stmt 1 view .LVU365
1342:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1401              		.loc 1 1342 29 is_stmt 0 view .LVU366
 1402 002a 8362     		str	r3, [r0, #40]
1343:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1403              		.loc 1 1343 3 is_stmt 1 view .LVU367
1343:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1404              		.loc 1 1343 28 is_stmt 0 view .LVU368
 1405 002c C362     		str	r3, [r0, #44]
1344:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1406              		.loc 1 1344 3 is_stmt 1 view .LVU369
1344:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1407              		.loc 1 1344 23 is_stmt 0 view .LVU370
 1408 002e 4FF08042 		mov	r2, #1073741824
 1409 0032 4263     		str	r2, [r0, #52]
1345:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1410              		.loc 1 1345 3 is_stmt 1 view .LVU371
1345:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1411              		.loc 1 1345 26 is_stmt 0 view .LVU372
 1412 0034 8363     		str	r3, [r0, #56]
1346:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1413              		.loc 1 1346 3 is_stmt 1 view .LVU373
1346:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1414              		.loc 1 1346 28 is_stmt 0 view .LVU374
 1415 0036 C363     		str	r3, [r0, #60]
ARM GAS  /tmp/ccrX756S.s 			page 66


1347:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1416              		.loc 1 1347 3 is_stmt 1 view .LVU375
1347:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1417              		.loc 1 1347 41 is_stmt 0 view .LVU376
 1418 0038 0364     		str	r3, [r0, #64]
1348:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1419              		.loc 1 1348 3 is_stmt 1 view .LVU377
1348:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1420              		.loc 1 1348 41 is_stmt 0 view .LVU378
 1421 003a 4364     		str	r3, [r0, #68]
1349:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1422              		.loc 1 1349 3 is_stmt 1 view .LVU379
1349:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1423              		.loc 1 1349 31 is_stmt 0 view .LVU380
 1424 003c 8364     		str	r3, [r0, #72]
1350:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1425              		.loc 1 1350 3 is_stmt 1 view .LVU381
1350:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1426              		.loc 1 1350 38 is_stmt 0 view .LVU382
 1427 003e C364     		str	r3, [r0, #76]
1351:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1428              		.loc 1 1351 3 is_stmt 1 view .LVU383
1351:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1429              		.loc 1 1351 37 is_stmt 0 view .LVU384
 1430 0040 0365     		str	r3, [r0, #80]
1352:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1431              		.loc 1 1352 3 is_stmt 1 view .LVU385
1352:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1432              		.loc 1 1352 32 is_stmt 0 view .LVU386
 1433 0042 4365     		str	r3, [r0, #84]
1353:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1434              		.loc 1 1353 3 is_stmt 1 view .LVU387
1353:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1435              		.loc 1 1353 21 is_stmt 0 view .LVU388
 1436 0044 8365     		str	r3, [r0, #88]
1354:Core/Src/main.c ****   {
 1437              		.loc 1 1354 3 is_stmt 1 view .LVU389
1354:Core/Src/main.c ****   {
 1438              		.loc 1 1354 7 is_stmt 0 view .LVU390
 1439 0046 FFF7FEFF 		bl	HAL_SPI_Init
 1440              	.LVL89:
1354:Core/Src/main.c ****   {
 1441              		.loc 1 1354 6 view .LVU391
 1442 004a 00B9     		cbnz	r0, .L48
1362:Core/Src/main.c **** 
 1443              		.loc 1 1362 1 view .LVU392
 1444 004c 08BD     		pop	{r3, pc}
 1445              	.L48:
1356:Core/Src/main.c ****   }
 1446              		.loc 1 1356 5 is_stmt 1 view .LVU393
 1447 004e FFF7FEFF 		bl	Error_Handler
 1448              	.LVL90:
 1449              	.L50:
 1450 0052 00BF     		.align	2
 1451              	.L49:
 1452 0054 00000000 		.word	hspi3
 1453 0058 003C0040 		.word	1073757184
ARM GAS  /tmp/ccrX756S.s 			page 67


 1454              		.cfi_endproc
 1455              	.LFE372:
 1457              		.section	.text.MX_FDCAN3_Init,"ax",%progbits
 1458              		.align	1
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv5-d16
 1464              	MX_FDCAN3_Init:
 1465              	.LFB366:
1071:Core/Src/main.c **** 
 1466              		.loc 1 1071 1 view -0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470 0000 08B5     		push	{r3, lr}
 1471              	.LCFI24:
 1472              		.cfi_def_cfa_offset 8
 1473              		.cfi_offset 3, -8
 1474              		.cfi_offset 14, -4
1080:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1475              		.loc 1 1080 3 view .LVU395
1080:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1476              		.loc 1 1080 20 is_stmt 0 view .LVU396
 1477 0002 1448     		ldr	r0, .L55
 1478 0004 144B     		ldr	r3, .L55+4
 1479 0006 0360     		str	r3, [r0]
1081:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1480              		.loc 1 1081 3 is_stmt 1 view .LVU397
1081:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1481              		.loc 1 1081 28 is_stmt 0 view .LVU398
 1482 0008 0023     		movs	r3, #0
 1483 000a 8360     		str	r3, [r0, #8]
1082:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1484              		.loc 1 1082 3 is_stmt 1 view .LVU399
1082:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1485              		.loc 1 1082 21 is_stmt 0 view .LVU400
 1486 000c C360     		str	r3, [r0, #12]
1083:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1487              		.loc 1 1083 3 is_stmt 1 view .LVU401
1083:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1488              		.loc 1 1083 35 is_stmt 0 view .LVU402
 1489 000e 0374     		strb	r3, [r0, #16]
1084:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1490              		.loc 1 1084 3 is_stmt 1 view .LVU403
1084:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1491              		.loc 1 1084 30 is_stmt 0 view .LVU404
 1492 0010 4374     		strb	r3, [r0, #17]
1085:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1493              		.loc 1 1085 3 is_stmt 1 view .LVU405
1085:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1494              		.loc 1 1085 34 is_stmt 0 view .LVU406
 1495 0012 8374     		strb	r3, [r0, #18]
1086:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1496              		.loc 1 1086 3 is_stmt 1 view .LVU407
1086:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1497              		.loc 1 1086 33 is_stmt 0 view .LVU408
ARM GAS  /tmp/ccrX756S.s 			page 68


 1498 0014 1022     		movs	r2, #16
 1499 0016 4261     		str	r2, [r0, #20]
1087:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1500              		.loc 1 1087 3 is_stmt 1 view .LVU409
1087:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1501              		.loc 1 1087 37 is_stmt 0 view .LVU410
 1502 0018 0122     		movs	r2, #1
 1503 001a 8261     		str	r2, [r0, #24]
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1504              		.loc 1 1088 3 is_stmt 1 view .LVU411
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1505              		.loc 1 1088 32 is_stmt 0 view .LVU412
 1506 001c 0221     		movs	r1, #2
 1507 001e C161     		str	r1, [r0, #28]
1089:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1508              		.loc 1 1089 3 is_stmt 1 view .LVU413
1089:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1509              		.loc 1 1089 32 is_stmt 0 view .LVU414
 1510 0020 0162     		str	r1, [r0, #32]
1090:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1511              		.loc 1 1090 3 is_stmt 1 view .LVU415
1090:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1512              		.loc 1 1090 30 is_stmt 0 view .LVU416
 1513 0022 4262     		str	r2, [r0, #36]
1091:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1514              		.loc 1 1091 3 is_stmt 1 view .LVU417
1091:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1515              		.loc 1 1091 34 is_stmt 0 view .LVU418
 1516 0024 8262     		str	r2, [r0, #40]
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1517              		.loc 1 1092 3 is_stmt 1 view .LVU419
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1518              		.loc 1 1092 29 is_stmt 0 view .LVU420
 1519 0026 C262     		str	r2, [r0, #44]
1093:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1520              		.loc 1 1093 3 is_stmt 1 view .LVU421
1093:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1521              		.loc 1 1093 29 is_stmt 0 view .LVU422
 1522 0028 0263     		str	r2, [r0, #48]
1094:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1523              		.loc 1 1094 3 is_stmt 1 view .LVU423
1094:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1524              		.loc 1 1094 33 is_stmt 0 view .LVU424
 1525 002a 4363     		str	r3, [r0, #52]
1095:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1526              		.loc 1 1095 3 is_stmt 1 view .LVU425
1095:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1527              		.loc 1 1095 30 is_stmt 0 view .LVU426
 1528 002c 8363     		str	r3, [r0, #56]
1096:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1529              		.loc 1 1096 3 is_stmt 1 view .LVU427
1096:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1530              		.loc 1 1096 30 is_stmt 0 view .LVU428
 1531 002e C363     		str	r3, [r0, #60]
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1532              		.loc 1 1097 3 is_stmt 1 view .LVU429
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
ARM GAS  /tmp/ccrX756S.s 			page 69


 1533              		.loc 1 1097 32 is_stmt 0 view .LVU430
 1534 0030 0364     		str	r3, [r0, #64]
1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1535              		.loc 1 1098 3 is_stmt 1 view .LVU431
1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1536              		.loc 1 1098 32 is_stmt 0 view .LVU432
 1537 0032 0422     		movs	r2, #4
 1538 0034 4264     		str	r2, [r0, #68]
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1539              		.loc 1 1099 3 is_stmt 1 view .LVU433
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1540              		.loc 1 1099 32 is_stmt 0 view .LVU434
 1541 0036 8364     		str	r3, [r0, #72]
1100:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1542              		.loc 1 1100 3 is_stmt 1 view .LVU435
1100:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1543              		.loc 1 1100 32 is_stmt 0 view .LVU436
 1544 0038 C264     		str	r2, [r0, #76]
1101:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1545              		.loc 1 1101 3 is_stmt 1 view .LVU437
1101:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1546              		.loc 1 1101 29 is_stmt 0 view .LVU438
 1547 003a 0365     		str	r3, [r0, #80]
1102:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1548              		.loc 1 1102 3 is_stmt 1 view .LVU439
1102:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1549              		.loc 1 1102 29 is_stmt 0 view .LVU440
 1550 003c 4265     		str	r2, [r0, #84]
1103:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1551              		.loc 1 1103 3 is_stmt 1 view .LVU441
1103:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1552              		.loc 1 1103 28 is_stmt 0 view .LVU442
 1553 003e 8365     		str	r3, [r0, #88]
1104:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1554              		.loc 1 1104 3 is_stmt 1 view .LVU443
1104:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1555              		.loc 1 1104 29 is_stmt 0 view .LVU444
 1556 0040 C365     		str	r3, [r0, #92]
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1557              		.loc 1 1105 3 is_stmt 1 view .LVU445
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1558              		.loc 1 1105 36 is_stmt 0 view .LVU446
 1559 0042 0366     		str	r3, [r0, #96]
1106:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1560              		.loc 1 1106 3 is_stmt 1 view .LVU447
1106:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1561              		.loc 1 1106 32 is_stmt 0 view .LVU448
 1562 0044 4366     		str	r3, [r0, #100]
1107:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1563              		.loc 1 1107 3 is_stmt 1 view .LVU449
1107:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1564              		.loc 1 1107 27 is_stmt 0 view .LVU450
 1565 0046 8266     		str	r2, [r0, #104]
1108:Core/Src/main.c ****   {
 1566              		.loc 1 1108 3 is_stmt 1 view .LVU451
1108:Core/Src/main.c ****   {
 1567              		.loc 1 1108 7 is_stmt 0 view .LVU452
ARM GAS  /tmp/ccrX756S.s 			page 70


 1568 0048 FFF7FEFF 		bl	HAL_FDCAN_Init
 1569              	.LVL91:
1108:Core/Src/main.c ****   {
 1570              		.loc 1 1108 6 view .LVU453
 1571 004c 00B9     		cbnz	r0, .L54
1116:Core/Src/main.c **** 
 1572              		.loc 1 1116 1 view .LVU454
 1573 004e 08BD     		pop	{r3, pc}
 1574              	.L54:
1110:Core/Src/main.c ****   }
 1575              		.loc 1 1110 5 is_stmt 1 view .LVU455
 1576 0050 FFF7FEFF 		bl	Error_Handler
 1577              	.LVL92:
 1578              	.L56:
 1579              		.align	2
 1580              	.L55:
 1581 0054 00000000 		.word	hfdcan3
 1582 0058 00D40040 		.word	1073796096
 1583              		.cfi_endproc
 1584              	.LFE366:
 1586              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1587              		.align	1
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu fpv5-d16
 1593              	MX_USART6_UART_Init:
 1594              	.LFB380:
1692:Core/Src/main.c **** 
 1595              		.loc 1 1692 1 view -0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 0
 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599 0000 08B5     		push	{r3, lr}
 1600              	.LCFI25:
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 3, -8
 1603              		.cfi_offset 14, -4
1701:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1604              		.loc 1 1701 3 view .LVU457
1701:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1605              		.loc 1 1701 19 is_stmt 0 view .LVU458
 1606 0002 1548     		ldr	r0, .L67
 1607 0004 154B     		ldr	r3, .L67+4
 1608 0006 0360     		str	r3, [r0]
1702:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1609              		.loc 1 1702 3 is_stmt 1 view .LVU459
1702:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1610              		.loc 1 1702 24 is_stmt 0 view .LVU460
 1611 0008 4FF4E133 		mov	r3, #115200
 1612 000c 4360     		str	r3, [r0, #4]
1703:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1613              		.loc 1 1703 3 is_stmt 1 view .LVU461
1703:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1614              		.loc 1 1703 26 is_stmt 0 view .LVU462
 1615 000e 0023     		movs	r3, #0
 1616 0010 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccrX756S.s 			page 71


1704:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1617              		.loc 1 1704 3 is_stmt 1 view .LVU463
1704:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1618              		.loc 1 1704 24 is_stmt 0 view .LVU464
 1619 0012 C360     		str	r3, [r0, #12]
1705:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1620              		.loc 1 1705 3 is_stmt 1 view .LVU465
1705:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1621              		.loc 1 1705 22 is_stmt 0 view .LVU466
 1622 0014 0361     		str	r3, [r0, #16]
1706:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1623              		.loc 1 1706 3 is_stmt 1 view .LVU467
1706:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1624              		.loc 1 1706 20 is_stmt 0 view .LVU468
 1625 0016 0C22     		movs	r2, #12
 1626 0018 4261     		str	r2, [r0, #20]
1707:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1627              		.loc 1 1707 3 is_stmt 1 view .LVU469
1707:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1628              		.loc 1 1707 25 is_stmt 0 view .LVU470
 1629 001a 8361     		str	r3, [r0, #24]
1708:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1630              		.loc 1 1708 3 is_stmt 1 view .LVU471
1708:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1631              		.loc 1 1708 28 is_stmt 0 view .LVU472
 1632 001c C361     		str	r3, [r0, #28]
1709:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1633              		.loc 1 1709 3 is_stmt 1 view .LVU473
1709:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1634              		.loc 1 1709 30 is_stmt 0 view .LVU474
 1635 001e 0362     		str	r3, [r0, #32]
1710:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1636              		.loc 1 1710 3 is_stmt 1 view .LVU475
1710:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1637              		.loc 1 1710 30 is_stmt 0 view .LVU476
 1638 0020 4362     		str	r3, [r0, #36]
1711:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1639              		.loc 1 1711 3 is_stmt 1 view .LVU477
1711:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1640              		.loc 1 1711 38 is_stmt 0 view .LVU478
 1641 0022 8362     		str	r3, [r0, #40]
1712:Core/Src/main.c ****   {
 1642              		.loc 1 1712 3 is_stmt 1 view .LVU479
1712:Core/Src/main.c ****   {
 1643              		.loc 1 1712 7 is_stmt 0 view .LVU480
 1644 0024 FFF7FEFF 		bl	HAL_UART_Init
 1645              	.LVL93:
1712:Core/Src/main.c ****   {
 1646              		.loc 1 1712 6 view .LVU481
 1647 0028 70B9     		cbnz	r0, .L63
1716:Core/Src/main.c ****   {
 1648              		.loc 1 1716 3 is_stmt 1 view .LVU482
1716:Core/Src/main.c ****   {
 1649              		.loc 1 1716 7 is_stmt 0 view .LVU483
 1650 002a 0021     		movs	r1, #0
 1651 002c 0A48     		ldr	r0, .L67
 1652 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
ARM GAS  /tmp/ccrX756S.s 			page 72


 1653              	.LVL94:
1716:Core/Src/main.c ****   {
 1654              		.loc 1 1716 6 view .LVU484
 1655 0032 58B9     		cbnz	r0, .L64
1720:Core/Src/main.c ****   {
 1656              		.loc 1 1720 3 is_stmt 1 view .LVU485
1720:Core/Src/main.c ****   {
 1657              		.loc 1 1720 7 is_stmt 0 view .LVU486
 1658 0034 0021     		movs	r1, #0
 1659 0036 0848     		ldr	r0, .L67
 1660 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1661              	.LVL95:
1720:Core/Src/main.c ****   {
 1662              		.loc 1 1720 6 view .LVU487
 1663 003c 40B9     		cbnz	r0, .L65
1724:Core/Src/main.c ****   {
 1664              		.loc 1 1724 3 is_stmt 1 view .LVU488
1724:Core/Src/main.c ****   {
 1665              		.loc 1 1724 7 is_stmt 0 view .LVU489
 1666 003e 0648     		ldr	r0, .L67
 1667 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1668              	.LVL96:
1724:Core/Src/main.c ****   {
 1669              		.loc 1 1724 6 view .LVU490
 1670 0044 30B9     		cbnz	r0, .L66
1732:Core/Src/main.c **** 
 1671              		.loc 1 1732 1 view .LVU491
 1672 0046 08BD     		pop	{r3, pc}
 1673              	.L63:
1714:Core/Src/main.c ****   }
 1674              		.loc 1 1714 5 is_stmt 1 view .LVU492
 1675 0048 FFF7FEFF 		bl	Error_Handler
 1676              	.LVL97:
 1677              	.L64:
1718:Core/Src/main.c ****   }
 1678              		.loc 1 1718 5 view .LVU493
 1679 004c FFF7FEFF 		bl	Error_Handler
 1680              	.LVL98:
 1681              	.L65:
1722:Core/Src/main.c ****   }
 1682              		.loc 1 1722 5 view .LVU494
 1683 0050 FFF7FEFF 		bl	Error_Handler
 1684              	.LVL99:
 1685              	.L66:
1726:Core/Src/main.c ****   }
 1686              		.loc 1 1726 5 view .LVU495
 1687 0054 FFF7FEFF 		bl	Error_Handler
 1688              	.LVL100:
 1689              	.L68:
 1690              		.align	2
 1691              	.L67:
 1692 0058 00000000 		.word	huart6
 1693 005c 00140140 		.word	1073812480
 1694              		.cfi_endproc
 1695              	.LFE380:
 1697              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1698              		.align	1
ARM GAS  /tmp/ccrX756S.s 			page 73


 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu fpv5-d16
 1704              	MX_ADC1_Init:
 1705              	.LFB364:
 941:Core/Src/main.c **** 
 1706              		.loc 1 941 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 48
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 10B5     		push	{r4, lr}
 1711              	.LCFI26:
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 4, -8
 1714              		.cfi_offset 14, -4
 1715 0002 8CB0     		sub	sp, sp, #48
 1716              	.LCFI27:
 1717              		.cfi_def_cfa_offset 56
 947:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1718              		.loc 1 947 3 view .LVU497
 947:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1719              		.loc 1 947 24 is_stmt 0 view .LVU498
 1720 0004 0024     		movs	r4, #0
 1721 0006 0994     		str	r4, [sp, #36]
 1722 0008 0A94     		str	r4, [sp, #40]
 1723 000a 0B94     		str	r4, [sp, #44]
 948:Core/Src/main.c **** 
 1724              		.loc 1 948 3 is_stmt 1 view .LVU499
 948:Core/Src/main.c **** 
 1725              		.loc 1 948 26 is_stmt 0 view .LVU500
 1726 000c 2422     		movs	r2, #36
 1727 000e 2146     		mov	r1, r4
 1728 0010 6846     		mov	r0, sp
 1729 0012 FFF7FEFF 		bl	memset
 1730              	.LVL101:
 956:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1731              		.loc 1 956 3 is_stmt 1 view .LVU501
 956:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1732              		.loc 1 956 18 is_stmt 0 view .LVU502
 1733 0016 1E48     		ldr	r0, .L77
 1734 0018 1E4B     		ldr	r3, .L77+4
 1735 001a 0360     		str	r3, [r0]
 957:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1736              		.loc 1 957 3 is_stmt 1 view .LVU503
 957:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1737              		.loc 1 957 29 is_stmt 0 view .LVU504
 1738 001c 4FF43013 		mov	r3, #2883584
 1739 0020 4360     		str	r3, [r0, #4]
 958:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1740              		.loc 1 958 3 is_stmt 1 view .LVU505
 958:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1741              		.loc 1 958 25 is_stmt 0 view .LVU506
 1742 0022 8460     		str	r4, [r0, #8]
 959:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1743              		.loc 1 959 3 is_stmt 1 view .LVU507
 959:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
ARM GAS  /tmp/ccrX756S.s 			page 74


 1744              		.loc 1 959 27 is_stmt 0 view .LVU508
 1745 0024 0461     		str	r4, [r0, #16]
 960:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1746              		.loc 1 960 3 is_stmt 1 view .LVU509
 960:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1747              		.loc 1 960 27 is_stmt 0 view .LVU510
 1748 0026 0423     		movs	r3, #4
 1749 0028 4361     		str	r3, [r0, #20]
 961:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1750              		.loc 1 961 3 is_stmt 1 view .LVU511
 961:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1751              		.loc 1 961 31 is_stmt 0 view .LVU512
 1752 002a 0476     		strb	r4, [r0, #24]
 962:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1753              		.loc 1 962 3 is_stmt 1 view .LVU513
 962:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1754              		.loc 1 962 33 is_stmt 0 view .LVU514
 1755 002c 4476     		strb	r4, [r0, #25]
 963:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1756              		.loc 1 963 3 is_stmt 1 view .LVU515
 963:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1757              		.loc 1 963 30 is_stmt 0 view .LVU516
 1758 002e 0123     		movs	r3, #1
 1759 0030 C361     		str	r3, [r0, #28]
 964:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1760              		.loc 1 964 3 is_stmt 1 view .LVU517
 964:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1761              		.loc 1 964 36 is_stmt 0 view .LVU518
 1762 0032 80F82040 		strb	r4, [r0, #32]
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1763              		.loc 1 965 3 is_stmt 1 view .LVU519
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1764              		.loc 1 965 31 is_stmt 0 view .LVU520
 1765 0036 8462     		str	r4, [r0, #40]
 966:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1766              		.loc 1 966 3 is_stmt 1 view .LVU521
 966:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1767              		.loc 1 966 35 is_stmt 0 view .LVU522
 1768 0038 C462     		str	r4, [r0, #44]
 967:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1769              		.loc 1 967 3 is_stmt 1 view .LVU523
 967:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1770              		.loc 1 967 39 is_stmt 0 view .LVU524
 1771 003a 0463     		str	r4, [r0, #48]
 968:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1772              		.loc 1 968 3 is_stmt 1 view .LVU525
 968:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1773              		.loc 1 968 22 is_stmt 0 view .LVU526
 1774 003c C463     		str	r4, [r0, #60]
 969:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1775              		.loc 1 969 3 is_stmt 1 view .LVU527
 969:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1776              		.loc 1 969 27 is_stmt 0 view .LVU528
 1777 003e 0464     		str	r4, [r0, #64]
 970:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1778              		.loc 1 970 3 is_stmt 1 view .LVU529
 970:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
ARM GAS  /tmp/ccrX756S.s 			page 75


 1779              		.loc 1 970 31 is_stmt 0 view .LVU530
 1780 0040 80F84440 		strb	r4, [r0, #68]
 971:Core/Src/main.c ****   {
 1781              		.loc 1 971 3 is_stmt 1 view .LVU531
 971:Core/Src/main.c ****   {
 1782              		.loc 1 971 7 is_stmt 0 view .LVU532
 1783 0044 FFF7FEFF 		bl	HAL_ADC_Init
 1784              	.LVL102:
 971:Core/Src/main.c ****   {
 1785              		.loc 1 971 6 view .LVU533
 1786 0048 E0B9     		cbnz	r0, .L74
 978:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1787              		.loc 1 978 3 is_stmt 1 view .LVU534
 978:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1788              		.loc 1 978 18 is_stmt 0 view .LVU535
 1789 004a 0023     		movs	r3, #0
 1790 004c 0993     		str	r3, [sp, #36]
 979:Core/Src/main.c ****   {
 1791              		.loc 1 979 3 is_stmt 1 view .LVU536
 979:Core/Src/main.c ****   {
 1792              		.loc 1 979 7 is_stmt 0 view .LVU537
 1793 004e 09A9     		add	r1, sp, #36
 1794 0050 0F48     		ldr	r0, .L77
 1795 0052 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 1796              	.LVL103:
 979:Core/Src/main.c ****   {
 1797              		.loc 1 979 6 view .LVU538
 1798 0056 B8B9     		cbnz	r0, .L75
 986:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1799              		.loc 1 986 3 is_stmt 1 view .LVU539
 986:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1800              		.loc 1 986 19 is_stmt 0 view .LVU540
 1801 0058 0F4B     		ldr	r3, .L77+8
 1802 005a 0093     		str	r3, [sp]
 987:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1803              		.loc 1 987 3 is_stmt 1 view .LVU541
 987:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1804              		.loc 1 987 16 is_stmt 0 view .LVU542
 1805 005c 0623     		movs	r3, #6
 1806 005e 0193     		str	r3, [sp, #4]
 988:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1807              		.loc 1 988 3 is_stmt 1 view .LVU543
 988:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1808              		.loc 1 988 24 is_stmt 0 view .LVU544
 1809 0060 0323     		movs	r3, #3
 1810 0062 0293     		str	r3, [sp, #8]
 989:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1811              		.loc 1 989 3 is_stmt 1 view .LVU545
 989:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1812              		.loc 1 989 22 is_stmt 0 view .LVU546
 1813 0064 40F2FF73 		movw	r3, #2047
 1814 0068 0393     		str	r3, [sp, #12]
 990:Core/Src/main.c ****   sConfig.Offset = 0;
 1815              		.loc 1 990 3 is_stmt 1 view .LVU547
 990:Core/Src/main.c ****   sConfig.Offset = 0;
 1816              		.loc 1 990 24 is_stmt 0 view .LVU548
 1817 006a 0423     		movs	r3, #4
ARM GAS  /tmp/ccrX756S.s 			page 76


 1818 006c 0493     		str	r3, [sp, #16]
 991:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1819              		.loc 1 991 3 is_stmt 1 view .LVU549
 991:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1820              		.loc 1 991 18 is_stmt 0 view .LVU550
 1821 006e 0023     		movs	r3, #0
 1822 0070 0593     		str	r3, [sp, #20]
 992:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1823              		.loc 1 992 3 is_stmt 1 view .LVU551
 992:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1824              		.loc 1 992 34 is_stmt 0 view .LVU552
 1825 0072 8DF82130 		strb	r3, [sp, #33]
 993:Core/Src/main.c ****   {
 1826              		.loc 1 993 3 is_stmt 1 view .LVU553
 993:Core/Src/main.c ****   {
 1827              		.loc 1 993 7 is_stmt 0 view .LVU554
 1828 0076 6946     		mov	r1, sp
 1829 0078 0548     		ldr	r0, .L77
 1830 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1831              	.LVL104:
 993:Core/Src/main.c ****   {
 1832              		.loc 1 993 6 view .LVU555
 1833 007e 28B9     		cbnz	r0, .L76
1001:Core/Src/main.c **** 
 1834              		.loc 1 1001 1 view .LVU556
 1835 0080 0CB0     		add	sp, sp, #48
 1836              	.LCFI28:
 1837              		.cfi_remember_state
 1838              		.cfi_def_cfa_offset 8
 1839              		@ sp needed
 1840 0082 10BD     		pop	{r4, pc}
 1841              	.L74:
 1842              	.LCFI29:
 1843              		.cfi_restore_state
 973:Core/Src/main.c ****   }
 1844              		.loc 1 973 5 is_stmt 1 view .LVU557
 1845 0084 FFF7FEFF 		bl	Error_Handler
 1846              	.LVL105:
 1847              	.L75:
 981:Core/Src/main.c ****   }
 1848              		.loc 1 981 5 view .LVU558
 1849 0088 FFF7FEFF 		bl	Error_Handler
 1850              	.LVL106:
 1851              	.L76:
 995:Core/Src/main.c ****   }
 1852              		.loc 1 995 5 view .LVU559
 1853 008c FFF7FEFF 		bl	Error_Handler
 1854              	.LVL107:
 1855              	.L78:
 1856              		.align	2
 1857              	.L77:
 1858 0090 00000000 		.word	hadc1
 1859 0094 00200240 		.word	1073881088
 1860 0098 0040C03A 		.word	985677824
 1861              		.cfi_endproc
 1862              	.LFE364:
 1864              		.section	.text.MX_TIM4_Init,"ax",%progbits
ARM GAS  /tmp/ccrX756S.s 			page 77


 1865              		.align	1
 1866              		.syntax unified
 1867              		.thumb
 1868              		.thumb_func
 1869              		.fpu fpv5-d16
 1871              	MX_TIM4_Init:
 1872              	.LFB375:
1472:Core/Src/main.c **** 
 1873              		.loc 1 1472 1 view -0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 40
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877 0000 00B5     		push	{lr}
 1878              	.LCFI30:
 1879              		.cfi_def_cfa_offset 4
 1880              		.cfi_offset 14, -4
 1881 0002 8BB0     		sub	sp, sp, #44
 1882              	.LCFI31:
 1883              		.cfi_def_cfa_offset 48
1478:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1884              		.loc 1 1478 3 view .LVU561
1478:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1885              		.loc 1 1478 27 is_stmt 0 view .LVU562
 1886 0004 0023     		movs	r3, #0
 1887 0006 0793     		str	r3, [sp, #28]
 1888 0008 0893     		str	r3, [sp, #32]
 1889 000a 0993     		str	r3, [sp, #36]
1479:Core/Src/main.c **** 
 1890              		.loc 1 1479 3 is_stmt 1 view .LVU563
1479:Core/Src/main.c **** 
 1891              		.loc 1 1479 22 is_stmt 0 view .LVU564
 1892 000c 0093     		str	r3, [sp]
 1893 000e 0193     		str	r3, [sp, #4]
 1894 0010 0293     		str	r3, [sp, #8]
 1895 0012 0393     		str	r3, [sp, #12]
 1896 0014 0493     		str	r3, [sp, #16]
 1897 0016 0593     		str	r3, [sp, #20]
 1898 0018 0693     		str	r3, [sp, #24]
1484:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1899              		.loc 1 1484 3 is_stmt 1 view .LVU565
1484:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1900              		.loc 1 1484 18 is_stmt 0 view .LVU566
 1901 001a 2248     		ldr	r0, .L93
 1902 001c 224A     		ldr	r2, .L93+4
 1903 001e 0260     		str	r2, [r0]
1485:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1904              		.loc 1 1485 3 is_stmt 1 view .LVU567
1485:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1905              		.loc 1 1485 24 is_stmt 0 view .LVU568
 1906 0020 1D22     		movs	r2, #29
 1907 0022 4260     		str	r2, [r0, #4]
1486:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1908              		.loc 1 1486 3 is_stmt 1 view .LVU569
1486:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1909              		.loc 1 1486 26 is_stmt 0 view .LVU570
 1910 0024 8360     		str	r3, [r0, #8]
1487:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccrX756S.s 			page 78


 1911              		.loc 1 1487 3 is_stmt 1 view .LVU571
1487:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1912              		.loc 1 1487 21 is_stmt 0 view .LVU572
 1913 0026 42F20F72 		movw	r2, #9999
 1914 002a C260     		str	r2, [r0, #12]
1488:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1915              		.loc 1 1488 3 is_stmt 1 view .LVU573
1488:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1916              		.loc 1 1488 28 is_stmt 0 view .LVU574
 1917 002c 0361     		str	r3, [r0, #16]
1489:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1918              		.loc 1 1489 3 is_stmt 1 view .LVU575
1489:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1919              		.loc 1 1489 32 is_stmt 0 view .LVU576
 1920 002e 8361     		str	r3, [r0, #24]
1490:Core/Src/main.c ****   {
 1921              		.loc 1 1490 3 is_stmt 1 view .LVU577
1490:Core/Src/main.c ****   {
 1922              		.loc 1 1490 7 is_stmt 0 view .LVU578
 1923 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1924              	.LVL108:
1490:Core/Src/main.c ****   {
 1925              		.loc 1 1490 6 view .LVU579
 1926 0034 50BB     		cbnz	r0, .L87
1494:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1927              		.loc 1 1494 3 is_stmt 1 view .LVU580
1494:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1928              		.loc 1 1494 37 is_stmt 0 view .LVU581
 1929 0036 0023     		movs	r3, #0
 1930 0038 0793     		str	r3, [sp, #28]
1495:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1931              		.loc 1 1495 3 is_stmt 1 view .LVU582
1495:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1932              		.loc 1 1495 33 is_stmt 0 view .LVU583
 1933 003a 0993     		str	r3, [sp, #36]
1496:Core/Src/main.c ****   {
 1934              		.loc 1 1496 3 is_stmt 1 view .LVU584
1496:Core/Src/main.c ****   {
 1935              		.loc 1 1496 7 is_stmt 0 view .LVU585
 1936 003c 07A9     		add	r1, sp, #28
 1937 003e 1948     		ldr	r0, .L93
 1938 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1939              	.LVL109:
1496:Core/Src/main.c ****   {
 1940              		.loc 1 1496 6 view .LVU586
 1941 0044 20BB     		cbnz	r0, .L88
1500:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1942              		.loc 1 1500 3 is_stmt 1 view .LVU587
1500:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1943              		.loc 1 1500 20 is_stmt 0 view .LVU588
 1944 0046 6023     		movs	r3, #96
 1945 0048 0093     		str	r3, [sp]
1501:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1946              		.loc 1 1501 3 is_stmt 1 view .LVU589
1501:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1947              		.loc 1 1501 19 is_stmt 0 view .LVU590
 1948 004a 0022     		movs	r2, #0
ARM GAS  /tmp/ccrX756S.s 			page 79


 1949 004c 0192     		str	r2, [sp, #4]
1502:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1950              		.loc 1 1502 3 is_stmt 1 view .LVU591
1502:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1951              		.loc 1 1502 24 is_stmt 0 view .LVU592
 1952 004e 0292     		str	r2, [sp, #8]
1503:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1953              		.loc 1 1503 3 is_stmt 1 view .LVU593
1503:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1954              		.loc 1 1503 24 is_stmt 0 view .LVU594
 1955 0050 0492     		str	r2, [sp, #16]
1504:Core/Src/main.c ****   {
 1956              		.loc 1 1504 3 is_stmt 1 view .LVU595
1504:Core/Src/main.c ****   {
 1957              		.loc 1 1504 7 is_stmt 0 view .LVU596
 1958 0052 6946     		mov	r1, sp
 1959 0054 1348     		ldr	r0, .L93
 1960 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1961              	.LVL110:
1504:Core/Src/main.c ****   {
 1962              		.loc 1 1504 6 view .LVU597
 1963 005a D8B9     		cbnz	r0, .L89
1508:Core/Src/main.c ****   {
 1964              		.loc 1 1508 3 is_stmt 1 view .LVU598
1508:Core/Src/main.c ****   {
 1965              		.loc 1 1508 7 is_stmt 0 view .LVU599
 1966 005c 0422     		movs	r2, #4
 1967 005e 6946     		mov	r1, sp
 1968 0060 1048     		ldr	r0, .L93
 1969 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1970              	.LVL111:
1508:Core/Src/main.c ****   {
 1971              		.loc 1 1508 6 view .LVU600
 1972 0066 B8B9     		cbnz	r0, .L90
1512:Core/Src/main.c ****   {
 1973              		.loc 1 1512 3 is_stmt 1 view .LVU601
1512:Core/Src/main.c ****   {
 1974              		.loc 1 1512 7 is_stmt 0 view .LVU602
 1975 0068 0822     		movs	r2, #8
 1976 006a 6946     		mov	r1, sp
 1977 006c 0D48     		ldr	r0, .L93
 1978 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1979              	.LVL112:
1512:Core/Src/main.c ****   {
 1980              		.loc 1 1512 6 view .LVU603
 1981 0072 98B9     		cbnz	r0, .L91
1516:Core/Src/main.c ****   {
 1982              		.loc 1 1516 3 is_stmt 1 view .LVU604
1516:Core/Src/main.c ****   {
 1983              		.loc 1 1516 7 is_stmt 0 view .LVU605
 1984 0074 0C22     		movs	r2, #12
 1985 0076 6946     		mov	r1, sp
 1986 0078 0A48     		ldr	r0, .L93
 1987 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1988              	.LVL113:
1516:Core/Src/main.c ****   {
 1989              		.loc 1 1516 6 view .LVU606
ARM GAS  /tmp/ccrX756S.s 			page 80


 1990 007e 78B9     		cbnz	r0, .L92
1523:Core/Src/main.c **** 
 1991              		.loc 1 1523 3 is_stmt 1 view .LVU607
 1992 0080 0848     		ldr	r0, .L93
 1993 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1994              	.LVL114:
1525:Core/Src/main.c **** 
 1995              		.loc 1 1525 1 is_stmt 0 view .LVU608
 1996 0086 0BB0     		add	sp, sp, #44
 1997              	.LCFI32:
 1998              		.cfi_remember_state
 1999              		.cfi_def_cfa_offset 4
 2000              		@ sp needed
 2001 0088 5DF804FB 		ldr	pc, [sp], #4
 2002              	.L87:
 2003              	.LCFI33:
 2004              		.cfi_restore_state
1492:Core/Src/main.c ****   }
 2005              		.loc 1 1492 5 is_stmt 1 view .LVU609
 2006 008c FFF7FEFF 		bl	Error_Handler
 2007              	.LVL115:
 2008              	.L88:
1498:Core/Src/main.c ****   }
 2009              		.loc 1 1498 5 view .LVU610
 2010 0090 FFF7FEFF 		bl	Error_Handler
 2011              	.LVL116:
 2012              	.L89:
1506:Core/Src/main.c ****   }
 2013              		.loc 1 1506 5 view .LVU611
 2014 0094 FFF7FEFF 		bl	Error_Handler
 2015              	.LVL117:
 2016              	.L90:
1510:Core/Src/main.c ****   }
 2017              		.loc 1 1510 5 view .LVU612
 2018 0098 FFF7FEFF 		bl	Error_Handler
 2019              	.LVL118:
 2020              	.L91:
1514:Core/Src/main.c ****   }
 2021              		.loc 1 1514 5 view .LVU613
 2022 009c FFF7FEFF 		bl	Error_Handler
 2023              	.LVL119:
 2024              	.L92:
1518:Core/Src/main.c ****   }
 2025              		.loc 1 1518 5 view .LVU614
 2026 00a0 FFF7FEFF 		bl	Error_Handler
 2027              	.LVL120:
 2028              	.L94:
 2029              		.align	2
 2030              	.L93:
 2031 00a4 00000000 		.word	htim4
 2032 00a8 00080040 		.word	1073743872
 2033              		.cfi_endproc
 2034              	.LFE375:
 2036              		.section	.text.MX_ADC3_Init,"ax",%progbits
 2037              		.align	1
 2038              		.syntax unified
 2039              		.thumb
ARM GAS  /tmp/ccrX756S.s 			page 81


 2040              		.thumb_func
 2041              		.fpu fpv5-d16
 2043              	MX_ADC3_Init:
 2044              	.LFB365:
1009:Core/Src/main.c **** 
 2045              		.loc 1 1009 1 view -0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 40
 2048              		@ frame_needed = 0, uses_anonymous_args = 0
 2049 0000 00B5     		push	{lr}
 2050              	.LCFI34:
 2051              		.cfi_def_cfa_offset 4
 2052              		.cfi_offset 14, -4
 2053 0002 8BB0     		sub	sp, sp, #44
 2054              	.LCFI35:
 2055              		.cfi_def_cfa_offset 48
1015:Core/Src/main.c **** 
 2056              		.loc 1 1015 3 view .LVU616
1015:Core/Src/main.c **** 
 2057              		.loc 1 1015 26 is_stmt 0 view .LVU617
 2058 0004 2422     		movs	r2, #36
 2059 0006 0021     		movs	r1, #0
 2060 0008 01A8     		add	r0, sp, #4
 2061 000a FFF7FEFF 		bl	memset
 2062              	.LVL121:
1023:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 2063              		.loc 1 1023 3 is_stmt 1 view .LVU618
1023:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 2064              		.loc 1 1023 18 is_stmt 0 view .LVU619
 2065 000e 1D48     		ldr	r0, .L101
 2066 0010 1D4B     		ldr	r3, .L101+4
 2067 0012 0360     		str	r3, [r0]
1024:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 2068              		.loc 1 1024 3 is_stmt 1 view .LVU620
1024:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 2069              		.loc 1 1024 29 is_stmt 0 view .LVU621
 2070 0014 4FF43013 		mov	r3, #2883584
 2071 0018 4360     		str	r3, [r0, #4]
1025:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 2072              		.loc 1 1025 3 is_stmt 1 view .LVU622
1025:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 2073              		.loc 1 1025 25 is_stmt 0 view .LVU623
 2074 001a 0823     		movs	r3, #8
 2075 001c 8360     		str	r3, [r0, #8]
1026:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2076              		.loc 1 1026 3 is_stmt 1 view .LVU624
1026:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2077              		.loc 1 1026 24 is_stmt 0 view .LVU625
 2078 001e 0023     		movs	r3, #0
 2079 0020 C360     		str	r3, [r0, #12]
1027:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2080              		.loc 1 1027 3 is_stmt 1 view .LVU626
1027:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2081              		.loc 1 1027 27 is_stmt 0 view .LVU627
 2082 0022 0361     		str	r3, [r0, #16]
1028:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 2083              		.loc 1 1028 3 is_stmt 1 view .LVU628
ARM GAS  /tmp/ccrX756S.s 			page 82


1028:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 2084              		.loc 1 1028 27 is_stmt 0 view .LVU629
 2085 0024 0422     		movs	r2, #4
 2086 0026 4261     		str	r2, [r0, #20]
1029:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 2087              		.loc 1 1029 3 is_stmt 1 view .LVU630
1029:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 2088              		.loc 1 1029 31 is_stmt 0 view .LVU631
 2089 0028 0376     		strb	r3, [r0, #24]
1030:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 2090              		.loc 1 1030 3 is_stmt 1 view .LVU632
1030:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 2091              		.loc 1 1030 33 is_stmt 0 view .LVU633
 2092 002a 4376     		strb	r3, [r0, #25]
1031:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 2093              		.loc 1 1031 3 is_stmt 1 view .LVU634
1031:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 2094              		.loc 1 1031 30 is_stmt 0 view .LVU635
 2095 002c 0122     		movs	r2, #1
 2096 002e C261     		str	r2, [r0, #28]
1032:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2097              		.loc 1 1032 3 is_stmt 1 view .LVU636
1032:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2098              		.loc 1 1032 36 is_stmt 0 view .LVU637
 2099 0030 80F82030 		strb	r3, [r0, #32]
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2100              		.loc 1 1033 3 is_stmt 1 view .LVU638
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2101              		.loc 1 1033 31 is_stmt 0 view .LVU639
 2102 0034 8362     		str	r3, [r0, #40]
1034:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 2103              		.loc 1 1034 3 is_stmt 1 view .LVU640
1034:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 2104              		.loc 1 1034 35 is_stmt 0 view .LVU641
 2105 0036 C362     		str	r3, [r0, #44]
1035:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 2106              		.loc 1 1035 3 is_stmt 1 view .LVU642
1035:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 2107              		.loc 1 1035 36 is_stmt 0 view .LVU643
 2108 0038 80F83820 		strb	r2, [r0, #56]
1036:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 2109              		.loc 1 1036 3 is_stmt 1 view .LVU644
1036:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 2110              		.loc 1 1036 27 is_stmt 0 view .LVU645
 2111 003c 4363     		str	r3, [r0, #52]
1037:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2112              		.loc 1 1037 3 is_stmt 1 view .LVU646
1037:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2113              		.loc 1 1037 39 is_stmt 0 view .LVU647
 2114 003e 0363     		str	r3, [r0, #48]
1038:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 2115              		.loc 1 1038 3 is_stmt 1 view .LVU648
1038:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 2116              		.loc 1 1038 22 is_stmt 0 view .LVU649
 2117 0040 C363     		str	r3, [r0, #60]
1039:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 2118              		.loc 1 1039 3 is_stmt 1 view .LVU650
ARM GAS  /tmp/ccrX756S.s 			page 83


1039:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 2119              		.loc 1 1039 27 is_stmt 0 view .LVU651
 2120 0042 0364     		str	r3, [r0, #64]
1040:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 2121              		.loc 1 1040 3 is_stmt 1 view .LVU652
1040:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 2122              		.loc 1 1040 31 is_stmt 0 view .LVU653
 2123 0044 80F84430 		strb	r3, [r0, #68]
1041:Core/Src/main.c ****   {
 2124              		.loc 1 1041 3 is_stmt 1 view .LVU654
1041:Core/Src/main.c ****   {
 2125              		.loc 1 1041 7 is_stmt 0 view .LVU655
 2126 0048 FFF7FEFF 		bl	HAL_ADC_Init
 2127              	.LVL122:
1041:Core/Src/main.c ****   {
 2128              		.loc 1 1041 6 view .LVU656
 2129 004c A8B9     		cbnz	r0, .L99
1048:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2130              		.loc 1 1048 3 is_stmt 1 view .LVU657
1048:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2131              		.loc 1 1048 19 is_stmt 0 view .LVU658
 2132 004e 0F4B     		ldr	r3, .L101+8
 2133 0050 0193     		str	r3, [sp, #4]
1049:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 2134              		.loc 1 1049 3 is_stmt 1 view .LVU659
1049:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 2135              		.loc 1 1049 16 is_stmt 0 view .LVU660
 2136 0052 0623     		movs	r3, #6
 2137 0054 0293     		str	r3, [sp, #8]
1050:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2138              		.loc 1 1050 3 is_stmt 1 view .LVU661
1050:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2139              		.loc 1 1050 24 is_stmt 0 view .LVU662
 2140 0056 0023     		movs	r3, #0
 2141 0058 0393     		str	r3, [sp, #12]
1051:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2142              		.loc 1 1051 3 is_stmt 1 view .LVU663
1051:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2143              		.loc 1 1051 22 is_stmt 0 view .LVU664
 2144 005a 40F2FF72 		movw	r2, #2047
 2145 005e 0492     		str	r2, [sp, #16]
1052:Core/Src/main.c ****   sConfig.Offset = 0;
 2146              		.loc 1 1052 3 is_stmt 1 view .LVU665
1052:Core/Src/main.c ****   sConfig.Offset = 0;
 2147              		.loc 1 1052 24 is_stmt 0 view .LVU666
 2148 0060 0422     		movs	r2, #4
 2149 0062 0592     		str	r2, [sp, #20]
1053:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 2150              		.loc 1 1053 3 is_stmt 1 view .LVU667
1053:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 2151              		.loc 1 1053 18 is_stmt 0 view .LVU668
 2152 0064 0693     		str	r3, [sp, #24]
1054:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 2153              		.loc 1 1054 3 is_stmt 1 view .LVU669
1054:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 2154              		.loc 1 1054 22 is_stmt 0 view .LVU670
 2155 0066 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/ccrX756S.s 			page 84


1055:Core/Src/main.c ****   {
 2156              		.loc 1 1055 3 is_stmt 1 view .LVU671
1055:Core/Src/main.c ****   {
 2157              		.loc 1 1055 7 is_stmt 0 view .LVU672
 2158 0068 0DEB0201 		add	r1, sp, r2
 2159 006c 0548     		ldr	r0, .L101
 2160 006e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2161              	.LVL123:
1055:Core/Src/main.c ****   {
 2162              		.loc 1 1055 6 view .LVU673
 2163 0072 20B9     		cbnz	r0, .L100
1063:Core/Src/main.c **** 
 2164              		.loc 1 1063 1 view .LVU674
 2165 0074 0BB0     		add	sp, sp, #44
 2166              	.LCFI36:
 2167              		.cfi_remember_state
 2168              		.cfi_def_cfa_offset 4
 2169              		@ sp needed
 2170 0076 5DF804FB 		ldr	pc, [sp], #4
 2171              	.L99:
 2172              	.LCFI37:
 2173              		.cfi_restore_state
1043:Core/Src/main.c ****   }
 2174              		.loc 1 1043 5 is_stmt 1 view .LVU675
 2175 007a FFF7FEFF 		bl	Error_Handler
 2176              	.LVL124:
 2177              	.L100:
1057:Core/Src/main.c ****   }
 2178              		.loc 1 1057 5 view .LVU676
 2179 007e FFF7FEFF 		bl	Error_Handler
 2180              	.LVL125:
 2181              	.L102:
 2182 0082 00BF     		.align	2
 2183              	.L101:
 2184 0084 00000000 		.word	hadc3
 2185 0088 00600258 		.word	1476550656
 2186 008c 02003004 		.word	70254594
 2187              		.cfi_endproc
 2188              	.LFE365:
 2190              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2191              		.align	1
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2195              		.fpu fpv5-d16
 2197              	MX_SPI2_Init:
 2198              	.LFB371:
1274:Core/Src/main.c **** 
 2199              		.loc 1 1274 1 view -0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203 0000 08B5     		push	{r3, lr}
 2204              	.LCFI38:
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 3, -8
 2207              		.cfi_offset 14, -4
ARM GAS  /tmp/ccrX756S.s 			page 85


1284:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2208              		.loc 1 1284 3 view .LVU678
1284:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2209              		.loc 1 1284 18 is_stmt 0 view .LVU679
 2210 0002 1448     		ldr	r0, .L107
 2211 0004 144B     		ldr	r3, .L107+4
 2212 0006 0360     		str	r3, [r0]
1285:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2213              		.loc 1 1285 3 is_stmt 1 view .LVU680
1285:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2214              		.loc 1 1285 19 is_stmt 0 view .LVU681
 2215 0008 4FF48003 		mov	r3, #4194304
 2216 000c 4360     		str	r3, [r0, #4]
1286:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2217              		.loc 1 1286 3 is_stmt 1 view .LVU682
1286:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2218              		.loc 1 1286 24 is_stmt 0 view .LVU683
 2219 000e 0023     		movs	r3, #0
 2220 0010 8360     		str	r3, [r0, #8]
1287:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2221              		.loc 1 1287 3 is_stmt 1 view .LVU684
1287:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2222              		.loc 1 1287 23 is_stmt 0 view .LVU685
 2223 0012 0722     		movs	r2, #7
 2224 0014 C260     		str	r2, [r0, #12]
1288:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2225              		.loc 1 1288 3 is_stmt 1 view .LVU686
1288:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2226              		.loc 1 1288 26 is_stmt 0 view .LVU687
 2227 0016 0361     		str	r3, [r0, #16]
1289:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2228              		.loc 1 1289 3 is_stmt 1 view .LVU688
1289:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2229              		.loc 1 1289 23 is_stmt 0 view .LVU689
 2230 0018 4361     		str	r3, [r0, #20]
1290:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2231              		.loc 1 1290 3 is_stmt 1 view .LVU690
1290:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2232              		.loc 1 1290 18 is_stmt 0 view .LVU691
 2233 001a 4FF08062 		mov	r2, #67108864
 2234 001e 8261     		str	r2, [r0, #24]
1291:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2235              		.loc 1 1291 3 is_stmt 1 view .LVU692
1291:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2236              		.loc 1 1291 32 is_stmt 0 view .LVU693
 2237 0020 4FF00052 		mov	r2, #536870912
 2238 0024 C261     		str	r2, [r0, #28]
1292:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2239              		.loc 1 1292 3 is_stmt 1 view .LVU694
1292:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2240              		.loc 1 1292 23 is_stmt 0 view .LVU695
 2241 0026 0362     		str	r3, [r0, #32]
1293:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2242              		.loc 1 1293 3 is_stmt 1 view .LVU696
1293:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2243              		.loc 1 1293 21 is_stmt 0 view .LVU697
 2244 0028 4362     		str	r3, [r0, #36]
ARM GAS  /tmp/ccrX756S.s 			page 86


1294:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2245              		.loc 1 1294 3 is_stmt 1 view .LVU698
1294:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2246              		.loc 1 1294 29 is_stmt 0 view .LVU699
 2247 002a 8362     		str	r3, [r0, #40]
1295:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2248              		.loc 1 1295 3 is_stmt 1 view .LVU700
1295:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2249              		.loc 1 1295 28 is_stmt 0 view .LVU701
 2250 002c C362     		str	r3, [r0, #44]
1296:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2251              		.loc 1 1296 3 is_stmt 1 view .LVU702
1296:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2252              		.loc 1 1296 23 is_stmt 0 view .LVU703
 2253 002e 4FF08042 		mov	r2, #1073741824
 2254 0032 4263     		str	r2, [r0, #52]
1297:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2255              		.loc 1 1297 3 is_stmt 1 view .LVU704
1297:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2256              		.loc 1 1297 26 is_stmt 0 view .LVU705
 2257 0034 8363     		str	r3, [r0, #56]
1298:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2258              		.loc 1 1298 3 is_stmt 1 view .LVU706
1298:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2259              		.loc 1 1298 28 is_stmt 0 view .LVU707
 2260 0036 C363     		str	r3, [r0, #60]
1299:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2261              		.loc 1 1299 3 is_stmt 1 view .LVU708
1299:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2262              		.loc 1 1299 41 is_stmt 0 view .LVU709
 2263 0038 0364     		str	r3, [r0, #64]
1300:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2264              		.loc 1 1300 3 is_stmt 1 view .LVU710
1300:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2265              		.loc 1 1300 41 is_stmt 0 view .LVU711
 2266 003a 4364     		str	r3, [r0, #68]
1301:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2267              		.loc 1 1301 3 is_stmt 1 view .LVU712
1301:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2268              		.loc 1 1301 31 is_stmt 0 view .LVU713
 2269 003c 8364     		str	r3, [r0, #72]
1302:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2270              		.loc 1 1302 3 is_stmt 1 view .LVU714
1302:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2271              		.loc 1 1302 38 is_stmt 0 view .LVU715
 2272 003e C364     		str	r3, [r0, #76]
1303:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2273              		.loc 1 1303 3 is_stmt 1 view .LVU716
1303:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2274              		.loc 1 1303 37 is_stmt 0 view .LVU717
 2275 0040 0365     		str	r3, [r0, #80]
1304:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2276              		.loc 1 1304 3 is_stmt 1 view .LVU718
1304:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2277              		.loc 1 1304 32 is_stmt 0 view .LVU719
 2278 0042 4365     		str	r3, [r0, #84]
1305:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
ARM GAS  /tmp/ccrX756S.s 			page 87


 2279              		.loc 1 1305 3 is_stmt 1 view .LVU720
1305:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2280              		.loc 1 1305 21 is_stmt 0 view .LVU721
 2281 0044 8365     		str	r3, [r0, #88]
1306:Core/Src/main.c ****   {
 2282              		.loc 1 1306 3 is_stmt 1 view .LVU722
1306:Core/Src/main.c ****   {
 2283              		.loc 1 1306 7 is_stmt 0 view .LVU723
 2284 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2285              	.LVL126:
1306:Core/Src/main.c ****   {
 2286              		.loc 1 1306 6 view .LVU724
 2287 004a 00B9     		cbnz	r0, .L106
1314:Core/Src/main.c **** 
 2288              		.loc 1 1314 1 view .LVU725
 2289 004c 08BD     		pop	{r3, pc}
 2290              	.L106:
1308:Core/Src/main.c ****   }
 2291              		.loc 1 1308 5 is_stmt 1 view .LVU726
 2292 004e FFF7FEFF 		bl	Error_Handler
 2293              	.LVL127:
 2294              	.L108:
 2295 0052 00BF     		.align	2
 2296              	.L107:
 2297 0054 00000000 		.word	hspi2
 2298 0058 00380040 		.word	1073756160
 2299              		.cfi_endproc
 2300              	.LFE371:
 2302              		.section	.text.MX_I2C2_Init,"ax",%progbits
 2303              		.align	1
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2307              		.fpu fpv5-d16
 2309              	MX_I2C2_Init:
 2310              	.LFB367:
1124:Core/Src/main.c **** 
 2311              		.loc 1 1124 1 view -0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 0
 2314              		@ frame_needed = 0, uses_anonymous_args = 0
 2315 0000 08B5     		push	{r3, lr}
 2316              	.LCFI39:
 2317              		.cfi_def_cfa_offset 8
 2318              		.cfi_offset 3, -8
 2319              		.cfi_offset 14, -4
1133:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2320              		.loc 1 1133 3 view .LVU728
1133:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2321              		.loc 1 1133 18 is_stmt 0 view .LVU729
 2322 0002 1148     		ldr	r0, .L117
 2323 0004 114B     		ldr	r3, .L117+4
 2324 0006 0360     		str	r3, [r0]
1134:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2325              		.loc 1 1134 3 is_stmt 1 view .LVU730
1134:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2326              		.loc 1 1134 21 is_stmt 0 view .LVU731
ARM GAS  /tmp/ccrX756S.s 			page 88


 2327 0008 114B     		ldr	r3, .L117+8
 2328 000a 4360     		str	r3, [r0, #4]
1135:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2329              		.loc 1 1135 3 is_stmt 1 view .LVU732
1135:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2330              		.loc 1 1135 26 is_stmt 0 view .LVU733
 2331 000c 0023     		movs	r3, #0
 2332 000e 8360     		str	r3, [r0, #8]
1136:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2333              		.loc 1 1136 3 is_stmt 1 view .LVU734
1136:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2334              		.loc 1 1136 29 is_stmt 0 view .LVU735
 2335 0010 0122     		movs	r2, #1
 2336 0012 C260     		str	r2, [r0, #12]
1137:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2337              		.loc 1 1137 3 is_stmt 1 view .LVU736
1137:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2338              		.loc 1 1137 30 is_stmt 0 view .LVU737
 2339 0014 0361     		str	r3, [r0, #16]
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2340              		.loc 1 1138 3 is_stmt 1 view .LVU738
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2341              		.loc 1 1138 26 is_stmt 0 view .LVU739
 2342 0016 4361     		str	r3, [r0, #20]
1139:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2343              		.loc 1 1139 3 is_stmt 1 view .LVU740
1139:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2344              		.loc 1 1139 31 is_stmt 0 view .LVU741
 2345 0018 8361     		str	r3, [r0, #24]
1140:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2346              		.loc 1 1140 3 is_stmt 1 view .LVU742
1140:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2347              		.loc 1 1140 30 is_stmt 0 view .LVU743
 2348 001a C361     		str	r3, [r0, #28]
1141:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2349              		.loc 1 1141 3 is_stmt 1 view .LVU744
1141:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2350              		.loc 1 1141 28 is_stmt 0 view .LVU745
 2351 001c 0362     		str	r3, [r0, #32]
1142:Core/Src/main.c ****   {
 2352              		.loc 1 1142 3 is_stmt 1 view .LVU746
1142:Core/Src/main.c ****   {
 2353              		.loc 1 1142 7 is_stmt 0 view .LVU747
 2354 001e FFF7FEFF 		bl	HAL_I2C_Init
 2355              	.LVL128:
1142:Core/Src/main.c ****   {
 2356              		.loc 1 1142 6 view .LVU748
 2357 0022 50B9     		cbnz	r0, .L114
1149:Core/Src/main.c ****   {
 2358              		.loc 1 1149 3 is_stmt 1 view .LVU749
1149:Core/Src/main.c ****   {
 2359              		.loc 1 1149 7 is_stmt 0 view .LVU750
 2360 0024 0021     		movs	r1, #0
 2361 0026 0848     		ldr	r0, .L117
 2362 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 2363              	.LVL129:
1149:Core/Src/main.c ****   {
ARM GAS  /tmp/ccrX756S.s 			page 89


 2364              		.loc 1 1149 6 view .LVU751
 2365 002c 38B9     		cbnz	r0, .L115
1156:Core/Src/main.c ****   {
 2366              		.loc 1 1156 3 is_stmt 1 view .LVU752
1156:Core/Src/main.c ****   {
 2367              		.loc 1 1156 7 is_stmt 0 view .LVU753
 2368 002e 0021     		movs	r1, #0
 2369 0030 0548     		ldr	r0, .L117
 2370 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 2371              	.LVL130:
1156:Core/Src/main.c ****   {
 2372              		.loc 1 1156 6 view .LVU754
 2373 0036 20B9     		cbnz	r0, .L116
1164:Core/Src/main.c **** 
 2374              		.loc 1 1164 1 view .LVU755
 2375 0038 08BD     		pop	{r3, pc}
 2376              	.L114:
1144:Core/Src/main.c ****   }
 2377              		.loc 1 1144 5 is_stmt 1 view .LVU756
 2378 003a FFF7FEFF 		bl	Error_Handler
 2379              	.LVL131:
 2380              	.L115:
1151:Core/Src/main.c ****   }
 2381              		.loc 1 1151 5 view .LVU757
 2382 003e FFF7FEFF 		bl	Error_Handler
 2383              	.LVL132:
 2384              	.L116:
1158:Core/Src/main.c ****   }
 2385              		.loc 1 1158 5 view .LVU758
 2386 0042 FFF7FEFF 		bl	Error_Handler
 2387              	.LVL133:
 2388              	.L118:
 2389 0046 00BF     		.align	2
 2390              	.L117:
 2391 0048 00000000 		.word	hi2c2
 2392 004c 00580040 		.word	1073764352
 2393 0050 5D3E3020 		.word	540032605
 2394              		.cfi_endproc
 2395              	.LFE367:
 2397              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2398              		.align	1
 2399              		.syntax unified
 2400              		.thumb
 2401              		.thumb_func
 2402              		.fpu fpv5-d16
 2404              	MX_TIM2_Init:
 2405              	.LFB373:
1370:Core/Src/main.c **** 
 2406              		.loc 1 1370 1 view -0
 2407              		.cfi_startproc
 2408              		@ args = 0, pretend = 0, frame = 40
 2409              		@ frame_needed = 0, uses_anonymous_args = 0
 2410 0000 00B5     		push	{lr}
 2411              	.LCFI40:
 2412              		.cfi_def_cfa_offset 4
 2413              		.cfi_offset 14, -4
 2414 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccrX756S.s 			page 90


 2415              	.LCFI41:
 2416              		.cfi_def_cfa_offset 48
1376:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2417              		.loc 1 1376 3 view .LVU760
1376:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2418              		.loc 1 1376 27 is_stmt 0 view .LVU761
 2419 0004 0023     		movs	r3, #0
 2420 0006 0793     		str	r3, [sp, #28]
 2421 0008 0893     		str	r3, [sp, #32]
 2422 000a 0993     		str	r3, [sp, #36]
1377:Core/Src/main.c **** 
 2423              		.loc 1 1377 3 is_stmt 1 view .LVU762
1377:Core/Src/main.c **** 
 2424              		.loc 1 1377 22 is_stmt 0 view .LVU763
 2425 000c 0093     		str	r3, [sp]
 2426 000e 0193     		str	r3, [sp, #4]
 2427 0010 0293     		str	r3, [sp, #8]
 2428 0012 0393     		str	r3, [sp, #12]
 2429 0014 0493     		str	r3, [sp, #16]
 2430 0016 0593     		str	r3, [sp, #20]
 2431 0018 0693     		str	r3, [sp, #24]
1382:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2432              		.loc 1 1382 3 is_stmt 1 view .LVU764
1382:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2433              		.loc 1 1382 18 is_stmt 0 view .LVU765
 2434 001a 1648     		ldr	r0, .L127
 2435 001c 4FF08042 		mov	r2, #1073741824
 2436 0020 0260     		str	r2, [r0]
1383:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2437              		.loc 1 1383 3 is_stmt 1 view .LVU766
1383:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2438              		.loc 1 1383 24 is_stmt 0 view .LVU767
 2439 0022 4360     		str	r3, [r0, #4]
1384:Core/Src/main.c ****   htim2.Init.Period = 90;
 2440              		.loc 1 1384 3 is_stmt 1 view .LVU768
1384:Core/Src/main.c ****   htim2.Init.Period = 90;
 2441              		.loc 1 1384 26 is_stmt 0 view .LVU769
 2442 0024 8360     		str	r3, [r0, #8]
1385:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2443              		.loc 1 1385 3 is_stmt 1 view .LVU770
1385:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2444              		.loc 1 1385 21 is_stmt 0 view .LVU771
 2445 0026 5A22     		movs	r2, #90
 2446 0028 C260     		str	r2, [r0, #12]
1386:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2447              		.loc 1 1386 3 is_stmt 1 view .LVU772
1386:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2448              		.loc 1 1386 28 is_stmt 0 view .LVU773
 2449 002a 0361     		str	r3, [r0, #16]
1387:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2450              		.loc 1 1387 3 is_stmt 1 view .LVU774
1387:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2451              		.loc 1 1387 32 is_stmt 0 view .LVU775
 2452 002c 8361     		str	r3, [r0, #24]
1388:Core/Src/main.c ****   {
 2453              		.loc 1 1388 3 is_stmt 1 view .LVU776
1388:Core/Src/main.c ****   {
ARM GAS  /tmp/ccrX756S.s 			page 91


 2454              		.loc 1 1388 7 is_stmt 0 view .LVU777
 2455 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2456              	.LVL134:
1388:Core/Src/main.c ****   {
 2457              		.loc 1 1388 6 view .LVU778
 2458 0032 C8B9     		cbnz	r0, .L124
1392:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2459              		.loc 1 1392 3 is_stmt 1 view .LVU779
1392:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2460              		.loc 1 1392 37 is_stmt 0 view .LVU780
 2461 0034 0023     		movs	r3, #0
 2462 0036 0793     		str	r3, [sp, #28]
1393:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2463              		.loc 1 1393 3 is_stmt 1 view .LVU781
1393:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2464              		.loc 1 1393 33 is_stmt 0 view .LVU782
 2465 0038 0993     		str	r3, [sp, #36]
1394:Core/Src/main.c ****   {
 2466              		.loc 1 1394 3 is_stmt 1 view .LVU783
1394:Core/Src/main.c ****   {
 2467              		.loc 1 1394 7 is_stmt 0 view .LVU784
 2468 003a 07A9     		add	r1, sp, #28
 2469 003c 0D48     		ldr	r0, .L127
 2470 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2471              	.LVL135:
1394:Core/Src/main.c ****   {
 2472              		.loc 1 1394 6 view .LVU785
 2473 0042 98B9     		cbnz	r0, .L125
1398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2474              		.loc 1 1398 3 is_stmt 1 view .LVU786
1398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2475              		.loc 1 1398 20 is_stmt 0 view .LVU787
 2476 0044 6023     		movs	r3, #96
 2477 0046 0093     		str	r3, [sp]
1399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2478              		.loc 1 1399 3 is_stmt 1 view .LVU788
1399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2479              		.loc 1 1399 19 is_stmt 0 view .LVU789
 2480 0048 0023     		movs	r3, #0
 2481 004a 0193     		str	r3, [sp, #4]
1400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2482              		.loc 1 1400 3 is_stmt 1 view .LVU790
1400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2483              		.loc 1 1400 24 is_stmt 0 view .LVU791
 2484 004c 0293     		str	r3, [sp, #8]
1401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2485              		.loc 1 1401 3 is_stmt 1 view .LVU792
1401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2486              		.loc 1 1401 24 is_stmt 0 view .LVU793
 2487 004e 0493     		str	r3, [sp, #16]
1402:Core/Src/main.c ****   {
 2488              		.loc 1 1402 3 is_stmt 1 view .LVU794
1402:Core/Src/main.c ****   {
 2489              		.loc 1 1402 7 is_stmt 0 view .LVU795
 2490 0050 0822     		movs	r2, #8
 2491 0052 6946     		mov	r1, sp
 2492 0054 0748     		ldr	r0, .L127
ARM GAS  /tmp/ccrX756S.s 			page 92


 2493 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2494              	.LVL136:
1402:Core/Src/main.c ****   {
 2495              		.loc 1 1402 6 view .LVU796
 2496 005a 48B9     		cbnz	r0, .L126
1409:Core/Src/main.c **** 
 2497              		.loc 1 1409 3 is_stmt 1 view .LVU797
 2498 005c 0548     		ldr	r0, .L127
 2499 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2500              	.LVL137:
1411:Core/Src/main.c **** 
 2501              		.loc 1 1411 1 is_stmt 0 view .LVU798
 2502 0062 0BB0     		add	sp, sp, #44
 2503              	.LCFI42:
 2504              		.cfi_remember_state
 2505              		.cfi_def_cfa_offset 4
 2506              		@ sp needed
 2507 0064 5DF804FB 		ldr	pc, [sp], #4
 2508              	.L124:
 2509              	.LCFI43:
 2510              		.cfi_restore_state
1390:Core/Src/main.c ****   }
 2511              		.loc 1 1390 5 is_stmt 1 view .LVU799
 2512 0068 FFF7FEFF 		bl	Error_Handler
 2513              	.LVL138:
 2514              	.L125:
1396:Core/Src/main.c ****   }
 2515              		.loc 1 1396 5 view .LVU800
 2516 006c FFF7FEFF 		bl	Error_Handler
 2517              	.LVL139:
 2518              	.L126:
1404:Core/Src/main.c ****   }
 2519              		.loc 1 1404 5 view .LVU801
 2520 0070 FFF7FEFF 		bl	Error_Handler
 2521              	.LVL140:
 2522              	.L128:
 2523              		.align	2
 2524              	.L127:
 2525 0074 00000000 		.word	htim2
 2526              		.cfi_endproc
 2527              	.LFE373:
 2529              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2530              		.align	1
 2531              		.syntax unified
 2532              		.thumb
 2533              		.thumb_func
 2534              		.fpu fpv5-d16
 2536              	MX_TIM5_Init:
 2537              	.LFB376:
1533:Core/Src/main.c **** 
 2538              		.loc 1 1533 1 view -0
 2539              		.cfi_startproc
 2540              		@ args = 0, pretend = 0, frame = 40
 2541              		@ frame_needed = 0, uses_anonymous_args = 0
 2542 0000 00B5     		push	{lr}
 2543              	.LCFI44:
 2544              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccrX756S.s 			page 93


 2545              		.cfi_offset 14, -4
 2546 0002 8BB0     		sub	sp, sp, #44
 2547              	.LCFI45:
 2548              		.cfi_def_cfa_offset 48
1539:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2549              		.loc 1 1539 3 view .LVU803
1539:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2550              		.loc 1 1539 27 is_stmt 0 view .LVU804
 2551 0004 0023     		movs	r3, #0
 2552 0006 0793     		str	r3, [sp, #28]
 2553 0008 0893     		str	r3, [sp, #32]
 2554 000a 0993     		str	r3, [sp, #36]
1540:Core/Src/main.c **** 
 2555              		.loc 1 1540 3 is_stmt 1 view .LVU805
1540:Core/Src/main.c **** 
 2556              		.loc 1 1540 22 is_stmt 0 view .LVU806
 2557 000c 0093     		str	r3, [sp]
 2558 000e 0193     		str	r3, [sp, #4]
 2559 0010 0293     		str	r3, [sp, #8]
 2560 0012 0393     		str	r3, [sp, #12]
 2561 0014 0493     		str	r3, [sp, #16]
 2562 0016 0593     		str	r3, [sp, #20]
 2563 0018 0693     		str	r3, [sp, #24]
1545:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2564              		.loc 1 1545 3 is_stmt 1 view .LVU807
1545:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2565              		.loc 1 1545 18 is_stmt 0 view .LVU808
 2566 001a 1648     		ldr	r0, .L137
 2567 001c 164A     		ldr	r2, .L137+4
 2568 001e 0260     		str	r2, [r0]
1546:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2569              		.loc 1 1546 3 is_stmt 1 view .LVU809
1546:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2570              		.loc 1 1546 24 is_stmt 0 view .LVU810
 2571 0020 4360     		str	r3, [r0, #4]
1547:Core/Src/main.c ****   htim5.Init.Period = 90;
 2572              		.loc 1 1547 3 is_stmt 1 view .LVU811
1547:Core/Src/main.c ****   htim5.Init.Period = 90;
 2573              		.loc 1 1547 26 is_stmt 0 view .LVU812
 2574 0022 8360     		str	r3, [r0, #8]
1548:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2575              		.loc 1 1548 3 is_stmt 1 view .LVU813
1548:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2576              		.loc 1 1548 21 is_stmt 0 view .LVU814
 2577 0024 5A22     		movs	r2, #90
 2578 0026 C260     		str	r2, [r0, #12]
1549:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2579              		.loc 1 1549 3 is_stmt 1 view .LVU815
1549:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2580              		.loc 1 1549 28 is_stmt 0 view .LVU816
 2581 0028 0361     		str	r3, [r0, #16]
1550:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2582              		.loc 1 1550 3 is_stmt 1 view .LVU817
1550:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2583              		.loc 1 1550 32 is_stmt 0 view .LVU818
 2584 002a 8361     		str	r3, [r0, #24]
1551:Core/Src/main.c ****   {
ARM GAS  /tmp/ccrX756S.s 			page 94


 2585              		.loc 1 1551 3 is_stmt 1 view .LVU819
1551:Core/Src/main.c ****   {
 2586              		.loc 1 1551 7 is_stmt 0 view .LVU820
 2587 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2588              	.LVL141:
1551:Core/Src/main.c ****   {
 2589              		.loc 1 1551 6 view .LVU821
 2590 0030 C8B9     		cbnz	r0, .L134
1555:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2591              		.loc 1 1555 3 is_stmt 1 view .LVU822
1555:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2592              		.loc 1 1555 37 is_stmt 0 view .LVU823
 2593 0032 0023     		movs	r3, #0
 2594 0034 0793     		str	r3, [sp, #28]
1556:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2595              		.loc 1 1556 3 is_stmt 1 view .LVU824
1556:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2596              		.loc 1 1556 33 is_stmt 0 view .LVU825
 2597 0036 0993     		str	r3, [sp, #36]
1557:Core/Src/main.c ****   {
 2598              		.loc 1 1557 3 is_stmt 1 view .LVU826
1557:Core/Src/main.c ****   {
 2599              		.loc 1 1557 7 is_stmt 0 view .LVU827
 2600 0038 07A9     		add	r1, sp, #28
 2601 003a 0E48     		ldr	r0, .L137
 2602 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2603              	.LVL142:
1557:Core/Src/main.c ****   {
 2604              		.loc 1 1557 6 view .LVU828
 2605 0040 98B9     		cbnz	r0, .L135
1561:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2606              		.loc 1 1561 3 is_stmt 1 view .LVU829
1561:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2607              		.loc 1 1561 20 is_stmt 0 view .LVU830
 2608 0042 6023     		movs	r3, #96
 2609 0044 0093     		str	r3, [sp]
1562:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2610              		.loc 1 1562 3 is_stmt 1 view .LVU831
1562:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2611              		.loc 1 1562 19 is_stmt 0 view .LVU832
 2612 0046 0023     		movs	r3, #0
 2613 0048 0193     		str	r3, [sp, #4]
1563:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2614              		.loc 1 1563 3 is_stmt 1 view .LVU833
1563:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2615              		.loc 1 1563 24 is_stmt 0 view .LVU834
 2616 004a 0293     		str	r3, [sp, #8]
1564:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2617              		.loc 1 1564 3 is_stmt 1 view .LVU835
1564:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2618              		.loc 1 1564 24 is_stmt 0 view .LVU836
 2619 004c 0493     		str	r3, [sp, #16]
1565:Core/Src/main.c ****   {
 2620              		.loc 1 1565 3 is_stmt 1 view .LVU837
1565:Core/Src/main.c ****   {
 2621              		.loc 1 1565 7 is_stmt 0 view .LVU838
 2622 004e 0C22     		movs	r2, #12
ARM GAS  /tmp/ccrX756S.s 			page 95


 2623 0050 6946     		mov	r1, sp
 2624 0052 0848     		ldr	r0, .L137
 2625 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2626              	.LVL143:
1565:Core/Src/main.c ****   {
 2627              		.loc 1 1565 6 view .LVU839
 2628 0058 48B9     		cbnz	r0, .L136
1572:Core/Src/main.c **** 
 2629              		.loc 1 1572 3 is_stmt 1 view .LVU840
 2630 005a 0648     		ldr	r0, .L137
 2631 005c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2632              	.LVL144:
1574:Core/Src/main.c **** 
 2633              		.loc 1 1574 1 is_stmt 0 view .LVU841
 2634 0060 0BB0     		add	sp, sp, #44
 2635              	.LCFI46:
 2636              		.cfi_remember_state
 2637              		.cfi_def_cfa_offset 4
 2638              		@ sp needed
 2639 0062 5DF804FB 		ldr	pc, [sp], #4
 2640              	.L134:
 2641              	.LCFI47:
 2642              		.cfi_restore_state
1553:Core/Src/main.c ****   }
 2643              		.loc 1 1553 5 is_stmt 1 view .LVU842
 2644 0066 FFF7FEFF 		bl	Error_Handler
 2645              	.LVL145:
 2646              	.L135:
1559:Core/Src/main.c ****   }
 2647              		.loc 1 1559 5 view .LVU843
 2648 006a FFF7FEFF 		bl	Error_Handler
 2649              	.LVL146:
 2650              	.L136:
1567:Core/Src/main.c ****   }
 2651              		.loc 1 1567 5 view .LVU844
 2652 006e FFF7FEFF 		bl	Error_Handler
 2653              	.LVL147:
 2654              	.L138:
 2655 0072 00BF     		.align	2
 2656              	.L137:
 2657 0074 00000000 		.word	htim5
 2658 0078 000C0040 		.word	1073744896
 2659              		.cfi_endproc
 2660              	.LFE376:
 2662              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2663              		.align	1
 2664              		.syntax unified
 2665              		.thumb
 2666              		.thumb_func
 2667              		.fpu fpv5-d16
 2669              	MX_TIM3_Init:
 2670              	.LFB374:
1419:Core/Src/main.c **** 
 2671              		.loc 1 1419 1 view -0
 2672              		.cfi_startproc
 2673              		@ args = 0, pretend = 0, frame = 40
 2674              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccrX756S.s 			page 96


 2675 0000 00B5     		push	{lr}
 2676              	.LCFI48:
 2677              		.cfi_def_cfa_offset 4
 2678              		.cfi_offset 14, -4
 2679 0002 8BB0     		sub	sp, sp, #44
 2680              	.LCFI49:
 2681              		.cfi_def_cfa_offset 48
1425:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2682              		.loc 1 1425 3 view .LVU846
1425:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2683              		.loc 1 1425 27 is_stmt 0 view .LVU847
 2684 0004 0023     		movs	r3, #0
 2685 0006 0793     		str	r3, [sp, #28]
 2686 0008 0893     		str	r3, [sp, #32]
 2687 000a 0993     		str	r3, [sp, #36]
1426:Core/Src/main.c **** 
 2688              		.loc 1 1426 3 is_stmt 1 view .LVU848
1426:Core/Src/main.c **** 
 2689              		.loc 1 1426 22 is_stmt 0 view .LVU849
 2690 000c 0093     		str	r3, [sp]
 2691 000e 0193     		str	r3, [sp, #4]
 2692 0010 0293     		str	r3, [sp, #8]
 2693 0012 0393     		str	r3, [sp, #12]
 2694 0014 0493     		str	r3, [sp, #16]
 2695 0016 0593     		str	r3, [sp, #20]
 2696 0018 0693     		str	r3, [sp, #24]
1431:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2697              		.loc 1 1431 3 is_stmt 1 view .LVU850
1431:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2698              		.loc 1 1431 18 is_stmt 0 view .LVU851
 2699 001a 1948     		ldr	r0, .L149
 2700 001c 194A     		ldr	r2, .L149+4
 2701 001e 0260     		str	r2, [r0]
1432:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2702              		.loc 1 1432 3 is_stmt 1 view .LVU852
1432:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2703              		.loc 1 1432 24 is_stmt 0 view .LVU853
 2704 0020 4360     		str	r3, [r0, #4]
1433:Core/Src/main.c ****   htim3.Init.Period = 90;
 2705              		.loc 1 1433 3 is_stmt 1 view .LVU854
1433:Core/Src/main.c ****   htim3.Init.Period = 90;
 2706              		.loc 1 1433 26 is_stmt 0 view .LVU855
 2707 0022 8360     		str	r3, [r0, #8]
1434:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2708              		.loc 1 1434 3 is_stmt 1 view .LVU856
1434:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2709              		.loc 1 1434 21 is_stmt 0 view .LVU857
 2710 0024 5A22     		movs	r2, #90
 2711 0026 C260     		str	r2, [r0, #12]
1435:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2712              		.loc 1 1435 3 is_stmt 1 view .LVU858
1435:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2713              		.loc 1 1435 28 is_stmt 0 view .LVU859
 2714 0028 0361     		str	r3, [r0, #16]
1436:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 2715              		.loc 1 1436 3 is_stmt 1 view .LVU860
1436:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
ARM GAS  /tmp/ccrX756S.s 			page 97


 2716              		.loc 1 1436 32 is_stmt 0 view .LVU861
 2717 002a 8361     		str	r3, [r0, #24]
1437:Core/Src/main.c ****   {
 2718              		.loc 1 1437 3 is_stmt 1 view .LVU862
1437:Core/Src/main.c ****   {
 2719              		.loc 1 1437 7 is_stmt 0 view .LVU863
 2720 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2721              	.LVL148:
1437:Core/Src/main.c ****   {
 2722              		.loc 1 1437 6 view .LVU864
 2723 0030 F0B9     		cbnz	r0, .L145
1441:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2724              		.loc 1 1441 3 is_stmt 1 view .LVU865
1441:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2725              		.loc 1 1441 37 is_stmt 0 view .LVU866
 2726 0032 0023     		movs	r3, #0
 2727 0034 0793     		str	r3, [sp, #28]
1442:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2728              		.loc 1 1442 3 is_stmt 1 view .LVU867
1442:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2729              		.loc 1 1442 33 is_stmt 0 view .LVU868
 2730 0036 0993     		str	r3, [sp, #36]
1443:Core/Src/main.c ****   {
 2731              		.loc 1 1443 3 is_stmt 1 view .LVU869
1443:Core/Src/main.c ****   {
 2732              		.loc 1 1443 7 is_stmt 0 view .LVU870
 2733 0038 07A9     		add	r1, sp, #28
 2734 003a 1148     		ldr	r0, .L149
 2735 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2736              	.LVL149:
1443:Core/Src/main.c ****   {
 2737              		.loc 1 1443 6 view .LVU871
 2738 0040 C0B9     		cbnz	r0, .L146
1447:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2739              		.loc 1 1447 3 is_stmt 1 view .LVU872
1447:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2740              		.loc 1 1447 20 is_stmt 0 view .LVU873
 2741 0042 6023     		movs	r3, #96
 2742 0044 0093     		str	r3, [sp]
1448:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2743              		.loc 1 1448 3 is_stmt 1 view .LVU874
1448:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2744              		.loc 1 1448 19 is_stmt 0 view .LVU875
 2745 0046 0022     		movs	r2, #0
 2746 0048 0192     		str	r2, [sp, #4]
1449:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2747              		.loc 1 1449 3 is_stmt 1 view .LVU876
1449:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2748              		.loc 1 1449 24 is_stmt 0 view .LVU877
 2749 004a 0292     		str	r2, [sp, #8]
1450:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2750              		.loc 1 1450 3 is_stmt 1 view .LVU878
1450:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2751              		.loc 1 1450 24 is_stmt 0 view .LVU879
 2752 004c 0492     		str	r2, [sp, #16]
1451:Core/Src/main.c ****   {
 2753              		.loc 1 1451 3 is_stmt 1 view .LVU880
ARM GAS  /tmp/ccrX756S.s 			page 98


1451:Core/Src/main.c ****   {
 2754              		.loc 1 1451 7 is_stmt 0 view .LVU881
 2755 004e 6946     		mov	r1, sp
 2756 0050 0B48     		ldr	r0, .L149
 2757 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2758              	.LVL150:
1451:Core/Src/main.c ****   {
 2759              		.loc 1 1451 6 view .LVU882
 2760 0056 78B9     		cbnz	r0, .L147
1455:Core/Src/main.c ****   {
 2761              		.loc 1 1455 3 is_stmt 1 view .LVU883
1455:Core/Src/main.c ****   {
 2762              		.loc 1 1455 7 is_stmt 0 view .LVU884
 2763 0058 0422     		movs	r2, #4
 2764 005a 6946     		mov	r1, sp
 2765 005c 0848     		ldr	r0, .L149
 2766 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2767              	.LVL151:
1455:Core/Src/main.c ****   {
 2768              		.loc 1 1455 6 view .LVU885
 2769 0062 58B9     		cbnz	r0, .L148
1462:Core/Src/main.c **** 
 2770              		.loc 1 1462 3 is_stmt 1 view .LVU886
 2771 0064 0648     		ldr	r0, .L149
 2772 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2773              	.LVL152:
1464:Core/Src/main.c **** 
 2774              		.loc 1 1464 1 is_stmt 0 view .LVU887
 2775 006a 0BB0     		add	sp, sp, #44
 2776              	.LCFI50:
 2777              		.cfi_remember_state
 2778              		.cfi_def_cfa_offset 4
 2779              		@ sp needed
 2780 006c 5DF804FB 		ldr	pc, [sp], #4
 2781              	.L145:
 2782              	.LCFI51:
 2783              		.cfi_restore_state
1439:Core/Src/main.c ****   }
 2784              		.loc 1 1439 5 is_stmt 1 view .LVU888
 2785 0070 FFF7FEFF 		bl	Error_Handler
 2786              	.LVL153:
 2787              	.L146:
1445:Core/Src/main.c ****   }
 2788              		.loc 1 1445 5 view .LVU889
 2789 0074 FFF7FEFF 		bl	Error_Handler
 2790              	.LVL154:
 2791              	.L147:
1453:Core/Src/main.c ****   }
 2792              		.loc 1 1453 5 view .LVU890
 2793 0078 FFF7FEFF 		bl	Error_Handler
 2794              	.LVL155:
 2795              	.L148:
1457:Core/Src/main.c ****   }
 2796              		.loc 1 1457 5 view .LVU891
 2797 007c FFF7FEFF 		bl	Error_Handler
 2798              	.LVL156:
 2799              	.L150:
ARM GAS  /tmp/ccrX756S.s 			page 99


 2800              		.align	2
 2801              	.L149:
 2802 0080 00000000 		.word	htim3
 2803 0084 00040040 		.word	1073742848
 2804              		.cfi_endproc
 2805              	.LFE374:
 2807              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2808              		.align	1
 2809              		.syntax unified
 2810              		.thumb
 2811              		.thumb_func
 2812              		.fpu fpv5-d16
 2814              	MX_SPI1_Init:
 2815              	.LFB370:
1226:Core/Src/main.c **** 
 2816              		.loc 1 1226 1 view -0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 0
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 2820 0000 08B5     		push	{r3, lr}
 2821              	.LCFI52:
 2822              		.cfi_def_cfa_offset 8
 2823              		.cfi_offset 3, -8
 2824              		.cfi_offset 14, -4
1236:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2825              		.loc 1 1236 3 view .LVU893
1236:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2826              		.loc 1 1236 18 is_stmt 0 view .LVU894
 2827 0002 1448     		ldr	r0, .L155
 2828 0004 144B     		ldr	r3, .L155+4
 2829 0006 0360     		str	r3, [r0]
1237:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2830              		.loc 1 1237 3 is_stmt 1 view .LVU895
1237:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2831              		.loc 1 1237 19 is_stmt 0 view .LVU896
 2832 0008 4FF48003 		mov	r3, #4194304
 2833 000c 4360     		str	r3, [r0, #4]
1238:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2834              		.loc 1 1238 3 is_stmt 1 view .LVU897
1238:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2835              		.loc 1 1238 24 is_stmt 0 view .LVU898
 2836 000e 0023     		movs	r3, #0
 2837 0010 8360     		str	r3, [r0, #8]
1239:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2838              		.loc 1 1239 3 is_stmt 1 view .LVU899
1239:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2839              		.loc 1 1239 23 is_stmt 0 view .LVU900
 2840 0012 0722     		movs	r2, #7
 2841 0014 C260     		str	r2, [r0, #12]
1240:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2842              		.loc 1 1240 3 is_stmt 1 view .LVU901
1240:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2843              		.loc 1 1240 26 is_stmt 0 view .LVU902
 2844 0016 0361     		str	r3, [r0, #16]
1241:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2845              		.loc 1 1241 3 is_stmt 1 view .LVU903
1241:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
ARM GAS  /tmp/ccrX756S.s 			page 100


 2846              		.loc 1 1241 23 is_stmt 0 view .LVU904
 2847 0018 4361     		str	r3, [r0, #20]
1242:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2848              		.loc 1 1242 3 is_stmt 1 view .LVU905
1242:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2849              		.loc 1 1242 18 is_stmt 0 view .LVU906
 2850 001a 4FF08062 		mov	r2, #67108864
 2851 001e 8261     		str	r2, [r0, #24]
1243:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2852              		.loc 1 1243 3 is_stmt 1 view .LVU907
1243:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2853              		.loc 1 1243 32 is_stmt 0 view .LVU908
 2854 0020 4FF0C042 		mov	r2, #1610612736
 2855 0024 C261     		str	r2, [r0, #28]
1244:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2856              		.loc 1 1244 3 is_stmt 1 view .LVU909
1244:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2857              		.loc 1 1244 23 is_stmt 0 view .LVU910
 2858 0026 0362     		str	r3, [r0, #32]
1245:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2859              		.loc 1 1245 3 is_stmt 1 view .LVU911
1245:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2860              		.loc 1 1245 21 is_stmt 0 view .LVU912
 2861 0028 4362     		str	r3, [r0, #36]
1246:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2862              		.loc 1 1246 3 is_stmt 1 view .LVU913
1246:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2863              		.loc 1 1246 29 is_stmt 0 view .LVU914
 2864 002a 8362     		str	r3, [r0, #40]
1247:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2865              		.loc 1 1247 3 is_stmt 1 view .LVU915
1247:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2866              		.loc 1 1247 28 is_stmt 0 view .LVU916
 2867 002c C362     		str	r3, [r0, #44]
1248:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2868              		.loc 1 1248 3 is_stmt 1 view .LVU917
1248:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2869              		.loc 1 1248 23 is_stmt 0 view .LVU918
 2870 002e 4FF08042 		mov	r2, #1073741824
 2871 0032 4263     		str	r2, [r0, #52]
1249:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2872              		.loc 1 1249 3 is_stmt 1 view .LVU919
1249:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2873              		.loc 1 1249 26 is_stmt 0 view .LVU920
 2874 0034 8363     		str	r3, [r0, #56]
1250:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2875              		.loc 1 1250 3 is_stmt 1 view .LVU921
1250:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2876              		.loc 1 1250 28 is_stmt 0 view .LVU922
 2877 0036 C363     		str	r3, [r0, #60]
1251:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2878              		.loc 1 1251 3 is_stmt 1 view .LVU923
1251:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2879              		.loc 1 1251 41 is_stmt 0 view .LVU924
 2880 0038 0364     		str	r3, [r0, #64]
1252:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2881              		.loc 1 1252 3 is_stmt 1 view .LVU925
ARM GAS  /tmp/ccrX756S.s 			page 101


1252:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2882              		.loc 1 1252 41 is_stmt 0 view .LVU926
 2883 003a 4364     		str	r3, [r0, #68]
1253:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2884              		.loc 1 1253 3 is_stmt 1 view .LVU927
1253:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2885              		.loc 1 1253 31 is_stmt 0 view .LVU928
 2886 003c 8364     		str	r3, [r0, #72]
1254:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2887              		.loc 1 1254 3 is_stmt 1 view .LVU929
1254:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2888              		.loc 1 1254 38 is_stmt 0 view .LVU930
 2889 003e C364     		str	r3, [r0, #76]
1255:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2890              		.loc 1 1255 3 is_stmt 1 view .LVU931
1255:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2891              		.loc 1 1255 37 is_stmt 0 view .LVU932
 2892 0040 0365     		str	r3, [r0, #80]
1256:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2893              		.loc 1 1256 3 is_stmt 1 view .LVU933
1256:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2894              		.loc 1 1256 32 is_stmt 0 view .LVU934
 2895 0042 4365     		str	r3, [r0, #84]
1257:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2896              		.loc 1 1257 3 is_stmt 1 view .LVU935
1257:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2897              		.loc 1 1257 21 is_stmt 0 view .LVU936
 2898 0044 8365     		str	r3, [r0, #88]
1258:Core/Src/main.c ****   {
 2899              		.loc 1 1258 3 is_stmt 1 view .LVU937
1258:Core/Src/main.c ****   {
 2900              		.loc 1 1258 7 is_stmt 0 view .LVU938
 2901 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2902              	.LVL157:
1258:Core/Src/main.c ****   {
 2903              		.loc 1 1258 6 view .LVU939
 2904 004a 00B9     		cbnz	r0, .L154
1266:Core/Src/main.c **** 
 2905              		.loc 1 1266 1 view .LVU940
 2906 004c 08BD     		pop	{r3, pc}
 2907              	.L154:
1260:Core/Src/main.c ****   }
 2908              		.loc 1 1260 5 is_stmt 1 view .LVU941
 2909 004e FFF7FEFF 		bl	Error_Handler
 2910              	.LVL158:
 2911              	.L156:
 2912 0052 00BF     		.align	2
 2913              	.L155:
 2914 0054 00000000 		.word	hspi1
 2915 0058 00300140 		.word	1073819648
 2916              		.cfi_endproc
 2917              	.LFE370:
 2919              		.section	.text.MX_UART4_Init,"ax",%progbits
 2920              		.align	1
 2921              		.syntax unified
 2922              		.thumb
 2923              		.thumb_func
ARM GAS  /tmp/ccrX756S.s 			page 102


 2924              		.fpu fpv5-d16
 2926              	MX_UART4_Init:
 2927              	.LFB379:
1644:Core/Src/main.c **** 
 2928              		.loc 1 1644 1 view -0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 0
 2931              		@ frame_needed = 0, uses_anonymous_args = 0
 2932 0000 08B5     		push	{r3, lr}
 2933              	.LCFI53:
 2934              		.cfi_def_cfa_offset 8
 2935              		.cfi_offset 3, -8
 2936              		.cfi_offset 14, -4
1653:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2937              		.loc 1 1653 3 view .LVU943
1653:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2938              		.loc 1 1653 19 is_stmt 0 view .LVU944
 2939 0002 1548     		ldr	r0, .L167
 2940 0004 154B     		ldr	r3, .L167+4
 2941 0006 0360     		str	r3, [r0]
1654:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2942              		.loc 1 1654 3 is_stmt 1 view .LVU945
1654:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2943              		.loc 1 1654 24 is_stmt 0 view .LVU946
 2944 0008 4FF4E133 		mov	r3, #115200
 2945 000c 4360     		str	r3, [r0, #4]
1655:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2946              		.loc 1 1655 3 is_stmt 1 view .LVU947
1655:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2947              		.loc 1 1655 26 is_stmt 0 view .LVU948
 2948 000e 0023     		movs	r3, #0
 2949 0010 8360     		str	r3, [r0, #8]
1656:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2950              		.loc 1 1656 3 is_stmt 1 view .LVU949
1656:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2951              		.loc 1 1656 24 is_stmt 0 view .LVU950
 2952 0012 C360     		str	r3, [r0, #12]
1657:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2953              		.loc 1 1657 3 is_stmt 1 view .LVU951
1657:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2954              		.loc 1 1657 22 is_stmt 0 view .LVU952
 2955 0014 0361     		str	r3, [r0, #16]
1658:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2956              		.loc 1 1658 3 is_stmt 1 view .LVU953
1658:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2957              		.loc 1 1658 20 is_stmt 0 view .LVU954
 2958 0016 0C22     		movs	r2, #12
 2959 0018 4261     		str	r2, [r0, #20]
1659:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2960              		.loc 1 1659 3 is_stmt 1 view .LVU955
1659:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2961              		.loc 1 1659 25 is_stmt 0 view .LVU956
 2962 001a 8361     		str	r3, [r0, #24]
1660:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2963              		.loc 1 1660 3 is_stmt 1 view .LVU957
1660:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2964              		.loc 1 1660 28 is_stmt 0 view .LVU958
ARM GAS  /tmp/ccrX756S.s 			page 103


 2965 001c C361     		str	r3, [r0, #28]
1661:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2966              		.loc 1 1661 3 is_stmt 1 view .LVU959
1661:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2967              		.loc 1 1661 30 is_stmt 0 view .LVU960
 2968 001e 0362     		str	r3, [r0, #32]
1662:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2969              		.loc 1 1662 3 is_stmt 1 view .LVU961
1662:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2970              		.loc 1 1662 30 is_stmt 0 view .LVU962
 2971 0020 4362     		str	r3, [r0, #36]
1663:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2972              		.loc 1 1663 3 is_stmt 1 view .LVU963
1663:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2973              		.loc 1 1663 38 is_stmt 0 view .LVU964
 2974 0022 8362     		str	r3, [r0, #40]
1664:Core/Src/main.c ****   {
 2975              		.loc 1 1664 3 is_stmt 1 view .LVU965
1664:Core/Src/main.c ****   {
 2976              		.loc 1 1664 7 is_stmt 0 view .LVU966
 2977 0024 FFF7FEFF 		bl	HAL_UART_Init
 2978              	.LVL159:
1664:Core/Src/main.c ****   {
 2979              		.loc 1 1664 6 view .LVU967
 2980 0028 70B9     		cbnz	r0, .L163
1668:Core/Src/main.c ****   {
 2981              		.loc 1 1668 3 is_stmt 1 view .LVU968
1668:Core/Src/main.c ****   {
 2982              		.loc 1 1668 7 is_stmt 0 view .LVU969
 2983 002a 0021     		movs	r1, #0
 2984 002c 0A48     		ldr	r0, .L167
 2985 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 2986              	.LVL160:
1668:Core/Src/main.c ****   {
 2987              		.loc 1 1668 6 view .LVU970
 2988 0032 58B9     		cbnz	r0, .L164
1672:Core/Src/main.c ****   {
 2989              		.loc 1 1672 3 is_stmt 1 view .LVU971
1672:Core/Src/main.c ****   {
 2990              		.loc 1 1672 7 is_stmt 0 view .LVU972
 2991 0034 0021     		movs	r1, #0
 2992 0036 0848     		ldr	r0, .L167
 2993 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 2994              	.LVL161:
1672:Core/Src/main.c ****   {
 2995              		.loc 1 1672 6 view .LVU973
 2996 003c 40B9     		cbnz	r0, .L165
1676:Core/Src/main.c ****   {
 2997              		.loc 1 1676 3 is_stmt 1 view .LVU974
1676:Core/Src/main.c ****   {
 2998              		.loc 1 1676 7 is_stmt 0 view .LVU975
 2999 003e 0648     		ldr	r0, .L167
 3000 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 3001              	.LVL162:
1676:Core/Src/main.c ****   {
 3002              		.loc 1 1676 6 view .LVU976
 3003 0044 30B9     		cbnz	r0, .L166
ARM GAS  /tmp/ccrX756S.s 			page 104


1684:Core/Src/main.c **** 
 3004              		.loc 1 1684 1 view .LVU977
 3005 0046 08BD     		pop	{r3, pc}
 3006              	.L163:
1666:Core/Src/main.c ****   }
 3007              		.loc 1 1666 5 is_stmt 1 view .LVU978
 3008 0048 FFF7FEFF 		bl	Error_Handler
 3009              	.LVL163:
 3010              	.L164:
1670:Core/Src/main.c ****   }
 3011              		.loc 1 1670 5 view .LVU979
 3012 004c FFF7FEFF 		bl	Error_Handler
 3013              	.LVL164:
 3014              	.L165:
1674:Core/Src/main.c ****   }
 3015              		.loc 1 1674 5 view .LVU980
 3016 0050 FFF7FEFF 		bl	Error_Handler
 3017              	.LVL165:
 3018              	.L166:
1678:Core/Src/main.c ****   }
 3019              		.loc 1 1678 5 view .LVU981
 3020 0054 FFF7FEFF 		bl	Error_Handler
 3021              	.LVL166:
 3022              	.L168:
 3023              		.align	2
 3024              	.L167:
 3025 0058 00000000 		.word	huart4
 3026 005c 004C0040 		.word	1073761280
 3027              		.cfi_endproc
 3028              	.LFE379:
 3030              		.section	.text.MX_TIM13_Init,"ax",%progbits
 3031              		.align	1
 3032              		.syntax unified
 3033              		.thumb
 3034              		.thumb_func
 3035              		.fpu fpv5-d16
 3037              	MX_TIM13_Init:
 3038              	.LFB377:
1582:Core/Src/main.c **** 
 3039              		.loc 1 1582 1 view -0
 3040              		.cfi_startproc
 3041              		@ args = 0, pretend = 0, frame = 0
 3042              		@ frame_needed = 0, uses_anonymous_args = 0
 3043 0000 08B5     		push	{r3, lr}
 3044              	.LCFI54:
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 3, -8
 3047              		.cfi_offset 14, -4
1591:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 3048              		.loc 1 1591 3 view .LVU983
1591:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 3049              		.loc 1 1591 19 is_stmt 0 view .LVU984
 3050 0002 0948     		ldr	r0, .L173
 3051 0004 094B     		ldr	r3, .L173+4
 3052 0006 0360     		str	r3, [r0]
1592:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 3053              		.loc 1 1592 3 is_stmt 1 view .LVU985
ARM GAS  /tmp/ccrX756S.s 			page 105


1592:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 3054              		.loc 1 1592 25 is_stmt 0 view .LVU986
 3055 0008 6323     		movs	r3, #99
 3056 000a 4360     		str	r3, [r0, #4]
1593:Core/Src/main.c ****   htim13.Init.Period = 65535;
 3057              		.loc 1 1593 3 is_stmt 1 view .LVU987
1593:Core/Src/main.c ****   htim13.Init.Period = 65535;
 3058              		.loc 1 1593 27 is_stmt 0 view .LVU988
 3059 000c 0023     		movs	r3, #0
 3060 000e 8360     		str	r3, [r0, #8]
1594:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3061              		.loc 1 1594 3 is_stmt 1 view .LVU989
1594:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3062              		.loc 1 1594 22 is_stmt 0 view .LVU990
 3063 0010 4FF6FF72 		movw	r2, #65535
 3064 0014 C260     		str	r2, [r0, #12]
1595:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3065              		.loc 1 1595 3 is_stmt 1 view .LVU991
1595:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3066              		.loc 1 1595 29 is_stmt 0 view .LVU992
 3067 0016 0361     		str	r3, [r0, #16]
1596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 3068              		.loc 1 1596 3 is_stmt 1 view .LVU993
1596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 3069              		.loc 1 1596 33 is_stmt 0 view .LVU994
 3070 0018 8361     		str	r3, [r0, #24]
1597:Core/Src/main.c ****   {
 3071              		.loc 1 1597 3 is_stmt 1 view .LVU995
1597:Core/Src/main.c ****   {
 3072              		.loc 1 1597 7 is_stmt 0 view .LVU996
 3073 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 3074              	.LVL167:
1597:Core/Src/main.c ****   {
 3075              		.loc 1 1597 6 view .LVU997
 3076 001e 00B9     		cbnz	r0, .L172
1605:Core/Src/main.c **** 
 3077              		.loc 1 1605 1 view .LVU998
 3078 0020 08BD     		pop	{r3, pc}
 3079              	.L172:
1599:Core/Src/main.c ****   }
 3080              		.loc 1 1599 5 is_stmt 1 view .LVU999
 3081 0022 FFF7FEFF 		bl	Error_Handler
 3082              	.LVL168:
 3083              	.L174:
 3084 0026 00BF     		.align	2
 3085              	.L173:
 3086 0028 00000000 		.word	htim13
 3087 002c 001C0040 		.word	1073748992
 3088              		.cfi_endproc
 3089              	.LFE377:
 3091              		.section	.text.MX_TIM14_Init,"ax",%progbits
 3092              		.align	1
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu fpv5-d16
 3098              	MX_TIM14_Init:
ARM GAS  /tmp/ccrX756S.s 			page 106


 3099              	.LFB378:
1613:Core/Src/main.c **** 
 3100              		.loc 1 1613 1 view -0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 0, uses_anonymous_args = 0
 3104 0000 08B5     		push	{r3, lr}
 3105              	.LCFI55:
 3106              		.cfi_def_cfa_offset 8
 3107              		.cfi_offset 3, -8
 3108              		.cfi_offset 14, -4
1622:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 3109              		.loc 1 1622 3 view .LVU1001
1622:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 3110              		.loc 1 1622 19 is_stmt 0 view .LVU1002
 3111 0002 0948     		ldr	r0, .L179
 3112 0004 094B     		ldr	r3, .L179+4
 3113 0006 0360     		str	r3, [r0]
1623:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 3114              		.loc 1 1623 3 is_stmt 1 view .LVU1003
1623:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 3115              		.loc 1 1623 25 is_stmt 0 view .LVU1004
 3116 0008 6323     		movs	r3, #99
 3117 000a 4360     		str	r3, [r0, #4]
1624:Core/Src/main.c ****   htim14.Init.Period = 65535;
 3118              		.loc 1 1624 3 is_stmt 1 view .LVU1005
1624:Core/Src/main.c ****   htim14.Init.Period = 65535;
 3119              		.loc 1 1624 27 is_stmt 0 view .LVU1006
 3120 000c 0023     		movs	r3, #0
 3121 000e 8360     		str	r3, [r0, #8]
1625:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3122              		.loc 1 1625 3 is_stmt 1 view .LVU1007
1625:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3123              		.loc 1 1625 22 is_stmt 0 view .LVU1008
 3124 0010 4FF6FF72 		movw	r2, #65535
 3125 0014 C260     		str	r2, [r0, #12]
1626:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3126              		.loc 1 1626 3 is_stmt 1 view .LVU1009
1626:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3127              		.loc 1 1626 29 is_stmt 0 view .LVU1010
 3128 0016 0361     		str	r3, [r0, #16]
1627:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 3129              		.loc 1 1627 3 is_stmt 1 view .LVU1011
1627:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 3130              		.loc 1 1627 33 is_stmt 0 view .LVU1012
 3131 0018 8361     		str	r3, [r0, #24]
1628:Core/Src/main.c ****   {
 3132              		.loc 1 1628 3 is_stmt 1 view .LVU1013
1628:Core/Src/main.c ****   {
 3133              		.loc 1 1628 7 is_stmt 0 view .LVU1014
 3134 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 3135              	.LVL169:
1628:Core/Src/main.c ****   {
 3136              		.loc 1 1628 6 view .LVU1015
 3137 001e 00B9     		cbnz	r0, .L178
1636:Core/Src/main.c **** 
 3138              		.loc 1 1636 1 view .LVU1016
ARM GAS  /tmp/ccrX756S.s 			page 107


 3139 0020 08BD     		pop	{r3, pc}
 3140              	.L178:
1630:Core/Src/main.c ****   }
 3141              		.loc 1 1630 5 is_stmt 1 view .LVU1017
 3142 0022 FFF7FEFF 		bl	Error_Handler
 3143              	.LVL170:
 3144              	.L180:
 3145 0026 00BF     		.align	2
 3146              	.L179:
 3147 0028 00000000 		.word	htim14
 3148 002c 00200040 		.word	1073750016
 3149              		.cfi_endproc
 3150              	.LFE378:
 3152              		.section	.text.MX_RNG_Init,"ax",%progbits
 3153              		.align	1
 3154              		.syntax unified
 3155              		.thumb
 3156              		.thumb_func
 3157              		.fpu fpv5-d16
 3159              	MX_RNG_Init:
 3160              	.LFB368:
1172:Core/Src/main.c **** 
 3161              		.loc 1 1172 1 view -0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 0
 3164              		@ frame_needed = 0, uses_anonymous_args = 0
 3165 0000 08B5     		push	{r3, lr}
 3166              	.LCFI56:
 3167              		.cfi_def_cfa_offset 8
 3168              		.cfi_offset 3, -8
 3169              		.cfi_offset 14, -4
1181:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
 3170              		.loc 1 1181 3 view .LVU1019
1181:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
 3171              		.loc 1 1181 17 is_stmt 0 view .LVU1020
 3172 0002 0548     		ldr	r0, .L185
 3173 0004 054B     		ldr	r3, .L185+4
 3174 0006 0360     		str	r3, [r0]
1182:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 3175              		.loc 1 1182 3 is_stmt 1 view .LVU1021
1182:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 3176              		.loc 1 1182 33 is_stmt 0 view .LVU1022
 3177 0008 0023     		movs	r3, #0
 3178 000a 4360     		str	r3, [r0, #4]
1183:Core/Src/main.c ****   {
 3179              		.loc 1 1183 3 is_stmt 1 view .LVU1023
1183:Core/Src/main.c ****   {
 3180              		.loc 1 1183 7 is_stmt 0 view .LVU1024
 3181 000c FFF7FEFF 		bl	HAL_RNG_Init
 3182              	.LVL171:
1183:Core/Src/main.c ****   {
 3183              		.loc 1 1183 6 view .LVU1025
 3184 0010 00B9     		cbnz	r0, .L184
1191:Core/Src/main.c **** 
 3185              		.loc 1 1191 1 view .LVU1026
 3186 0012 08BD     		pop	{r3, pc}
 3187              	.L184:
ARM GAS  /tmp/ccrX756S.s 			page 108


1185:Core/Src/main.c ****   }
 3188              		.loc 1 1185 5 is_stmt 1 view .LVU1027
 3189 0014 FFF7FEFF 		bl	Error_Handler
 3190              	.LVL172:
 3191              	.L186:
 3192              		.align	2
 3193              	.L185:
 3194 0018 00000000 		.word	hrng
 3195 001c 00180248 		.word	1208096768
 3196              		.cfi_endproc
 3197              	.LFE368:
 3199              		.section	.text.SystemClock_Config,"ax",%progbits
 3200              		.align	1
 3201              		.global	SystemClock_Config
 3202              		.syntax unified
 3203              		.thumb
 3204              		.thumb_func
 3205              		.fpu fpv5-d16
 3207              	SystemClock_Config:
 3208              	.LFB362:
 851:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3209              		.loc 1 851 1 view -0
 3210              		.cfi_startproc
 3211              		@ args = 0, pretend = 0, frame = 112
 3212              		@ frame_needed = 0, uses_anonymous_args = 0
 3213 0000 00B5     		push	{lr}
 3214              	.LCFI57:
 3215              		.cfi_def_cfa_offset 4
 3216              		.cfi_offset 14, -4
 3217 0002 9DB0     		sub	sp, sp, #116
 3218              	.LCFI58:
 3219              		.cfi_def_cfa_offset 120
 852:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3220              		.loc 1 852 3 view .LVU1029
 852:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3221              		.loc 1 852 22 is_stmt 0 view .LVU1030
 3222 0004 4C22     		movs	r2, #76
 3223 0006 0021     		movs	r1, #0
 3224 0008 09A8     		add	r0, sp, #36
 3225 000a FFF7FEFF 		bl	memset
 3226              	.LVL173:
 853:Core/Src/main.c **** 
 3227              		.loc 1 853 3 is_stmt 1 view .LVU1031
 853:Core/Src/main.c **** 
 3228              		.loc 1 853 22 is_stmt 0 view .LVU1032
 3229 000e 2022     		movs	r2, #32
 3230 0010 0021     		movs	r1, #0
 3231 0012 01A8     		add	r0, sp, #4
 3232 0014 FFF7FEFF 		bl	memset
 3233              	.LVL174:
 857:Core/Src/main.c **** 
 3234              		.loc 1 857 3 is_stmt 1 view .LVU1033
 3235 0018 0220     		movs	r0, #2
 3236 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 3237              	.LVL175:
 861:Core/Src/main.c **** 
 3238              		.loc 1 861 3 view .LVU1034
ARM GAS  /tmp/ccrX756S.s 			page 109


 3239              	.LBB16:
 861:Core/Src/main.c **** 
 3240              		.loc 1 861 3 view .LVU1035
 3241 001e 0023     		movs	r3, #0
 3242 0020 0093     		str	r3, [sp]
 861:Core/Src/main.c **** 
 3243              		.loc 1 861 3 view .LVU1036
 3244 0022 264A     		ldr	r2, .L194
 3245 0024 9369     		ldr	r3, [r2, #24]
 3246 0026 23F44043 		bic	r3, r3, #49152
 3247 002a 43F40043 		orr	r3, r3, #32768
 3248 002e 9361     		str	r3, [r2, #24]
 861:Core/Src/main.c **** 
 3249              		.loc 1 861 3 view .LVU1037
 3250 0030 9369     		ldr	r3, [r2, #24]
 3251 0032 03F44043 		and	r3, r3, #49152
 3252 0036 0093     		str	r3, [sp]
 861:Core/Src/main.c **** 
 3253              		.loc 1 861 3 view .LVU1038
 3254 0038 009B     		ldr	r3, [sp]
 3255              	.LBE16:
 861:Core/Src/main.c **** 
 3256              		.loc 1 861 3 view .LVU1039
 863:Core/Src/main.c **** 
 3257              		.loc 1 863 3 view .LVU1040
 3258              	.L188:
 863:Core/Src/main.c **** 
 3259              		.loc 1 863 48 discriminator 1 view .LVU1041
 863:Core/Src/main.c **** 
 3260              		.loc 1 863 8 discriminator 1 view .LVU1042
 863:Core/Src/main.c **** 
 3261              		.loc 1 863 10 is_stmt 0 discriminator 1 view .LVU1043
 3262 003a 204B     		ldr	r3, .L194
 3263 003c 9B69     		ldr	r3, [r3, #24]
 863:Core/Src/main.c **** 
 3264              		.loc 1 863 8 discriminator 1 view .LVU1044
 3265 003e 13F4005F 		tst	r3, #8192
 3266 0042 FAD0     		beq	.L188
 868:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3267              		.loc 1 868 3 is_stmt 1 view .LVU1045
 868:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3268              		.loc 1 868 36 is_stmt 0 view .LVU1046
 3269 0044 2223     		movs	r3, #34
 3270 0046 0993     		str	r3, [sp, #36]
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3271              		.loc 1 869 3 is_stmt 1 view .LVU1047
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3272              		.loc 1 869 30 is_stmt 0 view .LVU1048
 3273 0048 0122     		movs	r2, #1
 3274 004a 0C92     		str	r2, [sp, #48]
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3275              		.loc 1 870 3 is_stmt 1 view .LVU1049
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3276              		.loc 1 870 41 is_stmt 0 view .LVU1050
 3277 004c 4023     		movs	r3, #64
 3278 004e 0D93     		str	r3, [sp, #52]
 871:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccrX756S.s 			page 110


 3279              		.loc 1 871 3 is_stmt 1 view .LVU1051
 871:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3280              		.loc 1 871 32 is_stmt 0 view .LVU1052
 3281 0050 0F92     		str	r2, [sp, #60]
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3282              		.loc 1 872 3 is_stmt 1 view .LVU1053
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3283              		.loc 1 872 34 is_stmt 0 view .LVU1054
 3284 0052 0220     		movs	r0, #2
 3285 0054 1290     		str	r0, [sp, #72]
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3286              		.loc 1 873 3 is_stmt 1 view .LVU1055
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3287              		.loc 1 873 35 is_stmt 0 view .LVU1056
 3288 0056 0023     		movs	r3, #0
 3289 0058 1393     		str	r3, [sp, #76]
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3290              		.loc 1 874 3 is_stmt 1 view .LVU1057
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3291              		.loc 1 874 30 is_stmt 0 view .LVU1058
 3292 005a 0421     		movs	r1, #4
 3293 005c 1491     		str	r1, [sp, #80]
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3294              		.loc 1 875 3 is_stmt 1 view .LVU1059
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3295              		.loc 1 875 30 is_stmt 0 view .LVU1060
 3296 005e 0C21     		movs	r1, #12
 3297 0060 1591     		str	r1, [sp, #84]
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3298              		.loc 1 876 3 is_stmt 1 view .LVU1061
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3299              		.loc 1 876 30 is_stmt 0 view .LVU1062
 3300 0062 1692     		str	r2, [sp, #88]
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3301              		.loc 1 877 3 is_stmt 1 view .LVU1063
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3302              		.loc 1 877 30 is_stmt 0 view .LVU1064
 3303 0064 0322     		movs	r2, #3
 3304 0066 1792     		str	r2, [sp, #92]
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3305              		.loc 1 878 3 is_stmt 1 view .LVU1065
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3306              		.loc 1 878 30 is_stmt 0 view .LVU1066
 3307 0068 1890     		str	r0, [sp, #96]
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3308              		.loc 1 879 3 is_stmt 1 view .LVU1067
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3309              		.loc 1 879 32 is_stmt 0 view .LVU1068
 3310 006a 1991     		str	r1, [sp, #100]
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3311              		.loc 1 880 3 is_stmt 1 view .LVU1069
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3312              		.loc 1 880 35 is_stmt 0 view .LVU1070
 3313 006c 1A93     		str	r3, [sp, #104]
 881:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3314              		.loc 1 881 3 is_stmt 1 view .LVU1071
 881:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccrX756S.s 			page 111


 3315              		.loc 1 881 34 is_stmt 0 view .LVU1072
 3316 006e 1B93     		str	r3, [sp, #108]
 882:Core/Src/main.c ****   {
 3317              		.loc 1 882 3 is_stmt 1 view .LVU1073
 882:Core/Src/main.c ****   {
 3318              		.loc 1 882 7 is_stmt 0 view .LVU1074
 3319 0070 09A8     		add	r0, sp, #36
 3320 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3321              	.LVL176:
 882:Core/Src/main.c ****   {
 3322              		.loc 1 882 6 view .LVU1075
 3323 0076 E0B9     		cbnz	r0, .L192
 889:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3324              		.loc 1 889 3 is_stmt 1 view .LVU1076
 889:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3325              		.loc 1 889 31 is_stmt 0 view .LVU1077
 3326 0078 3F23     		movs	r3, #63
 3327 007a 0193     		str	r3, [sp, #4]
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3328              		.loc 1 892 3 is_stmt 1 view .LVU1078
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3329              		.loc 1 892 34 is_stmt 0 view .LVU1079
 3330 007c 0323     		movs	r3, #3
 3331 007e 0293     		str	r3, [sp, #8]
 893:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3332              		.loc 1 893 3 is_stmt 1 view .LVU1080
 893:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3333              		.loc 1 893 35 is_stmt 0 view .LVU1081
 3334 0080 0023     		movs	r3, #0
 3335 0082 0393     		str	r3, [sp, #12]
 894:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3336              		.loc 1 894 3 is_stmt 1 view .LVU1082
 894:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3337              		.loc 1 894 35 is_stmt 0 view .LVU1083
 3338 0084 0823     		movs	r3, #8
 3339 0086 0493     		str	r3, [sp, #16]
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3340              		.loc 1 895 3 is_stmt 1 view .LVU1084
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3341              		.loc 1 895 36 is_stmt 0 view .LVU1085
 3342 0088 4023     		movs	r3, #64
 3343 008a 0593     		str	r3, [sp, #20]
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3344              		.loc 1 896 3 is_stmt 1 view .LVU1086
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3345              		.loc 1 896 36 is_stmt 0 view .LVU1087
 3346 008c 0693     		str	r3, [sp, #24]
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3347              		.loc 1 897 3 is_stmt 1 view .LVU1088
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3348              		.loc 1 897 36 is_stmt 0 view .LVU1089
 3349 008e 4FF48062 		mov	r2, #1024
 3350 0092 0792     		str	r2, [sp, #28]
 898:Core/Src/main.c **** 
 3351              		.loc 1 898 3 is_stmt 1 view .LVU1090
 898:Core/Src/main.c **** 
 3352              		.loc 1 898 36 is_stmt 0 view .LVU1091
ARM GAS  /tmp/ccrX756S.s 			page 112


 3353 0094 0893     		str	r3, [sp, #32]
 900:Core/Src/main.c ****   {
 3354              		.loc 1 900 3 is_stmt 1 view .LVU1092
 900:Core/Src/main.c ****   {
 3355              		.loc 1 900 7 is_stmt 0 view .LVU1093
 3356 0096 0121     		movs	r1, #1
 3357 0098 01A8     		add	r0, sp, #4
 3358 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3359              	.LVL177:
 900:Core/Src/main.c ****   {
 3360              		.loc 1 900 6 view .LVU1094
 3361 009e 50B9     		cbnz	r0, .L193
 904:Core/Src/main.c **** }
 3362              		.loc 1 904 3 is_stmt 1 view .LVU1095
 3363 00a0 4FF48022 		mov	r2, #262144
 3364 00a4 0021     		movs	r1, #0
 3365 00a6 0846     		mov	r0, r1
 3366 00a8 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 3367              	.LVL178:
 905:Core/Src/main.c **** 
 3368              		.loc 1 905 1 is_stmt 0 view .LVU1096
 3369 00ac 1DB0     		add	sp, sp, #116
 3370              	.LCFI59:
 3371              		.cfi_remember_state
 3372              		.cfi_def_cfa_offset 4
 3373              		@ sp needed
 3374 00ae 5DF804FB 		ldr	pc, [sp], #4
 3375              	.L192:
 3376              	.LCFI60:
 3377              		.cfi_restore_state
 884:Core/Src/main.c ****   }
 3378              		.loc 1 884 5 is_stmt 1 view .LVU1097
 3379 00b2 FFF7FEFF 		bl	Error_Handler
 3380              	.LVL179:
 3381              	.L193:
 902:Core/Src/main.c ****   }
 3382              		.loc 1 902 5 view .LVU1098
 3383 00b6 FFF7FEFF 		bl	Error_Handler
 3384              	.LVL180:
 3385              	.L195:
 3386 00ba 00BF     		.align	2
 3387              	.L194:
 3388 00bc 00480258 		.word	1476544512
 3389              		.cfi_endproc
 3390              	.LFE362:
 3392              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 3393              		.align	1
 3394              		.global	PeriphCommonClock_Config
 3395              		.syntax unified
 3396              		.thumb
 3397              		.thumb_func
 3398              		.fpu fpv5-d16
 3400              	PeriphCommonClock_Config:
 3401              	.LFB363:
 912:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 3402              		.loc 1 912 1 view -0
 3403              		.cfi_startproc
ARM GAS  /tmp/ccrX756S.s 			page 113


 3404              		@ args = 0, pretend = 0, frame = 184
 3405              		@ frame_needed = 0, uses_anonymous_args = 0
 3406 0000 00B5     		push	{lr}
 3407              	.LCFI61:
 3408              		.cfi_def_cfa_offset 4
 3409              		.cfi_offset 14, -4
 3410 0002 AFB0     		sub	sp, sp, #188
 3411              	.LCFI62:
 3412              		.cfi_def_cfa_offset 192
 913:Core/Src/main.c **** 
 3413              		.loc 1 913 3 view .LVU1100
 913:Core/Src/main.c **** 
 3414              		.loc 1 913 28 is_stmt 0 view .LVU1101
 3415 0004 9022     		movs	r2, #144
 3416 0006 0021     		movs	r1, #0
 3417 0008 0AA8     		add	r0, sp, #40
 3418 000a FFF7FEFF 		bl	memset
 3419              	.LVL181:
 917:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3420              		.loc 1 917 3 is_stmt 1 view .LVU1102
 917:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3421              		.loc 1 917 44 is_stmt 0 view .LVU1103
 3422 000e 4FF40122 		mov	r2, #528384
 3423 0012 0023     		movs	r3, #0
 3424 0014 CDE90023 		strd	r2, [sp]
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3425              		.loc 1 919 3 is_stmt 1 view .LVU1104
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3426              		.loc 1 919 34 is_stmt 0 view .LVU1105
 3427 0018 0423     		movs	r3, #4
 3428 001a 0293     		str	r3, [sp, #8]
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3429              		.loc 1 920 3 is_stmt 1 view .LVU1106
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3430              		.loc 1 920 34 is_stmt 0 view .LVU1107
 3431 001c 0C22     		movs	r2, #12
 3432 001e 0392     		str	r2, [sp, #12]
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3433              		.loc 1 921 3 is_stmt 1 view .LVU1108
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3434              		.loc 1 921 34 is_stmt 0 view .LVU1109
 3435 0020 0493     		str	r3, [sp, #16]
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3436              		.loc 1 922 3 is_stmt 1 view .LVU1110
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3437              		.loc 1 922 34 is_stmt 0 view .LVU1111
 3438 0022 0223     		movs	r3, #2
 3439 0024 0593     		str	r3, [sp, #20]
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3440              		.loc 1 923 3 is_stmt 1 view .LVU1112
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3441              		.loc 1 923 34 is_stmt 0 view .LVU1113
 3442 0026 0693     		str	r3, [sp, #24]
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3443              		.loc 1 924 3 is_stmt 1 view .LVU1114
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3444              		.loc 1 924 36 is_stmt 0 view .LVU1115
ARM GAS  /tmp/ccrX756S.s 			page 114


 3445 0028 C023     		movs	r3, #192
 3446 002a 0793     		str	r3, [sp, #28]
 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3447              		.loc 1 925 3 is_stmt 1 view .LVU1116
 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3448              		.loc 1 925 39 is_stmt 0 view .LVU1117
 3449 002c 0023     		movs	r3, #0
 3450 002e 0893     		str	r3, [sp, #32]
 926:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3451              		.loc 1 926 3 is_stmt 1 view .LVU1118
 926:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3452              		.loc 1 926 38 is_stmt 0 view .LVU1119
 3453 0030 0993     		str	r3, [sp, #36]
 927:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3454              		.loc 1 927 3 is_stmt 1 view .LVU1120
 927:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3455              		.loc 1 927 44 is_stmt 0 view .LVU1121
 3456 0032 4FF48053 		mov	r3, #4096
 3457 0036 1793     		str	r3, [sp, #92]
 928:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3458              		.loc 1 928 3 is_stmt 1 view .LVU1122
 929:Core/Src/main.c ****   {
 3459              		.loc 1 929 3 view .LVU1123
 929:Core/Src/main.c ****   {
 3460              		.loc 1 929 7 is_stmt 0 view .LVU1124
 3461 0038 6846     		mov	r0, sp
 3462 003a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3463              	.LVL182:
 929:Core/Src/main.c ****   {
 3464              		.loc 1 929 6 view .LVU1125
 3465 003e 10B9     		cbnz	r0, .L199
 933:Core/Src/main.c **** 
 3466              		.loc 1 933 1 view .LVU1126
 3467 0040 2FB0     		add	sp, sp, #188
 3468              	.LCFI63:
 3469              		.cfi_remember_state
 3470              		.cfi_def_cfa_offset 4
 3471              		@ sp needed
 3472 0042 5DF804FB 		ldr	pc, [sp], #4
 3473              	.L199:
 3474              	.LCFI64:
 3475              		.cfi_restore_state
 931:Core/Src/main.c ****   }
 3476              		.loc 1 931 5 is_stmt 1 view .LVU1127
 3477 0046 FFF7FEFF 		bl	Error_Handler
 3478              	.LVL183:
 3479              		.cfi_endproc
 3480              	.LFE363:
 3482              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3483              		.align	2
 3484              	.LC4:
 3485 0000 6E6F7420 		.ascii	"not Hi\012\000"
 3485      48690A00 
 3486              		.section	.text.main,"ax",%progbits
 3487              		.align	1
 3488              		.global	main
 3489              		.syntax unified
ARM GAS  /tmp/ccrX756S.s 			page 115


 3490              		.thumb
 3491              		.thumb_func
 3492              		.fpu fpv5-d16
 3494              	main:
 3495              	.LFB361:
 216:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3496              		.loc 1 216 1 view -0
 3497              		.cfi_startproc
 3498              		@ Volatile: function does not return.
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501 0000 08B5     		push	{r3, lr}
 3502              	.LCFI65:
 3503              		.cfi_def_cfa_offset 8
 3504              		.cfi_offset 3, -8
 3505              		.cfi_offset 14, -4
 219:Core/Src/main.c **** 
 3506              		.loc 1 219 2 view .LVU1129
 222:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 3507              		.loc 1 222 2 view .LVU1130
 223:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 3508              		.loc 1 223 2 view .LVU1131
 224:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 3509              		.loc 1 224 2 view .LVU1132
 225:Core/Src/main.c ****   /* USER CODE END 1 */
 3510              		.loc 1 225 2 view .LVU1133
 231:Core/Src/main.c **** 
 3511              		.loc 1 231 3 view .LVU1134
 3512 0002 FFF7FEFF 		bl	HAL_Init
 3513              	.LVL184:
 238:Core/Src/main.c **** 
 3514              		.loc 1 238 3 view .LVU1135
 3515 0006 FFF7FEFF 		bl	SystemClock_Config
 3516              	.LVL185:
 241:Core/Src/main.c **** 
 3517              		.loc 1 241 3 view .LVU1136
 3518 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 3519              	.LVL186:
 248:Core/Src/main.c ****   MX_DMA_Init();
 3520              		.loc 1 248 3 view .LVU1137
 3521 000e FFF7FEFF 		bl	MX_GPIO_Init
 3522              	.LVL187:
 249:Core/Src/main.c ****   MX_SPI3_Init();
 3523              		.loc 1 249 3 view .LVU1138
 3524 0012 FFF7FEFF 		bl	MX_DMA_Init
 3525              	.LVL188:
 250:Core/Src/main.c ****   MX_FDCAN3_Init();
 3526              		.loc 1 250 3 view .LVU1139
 3527 0016 FFF7FEFF 		bl	MX_SPI3_Init
 3528              	.LVL189:
 251:Core/Src/main.c ****   MX_USART6_UART_Init();
 3529              		.loc 1 251 3 view .LVU1140
 3530 001a FFF7FEFF 		bl	MX_FDCAN3_Init
 3531              	.LVL190:
 252:Core/Src/main.c ****   MX_ADC1_Init();
 3532              		.loc 1 252 3 view .LVU1141
 3533 001e FFF7FEFF 		bl	MX_USART6_UART_Init
ARM GAS  /tmp/ccrX756S.s 			page 116


 3534              	.LVL191:
 253:Core/Src/main.c ****   MX_TIM4_Init();
 3535              		.loc 1 253 3 view .LVU1142
 3536 0022 FFF7FEFF 		bl	MX_ADC1_Init
 3537              	.LVL192:
 254:Core/Src/main.c ****   MX_ADC3_Init();
 3538              		.loc 1 254 3 view .LVU1143
 3539 0026 FFF7FEFF 		bl	MX_TIM4_Init
 3540              	.LVL193:
 255:Core/Src/main.c ****   MX_SPI2_Init();
 3541              		.loc 1 255 3 view .LVU1144
 3542 002a FFF7FEFF 		bl	MX_ADC3_Init
 3543              	.LVL194:
 256:Core/Src/main.c ****   MX_I2C2_Init();
 3544              		.loc 1 256 3 view .LVU1145
 3545 002e FFF7FEFF 		bl	MX_SPI2_Init
 3546              	.LVL195:
 257:Core/Src/main.c ****   MX_TIM2_Init();
 3547              		.loc 1 257 3 view .LVU1146
 3548 0032 FFF7FEFF 		bl	MX_I2C2_Init
 3549              	.LVL196:
 258:Core/Src/main.c ****   MX_TIM5_Init();
 3550              		.loc 1 258 3 view .LVU1147
 3551 0036 FFF7FEFF 		bl	MX_TIM2_Init
 3552              	.LVL197:
 259:Core/Src/main.c ****   MX_TIM3_Init();
 3553              		.loc 1 259 3 view .LVU1148
 3554 003a FFF7FEFF 		bl	MX_TIM5_Init
 3555              	.LVL198:
 260:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 3556              		.loc 1 260 3 view .LVU1149
 3557 003e FFF7FEFF 		bl	MX_TIM3_Init
 3558              	.LVL199:
 261:Core/Src/main.c ****   MX_SPI1_Init();
 3559              		.loc 1 261 3 view .LVU1150
 3560 0042 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3561              	.LVL200:
 262:Core/Src/main.c ****   MX_UART4_Init();
 3562              		.loc 1 262 3 view .LVU1151
 3563 0046 FFF7FEFF 		bl	MX_SPI1_Init
 3564              	.LVL201:
 263:Core/Src/main.c ****   MX_FATFS_Init();
 3565              		.loc 1 263 3 view .LVU1152
 3566 004a FFF7FEFF 		bl	MX_UART4_Init
 3567              	.LVL202:
 264:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 3568              		.loc 1 264 3 view .LVU1153
 3569 004e FFF7FEFF 		bl	MX_FATFS_Init
 3570              	.LVL203:
 265:Core/Src/main.c ****   MX_TIM13_Init();
 3571              		.loc 1 265 3 view .LVU1154
 3572 0052 FFF7FEFF 		bl	MX_SDMMC2_SD_Init
 3573              	.LVL204:
 266:Core/Src/main.c ****   MX_TIM14_Init();
 3574              		.loc 1 266 3 view .LVU1155
 3575 0056 FFF7FEFF 		bl	MX_TIM13_Init
 3576              	.LVL205:
ARM GAS  /tmp/ccrX756S.s 			page 117


 267:Core/Src/main.c ****   MX_RNG_Init();
 3577              		.loc 1 267 3 view .LVU1156
 3578 005a FFF7FEFF 		bl	MX_TIM14_Init
 3579              	.LVL206:
 268:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3580              		.loc 1 268 3 view .LVU1157
 3581 005e FFF7FEFF 		bl	MX_RNG_Init
 3582              	.LVL207:
 3583              	.L201:
 270:Core/Src/main.c ****     CDC_Transmit_HS((uint8_t*)"not Hi\n", strlen("not hi\n"));
 3584              		.loc 1 270 3 discriminator 1 view .LVU1158
 271:Core/Src/main.c ****     HAL_Delay(1000);
 3585              		.loc 1 271 5 discriminator 1 view .LVU1159
 3586 0062 0721     		movs	r1, #7
 3587 0064 0348     		ldr	r0, .L203
 3588 0066 FFF7FEFF 		bl	CDC_Transmit_HS
 3589              	.LVL208:
 272:Core/Src/main.c ****   }
 3590              		.loc 1 272 5 discriminator 1 view .LVU1160
 3591 006a 4FF47A70 		mov	r0, #1000
 3592 006e FFF7FEFF 		bl	HAL_Delay
 3593              	.LVL209:
 270:Core/Src/main.c ****     CDC_Transmit_HS((uint8_t*)"not Hi\n", strlen("not hi\n"));
 3594              		.loc 1 270 8 discriminator 1 view .LVU1161
 3595 0072 F6E7     		b	.L201
 3596              	.L204:
 3597              		.align	2
 3598              	.L203:
 3599 0074 00000000 		.word	.LC4
 3600              		.cfi_endproc
 3601              	.LFE361:
 3603              		.comm	x,32,8
 3604              		.comm	LED_Color_Data,42,4
 3605              		.global	datasentflag
 3606              		.comm	huart6,148,4
 3607              		.comm	huart4,148,4
 3608              		.comm	hdma_tim5_ch4,120,4
 3609              		.comm	hdma_tim4_ch3,120,4
 3610              		.comm	hdma_tim3_ch1,120,4
 3611              		.comm	hdma_tim3_ch2,120,4
 3612              		.comm	hdma_tim2_ch3,120,4
 3613              		.comm	htim14,76,4
 3614              		.comm	htim13,76,4
 3615              		.comm	htim5,76,4
 3616              		.comm	htim4,76,4
 3617              		.comm	htim3,76,4
 3618              		.comm	htim2,76,4
 3619              		.comm	hspi3,136,4
 3620              		.comm	hspi2,136,4
 3621              		.comm	hspi1,136,4
 3622              		.comm	hsd2,124,4
 3623              		.comm	hrng,20,4
 3624              		.comm	hi2c2,84,4
 3625              		.comm	hfdcan3,160,4
 3626              		.comm	hdma_adc3,120,4
 3627              		.comm	hdma_adc1,120,4
 3628              		.comm	hadc3,112,4
ARM GAS  /tmp/ccrX756S.s 			page 118


 3629              		.comm	hadc1,112,4
 3630              		.comm	read_Data,2,2
 3631              		.comm	DMA_data,2,2
 3632              		.section	.bss.datasentflag,"aw",%nobits
 3633              		.align	2
 3636              	datasentflag:
 3637 0000 00000000 		.space	4
 3638              		.text
 3639              	.Letext0:
 3640              		.file 3 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3641              		.file 4 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3642              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 3643              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3644              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 3645              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 3646              		.file 9 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/lib/gcc/arm-none-eabi/
 3647              		.file 10 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3648              		.file 11 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3649              		.file 12 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3650              		.file 13 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3651              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3652              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 3653              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 3654              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3655              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 3656              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 3657              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 3658              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 3659              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3660              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 3661              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rng.h"
 3662              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 3663              		.file 26 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 3664              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 3665              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 3666              		.file 29 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 3667              		.file 30 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 3668              		.file 31 "Middlewares/Third_Party/FatFs/src/integer.h"
 3669              		.file 32 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3670              		.file 33 "Middlewares/Third_Party/FatFs/src/ff.h"
 3671              		.file 34 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3672              		.file 35 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3673              		.file 36 "FATFS/Target/sd_diskio.h"
 3674              		.file 37 "FATFS/App/fatfs.h"
 3675              		.file 38 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 3676              		.file 39 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 3677              		.file 40 "USB_DEVICE/App/usbd_cdc_if.h"
 3678              		.file 41 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3679              		.file 42 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 3680              		.file 43 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 3681              		.file 44 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 3682              		.file 45 "Core/Inc/main.h"
 3683              		.file 46 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c_ex.h"
 3684              		.file 47 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 3685              		.file 48 "USB_DEVICE/App/usb_device.h"
 3686              		.file 49 "Core/Inc/StatusDisplay.h"
 3687              		.file 50 "<built-in>"
ARM GAS  /tmp/ccrX756S.s 			page 119


ARM GAS  /tmp/ccrX756S.s 			page 120


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrX756S.s:17     .text.MX_SDMMC2_SD_Init:0000000000000000 $t
     /tmp/ccrX756S.s:24     .text.MX_SDMMC2_SD_Init:0000000000000000 MX_SDMMC2_SD_Init
     /tmp/ccrX756S.s:60     .text.MX_SDMMC2_SD_Init:000000000000001c $d
                            *COM*:000000000000007c hsd2
     /tmp/ccrX756S.s:66     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccrX756S.s:72     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccrX756S.s:486    .text.MX_GPIO_Init:000000000000021c $d
     /tmp/ccrX756S.s:498    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccrX756S.s:504    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccrX756S.s:627    .text.MX_DMA_Init:00000000000000ac $d
     /tmp/ccrX756S.s:632    .rodata.disarm.str1.4:0000000000000000 $d
     /tmp/ccrX756S.s:639    .text.disarm:0000000000000000 $t
     /tmp/ccrX756S.s:646    .text.disarm:0000000000000000 disarm
     /tmp/ccrX756S.s:748    .text.disarm:0000000000000098 $d
     /tmp/ccrX756S.s:757    .rodata.arm.str1.4:0000000000000000 $d
     /tmp/ccrX756S.s:761    .text.arm:0000000000000000 $t
     /tmp/ccrX756S.s:768    .text.arm:0000000000000000 arm
     /tmp/ccrX756S.s:819    .text.arm:0000000000000030 $d
     /tmp/ccrX756S.s:826    .text.multiplyQuat:0000000000000000 $t
     /tmp/ccrX756S.s:833    .text.multiplyQuat:0000000000000000 multiplyQuat
     /tmp/ccrX756S.s:959    .text.multiplyQuat:00000000000000b0 $d
                            *COM*:0000000000000020 x
     /tmp/ccrX756S.s:964    .text.Baro2_Read_Register:0000000000000000 $t
     /tmp/ccrX756S.s:971    .text.Baro2_Read_Register:0000000000000000 Baro2_Read_Register
     /tmp/ccrX756S.s:1034   .text.Baro2_Read_Register:000000000000004c $d
                            *COM*:0000000000000088 hspi2
     /tmp/ccrX756S.s:1040   .text.Baro2_Write_Register:0000000000000000 $t
     /tmp/ccrX756S.s:1047   .text.Baro2_Write_Register:0000000000000000 Baro2_Write_Register
     /tmp/ccrX756S.s:1107   .text.Baro2_Write_Register:0000000000000048 $d
     /tmp/ccrX756S.s:1113   .text.Baro2_Configure:0000000000000000 $t
     /tmp/ccrX756S.s:1120   .text.Baro2_Configure:0000000000000000 Baro2_Configure
     /tmp/ccrX756S.s:1161   .text.Baro2_Get_Pressure:0000000000000000 $t
     /tmp/ccrX756S.s:1168   .text.Baro2_Get_Pressure:0000000000000000 Baro2_Get_Pressure
     /tmp/ccrX756S.s:1219   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccrX756S.s:1226   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccrX756S.s:1240   .rodata.HAL_ADC_ConvHalfCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccrX756S.s:1244   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccrX756S.s:1251   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccrX756S.s:1300   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000030 $d
                            *COM*:0000000000000002 read_Data
                            *COM*:0000000000000002 DMA_data
     /tmp/ccrX756S.s:1307   .text.Error_Handler:0000000000000000 $t
     /tmp/ccrX756S.s:1314   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccrX756S.s:1346   .text.MX_SPI3_Init:0000000000000000 $t
     /tmp/ccrX756S.s:1352   .text.MX_SPI3_Init:0000000000000000 MX_SPI3_Init
     /tmp/ccrX756S.s:1452   .text.MX_SPI3_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi3
     /tmp/ccrX756S.s:1458   .text.MX_FDCAN3_Init:0000000000000000 $t
     /tmp/ccrX756S.s:1464   .text.MX_FDCAN3_Init:0000000000000000 MX_FDCAN3_Init
     /tmp/ccrX756S.s:1581   .text.MX_FDCAN3_Init:0000000000000054 $d
                            *COM*:00000000000000a0 hfdcan3
     /tmp/ccrX756S.s:1587   .text.MX_USART6_UART_Init:0000000000000000 $t
     /tmp/ccrX756S.s:1593   .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
     /tmp/ccrX756S.s:1692   .text.MX_USART6_UART_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart6
ARM GAS  /tmp/ccrX756S.s 			page 121


     /tmp/ccrX756S.s:1698   .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccrX756S.s:1704   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccrX756S.s:1858   .text.MX_ADC1_Init:0000000000000090 $d
                            *COM*:0000000000000070 hadc1
     /tmp/ccrX756S.s:1865   .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccrX756S.s:1871   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccrX756S.s:2031   .text.MX_TIM4_Init:00000000000000a4 $d
                            *COM*:000000000000004c htim4
     /tmp/ccrX756S.s:2037   .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2043   .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/ccrX756S.s:2184   .text.MX_ADC3_Init:0000000000000084 $d
                            *COM*:0000000000000070 hadc3
     /tmp/ccrX756S.s:2191   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2197   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccrX756S.s:2297   .text.MX_SPI2_Init:0000000000000054 $d
     /tmp/ccrX756S.s:2303   .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2309   .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccrX756S.s:2391   .text.MX_I2C2_Init:0000000000000048 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccrX756S.s:2398   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2404   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccrX756S.s:2525   .text.MX_TIM2_Init:0000000000000074 $d
                            *COM*:000000000000004c htim2
     /tmp/ccrX756S.s:2530   .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2536   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccrX756S.s:2657   .text.MX_TIM5_Init:0000000000000074 $d
                            *COM*:000000000000004c htim5
     /tmp/ccrX756S.s:2663   .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2669   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccrX756S.s:2802   .text.MX_TIM3_Init:0000000000000080 $d
                            *COM*:000000000000004c htim3
     /tmp/ccrX756S.s:2808   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2814   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccrX756S.s:2914   .text.MX_SPI1_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi1
     /tmp/ccrX756S.s:2920   .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccrX756S.s:2926   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccrX756S.s:3025   .text.MX_UART4_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart4
     /tmp/ccrX756S.s:3031   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccrX756S.s:3037   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccrX756S.s:3086   .text.MX_TIM13_Init:0000000000000028 $d
                            *COM*:000000000000004c htim13
     /tmp/ccrX756S.s:3092   .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccrX756S.s:3098   .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccrX756S.s:3147   .text.MX_TIM14_Init:0000000000000028 $d
                            *COM*:000000000000004c htim14
     /tmp/ccrX756S.s:3153   .text.MX_RNG_Init:0000000000000000 $t
     /tmp/ccrX756S.s:3159   .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
     /tmp/ccrX756S.s:3194   .text.MX_RNG_Init:0000000000000018 $d
                            *COM*:0000000000000014 hrng
     /tmp/ccrX756S.s:3200   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccrX756S.s:3207   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccrX756S.s:3388   .text.SystemClock_Config:00000000000000bc $d
     /tmp/ccrX756S.s:3393   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccrX756S.s:3400   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccrX756S.s:3483   .rodata.main.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccrX756S.s 			page 122


     /tmp/ccrX756S.s:3487   .text.main:0000000000000000 $t
     /tmp/ccrX756S.s:3494   .text.main:0000000000000000 main
     /tmp/ccrX756S.s:3599   .text.main:0000000000000074 $d
                            *COM*:000000000000002a LED_Color_Data
     /tmp/ccrX756S.s:3636   .bss.datasentflag:0000000000000000 datasentflag
                            *COM*:0000000000000078 hdma_tim5_ch4
                            *COM*:0000000000000078 hdma_tim4_ch3
                            *COM*:0000000000000078 hdma_tim3_ch1
                            *COM*:0000000000000078 hdma_tim3_ch2
                            *COM*:0000000000000078 hdma_tim2_ch3
                            *COM*:0000000000000078 hdma_adc3
                            *COM*:0000000000000078 hdma_adc1
     /tmp/ccrX756S.s:3633   .bss.datasentflag:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
setStatus
HAL_SPI_Transmit
HAL_SPI_Receive
strlen
CDC_Transmit_HS
HAL_SPI_Init
HAL_FDCAN_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_RNG_Init
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
MX_FATFS_Init
HAL_Delay
