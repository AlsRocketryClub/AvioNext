ARM GAS  /tmp/ccr4Jxlr.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC2_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC2_SD_Init:
  25              	.LFB367:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "math_utils.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "usb_device.h"
  24:Core/Src/main.c **** #include "communication_protocol.h"
  25:Core/Src/main.c **** #include "rocket_comms.h"
  26:Core/Src/main.c **** #include "random.h"
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "AvioNEXT.h"
  30:Core/Src/main.c **** #include "LG_IMU.h"
  31:Core/Src/main.c **** #include "max_m10s.h"
  32:Core/Src/main.c **** #include "StatusDisplay.h"
ARM GAS  /tmp/ccr4Jxlr.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** uint16_t DMA_data;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** uint16_t read_Data;
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  56:Core/Src/main.c **** ADC_HandleTypeDef hadc3;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  58:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc3;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan3;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** RNG_HandleTypeDef hrng;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** SD_HandleTypeDef hsd2;
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  69:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  70:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  73:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  74:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  75:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  76:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  77:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  78:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch3;
  79:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch2;
  80:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch1;
  81:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim4_ch3;
  82:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim5_ch4;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** UART_HandleTypeDef huart4;
  85:Core/Src/main.c **** UART_HandleTypeDef huart6;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE BEGIN PV */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END PV */
ARM GAS  /tmp/ccr4Jxlr.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  92:Core/Src/main.c **** void SystemClock_Config(void);
  93:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  94:Core/Src/main.c **** static void MX_GPIO_Init(void);
  95:Core/Src/main.c **** static void MX_DMA_Init(void);
  96:Core/Src/main.c **** static void MX_SPI3_Init(void);
  97:Core/Src/main.c **** static void MX_FDCAN3_Init(void);
  98:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  99:Core/Src/main.c **** static void MX_ADC1_Init(void);
 100:Core/Src/main.c **** static void MX_TIM4_Init(void);
 101:Core/Src/main.c **** static void MX_ADC3_Init(void);
 102:Core/Src/main.c **** static void MX_SPI2_Init(void);
 103:Core/Src/main.c **** static void MX_I2C2_Init(void);
 104:Core/Src/main.c **** static void MX_TIM2_Init(void);
 105:Core/Src/main.c **** static void MX_TIM5_Init(void);
 106:Core/Src/main.c **** static void MX_TIM3_Init(void);
 107:Core/Src/main.c **** static void MX_SPI1_Init(void);
 108:Core/Src/main.c **** static void MX_UART4_Init(void);
 109:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void);
 110:Core/Src/main.c **** static void MX_TIM13_Init(void);
 111:Core/Src/main.c **** static void MX_TIM14_Init(void);
 112:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END PFP */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 117:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** volatile int datasentflag = 0;
 120:Core/Src/main.c **** uint8_t LED_Color_Data[14][3];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** //TODO: remove
 123:Core/Src/main.c **** int disarm(char *state) {
 124:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 125:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 0);
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 129:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 130:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 0);
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 134:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 135:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	setStatus("ARM", 2);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	strcpy(state, "DISARMED");
 140:Core/Src/main.c **** 	return 0;
 141:Core/Src/main.c **** }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** uint8_t Baro2_Read_Register(uint8_t addr) {
 144:Core/Src/main.c **** 	uint8_t reg_value;
 145:Core/Src/main.c **** 	addr |= (1 << 7);
 146:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
ARM GAS  /tmp/ccr4Jxlr.s 			page 4


 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 149:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 	return reg_value;
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** void Baro2_Write_Register(uint8_t addr, uint8_t data) {
 157:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 158:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 159:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 160:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** void Baro2_Configure(){
 165:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 166:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 167:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 	Baro2_Write_Register(0x18, cal_L);
 170:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	Baro2_Write_Register(0x10, 0b01000000); //50Hz refresh rate, low pass off
 174:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** int32_t Baro2_Get_Pressure(){
 178:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 179:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 180:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 	int32_t BARO = 0;
 183:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 184:Core/Src/main.c **** 	return BARO;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** }
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** int mount_SD() {
 189:Core/Src/main.c **** 	int status = f_mount(&SDFatFS, (TCHAR const*) SDPath, 0);
 190:Core/Src/main.c **** 	return status;
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** double x[4];
 194:Core/Src/main.c **** double y[4];
 195:Core/Src/main.c **** double z[4];
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** FATFS FatFs;
 198:Core/Src/main.c **** FIL Fil;
 199:Core/Src/main.c **** FRESULT FR_Status;
 200:Core/Src/main.c **** /* USER CODE END 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  /tmp/ccr4Jxlr.s 			page 5


 204:Core/Src/main.c ****   * @retval int
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** int main(void)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** 	FRESULT res; /* FatFs function common result code */
 211:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 212:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 213:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 214:Core/Src/main.c ****   /* USER CODE END 1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 219:Core/Src/main.c ****   HAL_Init();
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END Init */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* Configure the system clock */
 226:Core/Src/main.c ****   SystemClock_Config();
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* Configure the peripherals common clocks */
 229:Core/Src/main.c ****   PeriphCommonClock_Config();
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END SysInit */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* Initialize all configured peripherals */
 236:Core/Src/main.c ****   MX_GPIO_Init();
 237:Core/Src/main.c ****   MX_DMA_Init();
 238:Core/Src/main.c ****   MX_SPI3_Init();
 239:Core/Src/main.c ****   MX_FDCAN3_Init();
 240:Core/Src/main.c ****   MX_USART6_UART_Init();
 241:Core/Src/main.c ****   MX_ADC1_Init();
 242:Core/Src/main.c ****   MX_TIM4_Init();
 243:Core/Src/main.c ****   MX_ADC3_Init();
 244:Core/Src/main.c ****   MX_SPI2_Init();
 245:Core/Src/main.c ****   MX_I2C2_Init();
 246:Core/Src/main.c ****   MX_TIM2_Init();
 247:Core/Src/main.c ****   MX_TIM5_Init();
 248:Core/Src/main.c ****   MX_TIM3_Init();
 249:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 250:Core/Src/main.c ****   MX_SPI1_Init();
 251:Core/Src/main.c ****   MX_UART4_Init();
 252:Core/Src/main.c ****   MX_FATFS_Init();
 253:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 254:Core/Src/main.c ****   MX_TIM13_Init();
 255:Core/Src/main.c ****   MX_TIM14_Init();
 256:Core/Src/main.c ****   MX_RNG_Init();
 257:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 258:Core/Src/main.c **** 	uint8_t LG_status = LG_Check();
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** 	if(LG_status & 1){
ARM GAS  /tmp/ccr4Jxlr.s 			page 6


 261:Core/Src/main.c **** 		setStatus("LG 1", 2);
 262:Core/Src/main.c **** 	}else{
 263:Core/Src/main.c **** 		setStatus("LG 1", 0);
 264:Core/Src/main.c **** 	}
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** 	if(LG_status & 2){
 267:Core/Src/main.c **** 		setStatus("LG 2", 2);
 268:Core/Src/main.c **** 	}else{
 269:Core/Src/main.c **** 		setStatus("LG 2", 0);
 270:Core/Src/main.c **** 	}
 271:Core/Src/main.c **** 	LG_Configure();
 272:Core/Src/main.c **** 	HAL_Delay(3000);
 273:Core/Src/main.c **** 	HG2_Write_Register(0x1C, 0b10111111);
 274:Core/Src/main.c **** 	HAL_Delay(2);
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b01011000);
 277:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b11011000);
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 	Baro2_Configure();
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   multiplyQuat(x, y, z);
 282:Core/Src/main.c ****   /* USER CODE END 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 	
 285:Core/Src/main.c **** }
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /**
 288:Core/Src/main.c ****   * @brief System Clock Configuration
 289:Core/Src/main.c ****   * @retval None
 290:Core/Src/main.c ****   */
 291:Core/Src/main.c **** void SystemClock_Config(void)
 292:Core/Src/main.c **** {
 293:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 294:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /** Supply configuration update enable
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 307:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 308:Core/Src/main.c ****   */
 309:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSI;
 310:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 311:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 312:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
ARM GAS  /tmp/ccr4Jxlr.s 			page 7


 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 323:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 331:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 332:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 333:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 334:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 335:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 337:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 338:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****     Error_Handler();
 344:Core/Src/main.c ****   }
 345:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 350:Core/Src/main.c ****   * @retval None
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 353:Core/Src/main.c **** {
 354:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /** Initializes the peripherals clock
 357:Core/Src/main.c ****   */
 358:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_SPI3
 359:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 360:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 361:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 362:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 363:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 364:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 365:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 366:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 367:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 368:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 369:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 370:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 371:Core/Src/main.c ****   {
 372:Core/Src/main.c ****     Error_Handler();
 373:Core/Src/main.c ****   }
 374:Core/Src/main.c **** }
ARM GAS  /tmp/ccr4Jxlr.s 			page 8


 375:Core/Src/main.c **** 
 376:Core/Src/main.c **** /**
 377:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 378:Core/Src/main.c ****   * @param None
 379:Core/Src/main.c ****   * @retval None
 380:Core/Src/main.c ****   */
 381:Core/Src/main.c **** static void MX_ADC1_Init(void)
 382:Core/Src/main.c **** {
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 389:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /** Common config
 396:Core/Src/main.c ****   */
 397:Core/Src/main.c ****   hadc1.Instance = ADC1;
 398:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 399:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 400:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 401:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 402:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 403:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 404:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 405:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 406:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 407:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 408:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 409:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 410:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 411:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 412:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /** Configure the ADC multi-mode
 418:Core/Src/main.c ****   */
 419:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 420:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****     Error_Handler();
 423:Core/Src/main.c ****   }
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /** Configure Regular Channel
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_14;
 428:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 429:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 430:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 431:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
ARM GAS  /tmp/ccr4Jxlr.s 			page 9


 432:Core/Src/main.c ****   sConfig.Offset = 0;
 433:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 434:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 435:Core/Src/main.c ****   {
 436:Core/Src/main.c ****     Error_Handler();
 437:Core/Src/main.c ****   }
 438:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** }
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** /**
 445:Core/Src/main.c ****   * @brief ADC3 Initialization Function
 446:Core/Src/main.c ****   * @param None
 447:Core/Src/main.c ****   * @retval None
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c **** static void MX_ADC3_Init(void)
 450:Core/Src/main.c **** {
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE END ADC3_Init 0 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END ADC3_Init 1 */
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /** Common config
 463:Core/Src/main.c ****   */
 464:Core/Src/main.c ****   hadc3.Instance = ADC3;
 465:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 466:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 467:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 468:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 469:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 470:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 471:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 472:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 473:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 474:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 475:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 476:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 477:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 478:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 479:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 480:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 481:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 482:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 483:Core/Src/main.c ****   {
 484:Core/Src/main.c ****     Error_Handler();
 485:Core/Src/main.c ****   }
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /** Configure Regular Channel
 488:Core/Src/main.c ****   */
ARM GAS  /tmp/ccr4Jxlr.s 			page 10


 489:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 490:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 491:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 492:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 493:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 494:Core/Src/main.c ****   sConfig.Offset = 0;
 495:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 496:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 497:Core/Src/main.c ****   {
 498:Core/Src/main.c ****     Error_Handler();
 499:Core/Src/main.c ****   }
 500:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 501:Core/Src/main.c **** 
 502:Core/Src/main.c ****   /* USER CODE END ADC3_Init 2 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /**
 507:Core/Src/main.c ****   * @brief FDCAN3 Initialization Function
 508:Core/Src/main.c ****   * @param None
 509:Core/Src/main.c ****   * @retval None
 510:Core/Src/main.c ****   */
 511:Core/Src/main.c **** static void MX_FDCAN3_Init(void)
 512:Core/Src/main.c **** {
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 0 */
 515:Core/Src/main.c **** 
 516:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 0 */
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 1 */
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 1 */
 521:Core/Src/main.c ****   hfdcan3.Instance = FDCAN3;
 522:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 523:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 524:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 525:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 526:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 527:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 528:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 529:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 530:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 531:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 532:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 533:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 534:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 535:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 536:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 537:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 538:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 539:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 540:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 541:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 542:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 543:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 544:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 545:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
ARM GAS  /tmp/ccr4Jxlr.s 			page 11


 546:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 547:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 548:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 549:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 550:Core/Src/main.c ****   {
 551:Core/Src/main.c ****     Error_Handler();
 552:Core/Src/main.c ****   }
 553:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 2 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 2 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c **** }
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /**
 560:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 561:Core/Src/main.c ****   * @param None
 562:Core/Src/main.c ****   * @retval None
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c **** static void MX_I2C2_Init(void)
 565:Core/Src/main.c **** {
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 568:Core/Src/main.c **** 
 569:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 574:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 575:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 576:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 577:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 578:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 579:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 580:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 581:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 582:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 583:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 584:Core/Src/main.c ****   {
 585:Core/Src/main.c ****     Error_Handler();
 586:Core/Src/main.c ****   }
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****   /** Configure Analogue filter
 589:Core/Src/main.c ****   */
 590:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****     Error_Handler();
 593:Core/Src/main.c ****   }
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /** Configure Digital filter
 596:Core/Src/main.c ****   */
 597:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 598:Core/Src/main.c ****   {
 599:Core/Src/main.c ****     Error_Handler();
 600:Core/Src/main.c ****   }
 601:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 602:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 12


 603:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** }
 606:Core/Src/main.c **** 
 607:Core/Src/main.c **** 
 608:Core/Src/main.c **** /**
 609:Core/Src/main.c ****   * @brief SDMMC2 Initialization Function
 610:Core/Src/main.c ****   * @param None
 611:Core/Src/main.c ****   * @retval None
 612:Core/Src/main.c ****   */
 613:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void)
 614:Core/Src/main.c **** {
  27              		.loc 1 614 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 0 */
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 0 */
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 1 */
 621:Core/Src/main.c **** 
 622:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 1 */
 623:Core/Src/main.c ****   hsd2.Instance = SDMMC2;
  32              		.loc 1 623 3 view .LVU1
  33              		.loc 1 623 17 is_stmt 0 view .LVU2
  34 0000 064B     		ldr	r3, .L2
  35 0002 074A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
 624:Core/Src/main.c ****   hsd2.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 624 3 is_stmt 1 view .LVU3
  38              		.loc 1 624 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
 625:Core/Src/main.c ****   hsd2.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 625 3 is_stmt 1 view .LVU5
  42              		.loc 1 625 28 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
 626:Core/Src/main.c ****   hsd2.Init.BusWide = SDMMC_BUS_WIDE_4B;
  44              		.loc 1 626 3 is_stmt 1 view .LVU7
  45              		.loc 1 626 21 is_stmt 0 view .LVU8
  46 000c 4FF48041 		mov	r1, #16384
  47 0010 D960     		str	r1, [r3, #12]
 627:Core/Src/main.c ****   hsd2.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  48              		.loc 1 627 3 is_stmt 1 view .LVU9
  49              		.loc 1 627 33 is_stmt 0 view .LVU10
  50 0012 1A61     		str	r2, [r3, #16]
 628:Core/Src/main.c ****   hsd2.Init.ClockDiv = 8;
  51              		.loc 1 628 3 is_stmt 1 view .LVU11
  52              		.loc 1 628 22 is_stmt 0 view .LVU12
  53 0014 0822     		movs	r2, #8
  54 0016 5A61     		str	r2, [r3, #20]
 629:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 2 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 2 */
ARM GAS  /tmp/ccr4Jxlr.s 			page 13


 632:Core/Src/main.c **** 
 633:Core/Src/main.c **** }
  55              		.loc 1 633 1 view .LVU13
  56 0018 7047     		bx	lr
  57              	.L3:
  58 001a 00BF     		.align	2
  59              	.L2:
  60 001c 00000000 		.word	hsd2
  61 0020 00240248 		.word	1208099840
  62              		.cfi_endproc
  63              	.LFE367:
  65              		.section	.text.MX_GPIO_Init,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-d16
  72              	MX_GPIO_Init:
  73              	.LFB380:
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** /**
 636:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 637:Core/Src/main.c ****   * @param None
 638:Core/Src/main.c ****   * @retval None
 639:Core/Src/main.c ****   */
 640:Core/Src/main.c **** static void MX_SPI1_Init(void)
 641:Core/Src/main.c **** {
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 650:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 651:Core/Src/main.c ****   hspi1.Instance = SPI1;
 652:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 653:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 654:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 655:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 656:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 657:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 658:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 659:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 660:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 661:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 662:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 663:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 664:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 665:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 666:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 667:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 668:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 669:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 670:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 671:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
ARM GAS  /tmp/ccr4Jxlr.s 			page 14


 672:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 673:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 674:Core/Src/main.c ****   {
 675:Core/Src/main.c ****     Error_Handler();
 676:Core/Src/main.c ****   }
 677:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 680:Core/Src/main.c **** 
 681:Core/Src/main.c **** }
 682:Core/Src/main.c **** 
 683:Core/Src/main.c **** /**
 684:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 685:Core/Src/main.c ****   * @param None
 686:Core/Src/main.c ****   * @retval None
 687:Core/Src/main.c ****   */
 688:Core/Src/main.c **** static void MX_SPI2_Init(void)
 689:Core/Src/main.c **** {
 690:Core/Src/main.c **** 
 691:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 698:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 699:Core/Src/main.c ****   hspi2.Instance = SPI2;
 700:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 701:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 702:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 703:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 704:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 705:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 706:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 707:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 708:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 709:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 710:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 711:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 712:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 713:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 714:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 715:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 716:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 717:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 718:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 719:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 720:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 721:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 722:Core/Src/main.c ****   {
 723:Core/Src/main.c ****     Error_Handler();
 724:Core/Src/main.c ****   }
 725:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 728:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 15


 729:Core/Src/main.c **** }
 730:Core/Src/main.c **** 
 731:Core/Src/main.c **** /**
 732:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 733:Core/Src/main.c ****   * @param None
 734:Core/Src/main.c ****   * @retval None
 735:Core/Src/main.c ****   */
 736:Core/Src/main.c **** static void MX_SPI3_Init(void)
 737:Core/Src/main.c **** {
 738:Core/Src/main.c **** 
 739:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 742:Core/Src/main.c **** 
 743:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 746:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 747:Core/Src/main.c ****   hspi3.Instance = SPI3;
 748:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 749:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 750:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 751:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 752:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 753:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 754:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 755:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 756:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 757:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 758:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 759:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 760:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 761:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 762:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 763:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 764:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 765:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 766:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 767:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 768:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 769:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 770:Core/Src/main.c ****   {
 771:Core/Src/main.c ****     Error_Handler();
 772:Core/Src/main.c ****   }
 773:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 774:Core/Src/main.c **** 
 775:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 776:Core/Src/main.c **** 
 777:Core/Src/main.c **** }
 778:Core/Src/main.c **** 
 779:Core/Src/main.c **** /**
 780:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 781:Core/Src/main.c ****   * @param None
 782:Core/Src/main.c ****   * @retval None
 783:Core/Src/main.c ****   */
 784:Core/Src/main.c **** static void MX_TIM2_Init(void)
 785:Core/Src/main.c **** {
ARM GAS  /tmp/ccr4Jxlr.s 			page 16


 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 790:Core/Src/main.c **** 
 791:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 792:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 793:Core/Src/main.c **** 
 794:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 795:Core/Src/main.c **** 
 796:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 797:Core/Src/main.c ****   htim2.Instance = TIM2;
 798:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 799:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800:Core/Src/main.c ****   htim2.Init.Period = 90;
 801:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 802:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 803:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 804:Core/Src/main.c ****   {
 805:Core/Src/main.c ****     Error_Handler();
 806:Core/Src/main.c ****   }
 807:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 808:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 809:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 810:Core/Src/main.c ****   {
 811:Core/Src/main.c ****     Error_Handler();
 812:Core/Src/main.c ****   }
 813:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 814:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 815:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 816:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 817:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 818:Core/Src/main.c ****   {
 819:Core/Src/main.c ****     Error_Handler();
 820:Core/Src/main.c ****   }
 821:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 822:Core/Src/main.c **** 
 823:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 824:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 825:Core/Src/main.c **** 
 826:Core/Src/main.c **** }
 827:Core/Src/main.c **** 
 828:Core/Src/main.c **** /**
 829:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 830:Core/Src/main.c ****   * @param None
 831:Core/Src/main.c ****   * @retval None
 832:Core/Src/main.c ****   */
 833:Core/Src/main.c **** static void MX_TIM3_Init(void)
 834:Core/Src/main.c **** {
 835:Core/Src/main.c **** 
 836:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 837:Core/Src/main.c **** 
 838:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 839:Core/Src/main.c **** 
 840:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 841:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 842:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 17


 843:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 844:Core/Src/main.c **** 
 845:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 846:Core/Src/main.c ****   htim3.Instance = TIM3;
 847:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 848:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 849:Core/Src/main.c ****   htim3.Init.Period = 90;
 850:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 851:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 852:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 853:Core/Src/main.c ****   {
 854:Core/Src/main.c ****     Error_Handler();
 855:Core/Src/main.c ****   }
 856:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 857:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 858:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 859:Core/Src/main.c ****   {
 860:Core/Src/main.c ****     Error_Handler();
 861:Core/Src/main.c ****   }
 862:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 863:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 864:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 865:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 866:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 867:Core/Src/main.c ****   {
 868:Core/Src/main.c ****     Error_Handler();
 869:Core/Src/main.c ****   }
 870:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 871:Core/Src/main.c ****   {
 872:Core/Src/main.c ****     Error_Handler();
 873:Core/Src/main.c ****   }
 874:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 875:Core/Src/main.c **** 
 876:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 877:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 878:Core/Src/main.c **** 
 879:Core/Src/main.c **** }
 880:Core/Src/main.c **** 
 881:Core/Src/main.c **** /**
 882:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 883:Core/Src/main.c ****   * @param None
 884:Core/Src/main.c ****   * @retval None
 885:Core/Src/main.c ****   */
 886:Core/Src/main.c **** static void MX_TIM4_Init(void)
 887:Core/Src/main.c **** {
 888:Core/Src/main.c **** 
 889:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 890:Core/Src/main.c **** 
 891:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 892:Core/Src/main.c **** 
 893:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 894:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 895:Core/Src/main.c **** 
 896:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 897:Core/Src/main.c **** 
 898:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 899:Core/Src/main.c ****   htim4.Instance = TIM4;
ARM GAS  /tmp/ccr4Jxlr.s 			page 18


 900:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 901:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 902:Core/Src/main.c ****   htim4.Init.Period = 9999;
 903:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 904:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 905:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 906:Core/Src/main.c ****   {
 907:Core/Src/main.c ****     Error_Handler();
 908:Core/Src/main.c ****   }
 909:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 910:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 911:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 912:Core/Src/main.c ****   {
 913:Core/Src/main.c ****     Error_Handler();
 914:Core/Src/main.c ****   }
 915:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 916:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 917:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 918:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 919:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 920:Core/Src/main.c ****   {
 921:Core/Src/main.c ****     Error_Handler();
 922:Core/Src/main.c ****   }
 923:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 924:Core/Src/main.c ****   {
 925:Core/Src/main.c ****     Error_Handler();
 926:Core/Src/main.c ****   }
 927:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 928:Core/Src/main.c ****   {
 929:Core/Src/main.c ****     Error_Handler();
 930:Core/Src/main.c ****   }
 931:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 932:Core/Src/main.c ****   {
 933:Core/Src/main.c ****     Error_Handler();
 934:Core/Src/main.c ****   }
 935:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 936:Core/Src/main.c **** 
 937:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 938:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
 939:Core/Src/main.c **** 
 940:Core/Src/main.c **** }
 941:Core/Src/main.c **** 
 942:Core/Src/main.c **** /**
 943:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 944:Core/Src/main.c ****   * @param None
 945:Core/Src/main.c ****   * @retval None
 946:Core/Src/main.c ****   */
 947:Core/Src/main.c **** static void MX_TIM5_Init(void)
 948:Core/Src/main.c **** {
 949:Core/Src/main.c **** 
 950:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 951:Core/Src/main.c **** 
 952:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 953:Core/Src/main.c **** 
 954:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 955:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 956:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 19


 957:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 958:Core/Src/main.c **** 
 959:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 960:Core/Src/main.c ****   htim5.Instance = TIM5;
 961:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 962:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 963:Core/Src/main.c ****   htim5.Init.Period = 90;
 964:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 965:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 966:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 967:Core/Src/main.c ****   {
 968:Core/Src/main.c ****     Error_Handler();
 969:Core/Src/main.c ****   }
 970:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 971:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 972:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 973:Core/Src/main.c ****   {
 974:Core/Src/main.c ****     Error_Handler();
 975:Core/Src/main.c ****   }
 976:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 977:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 978:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 979:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 980:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 981:Core/Src/main.c ****   {
 982:Core/Src/main.c ****     Error_Handler();
 983:Core/Src/main.c ****   }
 984:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 985:Core/Src/main.c **** 
 986:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 987:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
 988:Core/Src/main.c **** 
 989:Core/Src/main.c **** }
 990:Core/Src/main.c **** 
 991:Core/Src/main.c **** /**
 992:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 993:Core/Src/main.c ****   * @param None
 994:Core/Src/main.c ****   * @retval None
 995:Core/Src/main.c ****   */
 996:Core/Src/main.c **** static void MX_TIM13_Init(void)
 997:Core/Src/main.c **** {
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
1000:Core/Src/main.c **** 
1001:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
1002:Core/Src/main.c **** 
1003:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
1004:Core/Src/main.c **** 
1005:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
1006:Core/Src/main.c ****   htim13.Instance = TIM13;
1007:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
1008:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
1009:Core/Src/main.c ****   htim13.Init.Period = 65535;
1010:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1011:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1012:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
1013:Core/Src/main.c ****   {
ARM GAS  /tmp/ccr4Jxlr.s 			page 20


1014:Core/Src/main.c ****     Error_Handler();
1015:Core/Src/main.c ****   }
1016:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
1017:Core/Src/main.c **** 
1018:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
1019:Core/Src/main.c **** 
1020:Core/Src/main.c **** }
1021:Core/Src/main.c **** 
1022:Core/Src/main.c **** /**
1023:Core/Src/main.c ****   * @brief TIM14 Initialization Function
1024:Core/Src/main.c ****   * @param None
1025:Core/Src/main.c ****   * @retval None
1026:Core/Src/main.c ****   */
1027:Core/Src/main.c **** static void MX_TIM14_Init(void)
1028:Core/Src/main.c **** {
1029:Core/Src/main.c **** 
1030:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
1031:Core/Src/main.c **** 
1032:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
1033:Core/Src/main.c **** 
1034:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
1035:Core/Src/main.c **** 
1036:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
1037:Core/Src/main.c ****   htim14.Instance = TIM14;
1038:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
1039:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
1040:Core/Src/main.c ****   htim14.Init.Period = 65535;
1041:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1042:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1043:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
1044:Core/Src/main.c ****   {
1045:Core/Src/main.c ****     Error_Handler();
1046:Core/Src/main.c ****   }
1047:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
1048:Core/Src/main.c **** 
1049:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
1050:Core/Src/main.c **** 
1051:Core/Src/main.c **** }
1052:Core/Src/main.c **** 
1053:Core/Src/main.c **** /**
1054:Core/Src/main.c ****   * @brief UART4 Initialization Function
1055:Core/Src/main.c ****   * @param None
1056:Core/Src/main.c ****   * @retval None
1057:Core/Src/main.c ****   */
1058:Core/Src/main.c **** static void MX_UART4_Init(void)
1059:Core/Src/main.c **** {
1060:Core/Src/main.c **** 
1061:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
1062:Core/Src/main.c **** 
1063:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
1064:Core/Src/main.c **** 
1065:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
1066:Core/Src/main.c **** 
1067:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
1068:Core/Src/main.c ****   huart4.Instance = UART4;
1069:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
1070:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccr4Jxlr.s 			page 21


1071:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
1072:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
1073:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
1074:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1075:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
1076:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1077:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1078:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1079:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
1080:Core/Src/main.c ****   {
1081:Core/Src/main.c ****     Error_Handler();
1082:Core/Src/main.c ****   }
1083:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1084:Core/Src/main.c ****   {
1085:Core/Src/main.c ****     Error_Handler();
1086:Core/Src/main.c ****   }
1087:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1088:Core/Src/main.c ****   {
1089:Core/Src/main.c ****     Error_Handler();
1090:Core/Src/main.c ****   }
1091:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
1092:Core/Src/main.c ****   {
1093:Core/Src/main.c ****     Error_Handler();
1094:Core/Src/main.c ****   }
1095:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
1096:Core/Src/main.c **** 
1097:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
1098:Core/Src/main.c **** 
1099:Core/Src/main.c **** }
1100:Core/Src/main.c **** 
1101:Core/Src/main.c **** /**
1102:Core/Src/main.c ****   * @brief USART6 Initialization Function
1103:Core/Src/main.c ****   * @param None
1104:Core/Src/main.c ****   * @retval None
1105:Core/Src/main.c ****   */
1106:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
1107:Core/Src/main.c **** {
1108:Core/Src/main.c **** 
1109:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
1110:Core/Src/main.c **** 
1111:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
1112:Core/Src/main.c **** 
1113:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
1114:Core/Src/main.c **** 
1115:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
1116:Core/Src/main.c ****   huart6.Instance = USART6;
1117:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
1118:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1119:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
1120:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
1121:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
1122:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1123:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1124:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1125:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1126:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1127:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
ARM GAS  /tmp/ccr4Jxlr.s 			page 22


1128:Core/Src/main.c ****   {
1129:Core/Src/main.c ****     Error_Handler();
1130:Core/Src/main.c ****   }
1131:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart6, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1132:Core/Src/main.c ****   {
1133:Core/Src/main.c ****     Error_Handler();
1134:Core/Src/main.c ****   }
1135:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart6, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1136:Core/Src/main.c ****   {
1137:Core/Src/main.c ****     Error_Handler();
1138:Core/Src/main.c ****   }
1139:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart6) != HAL_OK)
1140:Core/Src/main.c ****   {
1141:Core/Src/main.c ****     Error_Handler();
1142:Core/Src/main.c ****   }
1143:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
1144:Core/Src/main.c **** 
1145:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
1146:Core/Src/main.c **** 
1147:Core/Src/main.c **** }
1148:Core/Src/main.c **** 
1149:Core/Src/main.c **** /**
1150:Core/Src/main.c ****   * Enable DMA controller clock
1151:Core/Src/main.c ****   */
1152:Core/Src/main.c **** static void MX_DMA_Init(void)
1153:Core/Src/main.c **** {
1154:Core/Src/main.c **** 
1155:Core/Src/main.c ****   /* DMA controller clock enable */
1156:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
1157:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
1158:Core/Src/main.c **** 
1159:Core/Src/main.c ****   /* DMA interrupt init */
1160:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
1161:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
1162:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
1163:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
1164:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
1165:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
1166:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
1167:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
1168:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
1169:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
1170:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
1171:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
1172:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
1173:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
1174:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
1175:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
1176:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
1177:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
1178:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
1179:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
1180:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
1181:Core/Src/main.c **** 
1182:Core/Src/main.c **** }
1183:Core/Src/main.c **** 
1184:Core/Src/main.c **** /**
ARM GAS  /tmp/ccr4Jxlr.s 			page 23


1185:Core/Src/main.c ****   * @brief GPIO Initialization Function
1186:Core/Src/main.c ****   * @param None
1187:Core/Src/main.c ****   * @retval None
1188:Core/Src/main.c ****   */
1189:Core/Src/main.c **** static void MX_GPIO_Init(void)
1190:Core/Src/main.c **** {
  74              		.loc 1 1190 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 48
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 36
  81              		.cfi_offset 4, -36
  82              		.cfi_offset 5, -32
  83              		.cfi_offset 6, -28
  84              		.cfi_offset 7, -24
  85              		.cfi_offset 8, -20
  86              		.cfi_offset 9, -16
  87              		.cfi_offset 10, -12
  88              		.cfi_offset 11, -8
  89              		.cfi_offset 14, -4
  90 0004 8DB0     		sub	sp, sp, #52
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 88
1191:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  93              		.loc 1 1191 3 view .LVU15
  94              		.loc 1 1191 20 is_stmt 0 view .LVU16
  95 0006 0024     		movs	r4, #0
  96 0008 0794     		str	r4, [sp, #28]
  97 000a 0894     		str	r4, [sp, #32]
  98 000c 0994     		str	r4, [sp, #36]
  99 000e 0A94     		str	r4, [sp, #40]
 100 0010 0B94     		str	r4, [sp, #44]
1192:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1193:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1194:Core/Src/main.c **** 
1195:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1196:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 101              		.loc 1 1196 3 is_stmt 1 view .LVU17
 102              	.LBB4:
 103              		.loc 1 1196 3 view .LVU18
 104              		.loc 1 1196 3 view .LVU19
 105 0012 824B     		ldr	r3, .L6
 106 0014 D3F8E020 		ldr	r2, [r3, #224]
 107 0018 42F01002 		orr	r2, r2, #16
 108 001c C3F8E020 		str	r2, [r3, #224]
 109              		.loc 1 1196 3 view .LVU20
 110 0020 D3F8E020 		ldr	r2, [r3, #224]
 111 0024 02F01002 		and	r2, r2, #16
 112 0028 0092     		str	r2, [sp]
 113              		.loc 1 1196 3 view .LVU21
 114 002a 009A     		ldr	r2, [sp]
 115              	.LBE4:
 116              		.loc 1 1196 3 view .LVU22
1197:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 117              		.loc 1 1197 3 view .LVU23
ARM GAS  /tmp/ccr4Jxlr.s 			page 24


 118              	.LBB5:
 119              		.loc 1 1197 3 view .LVU24
 120              		.loc 1 1197 3 view .LVU25
 121 002c D3F8E020 		ldr	r2, [r3, #224]
 122 0030 42F02002 		orr	r2, r2, #32
 123 0034 C3F8E020 		str	r2, [r3, #224]
 124              		.loc 1 1197 3 view .LVU26
 125 0038 D3F8E020 		ldr	r2, [r3, #224]
 126 003c 02F02002 		and	r2, r2, #32
 127 0040 0192     		str	r2, [sp, #4]
 128              		.loc 1 1197 3 view .LVU27
 129 0042 019A     		ldr	r2, [sp, #4]
 130              	.LBE5:
 131              		.loc 1 1197 3 view .LVU28
1198:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 132              		.loc 1 1198 3 view .LVU29
 133              	.LBB6:
 134              		.loc 1 1198 3 view .LVU30
 135              		.loc 1 1198 3 view .LVU31
 136 0044 D3F8E020 		ldr	r2, [r3, #224]
 137 0048 42F00402 		orr	r2, r2, #4
 138 004c C3F8E020 		str	r2, [r3, #224]
 139              		.loc 1 1198 3 view .LVU32
 140 0050 D3F8E020 		ldr	r2, [r3, #224]
 141 0054 02F00402 		and	r2, r2, #4
 142 0058 0292     		str	r2, [sp, #8]
 143              		.loc 1 1198 3 view .LVU33
 144 005a 029A     		ldr	r2, [sp, #8]
 145              	.LBE6:
 146              		.loc 1 1198 3 view .LVU34
1199:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 147              		.loc 1 1199 3 view .LVU35
 148              	.LBB7:
 149              		.loc 1 1199 3 view .LVU36
 150              		.loc 1 1199 3 view .LVU37
 151 005c D3F8E020 		ldr	r2, [r3, #224]
 152 0060 42F00102 		orr	r2, r2, #1
 153 0064 C3F8E020 		str	r2, [r3, #224]
 154              		.loc 1 1199 3 view .LVU38
 155 0068 D3F8E020 		ldr	r2, [r3, #224]
 156 006c 02F00102 		and	r2, r2, #1
 157 0070 0392     		str	r2, [sp, #12]
 158              		.loc 1 1199 3 view .LVU39
 159 0072 039A     		ldr	r2, [sp, #12]
 160              	.LBE7:
 161              		.loc 1 1199 3 view .LVU40
1200:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 162              		.loc 1 1200 3 view .LVU41
 163              	.LBB8:
 164              		.loc 1 1200 3 view .LVU42
 165              		.loc 1 1200 3 view .LVU43
 166 0074 D3F8E020 		ldr	r2, [r3, #224]
 167 0078 42F00202 		orr	r2, r2, #2
 168 007c C3F8E020 		str	r2, [r3, #224]
 169              		.loc 1 1200 3 view .LVU44
 170 0080 D3F8E020 		ldr	r2, [r3, #224]
 171 0084 02F00202 		and	r2, r2, #2
ARM GAS  /tmp/ccr4Jxlr.s 			page 25


 172 0088 0492     		str	r2, [sp, #16]
 173              		.loc 1 1200 3 view .LVU45
 174 008a 049A     		ldr	r2, [sp, #16]
 175              	.LBE8:
 176              		.loc 1 1200 3 view .LVU46
1201:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 177              		.loc 1 1201 3 view .LVU47
 178              	.LBB9:
 179              		.loc 1 1201 3 view .LVU48
 180              		.loc 1 1201 3 view .LVU49
 181 008c D3F8E020 		ldr	r2, [r3, #224]
 182 0090 42F04002 		orr	r2, r2, #64
 183 0094 C3F8E020 		str	r2, [r3, #224]
 184              		.loc 1 1201 3 view .LVU50
 185 0098 D3F8E020 		ldr	r2, [r3, #224]
 186 009c 02F04002 		and	r2, r2, #64
 187 00a0 0592     		str	r2, [sp, #20]
 188              		.loc 1 1201 3 view .LVU51
 189 00a2 059A     		ldr	r2, [sp, #20]
 190              	.LBE9:
 191              		.loc 1 1201 3 view .LVU52
1202:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 192              		.loc 1 1202 3 view .LVU53
 193              	.LBB10:
 194              		.loc 1 1202 3 view .LVU54
 195              		.loc 1 1202 3 view .LVU55
 196 00a4 D3F8E020 		ldr	r2, [r3, #224]
 197 00a8 42F00802 		orr	r2, r2, #8
 198 00ac C3F8E020 		str	r2, [r3, #224]
 199              		.loc 1 1202 3 view .LVU56
 200 00b0 D3F8E030 		ldr	r3, [r3, #224]
 201 00b4 03F00803 		and	r3, r3, #8
 202 00b8 0693     		str	r3, [sp, #24]
 203              		.loc 1 1202 3 view .LVU57
 204 00ba 069B     		ldr	r3, [sp, #24]
 205              	.LBE10:
 206              		.loc 1 1202 3 view .LVU58
1203:Core/Src/main.c **** 
1204:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1205:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin, GPIO_PIN_RESET);
 207              		.loc 1 1205 3 view .LVU59
 208 00bc DFF86C81 		ldr	r8, .L6+16
 209 00c0 2246     		mov	r2, r4
 210 00c2 41F20451 		movw	r1, #5380
 211 00c6 4046     		mov	r0, r8
 212 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL0:
1206:Core/Src/main.c **** 
1207:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1208:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ARM1_Pin|GPIO_PIN_15, GPIO_PIN_RESET);
 214              		.loc 1 1208 3 view .LVU60
 215 00cc 544F     		ldr	r7, .L6+4
 216 00ce 2246     		mov	r2, r4
 217 00d0 48F20201 		movw	r1, #32770
 218 00d4 3846     		mov	r0, r7
 219 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL1:
ARM GAS  /tmp/ccr4Jxlr.s 			page 26


1209:Core/Src/main.c **** 
1210:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1211:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 221              		.loc 1 1211 3 view .LVU61
 222 00da DFF854B1 		ldr	fp, .L6+20
 223 00de 2246     		mov	r2, r4
 224 00e0 3021     		movs	r1, #48
 225 00e2 5846     		mov	r0, fp
 226 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL2:
1212:Core/Src/main.c **** 
1213:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1214:Core/Src/main.c ****   HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, GPIO_PIN_RESET);
 228              		.loc 1 1214 3 view .LVU62
 229 00e8 DFF848A1 		ldr	r10, .L6+24
 230 00ec 2246     		mov	r2, r4
 231 00ee 0221     		movs	r1, #2
 232 00f0 5046     		mov	r0, r10
 233 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL3:
1215:Core/Src/main.c **** 
1216:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1217:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, PYRO2_Pin|PYRO3_Pin|PYRO4_Pin, GPIO_PIN_RESET);
 235              		.loc 1 1217 3 view .LVU63
 236 00f6 DFF84091 		ldr	r9, .L6+28
 237 00fa 2246     		mov	r2, r4
 238 00fc 4FF42841 		mov	r1, #43008
 239 0100 4846     		mov	r0, r9
 240 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL4:
1218:Core/Src/main.c **** 
1219:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1220:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3, GPIO_PIN_RESET);
 242              		.loc 1 1220 3 view .LVU64
 243 0106 474E     		ldr	r6, .L6+8
 244 0108 2246     		mov	r2, r4
 245 010a 0E21     		movs	r1, #14
 246 010c 3046     		mov	r0, r6
 247 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL5:
1221:Core/Src/main.c **** 
1222:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1223:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0, GPIO_PIN_RESET);
 249              		.loc 1 1223 3 view .LVU65
 250 0112 2246     		mov	r2, r4
 251 0114 40F20131 		movw	r1, #769
 252 0118 4348     		ldr	r0, .L6+12
 253 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL6:
1224:Core/Src/main.c **** 
1225:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PYRO6_Pin PYRO7_Pin PYRO8_Pin */
1226:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin;
 255              		.loc 1 1226 3 view .LVU66
 256              		.loc 1 1226 23 is_stmt 0 view .LVU67
 257 011e 41F20453 		movw	r3, #5380
 258 0122 0793     		str	r3, [sp, #28]
1227:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccr4Jxlr.s 			page 27


 259              		.loc 1 1227 3 is_stmt 1 view .LVU68
 260              		.loc 1 1227 24 is_stmt 0 view .LVU69
 261 0124 0125     		movs	r5, #1
 262 0126 0895     		str	r5, [sp, #32]
1228:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 1228 3 is_stmt 1 view .LVU70
 264              		.loc 1 1228 24 is_stmt 0 view .LVU71
 265 0128 0994     		str	r4, [sp, #36]
1229:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 266              		.loc 1 1229 3 is_stmt 1 view .LVU72
 267              		.loc 1 1229 25 is_stmt 0 view .LVU73
 268 012a 0A94     		str	r4, [sp, #40]
1230:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 269              		.loc 1 1230 3 is_stmt 1 view .LVU74
 270 012c 07A9     		add	r1, sp, #28
 271 012e 4046     		mov	r0, r8
 272 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL7:
1231:Core/Src/main.c **** 
1232:Core/Src/main.c ****   /*Configure GPIO pins : ARM1_Pin PA15 */
1233:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARM1_Pin|GPIO_PIN_15;
 274              		.loc 1 1233 3 view .LVU75
 275              		.loc 1 1233 23 is_stmt 0 view .LVU76
 276 0134 48F20203 		movw	r3, #32770
 277 0138 0793     		str	r3, [sp, #28]
1234:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 278              		.loc 1 1234 3 is_stmt 1 view .LVU77
 279              		.loc 1 1234 24 is_stmt 0 view .LVU78
 280 013a 0895     		str	r5, [sp, #32]
1235:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 281              		.loc 1 1235 3 is_stmt 1 view .LVU79
 282              		.loc 1 1235 24 is_stmt 0 view .LVU80
 283 013c 0994     		str	r4, [sp, #36]
1236:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 284              		.loc 1 1236 3 is_stmt 1 view .LVU81
 285              		.loc 1 1236 25 is_stmt 0 view .LVU82
 286 013e 0A94     		str	r4, [sp, #40]
1237:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 287              		.loc 1 1237 3 is_stmt 1 view .LVU83
 288 0140 07A9     		add	r1, sp, #28
 289 0142 3846     		mov	r0, r7
 290 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 291              	.LVL8:
1238:Core/Src/main.c **** 
1239:Core/Src/main.c ****   /*Configure GPIO pins : PC4 PC5 */
1240:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 292              		.loc 1 1240 3 view .LVU84
 293              		.loc 1 1240 23 is_stmt 0 view .LVU85
 294 0148 3023     		movs	r3, #48
 295 014a 0793     		str	r3, [sp, #28]
1241:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 296              		.loc 1 1241 3 is_stmt 1 view .LVU86
 297              		.loc 1 1241 24 is_stmt 0 view .LVU87
 298 014c 0895     		str	r5, [sp, #32]
1242:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 1242 3 is_stmt 1 view .LVU88
 300              		.loc 1 1242 24 is_stmt 0 view .LVU89
ARM GAS  /tmp/ccr4Jxlr.s 			page 28


 301 014e 0994     		str	r4, [sp, #36]
1243:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 302              		.loc 1 1243 3 is_stmt 1 view .LVU90
 303              		.loc 1 1243 25 is_stmt 0 view .LVU91
 304 0150 0A94     		str	r4, [sp, #40]
1244:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 305              		.loc 1 1244 3 is_stmt 1 view .LVU92
 306 0152 07A9     		add	r1, sp, #28
 307 0154 5846     		mov	r0, fp
 308 0156 FFF7FEFF 		bl	HAL_GPIO_Init
 309              	.LVL9:
1245:Core/Src/main.c **** 
1246:Core/Src/main.c ****   /*Configure GPIO pin : PYRO1_Pin */
1247:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO1_Pin;
 310              		.loc 1 1247 3 view .LVU93
 311              		.loc 1 1247 23 is_stmt 0 view .LVU94
 312 015a 4FF0020B 		mov	fp, #2
 313 015e CDF81CB0 		str	fp, [sp, #28]
1248:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 314              		.loc 1 1248 3 is_stmt 1 view .LVU95
 315              		.loc 1 1248 24 is_stmt 0 view .LVU96
 316 0162 0895     		str	r5, [sp, #32]
1249:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 317              		.loc 1 1249 3 is_stmt 1 view .LVU97
 318              		.loc 1 1249 24 is_stmt 0 view .LVU98
 319 0164 0994     		str	r4, [sp, #36]
1250:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 320              		.loc 1 1250 3 is_stmt 1 view .LVU99
 321              		.loc 1 1250 25 is_stmt 0 view .LVU100
 322 0166 0A94     		str	r4, [sp, #40]
1251:Core/Src/main.c ****   HAL_GPIO_Init(PYRO1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 1251 3 is_stmt 1 view .LVU101
 324 0168 07A9     		add	r1, sp, #28
 325 016a 5046     		mov	r0, r10
 326 016c FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL10:
1252:Core/Src/main.c **** 
1253:Core/Src/main.c ****   /*Configure GPIO pin : CONT1_Pin */
1254:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT1_Pin;
 328              		.loc 1 1254 3 view .LVU102
 329              		.loc 1 1254 23 is_stmt 0 view .LVU103
 330 0170 0423     		movs	r3, #4
 331 0172 0793     		str	r3, [sp, #28]
1255:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 332              		.loc 1 1255 3 is_stmt 1 view .LVU104
 333              		.loc 1 1255 24 is_stmt 0 view .LVU105
 334 0174 0894     		str	r4, [sp, #32]
1256:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 335              		.loc 1 1256 3 is_stmt 1 view .LVU106
 336              		.loc 1 1256 24 is_stmt 0 view .LVU107
 337 0176 0995     		str	r5, [sp, #36]
1257:Core/Src/main.c ****   HAL_GPIO_Init(CONT1_GPIO_Port, &GPIO_InitStruct);
 338              		.loc 1 1257 3 is_stmt 1 view .LVU108
 339 0178 07A9     		add	r1, sp, #28
 340 017a 5046     		mov	r0, r10
 341 017c FFF7FEFF 		bl	HAL_GPIO_Init
 342              	.LVL11:
ARM GAS  /tmp/ccr4Jxlr.s 			page 29


1258:Core/Src/main.c **** 
1259:Core/Src/main.c ****   /*Configure GPIO pins : PYRO2_Pin PYRO3_Pin PYRO4_Pin */
1260:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO2_Pin|PYRO3_Pin|PYRO4_Pin;
 343              		.loc 1 1260 3 view .LVU109
 344              		.loc 1 1260 23 is_stmt 0 view .LVU110
 345 0180 4FF42843 		mov	r3, #43008
 346 0184 0793     		str	r3, [sp, #28]
1261:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 347              		.loc 1 1261 3 is_stmt 1 view .LVU111
 348              		.loc 1 1261 24 is_stmt 0 view .LVU112
 349 0186 0895     		str	r5, [sp, #32]
1262:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 1262 3 is_stmt 1 view .LVU113
 351              		.loc 1 1262 24 is_stmt 0 view .LVU114
 352 0188 0994     		str	r4, [sp, #36]
1263:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 353              		.loc 1 1263 3 is_stmt 1 view .LVU115
 354              		.loc 1 1263 25 is_stmt 0 view .LVU116
 355 018a 0A94     		str	r4, [sp, #40]
1264:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 356              		.loc 1 1264 3 is_stmt 1 view .LVU117
 357 018c 07A9     		add	r1, sp, #28
 358 018e 4846     		mov	r0, r9
 359 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL12:
1265:Core/Src/main.c **** 
1266:Core/Src/main.c ****   /*Configure GPIO pins : CONT2_Pin CONT3_Pin */
1267:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT2_Pin|CONT3_Pin;
 361              		.loc 1 1267 3 view .LVU118
 362              		.loc 1 1267 23 is_stmt 0 view .LVU119
 363 0194 4FF4A043 		mov	r3, #20480
 364 0198 0793     		str	r3, [sp, #28]
1268:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 365              		.loc 1 1268 3 is_stmt 1 view .LVU120
 366              		.loc 1 1268 24 is_stmt 0 view .LVU121
 367 019a 0894     		str	r4, [sp, #32]
1269:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 368              		.loc 1 1269 3 is_stmt 1 view .LVU122
 369              		.loc 1 1269 24 is_stmt 0 view .LVU123
 370 019c 0995     		str	r5, [sp, #36]
1270:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 371              		.loc 1 1270 3 is_stmt 1 view .LVU124
 372 019e 07A9     		add	r1, sp, #28
 373 01a0 4846     		mov	r0, r9
 374 01a2 FFF7FEFF 		bl	HAL_GPIO_Init
 375              	.LVL13:
1271:Core/Src/main.c **** 
1272:Core/Src/main.c ****   /*Configure GPIO pin : CONT4_Pin */
1273:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT4_Pin;
 376              		.loc 1 1273 3 view .LVU125
 377              		.loc 1 1273 23 is_stmt 0 view .LVU126
 378 01a6 0795     		str	r5, [sp, #28]
1274:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 379              		.loc 1 1274 3 is_stmt 1 view .LVU127
 380              		.loc 1 1274 24 is_stmt 0 view .LVU128
 381 01a8 0894     		str	r4, [sp, #32]
1275:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
ARM GAS  /tmp/ccr4Jxlr.s 			page 30


 382              		.loc 1 1275 3 is_stmt 1 view .LVU129
 383              		.loc 1 1275 24 is_stmt 0 view .LVU130
 384 01aa 0995     		str	r5, [sp, #36]
1276:Core/Src/main.c ****   HAL_GPIO_Init(CONT4_GPIO_Port, &GPIO_InitStruct);
 385              		.loc 1 1276 3 is_stmt 1 view .LVU131
 386 01ac 07A9     		add	r1, sp, #28
 387 01ae 3046     		mov	r0, r6
 388 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 389              	.LVL14:
1277:Core/Src/main.c **** 
1278:Core/Src/main.c ****   /*Configure GPIO pins : PYRO5_Pin PG2 PG3 */
1279:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3;
 390              		.loc 1 1279 3 view .LVU132
 391              		.loc 1 1279 23 is_stmt 0 view .LVU133
 392 01b4 0E23     		movs	r3, #14
 393 01b6 0793     		str	r3, [sp, #28]
1280:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 394              		.loc 1 1280 3 is_stmt 1 view .LVU134
 395              		.loc 1 1280 24 is_stmt 0 view .LVU135
 396 01b8 0895     		str	r5, [sp, #32]
1281:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 1281 3 is_stmt 1 view .LVU136
 398              		.loc 1 1281 24 is_stmt 0 view .LVU137
 399 01ba 0994     		str	r4, [sp, #36]
1282:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 400              		.loc 1 1282 3 is_stmt 1 view .LVU138
 401              		.loc 1 1282 25 is_stmt 0 view .LVU139
 402 01bc 0A94     		str	r4, [sp, #40]
1283:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 403              		.loc 1 1283 3 is_stmt 1 view .LVU140
 404 01be 07A9     		add	r1, sp, #28
 405 01c0 3046     		mov	r0, r6
 406 01c2 FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL15:
1284:Core/Src/main.c **** 
1285:Core/Src/main.c ****   /*Configure GPIO pins : CONT5_Pin CONT6_Pin CONT7_Pin CONT8_Pin */
1286:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT5_Pin|CONT6_Pin|CONT7_Pin|CONT8_Pin;
 408              		.loc 1 1286 3 view .LVU141
 409              		.loc 1 1286 23 is_stmt 0 view .LVU142
 410 01c6 4FF42A53 		mov	r3, #10880
 411 01ca 0793     		str	r3, [sp, #28]
1287:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 412              		.loc 1 1287 3 is_stmt 1 view .LVU143
 413              		.loc 1 1287 24 is_stmt 0 view .LVU144
 414 01cc 0894     		str	r4, [sp, #32]
1288:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 415              		.loc 1 1288 3 is_stmt 1 view .LVU145
 416              		.loc 1 1288 24 is_stmt 0 view .LVU146
 417 01ce 0995     		str	r5, [sp, #36]
1289:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 418              		.loc 1 1289 3 is_stmt 1 view .LVU147
 419 01d0 07A9     		add	r1, sp, #28
 420 01d2 4046     		mov	r0, r8
 421 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 422              	.LVL16:
1290:Core/Src/main.c **** 
1291:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD0 */
ARM GAS  /tmp/ccr4Jxlr.s 			page 31


1292:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0;
 423              		.loc 1 1292 3 view .LVU148
 424              		.loc 1 1292 23 is_stmt 0 view .LVU149
 425 01d8 40F20133 		movw	r3, #769
 426 01dc 0793     		str	r3, [sp, #28]
1293:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 427              		.loc 1 1293 3 is_stmt 1 view .LVU150
 428              		.loc 1 1293 24 is_stmt 0 view .LVU151
 429 01de 0895     		str	r5, [sp, #32]
1294:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 430              		.loc 1 1294 3 is_stmt 1 view .LVU152
 431              		.loc 1 1294 24 is_stmt 0 view .LVU153
 432 01e0 0994     		str	r4, [sp, #36]
1295:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 433              		.loc 1 1295 3 is_stmt 1 view .LVU154
 434              		.loc 1 1295 25 is_stmt 0 view .LVU155
 435 01e2 0A94     		str	r4, [sp, #40]
1296:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 436              		.loc 1 1296 3 is_stmt 1 view .LVU156
 437 01e4 07A9     		add	r1, sp, #28
 438 01e6 1048     		ldr	r0, .L6+12
 439 01e8 FFF7FEFF 		bl	HAL_GPIO_Init
 440              	.LVL17:
1297:Core/Src/main.c **** 
1298:Core/Src/main.c ****   /*Configure GPIO pin : Servo_ARM_CHECK_Pin */
1299:Core/Src/main.c ****   GPIO_InitStruct.Pin = Servo_ARM_CHECK_Pin;
 441              		.loc 1 1299 3 view .LVU157
 442              		.loc 1 1299 23 is_stmt 0 view .LVU158
 443 01ec 1023     		movs	r3, #16
 444 01ee 0793     		str	r3, [sp, #28]
1300:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 445              		.loc 1 1300 3 is_stmt 1 view .LVU159
 446              		.loc 1 1300 24 is_stmt 0 view .LVU160
 447 01f0 0894     		str	r4, [sp, #32]
1301:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 448              		.loc 1 1301 3 is_stmt 1 view .LVU161
 449              		.loc 1 1301 24 is_stmt 0 view .LVU162
 450 01f2 0994     		str	r4, [sp, #36]
1302:Core/Src/main.c ****   HAL_GPIO_Init(Servo_ARM_CHECK_GPIO_Port, &GPIO_InitStruct);
 451              		.loc 1 1302 3 is_stmt 1 view .LVU163
 452 01f4 07A9     		add	r1, sp, #28
 453 01f6 3046     		mov	r0, r6
 454 01f8 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL18:
1303:Core/Src/main.c **** 
1304:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
1305:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 456              		.loc 1 1305 3 view .LVU164
 457              		.loc 1 1305 23 is_stmt 0 view .LVU165
 458 01fc 4FF48073 		mov	r3, #256
 459 0200 0793     		str	r3, [sp, #28]
1306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 1306 3 is_stmt 1 view .LVU166
 461              		.loc 1 1306 24 is_stmt 0 view .LVU167
 462 0202 CDF820B0 		str	fp, [sp, #32]
1307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 1307 3 is_stmt 1 view .LVU168
ARM GAS  /tmp/ccr4Jxlr.s 			page 32


 464              		.loc 1 1307 24 is_stmt 0 view .LVU169
 465 0206 0994     		str	r4, [sp, #36]
1308:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 1308 3 is_stmt 1 view .LVU170
 467              		.loc 1 1308 25 is_stmt 0 view .LVU171
 468 0208 0A94     		str	r4, [sp, #40]
1309:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 469              		.loc 1 1309 3 is_stmt 1 view .LVU172
 470              		.loc 1 1309 29 is_stmt 0 view .LVU173
 471 020a 0B94     		str	r4, [sp, #44]
1310:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 472              		.loc 1 1310 3 is_stmt 1 view .LVU174
 473 020c 07A9     		add	r1, sp, #28
 474 020e 3846     		mov	r0, r7
 475 0210 FFF7FEFF 		bl	HAL_GPIO_Init
 476              	.LVL19:
1311:Core/Src/main.c **** 
1312:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1313:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1314:Core/Src/main.c **** }
 477              		.loc 1 1314 1 is_stmt 0 view .LVU175
 478 0214 0DB0     		add	sp, sp, #52
 479              	.LCFI2:
 480              		.cfi_def_cfa_offset 36
 481              		@ sp needed
 482 0216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 483              	.L7:
 484 021a 00BF     		.align	2
 485              	.L6:
 486 021c 00440258 		.word	1476543488
 487 0220 00000258 		.word	1476526080
 488 0224 00180258 		.word	1476532224
 489 0228 000C0258 		.word	1476529152
 490 022c 00100258 		.word	1476530176
 491 0230 00080258 		.word	1476528128
 492 0234 00040258 		.word	1476527104
 493 0238 00140258 		.word	1476531200
 494              		.cfi_endproc
 495              	.LFE380:
 497              		.section	.text.MX_DMA_Init,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	MX_DMA_Init:
 505              	.LFB379:
1153:Core/Src/main.c **** 
 506              		.loc 1 1153 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 00B5     		push	{lr}
 511              	.LCFI3:
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 14, -4
 514 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccr4Jxlr.s 			page 33


 515              	.LCFI4:
 516              		.cfi_def_cfa_offset 16
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 517              		.loc 1 1156 3 view .LVU177
 518              	.LBB11:
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 519              		.loc 1 1156 3 view .LVU178
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 520              		.loc 1 1156 3 view .LVU179
 521 0004 294B     		ldr	r3, .L10
 522 0006 D3F8D820 		ldr	r2, [r3, #216]
 523 000a 42F00102 		orr	r2, r2, #1
 524 000e C3F8D820 		str	r2, [r3, #216]
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 525              		.loc 1 1156 3 view .LVU180
 526 0012 D3F8D820 		ldr	r2, [r3, #216]
 527 0016 02F00102 		and	r2, r2, #1
 528 001a 0092     		str	r2, [sp]
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 529              		.loc 1 1156 3 view .LVU181
 530 001c 009A     		ldr	r2, [sp]
 531              	.LBE11:
1156:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 532              		.loc 1 1156 3 view .LVU182
1157:Core/Src/main.c **** 
 533              		.loc 1 1157 3 view .LVU183
 534              	.LBB12:
1157:Core/Src/main.c **** 
 535              		.loc 1 1157 3 view .LVU184
1157:Core/Src/main.c **** 
 536              		.loc 1 1157 3 view .LVU185
 537 001e D3F8D820 		ldr	r2, [r3, #216]
 538 0022 42F00202 		orr	r2, r2, #2
 539 0026 C3F8D820 		str	r2, [r3, #216]
1157:Core/Src/main.c **** 
 540              		.loc 1 1157 3 view .LVU186
 541 002a D3F8D830 		ldr	r3, [r3, #216]
 542 002e 03F00203 		and	r3, r3, #2
 543 0032 0193     		str	r3, [sp, #4]
1157:Core/Src/main.c **** 
 544              		.loc 1 1157 3 view .LVU187
 545 0034 019B     		ldr	r3, [sp, #4]
 546              	.LBE12:
1157:Core/Src/main.c **** 
 547              		.loc 1 1157 3 view .LVU188
1161:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 548              		.loc 1 1161 3 view .LVU189
 549 0036 0022     		movs	r2, #0
 550 0038 1146     		mov	r1, r2
 551 003a 0B20     		movs	r0, #11
 552 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 553              	.LVL20:
1162:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 554              		.loc 1 1162 3 view .LVU190
 555 0040 0B20     		movs	r0, #11
 556 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 557              	.LVL21:
ARM GAS  /tmp/ccr4Jxlr.s 			page 34


1164:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 558              		.loc 1 1164 3 view .LVU191
 559 0046 0022     		movs	r2, #0
 560 0048 1146     		mov	r1, r2
 561 004a 0C20     		movs	r0, #12
 562 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 563              	.LVL22:
1165:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 564              		.loc 1 1165 3 view .LVU192
 565 0050 0C20     		movs	r0, #12
 566 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 567              	.LVL23:
1167:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 568              		.loc 1 1167 3 view .LVU193
 569 0056 0022     		movs	r2, #0
 570 0058 1146     		mov	r1, r2
 571 005a 0D20     		movs	r0, #13
 572 005c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 573              	.LVL24:
1168:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
 574              		.loc 1 1168 3 view .LVU194
 575 0060 0D20     		movs	r0, #13
 576 0062 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 577              	.LVL25:
1170:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 578              		.loc 1 1170 3 view .LVU195
 579 0066 0022     		movs	r2, #0
 580 0068 1146     		mov	r1, r2
 581 006a 0E20     		movs	r0, #14
 582 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 583              	.LVL26:
1171:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 584              		.loc 1 1171 3 view .LVU196
 585 0070 0E20     		movs	r0, #14
 586 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 587              	.LVL27:
1173:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 588              		.loc 1 1173 3 view .LVU197
 589 0076 0022     		movs	r2, #0
 590 0078 1146     		mov	r1, r2
 591 007a 0F20     		movs	r0, #15
 592 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 593              	.LVL28:
1174:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 594              		.loc 1 1174 3 view .LVU198
 595 0080 0F20     		movs	r0, #15
 596 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 597              	.LVL29:
1176:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 598              		.loc 1 1176 3 view .LVU199
 599 0086 0022     		movs	r2, #0
 600 0088 1146     		mov	r1, r2
 601 008a 1020     		movs	r0, #16
 602 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 603              	.LVL30:
1177:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 604              		.loc 1 1177 3 view .LVU200
ARM GAS  /tmp/ccr4Jxlr.s 			page 35


 605 0090 1020     		movs	r0, #16
 606 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 607              	.LVL31:
1179:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 608              		.loc 1 1179 3 view .LVU201
 609 0096 0022     		movs	r2, #0
 610 0098 1146     		mov	r1, r2
 611 009a 4620     		movs	r0, #70
 612 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 613              	.LVL32:
1180:Core/Src/main.c **** 
 614              		.loc 1 1180 3 view .LVU202
 615 00a0 4620     		movs	r0, #70
 616 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 617              	.LVL33:
1182:Core/Src/main.c **** 
 618              		.loc 1 1182 1 is_stmt 0 view .LVU203
 619 00a6 03B0     		add	sp, sp, #12
 620              	.LCFI5:
 621              		.cfi_def_cfa_offset 4
 622              		@ sp needed
 623 00a8 5DF804FB 		ldr	pc, [sp], #4
 624              	.L11:
 625              		.align	2
 626              	.L10:
 627 00ac 00440258 		.word	1476543488
 628              		.cfi_endproc
 629              	.LFE379:
 631              		.section	.rodata.disarm.str1.4,"aMS",%progbits,1
 632              		.align	2
 633              	.LC0:
 634 0000 41524D00 		.ascii	"ARM\000"
 635              		.align	2
 636              	.LC1:
 637 0004 44495341 		.ascii	"DISARMED\000"
 637      524D4544 
 637      00
 638              		.section	.text.disarm,"ax",%progbits
 639              		.align	1
 640              		.global	disarm
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv5-d16
 646              	disarm:
 647              	.LVL34:
 648              	.LFB354:
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 649              		.loc 1 123 25 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 653              		.loc 1 123 25 is_stmt 0 view .LVU205
 654 0000 38B5     		push	{r3, r4, r5, lr}
 655              	.LCFI6:
 656              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccr4Jxlr.s 			page 36


 657              		.cfi_offset 3, -16
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 0446     		mov	r4, r0
 124:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 662              		.loc 1 124 2 is_stmt 1 view .LVU206
 663 0004 244D     		ldr	r5, .L14
 664 0006 0022     		movs	r2, #0
 665 0008 0221     		movs	r1, #2
 666 000a 2846     		mov	r0, r5
 667              	.LVL35:
 124:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 668              		.loc 1 124 2 is_stmt 0 view .LVU207
 669 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 670              	.LVL36:
 125:Core/Src/main.c **** 
 671              		.loc 1 125 2 is_stmt 1 view .LVU208
 672 0010 0022     		movs	r2, #0
 673 0012 0421     		movs	r1, #4
 674 0014 2846     		mov	r0, r5
 675 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 676              	.LVL37:
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 677              		.loc 1 127 2 view .LVU209
 678 001a 0022     		movs	r2, #0
 679 001c 0221     		movs	r1, #2
 680 001e 1F48     		ldr	r0, .L14+4
 681 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 682              	.LVL38:
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 683              		.loc 1 128 2 view .LVU210
 684 0024 05F5A055 		add	r5, r5, #5120
 685 0028 0022     		movs	r2, #0
 686 002a 4FF40061 		mov	r1, #2048
 687 002e 2846     		mov	r0, r5
 688 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689              	.LVL39:
 129:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 690              		.loc 1 129 2 view .LVU211
 691 0034 0022     		movs	r2, #0
 692 0036 4FF40051 		mov	r1, #8192
 693 003a 2846     		mov	r0, r5
 694 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 695              	.LVL40:
 130:Core/Src/main.c **** 
 696              		.loc 1 130 2 view .LVU212
 697 0040 0022     		movs	r2, #0
 698 0042 4FF40041 		mov	r1, #32768
 699 0046 2846     		mov	r0, r5
 700 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 701              	.LVL41:
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 702              		.loc 1 132 2 view .LVU213
 703 004c 0022     		movs	r2, #0
 704 004e 0221     		movs	r1, #2
 705 0050 1348     		ldr	r0, .L14+8
ARM GAS  /tmp/ccr4Jxlr.s 			page 37


 706 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 707              	.LVL42:
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 708              		.loc 1 133 2 view .LVU214
 709 0056 A5F58065 		sub	r5, r5, #1024
 710 005a 0022     		movs	r2, #0
 711 005c 4FF48071 		mov	r1, #256
 712 0060 2846     		mov	r0, r5
 713 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 714              	.LVL43:
 134:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 715              		.loc 1 134 2 view .LVU215
 716 0066 0022     		movs	r2, #0
 717 0068 4FF48061 		mov	r1, #1024
 718 006c 2846     		mov	r0, r5
 719 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 720              	.LVL44:
 135:Core/Src/main.c **** 
 721              		.loc 1 135 2 view .LVU216
 722 0072 0022     		movs	r2, #0
 723 0074 4FF48051 		mov	r1, #4096
 724 0078 2846     		mov	r0, r5
 725 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 726              	.LVL45:
 137:Core/Src/main.c **** 
 727              		.loc 1 137 2 view .LVU217
 728 007e 0221     		movs	r1, #2
 729 0080 0848     		ldr	r0, .L14+12
 730 0082 FFF7FEFF 		bl	setStatus
 731              	.LVL46:
 139:Core/Src/main.c **** 	return 0;
 732              		.loc 1 139 2 view .LVU218
 733 0086 084B     		ldr	r3, .L14+16
 734 0088 03CB     		ldmia	r3!, {r0, r1}
 735 008a 2060     		str	r0, [r4]	@ unaligned
 736 008c 6160     		str	r1, [r4, #4]	@ unaligned
 737 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0090 2372     		strb	r3, [r4, #8]
 140:Core/Src/main.c **** }
 739              		.loc 1 140 2 view .LVU219
 141:Core/Src/main.c **** 
 740              		.loc 1 141 1 is_stmt 0 view .LVU220
 741 0092 0020     		movs	r0, #0
 742 0094 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL47:
 744              	.L15:
 141:Core/Src/main.c **** 
 745              		.loc 1 141 1 view .LVU221
 746 0096 00BF     		.align	2
 747              	.L14:
 748 0098 00000258 		.word	1476526080
 749 009c 00040258 		.word	1476527104
 750 00a0 00180258 		.word	1476532224
 751 00a4 00000000 		.word	.LC0
 752 00a8 04000000 		.word	.LC1
 753              		.cfi_endproc
 754              	.LFE354:
ARM GAS  /tmp/ccr4Jxlr.s 			page 38


 756              		.section	.text.Baro2_Read_Register,"ax",%progbits
 757              		.align	1
 758              		.global	Baro2_Read_Register
 759              		.syntax unified
 760              		.thumb
 761              		.thumb_func
 762              		.fpu fpv5-d16
 764              	Baro2_Read_Register:
 765              	.LVL48:
 766              	.LFB355:
 143:Core/Src/main.c **** 	uint8_t reg_value;
 767              		.loc 1 143 43 is_stmt 1 view -0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 16
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/main.c **** 	uint8_t reg_value;
 771              		.loc 1 143 43 is_stmt 0 view .LVU223
 772 0000 30B5     		push	{r4, r5, lr}
 773              	.LCFI7:
 774              		.cfi_def_cfa_offset 12
 775              		.cfi_offset 4, -12
 776              		.cfi_offset 5, -8
 777              		.cfi_offset 14, -4
 778 0002 85B0     		sub	sp, sp, #20
 779              	.LCFI8:
 780              		.cfi_def_cfa_offset 32
 144:Core/Src/main.c **** 	addr |= (1 << 7);
 781              		.loc 1 144 2 is_stmt 1 view .LVU224
 145:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 782              		.loc 1 145 2 view .LVU225
 145:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 783              		.loc 1 145 7 is_stmt 0 view .LVU226
 784 0004 60F07F00 		orn	r0, r0, #127
 785              	.LVL49:
 145:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 786              		.loc 1 145 7 view .LVU227
 787 0008 8DF80700 		strb	r0, [sp, #7]
 146:Core/Src/main.c **** 
 788              		.loc 1 146 2 is_stmt 1 view .LVU228
 789 000c 0F4C     		ldr	r4, .L18
 790 000e 0022     		movs	r2, #0
 791 0010 4FF48061 		mov	r1, #1024
 792 0014 2046     		mov	r0, r4
 793 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 794              	.LVL50:
 148:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 795              		.loc 1 148 2 view .LVU229
 796 001a 0D4D     		ldr	r5, .L18+4
 797 001c 6423     		movs	r3, #100
 798 001e 0122     		movs	r2, #1
 799 0020 0DF10701 		add	r1, sp, #7
 800 0024 2846     		mov	r0, r5
 801 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 802              	.LVL51:
 149:Core/Src/main.c **** 
 803              		.loc 1 149 2 view .LVU230
 804 002a 6423     		movs	r3, #100
ARM GAS  /tmp/ccr4Jxlr.s 			page 39


 805 002c 0122     		movs	r2, #1
 806 002e 0DF10F01 		add	r1, sp, #15
 807 0032 2846     		mov	r0, r5
 808 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 809              	.LVL52:
 151:Core/Src/main.c **** 
 810              		.loc 1 151 2 view .LVU231
 811 0038 0122     		movs	r2, #1
 812 003a 4FF48061 		mov	r1, #1024
 813 003e 2046     		mov	r0, r4
 814 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 815              	.LVL53:
 153:Core/Src/main.c **** }
 816              		.loc 1 153 2 view .LVU232
 154:Core/Src/main.c **** 
 817              		.loc 1 154 1 is_stmt 0 view .LVU233
 818 0044 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 819 0048 05B0     		add	sp, sp, #20
 820              	.LCFI9:
 821              		.cfi_def_cfa_offset 12
 822              		@ sp needed
 823 004a 30BD     		pop	{r4, r5, pc}
 824              	.L19:
 825              		.align	2
 826              	.L18:
 827 004c 000C0258 		.word	1476529152
 828 0050 00000000 		.word	hspi2
 829              		.cfi_endproc
 830              	.LFE355:
 832              		.section	.text.Baro2_Write_Register,"ax",%progbits
 833              		.align	1
 834              		.global	Baro2_Write_Register
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu fpv5-d16
 840              	Baro2_Write_Register:
 841              	.LVL54:
 842              	.LFB356:
 156:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 843              		.loc 1 156 55 is_stmt 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 8
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 156:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 847              		.loc 1 156 55 is_stmt 0 view .LVU235
 848 0000 30B5     		push	{r4, r5, lr}
 849              	.LCFI10:
 850              		.cfi_def_cfa_offset 12
 851              		.cfi_offset 4, -12
 852              		.cfi_offset 5, -8
 853              		.cfi_offset 14, -4
 854 0002 83B0     		sub	sp, sp, #12
 855              	.LCFI11:
 856              		.cfi_def_cfa_offset 24
 857 0004 8DF80700 		strb	r0, [sp, #7]
 858 0008 8DF80610 		strb	r1, [sp, #6]
ARM GAS  /tmp/ccr4Jxlr.s 			page 40


 157:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 859              		.loc 1 157 2 is_stmt 1 view .LVU236
 860 000c 0E4C     		ldr	r4, .L22
 861 000e 0022     		movs	r2, #0
 862 0010 4FF48061 		mov	r1, #1024
 863              	.LVL55:
 157:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 864              		.loc 1 157 2 is_stmt 0 view .LVU237
 865 0014 2046     		mov	r0, r4
 866              	.LVL56:
 157:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 867              		.loc 1 157 2 view .LVU238
 868 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 869              	.LVL57:
 158:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 870              		.loc 1 158 2 is_stmt 1 view .LVU239
 871 001a 0C4D     		ldr	r5, .L22+4
 872 001c 6423     		movs	r3, #100
 873 001e 0122     		movs	r2, #1
 874 0020 0DF10701 		add	r1, sp, #7
 875 0024 2846     		mov	r0, r5
 876 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 877              	.LVL58:
 159:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 878              		.loc 1 159 2 view .LVU240
 879 002a 6423     		movs	r3, #100
 880 002c 0122     		movs	r2, #1
 881 002e 0DF10601 		add	r1, sp, #6
 882 0032 2846     		mov	r0, r5
 883 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 884              	.LVL59:
 160:Core/Src/main.c **** 
 885              		.loc 1 160 2 view .LVU241
 886 0038 0122     		movs	r2, #1
 887 003a 4FF48061 		mov	r1, #1024
 888 003e 2046     		mov	r0, r4
 889 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 890              	.LVL60:
 162:Core/Src/main.c **** 
 891              		.loc 1 162 1 is_stmt 0 view .LVU242
 892 0044 03B0     		add	sp, sp, #12
 893              	.LCFI12:
 894              		.cfi_def_cfa_offset 12
 895              		@ sp needed
 896 0046 30BD     		pop	{r4, r5, pc}
 897              	.L23:
 898              		.align	2
 899              	.L22:
 900 0048 000C0258 		.word	1476529152
 901 004c 00000000 		.word	hspi2
 902              		.cfi_endproc
 903              	.LFE356:
 905              		.section	.text.Baro2_Configure,"ax",%progbits
 906              		.align	1
 907              		.global	Baro2_Configure
 908              		.syntax unified
 909              		.thumb
ARM GAS  /tmp/ccr4Jxlr.s 			page 41


 910              		.thumb_func
 911              		.fpu fpv5-d16
 913              	Baro2_Configure:
 914              	.LFB357:
 164:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 915              		.loc 1 164 23 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919 0000 08B5     		push	{r3, lr}
 920              	.LCFI13:
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 3, -8
 923              		.cfi_offset 14, -4
 165:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 924              		.loc 1 165 2 view .LVU244
 925              	.LVL61:
 166:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 926              		.loc 1 166 2 view .LVU245
 167:Core/Src/main.c **** 
 927              		.loc 1 167 2 view .LVU246
 169:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 928              		.loc 1 169 2 view .LVU247
 929 0002 0021     		movs	r1, #0
 930 0004 1820     		movs	r0, #24
 931 0006 FFF7FEFF 		bl	Baro2_Write_Register
 932              	.LVL62:
 170:Core/Src/main.c **** 
 933              		.loc 1 170 2 view .LVU248
 934 000a 0021     		movs	r1, #0
 935 000c 1920     		movs	r0, #25
 936 000e FFF7FEFF 		bl	Baro2_Write_Register
 937              	.LVL63:
 173:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 938              		.loc 1 173 2 view .LVU249
 939 0012 4021     		movs	r1, #64
 940 0014 1020     		movs	r0, #16
 941 0016 FFF7FEFF 		bl	Baro2_Write_Register
 942              	.LVL64:
 174:Core/Src/main.c **** }
 943              		.loc 1 174 2 view .LVU250
 944 001a 0221     		movs	r1, #2
 945 001c 1120     		movs	r0, #17
 946 001e FFF7FEFF 		bl	Baro2_Write_Register
 947              	.LVL65:
 175:Core/Src/main.c **** 
 948              		.loc 1 175 1 is_stmt 0 view .LVU251
 949 0022 08BD     		pop	{r3, pc}
 950              		.cfi_endproc
 951              	.LFE357:
 953              		.section	.text.Baro2_Get_Pressure,"ax",%progbits
 954              		.align	1
 955              		.global	Baro2_Get_Pressure
 956              		.syntax unified
 957              		.thumb
 958              		.thumb_func
 959              		.fpu fpv5-d16
ARM GAS  /tmp/ccr4Jxlr.s 			page 42


 961              	Baro2_Get_Pressure:
 962              	.LFB358:
 177:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 963              		.loc 1 177 29 is_stmt 1 view -0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967 0000 38B5     		push	{r3, r4, r5, lr}
 968              	.LCFI14:
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 3, -16
 971              		.cfi_offset 4, -12
 972              		.cfi_offset 5, -8
 973              		.cfi_offset 14, -4
 178:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 974              		.loc 1 178 2 view .LVU253
 178:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 975              		.loc 1 178 19 is_stmt 0 view .LVU254
 976 0002 2820     		movs	r0, #40
 977 0004 FFF7FEFF 		bl	Baro2_Read_Register
 978              	.LVL66:
 979 0008 0546     		mov	r5, r0
 980              	.LVL67:
 179:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 981              		.loc 1 179 2 is_stmt 1 view .LVU255
 179:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 982              		.loc 1 179 19 is_stmt 0 view .LVU256
 983 000a 2920     		movs	r0, #41
 984 000c FFF7FEFF 		bl	Baro2_Read_Register
 985              	.LVL68:
 986 0010 0446     		mov	r4, r0
 987              	.LVL69:
 180:Core/Src/main.c **** 
 988              		.loc 1 180 2 is_stmt 1 view .LVU257
 180:Core/Src/main.c **** 
 989              		.loc 1 180 19 is_stmt 0 view .LVU258
 990 0012 2A20     		movs	r0, #42
 991 0014 FFF7FEFF 		bl	Baro2_Read_Register
 992              	.LVL70:
 182:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 993              		.loc 1 182 2 is_stmt 1 view .LVU259
 183:Core/Src/main.c **** 	return BARO;
 994              		.loc 1 183 2 view .LVU260
 183:Core/Src/main.c **** 	return BARO;
 995              		.loc 1 183 52 is_stmt 0 view .LVU261
 996 0018 2404     		lsls	r4, r4, #16
 997              	.LVL71:
 183:Core/Src/main.c **** 	return BARO;
 998              		.loc 1 183 33 view .LVU262
 999 001a 44EA0060 		orr	r0, r4, r0, lsl #24
 1000              	.LVL72:
 184:Core/Src/main.c **** 
 1001              		.loc 1 184 2 is_stmt 1 view .LVU263
 186:Core/Src/main.c **** 
 1002              		.loc 1 186 1 is_stmt 0 view .LVU264
 1003 001e 40EA0520 		orr	r0, r0, r5, lsl #8
 1004              	.LVL73:
ARM GAS  /tmp/ccr4Jxlr.s 			page 43


 186:Core/Src/main.c **** 
 1005              		.loc 1 186 1 view .LVU265
 1006 0022 38BD     		pop	{r3, r4, r5, pc}
 186:Core/Src/main.c **** 
 1007              		.loc 1 186 1 view .LVU266
 1008              		.cfi_endproc
 1009              	.LFE358:
 1011              		.section	.text.mount_SD,"ax",%progbits
 1012              		.align	1
 1013              		.global	mount_SD
 1014              		.syntax unified
 1015              		.thumb
 1016              		.thumb_func
 1017              		.fpu fpv5-d16
 1019              	mount_SD:
 1020              	.LFB359:
 188:Core/Src/main.c **** 	int status = f_mount(&SDFatFS, (TCHAR const*) SDPath, 0);
 1021              		.loc 1 188 16 is_stmt 1 view -0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025 0000 08B5     		push	{r3, lr}
 1026              	.LCFI15:
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 3, -8
 1029              		.cfi_offset 14, -4
 189:Core/Src/main.c **** 	return status;
 1030              		.loc 1 189 2 view .LVU268
 189:Core/Src/main.c **** 	return status;
 1031              		.loc 1 189 15 is_stmt 0 view .LVU269
 1032 0002 0022     		movs	r2, #0
 1033 0004 0249     		ldr	r1, .L30
 1034 0006 0348     		ldr	r0, .L30+4
 1035 0008 FFF7FEFF 		bl	f_mount
 1036              	.LVL74:
 190:Core/Src/main.c **** }
 1037              		.loc 1 190 2 is_stmt 1 view .LVU270
 191:Core/Src/main.c **** 
 1038              		.loc 1 191 1 is_stmt 0 view .LVU271
 1039 000c 08BD     		pop	{r3, pc}
 1040              	.L31:
 1041 000e 00BF     		.align	2
 1042              	.L30:
 1043 0010 00000000 		.word	SDPath
 1044 0014 00000000 		.word	SDFatFS
 1045              		.cfi_endproc
 1046              	.LFE359:
 1048              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_I2C_MasterRxCpltCallback
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu fpv5-d16
 1056              	HAL_I2C_MasterRxCpltCallback:
 1057              	.LVL75:
 1058              	.LFB381:
ARM GAS  /tmp/ccr4Jxlr.s 			page 44


1315:Core/Src/main.c **** 
1316:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1317:Core/Src/main.c **** 
1318:Core/Src/main.c **** void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 1059              		.loc 1 1318 60 is_stmt 1 view -0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
1319:Core/Src/main.c **** //MAX_M10s_irq_handler(hi2c);
1320:Core/Src/main.c **** }
 1064              		.loc 1 1320 1 view .LVU273
 1065 0000 7047     		bx	lr
 1066              		.cfi_endproc
 1067              	.LFE381:
 1069              		.section	.rodata.HAL_ADC_ConvHalfCpltCallback.str1.4,"aMS",%progbits,1
 1070              		.align	2
 1071              	.LC2:
 1072 0000 610A00   		.ascii	"a\012\000"
 1073              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1074              		.align	1
 1075              		.global	HAL_ADC_ConvHalfCpltCallback
 1076              		.syntax unified
 1077              		.thumb
 1078              		.thumb_func
 1079              		.fpu fpv5-d16
 1081              	HAL_ADC_ConvHalfCpltCallback:
 1082              	.LVL76:
 1083              	.LFB382:
1321:Core/Src/main.c **** 
1322:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) {
 1084              		.loc 1 1322 60 view -0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 400
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		.loc 1 1322 60 is_stmt 0 view .LVU275
 1089 0000 00B5     		push	{lr}
 1090              	.LCFI16:
 1091              		.cfi_def_cfa_offset 4
 1092              		.cfi_offset 14, -4
 1093 0002 E5B0     		sub	sp, sp, #404
 1094              	.LCFI17:
 1095              		.cfi_def_cfa_offset 408
1323:Core/Src/main.c **** DMA_data = read_Data;
 1096              		.loc 1 1323 1 is_stmt 1 view .LVU276
 1097              		.loc 1 1323 10 is_stmt 0 view .LVU277
 1098 0004 0A4B     		ldr	r3, .L35
 1099 0006 1A88     		ldrh	r2, [r3]
 1100 0008 0A4B     		ldr	r3, .L35+4
 1101 000a 1A80     		strh	r2, [r3]	@ movhi
1324:Core/Src/main.c **** uint8_t* data_gyro[100];
 1102              		.loc 1 1324 1 is_stmt 1 view .LVU278
1325:Core/Src/main.c **** sprintf(data_gyro, "a\n");
 1103              		.loc 1 1325 1 view .LVU279
 1104 000c 0A4B     		ldr	r3, .L35+8
 1105 000e 1B68     		ldr	r3, [r3]
 1106 0010 ADF80030 		strh	r3, [sp]	@ movhi
ARM GAS  /tmp/ccr4Jxlr.s 			page 45


 1107 0014 1B0C     		lsrs	r3, r3, #16
 1108 0016 8DF80230 		strb	r3, [sp, #2]
1326:Core/Src/main.c **** CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 1109              		.loc 1 1326 1 view .LVU280
 1110              		.loc 1 1326 28 is_stmt 0 view .LVU281
 1111 001a 6846     		mov	r0, sp
 1112              	.LVL77:
 1113              		.loc 1 1326 28 view .LVU282
 1114 001c FFF7FEFF 		bl	strlen
 1115              	.LVL78:
 1116              		.loc 1 1326 1 view .LVU283
 1117 0020 81B2     		uxth	r1, r0
 1118 0022 6846     		mov	r0, sp
 1119 0024 FFF7FEFF 		bl	CDC_Transmit_HS
 1120              	.LVL79:
1327:Core/Src/main.c **** }
 1121              		.loc 1 1327 1 view .LVU284
 1122 0028 65B0     		add	sp, sp, #404
 1123              	.LCFI18:
 1124              		.cfi_def_cfa_offset 4
 1125              		@ sp needed
 1126 002a 5DF804FB 		ldr	pc, [sp], #4
 1127              	.L36:
 1128 002e 00BF     		.align	2
 1129              	.L35:
 1130 0030 00000000 		.word	read_Data
 1131 0034 00000000 		.word	DMA_data
 1132 0038 00000000 		.word	.LC2
 1133              		.cfi_endproc
 1134              	.LFE382:
 1136              		.section	.text.Error_Handler,"ax",%progbits
 1137              		.align	1
 1138              		.global	Error_Handler
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu fpv5-d16
 1144              	Error_Handler:
 1145              	.LFB383:
1328:Core/Src/main.c **** /* USER CODE END 4 */
1329:Core/Src/main.c **** 
1330:Core/Src/main.c **** /**
1331:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1332:Core/Src/main.c ****   * @retval None
1333:Core/Src/main.c ****   */
1334:Core/Src/main.c **** void Error_Handler(void)
1335:Core/Src/main.c **** {
 1146              		.loc 1 1335 1 is_stmt 1 view -0
 1147              		.cfi_startproc
 1148              		@ Volatile: function does not return.
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
1336:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1337:Core/Src/main.c **** /* User can add his own implementation to report the HAL error return state */
1338:Core/Src/main.c **** __disable_irq();
 1152              		.loc 1 1338 1 view .LVU286
ARM GAS  /tmp/ccr4Jxlr.s 			page 46


 1153              	.LBB13:
 1154              	.LBI13:
 1155              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccr4Jxlr.s 			page 47


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  /tmp/ccr4Jxlr.s 			page 48


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 49


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1156              		.loc 2 207 27 view .LVU287
 1157              	.LBB14:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1158              		.loc 2 209 3 view .LVU288
 1159              		.syntax unified
 1160              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1161 0000 72B6     		cpsid i
 1162              	@ 0 "" 2
 1163              		.thumb
 1164              		.syntax unified
 1165              	.L38:
 1166              	.LBE14:
 1167              	.LBE13:
1339:Core/Src/main.c **** while (1) {
 1168              		.loc 1 1339 1 discriminator 1 view .LVU289
1340:Core/Src/main.c **** }
 1169              		.loc 1 1340 1 discriminator 1 view .LVU290
ARM GAS  /tmp/ccr4Jxlr.s 			page 50


1339:Core/Src/main.c **** while (1) {
 1170              		.loc 1 1339 7 discriminator 1 view .LVU291
 1171 0002 FEE7     		b	.L38
 1172              		.cfi_endproc
 1173              	.LFE383:
 1175              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1176              		.align	1
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu fpv5-d16
 1182              	MX_SPI3_Init:
 1183              	.LFB370:
 737:Core/Src/main.c **** 
 1184              		.loc 1 737 1 view -0
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 0, uses_anonymous_args = 0
 1188 0000 08B5     		push	{r3, lr}
 1189              	.LCFI19:
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 3, -8
 1192              		.cfi_offset 14, -4
 747:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1193              		.loc 1 747 3 view .LVU293
 747:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1194              		.loc 1 747 18 is_stmt 0 view .LVU294
 1195 0002 1448     		ldr	r0, .L43
 1196 0004 144B     		ldr	r3, .L43+4
 1197 0006 0360     		str	r3, [r0]
 748:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1198              		.loc 1 748 3 is_stmt 1 view .LVU295
 748:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1199              		.loc 1 748 19 is_stmt 0 view .LVU296
 1200 0008 4FF48003 		mov	r3, #4194304
 1201 000c 4360     		str	r3, [r0, #4]
 749:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1202              		.loc 1 749 3 is_stmt 1 view .LVU297
 749:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1203              		.loc 1 749 24 is_stmt 0 view .LVU298
 1204 000e 0023     		movs	r3, #0
 1205 0010 8360     		str	r3, [r0, #8]
 750:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1206              		.loc 1 750 3 is_stmt 1 view .LVU299
 750:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1207              		.loc 1 750 23 is_stmt 0 view .LVU300
 1208 0012 0722     		movs	r2, #7
 1209 0014 C260     		str	r2, [r0, #12]
 751:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1210              		.loc 1 751 3 is_stmt 1 view .LVU301
 751:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1211              		.loc 1 751 26 is_stmt 0 view .LVU302
 1212 0016 0361     		str	r3, [r0, #16]
 752:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1213              		.loc 1 752 3 is_stmt 1 view .LVU303
 752:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1214              		.loc 1 752 23 is_stmt 0 view .LVU304
ARM GAS  /tmp/ccr4Jxlr.s 			page 51


 1215 0018 4361     		str	r3, [r0, #20]
 753:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1216              		.loc 1 753 3 is_stmt 1 view .LVU305
 753:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1217              		.loc 1 753 18 is_stmt 0 view .LVU306
 1218 001a 4FF08062 		mov	r2, #67108864
 1219 001e 8261     		str	r2, [r0, #24]
 754:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1220              		.loc 1 754 3 is_stmt 1 view .LVU307
 754:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1221              		.loc 1 754 32 is_stmt 0 view .LVU308
 1222 0020 4FF0C042 		mov	r2, #1610612736
 1223 0024 C261     		str	r2, [r0, #28]
 755:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1224              		.loc 1 755 3 is_stmt 1 view .LVU309
 755:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1225              		.loc 1 755 23 is_stmt 0 view .LVU310
 1226 0026 0362     		str	r3, [r0, #32]
 756:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1227              		.loc 1 756 3 is_stmt 1 view .LVU311
 756:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1228              		.loc 1 756 21 is_stmt 0 view .LVU312
 1229 0028 4362     		str	r3, [r0, #36]
 757:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1230              		.loc 1 757 3 is_stmt 1 view .LVU313
 757:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1231              		.loc 1 757 29 is_stmt 0 view .LVU314
 1232 002a 8362     		str	r3, [r0, #40]
 758:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1233              		.loc 1 758 3 is_stmt 1 view .LVU315
 758:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1234              		.loc 1 758 28 is_stmt 0 view .LVU316
 1235 002c C362     		str	r3, [r0, #44]
 759:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1236              		.loc 1 759 3 is_stmt 1 view .LVU317
 759:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1237              		.loc 1 759 23 is_stmt 0 view .LVU318
 1238 002e 4FF08042 		mov	r2, #1073741824
 1239 0032 4263     		str	r2, [r0, #52]
 760:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1240              		.loc 1 760 3 is_stmt 1 view .LVU319
 760:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1241              		.loc 1 760 26 is_stmt 0 view .LVU320
 1242 0034 8363     		str	r3, [r0, #56]
 761:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1243              		.loc 1 761 3 is_stmt 1 view .LVU321
 761:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1244              		.loc 1 761 28 is_stmt 0 view .LVU322
 1245 0036 C363     		str	r3, [r0, #60]
 762:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1246              		.loc 1 762 3 is_stmt 1 view .LVU323
 762:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1247              		.loc 1 762 41 is_stmt 0 view .LVU324
 1248 0038 0364     		str	r3, [r0, #64]
 763:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1249              		.loc 1 763 3 is_stmt 1 view .LVU325
 763:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
ARM GAS  /tmp/ccr4Jxlr.s 			page 52


 1250              		.loc 1 763 41 is_stmt 0 view .LVU326
 1251 003a 4364     		str	r3, [r0, #68]
 764:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1252              		.loc 1 764 3 is_stmt 1 view .LVU327
 764:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1253              		.loc 1 764 31 is_stmt 0 view .LVU328
 1254 003c 8364     		str	r3, [r0, #72]
 765:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1255              		.loc 1 765 3 is_stmt 1 view .LVU329
 765:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1256              		.loc 1 765 38 is_stmt 0 view .LVU330
 1257 003e C364     		str	r3, [r0, #76]
 766:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1258              		.loc 1 766 3 is_stmt 1 view .LVU331
 766:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1259              		.loc 1 766 37 is_stmt 0 view .LVU332
 1260 0040 0365     		str	r3, [r0, #80]
 767:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1261              		.loc 1 767 3 is_stmt 1 view .LVU333
 767:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1262              		.loc 1 767 32 is_stmt 0 view .LVU334
 1263 0042 4365     		str	r3, [r0, #84]
 768:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1264              		.loc 1 768 3 is_stmt 1 view .LVU335
 768:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1265              		.loc 1 768 21 is_stmt 0 view .LVU336
 1266 0044 8365     		str	r3, [r0, #88]
 769:Core/Src/main.c ****   {
 1267              		.loc 1 769 3 is_stmt 1 view .LVU337
 769:Core/Src/main.c ****   {
 1268              		.loc 1 769 7 is_stmt 0 view .LVU338
 1269 0046 FFF7FEFF 		bl	HAL_SPI_Init
 1270              	.LVL80:
 769:Core/Src/main.c ****   {
 1271              		.loc 1 769 6 view .LVU339
 1272 004a 00B9     		cbnz	r0, .L42
 777:Core/Src/main.c **** 
 1273              		.loc 1 777 1 view .LVU340
 1274 004c 08BD     		pop	{r3, pc}
 1275              	.L42:
 771:Core/Src/main.c ****   }
 1276              		.loc 1 771 5 is_stmt 1 view .LVU341
 1277 004e FFF7FEFF 		bl	Error_Handler
 1278              	.LVL81:
 1279              	.L44:
 1280 0052 00BF     		.align	2
 1281              	.L43:
 1282 0054 00000000 		.word	hspi3
 1283 0058 003C0040 		.word	1073757184
 1284              		.cfi_endproc
 1285              	.LFE370:
 1287              		.section	.text.MX_FDCAN3_Init,"ax",%progbits
 1288              		.align	1
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1292              		.fpu fpv5-d16
ARM GAS  /tmp/ccr4Jxlr.s 			page 53


 1294              	MX_FDCAN3_Init:
 1295              	.LFB365:
 512:Core/Src/main.c **** 
 1296              		.loc 1 512 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300 0000 08B5     		push	{r3, lr}
 1301              	.LCFI20:
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 3, -8
 1304              		.cfi_offset 14, -4
 521:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1305              		.loc 1 521 3 view .LVU343
 521:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1306              		.loc 1 521 20 is_stmt 0 view .LVU344
 1307 0002 1448     		ldr	r0, .L49
 1308 0004 144B     		ldr	r3, .L49+4
 1309 0006 0360     		str	r3, [r0]
 522:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1310              		.loc 1 522 3 is_stmt 1 view .LVU345
 522:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1311              		.loc 1 522 28 is_stmt 0 view .LVU346
 1312 0008 0023     		movs	r3, #0
 1313 000a 8360     		str	r3, [r0, #8]
 523:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1314              		.loc 1 523 3 is_stmt 1 view .LVU347
 523:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1315              		.loc 1 523 21 is_stmt 0 view .LVU348
 1316 000c C360     		str	r3, [r0, #12]
 524:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1317              		.loc 1 524 3 is_stmt 1 view .LVU349
 524:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1318              		.loc 1 524 35 is_stmt 0 view .LVU350
 1319 000e 0374     		strb	r3, [r0, #16]
 525:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1320              		.loc 1 525 3 is_stmt 1 view .LVU351
 525:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1321              		.loc 1 525 30 is_stmt 0 view .LVU352
 1322 0010 4374     		strb	r3, [r0, #17]
 526:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1323              		.loc 1 526 3 is_stmt 1 view .LVU353
 526:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1324              		.loc 1 526 34 is_stmt 0 view .LVU354
 1325 0012 8374     		strb	r3, [r0, #18]
 527:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1326              		.loc 1 527 3 is_stmt 1 view .LVU355
 527:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1327              		.loc 1 527 33 is_stmt 0 view .LVU356
 1328 0014 1022     		movs	r2, #16
 1329 0016 4261     		str	r2, [r0, #20]
 528:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1330              		.loc 1 528 3 is_stmt 1 view .LVU357
 528:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1331              		.loc 1 528 37 is_stmt 0 view .LVU358
 1332 0018 0122     		movs	r2, #1
 1333 001a 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/ccr4Jxlr.s 			page 54


 529:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1334              		.loc 1 529 3 is_stmt 1 view .LVU359
 529:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1335              		.loc 1 529 32 is_stmt 0 view .LVU360
 1336 001c 0221     		movs	r1, #2
 1337 001e C161     		str	r1, [r0, #28]
 530:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1338              		.loc 1 530 3 is_stmt 1 view .LVU361
 530:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1339              		.loc 1 530 32 is_stmt 0 view .LVU362
 1340 0020 0162     		str	r1, [r0, #32]
 531:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1341              		.loc 1 531 3 is_stmt 1 view .LVU363
 531:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1342              		.loc 1 531 30 is_stmt 0 view .LVU364
 1343 0022 4262     		str	r2, [r0, #36]
 532:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1344              		.loc 1 532 3 is_stmt 1 view .LVU365
 532:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1345              		.loc 1 532 34 is_stmt 0 view .LVU366
 1346 0024 8262     		str	r2, [r0, #40]
 533:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1347              		.loc 1 533 3 is_stmt 1 view .LVU367
 533:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1348              		.loc 1 533 29 is_stmt 0 view .LVU368
 1349 0026 C262     		str	r2, [r0, #44]
 534:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1350              		.loc 1 534 3 is_stmt 1 view .LVU369
 534:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1351              		.loc 1 534 29 is_stmt 0 view .LVU370
 1352 0028 0263     		str	r2, [r0, #48]
 535:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1353              		.loc 1 535 3 is_stmt 1 view .LVU371
 535:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1354              		.loc 1 535 33 is_stmt 0 view .LVU372
 1355 002a 4363     		str	r3, [r0, #52]
 536:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1356              		.loc 1 536 3 is_stmt 1 view .LVU373
 536:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1357              		.loc 1 536 30 is_stmt 0 view .LVU374
 1358 002c 8363     		str	r3, [r0, #56]
 537:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1359              		.loc 1 537 3 is_stmt 1 view .LVU375
 537:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1360              		.loc 1 537 30 is_stmt 0 view .LVU376
 1361 002e C363     		str	r3, [r0, #60]
 538:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1362              		.loc 1 538 3 is_stmt 1 view .LVU377
 538:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1363              		.loc 1 538 32 is_stmt 0 view .LVU378
 1364 0030 0364     		str	r3, [r0, #64]
 539:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1365              		.loc 1 539 3 is_stmt 1 view .LVU379
 539:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1366              		.loc 1 539 32 is_stmt 0 view .LVU380
 1367 0032 0422     		movs	r2, #4
 1368 0034 4264     		str	r2, [r0, #68]
ARM GAS  /tmp/ccr4Jxlr.s 			page 55


 540:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1369              		.loc 1 540 3 is_stmt 1 view .LVU381
 540:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1370              		.loc 1 540 32 is_stmt 0 view .LVU382
 1371 0036 8364     		str	r3, [r0, #72]
 541:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1372              		.loc 1 541 3 is_stmt 1 view .LVU383
 541:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1373              		.loc 1 541 32 is_stmt 0 view .LVU384
 1374 0038 C264     		str	r2, [r0, #76]
 542:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1375              		.loc 1 542 3 is_stmt 1 view .LVU385
 542:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1376              		.loc 1 542 29 is_stmt 0 view .LVU386
 1377 003a 0365     		str	r3, [r0, #80]
 543:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1378              		.loc 1 543 3 is_stmt 1 view .LVU387
 543:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1379              		.loc 1 543 29 is_stmt 0 view .LVU388
 1380 003c 4265     		str	r2, [r0, #84]
 544:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1381              		.loc 1 544 3 is_stmt 1 view .LVU389
 544:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1382              		.loc 1 544 28 is_stmt 0 view .LVU390
 1383 003e 8365     		str	r3, [r0, #88]
 545:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1384              		.loc 1 545 3 is_stmt 1 view .LVU391
 545:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1385              		.loc 1 545 29 is_stmt 0 view .LVU392
 1386 0040 C365     		str	r3, [r0, #92]
 546:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1387              		.loc 1 546 3 is_stmt 1 view .LVU393
 546:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1388              		.loc 1 546 36 is_stmt 0 view .LVU394
 1389 0042 0366     		str	r3, [r0, #96]
 547:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1390              		.loc 1 547 3 is_stmt 1 view .LVU395
 547:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1391              		.loc 1 547 32 is_stmt 0 view .LVU396
 1392 0044 4366     		str	r3, [r0, #100]
 548:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1393              		.loc 1 548 3 is_stmt 1 view .LVU397
 548:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1394              		.loc 1 548 27 is_stmt 0 view .LVU398
 1395 0046 8266     		str	r2, [r0, #104]
 549:Core/Src/main.c ****   {
 1396              		.loc 1 549 3 is_stmt 1 view .LVU399
 549:Core/Src/main.c ****   {
 1397              		.loc 1 549 7 is_stmt 0 view .LVU400
 1398 0048 FFF7FEFF 		bl	HAL_FDCAN_Init
 1399              	.LVL82:
 549:Core/Src/main.c ****   {
 1400              		.loc 1 549 6 view .LVU401
 1401 004c 00B9     		cbnz	r0, .L48
 557:Core/Src/main.c **** 
 1402              		.loc 1 557 1 view .LVU402
 1403 004e 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccr4Jxlr.s 			page 56


 1404              	.L48:
 551:Core/Src/main.c ****   }
 1405              		.loc 1 551 5 is_stmt 1 view .LVU403
 1406 0050 FFF7FEFF 		bl	Error_Handler
 1407              	.LVL83:
 1408              	.L50:
 1409              		.align	2
 1410              	.L49:
 1411 0054 00000000 		.word	hfdcan3
 1412 0058 00D40040 		.word	1073796096
 1413              		.cfi_endproc
 1414              	.LFE365:
 1416              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1417              		.align	1
 1418              		.syntax unified
 1419              		.thumb
 1420              		.thumb_func
 1421              		.fpu fpv5-d16
 1423              	MX_USART6_UART_Init:
 1424              	.LFB378:
1107:Core/Src/main.c **** 
 1425              		.loc 1 1107 1 view -0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
 1429 0000 08B5     		push	{r3, lr}
 1430              	.LCFI21:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 3, -8
 1433              		.cfi_offset 14, -4
1116:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1434              		.loc 1 1116 3 view .LVU405
1116:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1435              		.loc 1 1116 19 is_stmt 0 view .LVU406
 1436 0002 1548     		ldr	r0, .L61
 1437 0004 154B     		ldr	r3, .L61+4
 1438 0006 0360     		str	r3, [r0]
1117:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1439              		.loc 1 1117 3 is_stmt 1 view .LVU407
1117:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1440              		.loc 1 1117 24 is_stmt 0 view .LVU408
 1441 0008 4FF4E133 		mov	r3, #115200
 1442 000c 4360     		str	r3, [r0, #4]
1118:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1443              		.loc 1 1118 3 is_stmt 1 view .LVU409
1118:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1444              		.loc 1 1118 26 is_stmt 0 view .LVU410
 1445 000e 0023     		movs	r3, #0
 1446 0010 8360     		str	r3, [r0, #8]
1119:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1447              		.loc 1 1119 3 is_stmt 1 view .LVU411
1119:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1448              		.loc 1 1119 24 is_stmt 0 view .LVU412
 1449 0012 C360     		str	r3, [r0, #12]
1120:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1450              		.loc 1 1120 3 is_stmt 1 view .LVU413
1120:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /tmp/ccr4Jxlr.s 			page 57


 1451              		.loc 1 1120 22 is_stmt 0 view .LVU414
 1452 0014 0361     		str	r3, [r0, #16]
1121:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1453              		.loc 1 1121 3 is_stmt 1 view .LVU415
1121:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1454              		.loc 1 1121 20 is_stmt 0 view .LVU416
 1455 0016 0C22     		movs	r2, #12
 1456 0018 4261     		str	r2, [r0, #20]
1122:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1457              		.loc 1 1122 3 is_stmt 1 view .LVU417
1122:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1458              		.loc 1 1122 25 is_stmt 0 view .LVU418
 1459 001a 8361     		str	r3, [r0, #24]
1123:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1460              		.loc 1 1123 3 is_stmt 1 view .LVU419
1123:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1461              		.loc 1 1123 28 is_stmt 0 view .LVU420
 1462 001c C361     		str	r3, [r0, #28]
1124:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1463              		.loc 1 1124 3 is_stmt 1 view .LVU421
1124:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1464              		.loc 1 1124 30 is_stmt 0 view .LVU422
 1465 001e 0362     		str	r3, [r0, #32]
1125:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1466              		.loc 1 1125 3 is_stmt 1 view .LVU423
1125:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1467              		.loc 1 1125 30 is_stmt 0 view .LVU424
 1468 0020 4362     		str	r3, [r0, #36]
1126:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1469              		.loc 1 1126 3 is_stmt 1 view .LVU425
1126:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1470              		.loc 1 1126 38 is_stmt 0 view .LVU426
 1471 0022 8362     		str	r3, [r0, #40]
1127:Core/Src/main.c ****   {
 1472              		.loc 1 1127 3 is_stmt 1 view .LVU427
1127:Core/Src/main.c ****   {
 1473              		.loc 1 1127 7 is_stmt 0 view .LVU428
 1474 0024 FFF7FEFF 		bl	HAL_UART_Init
 1475              	.LVL84:
1127:Core/Src/main.c ****   {
 1476              		.loc 1 1127 6 view .LVU429
 1477 0028 70B9     		cbnz	r0, .L57
1131:Core/Src/main.c ****   {
 1478              		.loc 1 1131 3 is_stmt 1 view .LVU430
1131:Core/Src/main.c ****   {
 1479              		.loc 1 1131 7 is_stmt 0 view .LVU431
 1480 002a 0021     		movs	r1, #0
 1481 002c 0A48     		ldr	r0, .L61
 1482 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1483              	.LVL85:
1131:Core/Src/main.c ****   {
 1484              		.loc 1 1131 6 view .LVU432
 1485 0032 58B9     		cbnz	r0, .L58
1135:Core/Src/main.c ****   {
 1486              		.loc 1 1135 3 is_stmt 1 view .LVU433
1135:Core/Src/main.c ****   {
 1487              		.loc 1 1135 7 is_stmt 0 view .LVU434
ARM GAS  /tmp/ccr4Jxlr.s 			page 58


 1488 0034 0021     		movs	r1, #0
 1489 0036 0848     		ldr	r0, .L61
 1490 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1491              	.LVL86:
1135:Core/Src/main.c ****   {
 1492              		.loc 1 1135 6 view .LVU435
 1493 003c 40B9     		cbnz	r0, .L59
1139:Core/Src/main.c ****   {
 1494              		.loc 1 1139 3 is_stmt 1 view .LVU436
1139:Core/Src/main.c ****   {
 1495              		.loc 1 1139 7 is_stmt 0 view .LVU437
 1496 003e 0648     		ldr	r0, .L61
 1497 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1498              	.LVL87:
1139:Core/Src/main.c ****   {
 1499              		.loc 1 1139 6 view .LVU438
 1500 0044 30B9     		cbnz	r0, .L60
1147:Core/Src/main.c **** 
 1501              		.loc 1 1147 1 view .LVU439
 1502 0046 08BD     		pop	{r3, pc}
 1503              	.L57:
1129:Core/Src/main.c ****   }
 1504              		.loc 1 1129 5 is_stmt 1 view .LVU440
 1505 0048 FFF7FEFF 		bl	Error_Handler
 1506              	.LVL88:
 1507              	.L58:
1133:Core/Src/main.c ****   }
 1508              		.loc 1 1133 5 view .LVU441
 1509 004c FFF7FEFF 		bl	Error_Handler
 1510              	.LVL89:
 1511              	.L59:
1137:Core/Src/main.c ****   }
 1512              		.loc 1 1137 5 view .LVU442
 1513 0050 FFF7FEFF 		bl	Error_Handler
 1514              	.LVL90:
 1515              	.L60:
1141:Core/Src/main.c ****   }
 1516              		.loc 1 1141 5 view .LVU443
 1517 0054 FFF7FEFF 		bl	Error_Handler
 1518              	.LVL91:
 1519              	.L62:
 1520              		.align	2
 1521              	.L61:
 1522 0058 00000000 		.word	huart6
 1523 005c 00140140 		.word	1073812480
 1524              		.cfi_endproc
 1525              	.LFE378:
 1527              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1528              		.align	1
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1532              		.fpu fpv5-d16
 1534              	MX_ADC1_Init:
 1535              	.LFB363:
 382:Core/Src/main.c **** 
 1536              		.loc 1 382 1 view -0
ARM GAS  /tmp/ccr4Jxlr.s 			page 59


 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 48
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540 0000 10B5     		push	{r4, lr}
 1541              	.LCFI22:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 4, -8
 1544              		.cfi_offset 14, -4
 1545 0002 8CB0     		sub	sp, sp, #48
 1546              	.LCFI23:
 1547              		.cfi_def_cfa_offset 56
 388:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1548              		.loc 1 388 3 view .LVU445
 388:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1549              		.loc 1 388 24 is_stmt 0 view .LVU446
 1550 0004 0024     		movs	r4, #0
 1551 0006 0994     		str	r4, [sp, #36]
 1552 0008 0A94     		str	r4, [sp, #40]
 1553 000a 0B94     		str	r4, [sp, #44]
 389:Core/Src/main.c **** 
 1554              		.loc 1 389 3 is_stmt 1 view .LVU447
 389:Core/Src/main.c **** 
 1555              		.loc 1 389 26 is_stmt 0 view .LVU448
 1556 000c 2422     		movs	r2, #36
 1557 000e 2146     		mov	r1, r4
 1558 0010 6846     		mov	r0, sp
 1559 0012 FFF7FEFF 		bl	memset
 1560              	.LVL92:
 397:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1561              		.loc 1 397 3 is_stmt 1 view .LVU449
 397:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1562              		.loc 1 397 18 is_stmt 0 view .LVU450
 1563 0016 1E48     		ldr	r0, .L71
 1564 0018 1E4B     		ldr	r3, .L71+4
 1565 001a 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1566              		.loc 1 398 3 is_stmt 1 view .LVU451
 398:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1567              		.loc 1 398 29 is_stmt 0 view .LVU452
 1568 001c 4FF43013 		mov	r3, #2883584
 1569 0020 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1570              		.loc 1 399 3 is_stmt 1 view .LVU453
 399:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1571              		.loc 1 399 25 is_stmt 0 view .LVU454
 1572 0022 8460     		str	r4, [r0, #8]
 400:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1573              		.loc 1 400 3 is_stmt 1 view .LVU455
 400:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1574              		.loc 1 400 27 is_stmt 0 view .LVU456
 1575 0024 0461     		str	r4, [r0, #16]
 401:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1576              		.loc 1 401 3 is_stmt 1 view .LVU457
 401:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1577              		.loc 1 401 27 is_stmt 0 view .LVU458
 1578 0026 0423     		movs	r3, #4
 1579 0028 4361     		str	r3, [r0, #20]
ARM GAS  /tmp/ccr4Jxlr.s 			page 60


 402:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1580              		.loc 1 402 3 is_stmt 1 view .LVU459
 402:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1581              		.loc 1 402 31 is_stmt 0 view .LVU460
 1582 002a 0476     		strb	r4, [r0, #24]
 403:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1583              		.loc 1 403 3 is_stmt 1 view .LVU461
 403:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1584              		.loc 1 403 33 is_stmt 0 view .LVU462
 1585 002c 4476     		strb	r4, [r0, #25]
 404:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1586              		.loc 1 404 3 is_stmt 1 view .LVU463
 404:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1587              		.loc 1 404 30 is_stmt 0 view .LVU464
 1588 002e 0123     		movs	r3, #1
 1589 0030 C361     		str	r3, [r0, #28]
 405:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1590              		.loc 1 405 3 is_stmt 1 view .LVU465
 405:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1591              		.loc 1 405 36 is_stmt 0 view .LVU466
 1592 0032 80F82040 		strb	r4, [r0, #32]
 406:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1593              		.loc 1 406 3 is_stmt 1 view .LVU467
 406:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1594              		.loc 1 406 31 is_stmt 0 view .LVU468
 1595 0036 8462     		str	r4, [r0, #40]
 407:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1596              		.loc 1 407 3 is_stmt 1 view .LVU469
 407:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1597              		.loc 1 407 35 is_stmt 0 view .LVU470
 1598 0038 C462     		str	r4, [r0, #44]
 408:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1599              		.loc 1 408 3 is_stmt 1 view .LVU471
 408:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1600              		.loc 1 408 39 is_stmt 0 view .LVU472
 1601 003a 0463     		str	r4, [r0, #48]
 409:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1602              		.loc 1 409 3 is_stmt 1 view .LVU473
 409:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1603              		.loc 1 409 22 is_stmt 0 view .LVU474
 1604 003c C463     		str	r4, [r0, #60]
 410:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1605              		.loc 1 410 3 is_stmt 1 view .LVU475
 410:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1606              		.loc 1 410 27 is_stmt 0 view .LVU476
 1607 003e 0464     		str	r4, [r0, #64]
 411:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1608              		.loc 1 411 3 is_stmt 1 view .LVU477
 411:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1609              		.loc 1 411 31 is_stmt 0 view .LVU478
 1610 0040 80F84440 		strb	r4, [r0, #68]
 412:Core/Src/main.c ****   {
 1611              		.loc 1 412 3 is_stmt 1 view .LVU479
 412:Core/Src/main.c ****   {
 1612              		.loc 1 412 7 is_stmt 0 view .LVU480
 1613 0044 FFF7FEFF 		bl	HAL_ADC_Init
 1614              	.LVL93:
ARM GAS  /tmp/ccr4Jxlr.s 			page 61


 412:Core/Src/main.c ****   {
 1615              		.loc 1 412 6 view .LVU481
 1616 0048 E0B9     		cbnz	r0, .L68
 419:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1617              		.loc 1 419 3 is_stmt 1 view .LVU482
 419:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1618              		.loc 1 419 18 is_stmt 0 view .LVU483
 1619 004a 0023     		movs	r3, #0
 1620 004c 0993     		str	r3, [sp, #36]
 420:Core/Src/main.c ****   {
 1621              		.loc 1 420 3 is_stmt 1 view .LVU484
 420:Core/Src/main.c ****   {
 1622              		.loc 1 420 7 is_stmt 0 view .LVU485
 1623 004e 09A9     		add	r1, sp, #36
 1624 0050 0F48     		ldr	r0, .L71
 1625 0052 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 1626              	.LVL94:
 420:Core/Src/main.c ****   {
 1627              		.loc 1 420 6 view .LVU486
 1628 0056 B8B9     		cbnz	r0, .L69
 427:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1629              		.loc 1 427 3 is_stmt 1 view .LVU487
 427:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1630              		.loc 1 427 19 is_stmt 0 view .LVU488
 1631 0058 0F4B     		ldr	r3, .L71+8
 1632 005a 0093     		str	r3, [sp]
 428:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1633              		.loc 1 428 3 is_stmt 1 view .LVU489
 428:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1634              		.loc 1 428 16 is_stmt 0 view .LVU490
 1635 005c 0623     		movs	r3, #6
 1636 005e 0193     		str	r3, [sp, #4]
 429:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1637              		.loc 1 429 3 is_stmt 1 view .LVU491
 429:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1638              		.loc 1 429 24 is_stmt 0 view .LVU492
 1639 0060 0323     		movs	r3, #3
 1640 0062 0293     		str	r3, [sp, #8]
 430:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1641              		.loc 1 430 3 is_stmt 1 view .LVU493
 430:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1642              		.loc 1 430 22 is_stmt 0 view .LVU494
 1643 0064 40F2FF73 		movw	r3, #2047
 1644 0068 0393     		str	r3, [sp, #12]
 431:Core/Src/main.c ****   sConfig.Offset = 0;
 1645              		.loc 1 431 3 is_stmt 1 view .LVU495
 431:Core/Src/main.c ****   sConfig.Offset = 0;
 1646              		.loc 1 431 24 is_stmt 0 view .LVU496
 1647 006a 0423     		movs	r3, #4
 1648 006c 0493     		str	r3, [sp, #16]
 432:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1649              		.loc 1 432 3 is_stmt 1 view .LVU497
 432:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1650              		.loc 1 432 18 is_stmt 0 view .LVU498
 1651 006e 0023     		movs	r3, #0
 1652 0070 0593     		str	r3, [sp, #20]
 433:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  /tmp/ccr4Jxlr.s 			page 62


 1653              		.loc 1 433 3 is_stmt 1 view .LVU499
 433:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1654              		.loc 1 433 34 is_stmt 0 view .LVU500
 1655 0072 8DF82130 		strb	r3, [sp, #33]
 434:Core/Src/main.c ****   {
 1656              		.loc 1 434 3 is_stmt 1 view .LVU501
 434:Core/Src/main.c ****   {
 1657              		.loc 1 434 7 is_stmt 0 view .LVU502
 1658 0076 6946     		mov	r1, sp
 1659 0078 0548     		ldr	r0, .L71
 1660 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1661              	.LVL95:
 434:Core/Src/main.c ****   {
 1662              		.loc 1 434 6 view .LVU503
 1663 007e 28B9     		cbnz	r0, .L70
 442:Core/Src/main.c **** 
 1664              		.loc 1 442 1 view .LVU504
 1665 0080 0CB0     		add	sp, sp, #48
 1666              	.LCFI24:
 1667              		.cfi_remember_state
 1668              		.cfi_def_cfa_offset 8
 1669              		@ sp needed
 1670 0082 10BD     		pop	{r4, pc}
 1671              	.L68:
 1672              	.LCFI25:
 1673              		.cfi_restore_state
 414:Core/Src/main.c ****   }
 1674              		.loc 1 414 5 is_stmt 1 view .LVU505
 1675 0084 FFF7FEFF 		bl	Error_Handler
 1676              	.LVL96:
 1677              	.L69:
 422:Core/Src/main.c ****   }
 1678              		.loc 1 422 5 view .LVU506
 1679 0088 FFF7FEFF 		bl	Error_Handler
 1680              	.LVL97:
 1681              	.L70:
 436:Core/Src/main.c ****   }
 1682              		.loc 1 436 5 view .LVU507
 1683 008c FFF7FEFF 		bl	Error_Handler
 1684              	.LVL98:
 1685              	.L72:
 1686              		.align	2
 1687              	.L71:
 1688 0090 00000000 		.word	hadc1
 1689 0094 00200240 		.word	1073881088
 1690 0098 0040C03A 		.word	985677824
 1691              		.cfi_endproc
 1692              	.LFE363:
 1694              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1695              		.align	1
 1696              		.syntax unified
 1697              		.thumb
 1698              		.thumb_func
 1699              		.fpu fpv5-d16
 1701              	MX_TIM4_Init:
 1702              	.LFB373:
 887:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 63


 1703              		.loc 1 887 1 view -0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 40
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707 0000 00B5     		push	{lr}
 1708              	.LCFI26:
 1709              		.cfi_def_cfa_offset 4
 1710              		.cfi_offset 14, -4
 1711 0002 8BB0     		sub	sp, sp, #44
 1712              	.LCFI27:
 1713              		.cfi_def_cfa_offset 48
 893:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1714              		.loc 1 893 3 view .LVU509
 893:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1715              		.loc 1 893 27 is_stmt 0 view .LVU510
 1716 0004 0023     		movs	r3, #0
 1717 0006 0793     		str	r3, [sp, #28]
 1718 0008 0893     		str	r3, [sp, #32]
 1719 000a 0993     		str	r3, [sp, #36]
 894:Core/Src/main.c **** 
 1720              		.loc 1 894 3 is_stmt 1 view .LVU511
 894:Core/Src/main.c **** 
 1721              		.loc 1 894 22 is_stmt 0 view .LVU512
 1722 000c 0093     		str	r3, [sp]
 1723 000e 0193     		str	r3, [sp, #4]
 1724 0010 0293     		str	r3, [sp, #8]
 1725 0012 0393     		str	r3, [sp, #12]
 1726 0014 0493     		str	r3, [sp, #16]
 1727 0016 0593     		str	r3, [sp, #20]
 1728 0018 0693     		str	r3, [sp, #24]
 899:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1729              		.loc 1 899 3 is_stmt 1 view .LVU513
 899:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1730              		.loc 1 899 18 is_stmt 0 view .LVU514
 1731 001a 2248     		ldr	r0, .L87
 1732 001c 224A     		ldr	r2, .L87+4
 1733 001e 0260     		str	r2, [r0]
 900:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1734              		.loc 1 900 3 is_stmt 1 view .LVU515
 900:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1735              		.loc 1 900 24 is_stmt 0 view .LVU516
 1736 0020 1D22     		movs	r2, #29
 1737 0022 4260     		str	r2, [r0, #4]
 901:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1738              		.loc 1 901 3 is_stmt 1 view .LVU517
 901:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1739              		.loc 1 901 26 is_stmt 0 view .LVU518
 1740 0024 8360     		str	r3, [r0, #8]
 902:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1741              		.loc 1 902 3 is_stmt 1 view .LVU519
 902:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1742              		.loc 1 902 21 is_stmt 0 view .LVU520
 1743 0026 42F20F72 		movw	r2, #9999
 1744 002a C260     		str	r2, [r0, #12]
 903:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1745              		.loc 1 903 3 is_stmt 1 view .LVU521
 903:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccr4Jxlr.s 			page 64


 1746              		.loc 1 903 28 is_stmt 0 view .LVU522
 1747 002c 0361     		str	r3, [r0, #16]
 904:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1748              		.loc 1 904 3 is_stmt 1 view .LVU523
 904:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1749              		.loc 1 904 32 is_stmt 0 view .LVU524
 1750 002e 8361     		str	r3, [r0, #24]
 905:Core/Src/main.c ****   {
 1751              		.loc 1 905 3 is_stmt 1 view .LVU525
 905:Core/Src/main.c ****   {
 1752              		.loc 1 905 7 is_stmt 0 view .LVU526
 1753 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1754              	.LVL99:
 905:Core/Src/main.c ****   {
 1755              		.loc 1 905 6 view .LVU527
 1756 0034 50BB     		cbnz	r0, .L81
 909:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1757              		.loc 1 909 3 is_stmt 1 view .LVU528
 909:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1758              		.loc 1 909 37 is_stmt 0 view .LVU529
 1759 0036 0023     		movs	r3, #0
 1760 0038 0793     		str	r3, [sp, #28]
 910:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1761              		.loc 1 910 3 is_stmt 1 view .LVU530
 910:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1762              		.loc 1 910 33 is_stmt 0 view .LVU531
 1763 003a 0993     		str	r3, [sp, #36]
 911:Core/Src/main.c ****   {
 1764              		.loc 1 911 3 is_stmt 1 view .LVU532
 911:Core/Src/main.c ****   {
 1765              		.loc 1 911 7 is_stmt 0 view .LVU533
 1766 003c 07A9     		add	r1, sp, #28
 1767 003e 1948     		ldr	r0, .L87
 1768 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1769              	.LVL100:
 911:Core/Src/main.c ****   {
 1770              		.loc 1 911 6 view .LVU534
 1771 0044 20BB     		cbnz	r0, .L82
 915:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1772              		.loc 1 915 3 is_stmt 1 view .LVU535
 915:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1773              		.loc 1 915 20 is_stmt 0 view .LVU536
 1774 0046 6023     		movs	r3, #96
 1775 0048 0093     		str	r3, [sp]
 916:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1776              		.loc 1 916 3 is_stmt 1 view .LVU537
 916:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1777              		.loc 1 916 19 is_stmt 0 view .LVU538
 1778 004a 0022     		movs	r2, #0
 1779 004c 0192     		str	r2, [sp, #4]
 917:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1780              		.loc 1 917 3 is_stmt 1 view .LVU539
 917:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1781              		.loc 1 917 24 is_stmt 0 view .LVU540
 1782 004e 0292     		str	r2, [sp, #8]
 918:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1783              		.loc 1 918 3 is_stmt 1 view .LVU541
ARM GAS  /tmp/ccr4Jxlr.s 			page 65


 918:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1784              		.loc 1 918 24 is_stmt 0 view .LVU542
 1785 0050 0492     		str	r2, [sp, #16]
 919:Core/Src/main.c ****   {
 1786              		.loc 1 919 3 is_stmt 1 view .LVU543
 919:Core/Src/main.c ****   {
 1787              		.loc 1 919 7 is_stmt 0 view .LVU544
 1788 0052 6946     		mov	r1, sp
 1789 0054 1348     		ldr	r0, .L87
 1790 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1791              	.LVL101:
 919:Core/Src/main.c ****   {
 1792              		.loc 1 919 6 view .LVU545
 1793 005a D8B9     		cbnz	r0, .L83
 923:Core/Src/main.c ****   {
 1794              		.loc 1 923 3 is_stmt 1 view .LVU546
 923:Core/Src/main.c ****   {
 1795              		.loc 1 923 7 is_stmt 0 view .LVU547
 1796 005c 0422     		movs	r2, #4
 1797 005e 6946     		mov	r1, sp
 1798 0060 1048     		ldr	r0, .L87
 1799 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1800              	.LVL102:
 923:Core/Src/main.c ****   {
 1801              		.loc 1 923 6 view .LVU548
 1802 0066 B8B9     		cbnz	r0, .L84
 927:Core/Src/main.c ****   {
 1803              		.loc 1 927 3 is_stmt 1 view .LVU549
 927:Core/Src/main.c ****   {
 1804              		.loc 1 927 7 is_stmt 0 view .LVU550
 1805 0068 0822     		movs	r2, #8
 1806 006a 6946     		mov	r1, sp
 1807 006c 0D48     		ldr	r0, .L87
 1808 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1809              	.LVL103:
 927:Core/Src/main.c ****   {
 1810              		.loc 1 927 6 view .LVU551
 1811 0072 98B9     		cbnz	r0, .L85
 931:Core/Src/main.c ****   {
 1812              		.loc 1 931 3 is_stmt 1 view .LVU552
 931:Core/Src/main.c ****   {
 1813              		.loc 1 931 7 is_stmt 0 view .LVU553
 1814 0074 0C22     		movs	r2, #12
 1815 0076 6946     		mov	r1, sp
 1816 0078 0A48     		ldr	r0, .L87
 1817 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1818              	.LVL104:
 931:Core/Src/main.c ****   {
 1819              		.loc 1 931 6 view .LVU554
 1820 007e 78B9     		cbnz	r0, .L86
 938:Core/Src/main.c **** 
 1821              		.loc 1 938 3 is_stmt 1 view .LVU555
 1822 0080 0848     		ldr	r0, .L87
 1823 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1824              	.LVL105:
 940:Core/Src/main.c **** 
 1825              		.loc 1 940 1 is_stmt 0 view .LVU556
ARM GAS  /tmp/ccr4Jxlr.s 			page 66


 1826 0086 0BB0     		add	sp, sp, #44
 1827              	.LCFI28:
 1828              		.cfi_remember_state
 1829              		.cfi_def_cfa_offset 4
 1830              		@ sp needed
 1831 0088 5DF804FB 		ldr	pc, [sp], #4
 1832              	.L81:
 1833              	.LCFI29:
 1834              		.cfi_restore_state
 907:Core/Src/main.c ****   }
 1835              		.loc 1 907 5 is_stmt 1 view .LVU557
 1836 008c FFF7FEFF 		bl	Error_Handler
 1837              	.LVL106:
 1838              	.L82:
 913:Core/Src/main.c ****   }
 1839              		.loc 1 913 5 view .LVU558
 1840 0090 FFF7FEFF 		bl	Error_Handler
 1841              	.LVL107:
 1842              	.L83:
 921:Core/Src/main.c ****   }
 1843              		.loc 1 921 5 view .LVU559
 1844 0094 FFF7FEFF 		bl	Error_Handler
 1845              	.LVL108:
 1846              	.L84:
 925:Core/Src/main.c ****   }
 1847              		.loc 1 925 5 view .LVU560
 1848 0098 FFF7FEFF 		bl	Error_Handler
 1849              	.LVL109:
 1850              	.L85:
 929:Core/Src/main.c ****   }
 1851              		.loc 1 929 5 view .LVU561
 1852 009c FFF7FEFF 		bl	Error_Handler
 1853              	.LVL110:
 1854              	.L86:
 933:Core/Src/main.c ****   }
 1855              		.loc 1 933 5 view .LVU562
 1856 00a0 FFF7FEFF 		bl	Error_Handler
 1857              	.LVL111:
 1858              	.L88:
 1859              		.align	2
 1860              	.L87:
 1861 00a4 00000000 		.word	htim4
 1862 00a8 00080040 		.word	1073743872
 1863              		.cfi_endproc
 1864              	.LFE373:
 1866              		.section	.text.MX_ADC3_Init,"ax",%progbits
 1867              		.align	1
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1871              		.fpu fpv5-d16
 1873              	MX_ADC3_Init:
 1874              	.LFB364:
 450:Core/Src/main.c **** 
 1875              		.loc 1 450 1 view -0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 40
ARM GAS  /tmp/ccr4Jxlr.s 			page 67


 1878              		@ frame_needed = 0, uses_anonymous_args = 0
 1879 0000 00B5     		push	{lr}
 1880              	.LCFI30:
 1881              		.cfi_def_cfa_offset 4
 1882              		.cfi_offset 14, -4
 1883 0002 8BB0     		sub	sp, sp, #44
 1884              	.LCFI31:
 1885              		.cfi_def_cfa_offset 48
 456:Core/Src/main.c **** 
 1886              		.loc 1 456 3 view .LVU564
 456:Core/Src/main.c **** 
 1887              		.loc 1 456 26 is_stmt 0 view .LVU565
 1888 0004 2422     		movs	r2, #36
 1889 0006 0021     		movs	r1, #0
 1890 0008 01A8     		add	r0, sp, #4
 1891 000a FFF7FEFF 		bl	memset
 1892              	.LVL112:
 464:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1893              		.loc 1 464 3 is_stmt 1 view .LVU566
 464:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1894              		.loc 1 464 18 is_stmt 0 view .LVU567
 1895 000e 1D48     		ldr	r0, .L95
 1896 0010 1D4B     		ldr	r3, .L95+4
 1897 0012 0360     		str	r3, [r0]
 465:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1898              		.loc 1 465 3 is_stmt 1 view .LVU568
 465:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 1899              		.loc 1 465 29 is_stmt 0 view .LVU569
 1900 0014 4FF43013 		mov	r3, #2883584
 1901 0018 4360     		str	r3, [r0, #4]
 466:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 1902              		.loc 1 466 3 is_stmt 1 view .LVU570
 466:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 1903              		.loc 1 466 25 is_stmt 0 view .LVU571
 1904 001a 0823     		movs	r3, #8
 1905 001c 8360     		str	r3, [r0, #8]
 467:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1906              		.loc 1 467 3 is_stmt 1 view .LVU572
 467:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1907              		.loc 1 467 24 is_stmt 0 view .LVU573
 1908 001e 0023     		movs	r3, #0
 1909 0020 C360     		str	r3, [r0, #12]
 468:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1910              		.loc 1 468 3 is_stmt 1 view .LVU574
 468:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1911              		.loc 1 468 27 is_stmt 0 view .LVU575
 1912 0022 0361     		str	r3, [r0, #16]
 469:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 1913              		.loc 1 469 3 is_stmt 1 view .LVU576
 469:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 1914              		.loc 1 469 27 is_stmt 0 view .LVU577
 1915 0024 0422     		movs	r2, #4
 1916 0026 4261     		str	r2, [r0, #20]
 470:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 1917              		.loc 1 470 3 is_stmt 1 view .LVU578
 470:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 1918              		.loc 1 470 31 is_stmt 0 view .LVU579
ARM GAS  /tmp/ccr4Jxlr.s 			page 68


 1919 0028 0376     		strb	r3, [r0, #24]
 471:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 1920              		.loc 1 471 3 is_stmt 1 view .LVU580
 471:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 1921              		.loc 1 471 33 is_stmt 0 view .LVU581
 1922 002a 4376     		strb	r3, [r0, #25]
 472:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 1923              		.loc 1 472 3 is_stmt 1 view .LVU582
 472:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 1924              		.loc 1 472 30 is_stmt 0 view .LVU583
 1925 002c 0122     		movs	r2, #1
 1926 002e C261     		str	r2, [r0, #28]
 473:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1927              		.loc 1 473 3 is_stmt 1 view .LVU584
 473:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1928              		.loc 1 473 36 is_stmt 0 view .LVU585
 1929 0030 80F82030 		strb	r3, [r0, #32]
 474:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1930              		.loc 1 474 3 is_stmt 1 view .LVU586
 474:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1931              		.loc 1 474 31 is_stmt 0 view .LVU587
 1932 0034 8362     		str	r3, [r0, #40]
 475:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 1933              		.loc 1 475 3 is_stmt 1 view .LVU588
 475:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 1934              		.loc 1 475 35 is_stmt 0 view .LVU589
 1935 0036 C362     		str	r3, [r0, #44]
 476:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 1936              		.loc 1 476 3 is_stmt 1 view .LVU590
 476:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 1937              		.loc 1 476 36 is_stmt 0 view .LVU591
 1938 0038 80F83820 		strb	r2, [r0, #56]
 477:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1939              		.loc 1 477 3 is_stmt 1 view .LVU592
 477:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1940              		.loc 1 477 27 is_stmt 0 view .LVU593
 1941 003c 4363     		str	r3, [r0, #52]
 478:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1942              		.loc 1 478 3 is_stmt 1 view .LVU594
 478:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1943              		.loc 1 478 39 is_stmt 0 view .LVU595
 1944 003e 0363     		str	r3, [r0, #48]
 479:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1945              		.loc 1 479 3 is_stmt 1 view .LVU596
 479:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1946              		.loc 1 479 22 is_stmt 0 view .LVU597
 1947 0040 C363     		str	r3, [r0, #60]
 480:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 1948              		.loc 1 480 3 is_stmt 1 view .LVU598
 480:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 1949              		.loc 1 480 27 is_stmt 0 view .LVU599
 1950 0042 0364     		str	r3, [r0, #64]
 481:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 1951              		.loc 1 481 3 is_stmt 1 view .LVU600
 481:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 1952              		.loc 1 481 31 is_stmt 0 view .LVU601
 1953 0044 80F84430 		strb	r3, [r0, #68]
ARM GAS  /tmp/ccr4Jxlr.s 			page 69


 482:Core/Src/main.c ****   {
 1954              		.loc 1 482 3 is_stmt 1 view .LVU602
 482:Core/Src/main.c ****   {
 1955              		.loc 1 482 7 is_stmt 0 view .LVU603
 1956 0048 FFF7FEFF 		bl	HAL_ADC_Init
 1957              	.LVL113:
 482:Core/Src/main.c ****   {
 1958              		.loc 1 482 6 view .LVU604
 1959 004c A8B9     		cbnz	r0, .L93
 489:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1960              		.loc 1 489 3 is_stmt 1 view .LVU605
 489:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1961              		.loc 1 489 19 is_stmt 0 view .LVU606
 1962 004e 0F4B     		ldr	r3, .L95+8
 1963 0050 0193     		str	r3, [sp, #4]
 490:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 1964              		.loc 1 490 3 is_stmt 1 view .LVU607
 490:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 1965              		.loc 1 490 16 is_stmt 0 view .LVU608
 1966 0052 0623     		movs	r3, #6
 1967 0054 0293     		str	r3, [sp, #8]
 491:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1968              		.loc 1 491 3 is_stmt 1 view .LVU609
 491:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1969              		.loc 1 491 24 is_stmt 0 view .LVU610
 1970 0056 0023     		movs	r3, #0
 1971 0058 0393     		str	r3, [sp, #12]
 492:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1972              		.loc 1 492 3 is_stmt 1 view .LVU611
 492:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1973              		.loc 1 492 22 is_stmt 0 view .LVU612
 1974 005a 40F2FF72 		movw	r2, #2047
 1975 005e 0492     		str	r2, [sp, #16]
 493:Core/Src/main.c ****   sConfig.Offset = 0;
 1976              		.loc 1 493 3 is_stmt 1 view .LVU613
 493:Core/Src/main.c ****   sConfig.Offset = 0;
 1977              		.loc 1 493 24 is_stmt 0 view .LVU614
 1978 0060 0422     		movs	r2, #4
 1979 0062 0592     		str	r2, [sp, #20]
 494:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 1980              		.loc 1 494 3 is_stmt 1 view .LVU615
 494:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 1981              		.loc 1 494 18 is_stmt 0 view .LVU616
 1982 0064 0693     		str	r3, [sp, #24]
 495:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1983              		.loc 1 495 3 is_stmt 1 view .LVU617
 495:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1984              		.loc 1 495 22 is_stmt 0 view .LVU618
 1985 0066 0893     		str	r3, [sp, #32]
 496:Core/Src/main.c ****   {
 1986              		.loc 1 496 3 is_stmt 1 view .LVU619
 496:Core/Src/main.c ****   {
 1987              		.loc 1 496 7 is_stmt 0 view .LVU620
 1988 0068 0DEB0201 		add	r1, sp, r2
 1989 006c 0548     		ldr	r0, .L95
 1990 006e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1991              	.LVL114:
ARM GAS  /tmp/ccr4Jxlr.s 			page 70


 496:Core/Src/main.c ****   {
 1992              		.loc 1 496 6 view .LVU621
 1993 0072 20B9     		cbnz	r0, .L94
 504:Core/Src/main.c **** 
 1994              		.loc 1 504 1 view .LVU622
 1995 0074 0BB0     		add	sp, sp, #44
 1996              	.LCFI32:
 1997              		.cfi_remember_state
 1998              		.cfi_def_cfa_offset 4
 1999              		@ sp needed
 2000 0076 5DF804FB 		ldr	pc, [sp], #4
 2001              	.L93:
 2002              	.LCFI33:
 2003              		.cfi_restore_state
 484:Core/Src/main.c ****   }
 2004              		.loc 1 484 5 is_stmt 1 view .LVU623
 2005 007a FFF7FEFF 		bl	Error_Handler
 2006              	.LVL115:
 2007              	.L94:
 498:Core/Src/main.c ****   }
 2008              		.loc 1 498 5 view .LVU624
 2009 007e FFF7FEFF 		bl	Error_Handler
 2010              	.LVL116:
 2011              	.L96:
 2012 0082 00BF     		.align	2
 2013              	.L95:
 2014 0084 00000000 		.word	hadc3
 2015 0088 00600258 		.word	1476550656
 2016 008c 02003004 		.word	70254594
 2017              		.cfi_endproc
 2018              	.LFE364:
 2020              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2021              		.align	1
 2022              		.syntax unified
 2023              		.thumb
 2024              		.thumb_func
 2025              		.fpu fpv5-d16
 2027              	MX_SPI2_Init:
 2028              	.LFB369:
 689:Core/Src/main.c **** 
 2029              		.loc 1 689 1 view -0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 0, uses_anonymous_args = 0
 2033 0000 08B5     		push	{r3, lr}
 2034              	.LCFI34:
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 3, -8
 2037              		.cfi_offset 14, -4
 699:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2038              		.loc 1 699 3 view .LVU626
 699:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2039              		.loc 1 699 18 is_stmt 0 view .LVU627
 2040 0002 1448     		ldr	r0, .L101
 2041 0004 144B     		ldr	r3, .L101+4
 2042 0006 0360     		str	r3, [r0]
 700:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  /tmp/ccr4Jxlr.s 			page 71


 2043              		.loc 1 700 3 is_stmt 1 view .LVU628
 700:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2044              		.loc 1 700 19 is_stmt 0 view .LVU629
 2045 0008 4FF48003 		mov	r3, #4194304
 2046 000c 4360     		str	r3, [r0, #4]
 701:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2047              		.loc 1 701 3 is_stmt 1 view .LVU630
 701:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2048              		.loc 1 701 24 is_stmt 0 view .LVU631
 2049 000e 0023     		movs	r3, #0
 2050 0010 8360     		str	r3, [r0, #8]
 702:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2051              		.loc 1 702 3 is_stmt 1 view .LVU632
 702:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2052              		.loc 1 702 23 is_stmt 0 view .LVU633
 2053 0012 0722     		movs	r2, #7
 2054 0014 C260     		str	r2, [r0, #12]
 703:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2055              		.loc 1 703 3 is_stmt 1 view .LVU634
 703:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2056              		.loc 1 703 26 is_stmt 0 view .LVU635
 2057 0016 0361     		str	r3, [r0, #16]
 704:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2058              		.loc 1 704 3 is_stmt 1 view .LVU636
 704:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2059              		.loc 1 704 23 is_stmt 0 view .LVU637
 2060 0018 4361     		str	r3, [r0, #20]
 705:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2061              		.loc 1 705 3 is_stmt 1 view .LVU638
 705:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2062              		.loc 1 705 18 is_stmt 0 view .LVU639
 2063 001a 4FF08062 		mov	r2, #67108864
 2064 001e 8261     		str	r2, [r0, #24]
 706:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2065              		.loc 1 706 3 is_stmt 1 view .LVU640
 706:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2066              		.loc 1 706 32 is_stmt 0 view .LVU641
 2067 0020 4FF00052 		mov	r2, #536870912
 2068 0024 C261     		str	r2, [r0, #28]
 707:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2069              		.loc 1 707 3 is_stmt 1 view .LVU642
 707:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2070              		.loc 1 707 23 is_stmt 0 view .LVU643
 2071 0026 0362     		str	r3, [r0, #32]
 708:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2072              		.loc 1 708 3 is_stmt 1 view .LVU644
 708:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2073              		.loc 1 708 21 is_stmt 0 view .LVU645
 2074 0028 4362     		str	r3, [r0, #36]
 709:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2075              		.loc 1 709 3 is_stmt 1 view .LVU646
 709:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2076              		.loc 1 709 29 is_stmt 0 view .LVU647
 2077 002a 8362     		str	r3, [r0, #40]
 710:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2078              		.loc 1 710 3 is_stmt 1 view .LVU648
 710:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
ARM GAS  /tmp/ccr4Jxlr.s 			page 72


 2079              		.loc 1 710 28 is_stmt 0 view .LVU649
 2080 002c C362     		str	r3, [r0, #44]
 711:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2081              		.loc 1 711 3 is_stmt 1 view .LVU650
 711:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2082              		.loc 1 711 23 is_stmt 0 view .LVU651
 2083 002e 4FF08042 		mov	r2, #1073741824
 2084 0032 4263     		str	r2, [r0, #52]
 712:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2085              		.loc 1 712 3 is_stmt 1 view .LVU652
 712:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2086              		.loc 1 712 26 is_stmt 0 view .LVU653
 2087 0034 8363     		str	r3, [r0, #56]
 713:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2088              		.loc 1 713 3 is_stmt 1 view .LVU654
 713:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2089              		.loc 1 713 28 is_stmt 0 view .LVU655
 2090 0036 C363     		str	r3, [r0, #60]
 714:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2091              		.loc 1 714 3 is_stmt 1 view .LVU656
 714:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2092              		.loc 1 714 41 is_stmt 0 view .LVU657
 2093 0038 0364     		str	r3, [r0, #64]
 715:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2094              		.loc 1 715 3 is_stmt 1 view .LVU658
 715:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2095              		.loc 1 715 41 is_stmt 0 view .LVU659
 2096 003a 4364     		str	r3, [r0, #68]
 716:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2097              		.loc 1 716 3 is_stmt 1 view .LVU660
 716:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2098              		.loc 1 716 31 is_stmt 0 view .LVU661
 2099 003c 8364     		str	r3, [r0, #72]
 717:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2100              		.loc 1 717 3 is_stmt 1 view .LVU662
 717:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2101              		.loc 1 717 38 is_stmt 0 view .LVU663
 2102 003e C364     		str	r3, [r0, #76]
 718:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2103              		.loc 1 718 3 is_stmt 1 view .LVU664
 718:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2104              		.loc 1 718 37 is_stmt 0 view .LVU665
 2105 0040 0365     		str	r3, [r0, #80]
 719:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2106              		.loc 1 719 3 is_stmt 1 view .LVU666
 719:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2107              		.loc 1 719 32 is_stmt 0 view .LVU667
 2108 0042 4365     		str	r3, [r0, #84]
 720:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2109              		.loc 1 720 3 is_stmt 1 view .LVU668
 720:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2110              		.loc 1 720 21 is_stmt 0 view .LVU669
 2111 0044 8365     		str	r3, [r0, #88]
 721:Core/Src/main.c ****   {
 2112              		.loc 1 721 3 is_stmt 1 view .LVU670
 721:Core/Src/main.c ****   {
 2113              		.loc 1 721 7 is_stmt 0 view .LVU671
ARM GAS  /tmp/ccr4Jxlr.s 			page 73


 2114 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2115              	.LVL117:
 721:Core/Src/main.c ****   {
 2116              		.loc 1 721 6 view .LVU672
 2117 004a 00B9     		cbnz	r0, .L100
 729:Core/Src/main.c **** 
 2118              		.loc 1 729 1 view .LVU673
 2119 004c 08BD     		pop	{r3, pc}
 2120              	.L100:
 723:Core/Src/main.c ****   }
 2121              		.loc 1 723 5 is_stmt 1 view .LVU674
 2122 004e FFF7FEFF 		bl	Error_Handler
 2123              	.LVL118:
 2124              	.L102:
 2125 0052 00BF     		.align	2
 2126              	.L101:
 2127 0054 00000000 		.word	hspi2
 2128 0058 00380040 		.word	1073756160
 2129              		.cfi_endproc
 2130              	.LFE369:
 2132              		.section	.text.MX_I2C2_Init,"ax",%progbits
 2133              		.align	1
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2137              		.fpu fpv5-d16
 2139              	MX_I2C2_Init:
 2140              	.LFB366:
 565:Core/Src/main.c **** 
 2141              		.loc 1 565 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145 0000 08B5     		push	{r3, lr}
 2146              	.LCFI35:
 2147              		.cfi_def_cfa_offset 8
 2148              		.cfi_offset 3, -8
 2149              		.cfi_offset 14, -4
 574:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2150              		.loc 1 574 3 view .LVU676
 574:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2151              		.loc 1 574 18 is_stmt 0 view .LVU677
 2152 0002 1148     		ldr	r0, .L111
 2153 0004 114B     		ldr	r3, .L111+4
 2154 0006 0360     		str	r3, [r0]
 575:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2155              		.loc 1 575 3 is_stmt 1 view .LVU678
 575:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2156              		.loc 1 575 21 is_stmt 0 view .LVU679
 2157 0008 114B     		ldr	r3, .L111+8
 2158 000a 4360     		str	r3, [r0, #4]
 576:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2159              		.loc 1 576 3 is_stmt 1 view .LVU680
 576:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2160              		.loc 1 576 26 is_stmt 0 view .LVU681
 2161 000c 0023     		movs	r3, #0
 2162 000e 8360     		str	r3, [r0, #8]
ARM GAS  /tmp/ccr4Jxlr.s 			page 74


 577:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2163              		.loc 1 577 3 is_stmt 1 view .LVU682
 577:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2164              		.loc 1 577 29 is_stmt 0 view .LVU683
 2165 0010 0122     		movs	r2, #1
 2166 0012 C260     		str	r2, [r0, #12]
 578:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2167              		.loc 1 578 3 is_stmt 1 view .LVU684
 578:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2168              		.loc 1 578 30 is_stmt 0 view .LVU685
 2169 0014 0361     		str	r3, [r0, #16]
 579:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2170              		.loc 1 579 3 is_stmt 1 view .LVU686
 579:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2171              		.loc 1 579 26 is_stmt 0 view .LVU687
 2172 0016 4361     		str	r3, [r0, #20]
 580:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2173              		.loc 1 580 3 is_stmt 1 view .LVU688
 580:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2174              		.loc 1 580 31 is_stmt 0 view .LVU689
 2175 0018 8361     		str	r3, [r0, #24]
 581:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2176              		.loc 1 581 3 is_stmt 1 view .LVU690
 581:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2177              		.loc 1 581 30 is_stmt 0 view .LVU691
 2178 001a C361     		str	r3, [r0, #28]
 582:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2179              		.loc 1 582 3 is_stmt 1 view .LVU692
 582:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2180              		.loc 1 582 28 is_stmt 0 view .LVU693
 2181 001c 0362     		str	r3, [r0, #32]
 583:Core/Src/main.c ****   {
 2182              		.loc 1 583 3 is_stmt 1 view .LVU694
 583:Core/Src/main.c ****   {
 2183              		.loc 1 583 7 is_stmt 0 view .LVU695
 2184 001e FFF7FEFF 		bl	HAL_I2C_Init
 2185              	.LVL119:
 583:Core/Src/main.c ****   {
 2186              		.loc 1 583 6 view .LVU696
 2187 0022 50B9     		cbnz	r0, .L108
 590:Core/Src/main.c ****   {
 2188              		.loc 1 590 3 is_stmt 1 view .LVU697
 590:Core/Src/main.c ****   {
 2189              		.loc 1 590 7 is_stmt 0 view .LVU698
 2190 0024 0021     		movs	r1, #0
 2191 0026 0848     		ldr	r0, .L111
 2192 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 2193              	.LVL120:
 590:Core/Src/main.c ****   {
 2194              		.loc 1 590 6 view .LVU699
 2195 002c 38B9     		cbnz	r0, .L109
 597:Core/Src/main.c ****   {
 2196              		.loc 1 597 3 is_stmt 1 view .LVU700
 597:Core/Src/main.c ****   {
 2197              		.loc 1 597 7 is_stmt 0 view .LVU701
 2198 002e 0021     		movs	r1, #0
 2199 0030 0548     		ldr	r0, .L111
ARM GAS  /tmp/ccr4Jxlr.s 			page 75


 2200 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 2201              	.LVL121:
 597:Core/Src/main.c ****   {
 2202              		.loc 1 597 6 view .LVU702
 2203 0036 20B9     		cbnz	r0, .L110
 605:Core/Src/main.c **** 
 2204              		.loc 1 605 1 view .LVU703
 2205 0038 08BD     		pop	{r3, pc}
 2206              	.L108:
 585:Core/Src/main.c ****   }
 2207              		.loc 1 585 5 is_stmt 1 view .LVU704
 2208 003a FFF7FEFF 		bl	Error_Handler
 2209              	.LVL122:
 2210              	.L109:
 592:Core/Src/main.c ****   }
 2211              		.loc 1 592 5 view .LVU705
 2212 003e FFF7FEFF 		bl	Error_Handler
 2213              	.LVL123:
 2214              	.L110:
 599:Core/Src/main.c ****   }
 2215              		.loc 1 599 5 view .LVU706
 2216 0042 FFF7FEFF 		bl	Error_Handler
 2217              	.LVL124:
 2218              	.L112:
 2219 0046 00BF     		.align	2
 2220              	.L111:
 2221 0048 00000000 		.word	hi2c2
 2222 004c 00580040 		.word	1073764352
 2223 0050 5D3E3020 		.word	540032605
 2224              		.cfi_endproc
 2225              	.LFE366:
 2227              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2228              		.align	1
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2232              		.fpu fpv5-d16
 2234              	MX_TIM2_Init:
 2235              	.LFB371:
 785:Core/Src/main.c **** 
 2236              		.loc 1 785 1 view -0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 40
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240 0000 00B5     		push	{lr}
 2241              	.LCFI36:
 2242              		.cfi_def_cfa_offset 4
 2243              		.cfi_offset 14, -4
 2244 0002 8BB0     		sub	sp, sp, #44
 2245              	.LCFI37:
 2246              		.cfi_def_cfa_offset 48
 791:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2247              		.loc 1 791 3 view .LVU708
 791:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2248              		.loc 1 791 27 is_stmt 0 view .LVU709
 2249 0004 0023     		movs	r3, #0
 2250 0006 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccr4Jxlr.s 			page 76


 2251 0008 0893     		str	r3, [sp, #32]
 2252 000a 0993     		str	r3, [sp, #36]
 792:Core/Src/main.c **** 
 2253              		.loc 1 792 3 is_stmt 1 view .LVU710
 792:Core/Src/main.c **** 
 2254              		.loc 1 792 22 is_stmt 0 view .LVU711
 2255 000c 0093     		str	r3, [sp]
 2256 000e 0193     		str	r3, [sp, #4]
 2257 0010 0293     		str	r3, [sp, #8]
 2258 0012 0393     		str	r3, [sp, #12]
 2259 0014 0493     		str	r3, [sp, #16]
 2260 0016 0593     		str	r3, [sp, #20]
 2261 0018 0693     		str	r3, [sp, #24]
 797:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2262              		.loc 1 797 3 is_stmt 1 view .LVU712
 797:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2263              		.loc 1 797 18 is_stmt 0 view .LVU713
 2264 001a 1648     		ldr	r0, .L121
 2265 001c 4FF08042 		mov	r2, #1073741824
 2266 0020 0260     		str	r2, [r0]
 798:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2267              		.loc 1 798 3 is_stmt 1 view .LVU714
 798:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2268              		.loc 1 798 24 is_stmt 0 view .LVU715
 2269 0022 4360     		str	r3, [r0, #4]
 799:Core/Src/main.c ****   htim2.Init.Period = 90;
 2270              		.loc 1 799 3 is_stmt 1 view .LVU716
 799:Core/Src/main.c ****   htim2.Init.Period = 90;
 2271              		.loc 1 799 26 is_stmt 0 view .LVU717
 2272 0024 8360     		str	r3, [r0, #8]
 800:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2273              		.loc 1 800 3 is_stmt 1 view .LVU718
 800:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2274              		.loc 1 800 21 is_stmt 0 view .LVU719
 2275 0026 5A22     		movs	r2, #90
 2276 0028 C260     		str	r2, [r0, #12]
 801:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2277              		.loc 1 801 3 is_stmt 1 view .LVU720
 801:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2278              		.loc 1 801 28 is_stmt 0 view .LVU721
 2279 002a 0361     		str	r3, [r0, #16]
 802:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2280              		.loc 1 802 3 is_stmt 1 view .LVU722
 802:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2281              		.loc 1 802 32 is_stmt 0 view .LVU723
 2282 002c 8361     		str	r3, [r0, #24]
 803:Core/Src/main.c ****   {
 2283              		.loc 1 803 3 is_stmt 1 view .LVU724
 803:Core/Src/main.c ****   {
 2284              		.loc 1 803 7 is_stmt 0 view .LVU725
 2285 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2286              	.LVL125:
 803:Core/Src/main.c ****   {
 2287              		.loc 1 803 6 view .LVU726
 2288 0032 C8B9     		cbnz	r0, .L118
 807:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2289              		.loc 1 807 3 is_stmt 1 view .LVU727
ARM GAS  /tmp/ccr4Jxlr.s 			page 77


 807:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2290              		.loc 1 807 37 is_stmt 0 view .LVU728
 2291 0034 0023     		movs	r3, #0
 2292 0036 0793     		str	r3, [sp, #28]
 808:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2293              		.loc 1 808 3 is_stmt 1 view .LVU729
 808:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2294              		.loc 1 808 33 is_stmt 0 view .LVU730
 2295 0038 0993     		str	r3, [sp, #36]
 809:Core/Src/main.c ****   {
 2296              		.loc 1 809 3 is_stmt 1 view .LVU731
 809:Core/Src/main.c ****   {
 2297              		.loc 1 809 7 is_stmt 0 view .LVU732
 2298 003a 07A9     		add	r1, sp, #28
 2299 003c 0D48     		ldr	r0, .L121
 2300 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2301              	.LVL126:
 809:Core/Src/main.c ****   {
 2302              		.loc 1 809 6 view .LVU733
 2303 0042 98B9     		cbnz	r0, .L119
 813:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2304              		.loc 1 813 3 is_stmt 1 view .LVU734
 813:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2305              		.loc 1 813 20 is_stmt 0 view .LVU735
 2306 0044 6023     		movs	r3, #96
 2307 0046 0093     		str	r3, [sp]
 814:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2308              		.loc 1 814 3 is_stmt 1 view .LVU736
 814:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2309              		.loc 1 814 19 is_stmt 0 view .LVU737
 2310 0048 0023     		movs	r3, #0
 2311 004a 0193     		str	r3, [sp, #4]
 815:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2312              		.loc 1 815 3 is_stmt 1 view .LVU738
 815:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2313              		.loc 1 815 24 is_stmt 0 view .LVU739
 2314 004c 0293     		str	r3, [sp, #8]
 816:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2315              		.loc 1 816 3 is_stmt 1 view .LVU740
 816:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2316              		.loc 1 816 24 is_stmt 0 view .LVU741
 2317 004e 0493     		str	r3, [sp, #16]
 817:Core/Src/main.c ****   {
 2318              		.loc 1 817 3 is_stmt 1 view .LVU742
 817:Core/Src/main.c ****   {
 2319              		.loc 1 817 7 is_stmt 0 view .LVU743
 2320 0050 0822     		movs	r2, #8
 2321 0052 6946     		mov	r1, sp
 2322 0054 0748     		ldr	r0, .L121
 2323 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2324              	.LVL127:
 817:Core/Src/main.c ****   {
 2325              		.loc 1 817 6 view .LVU744
 2326 005a 48B9     		cbnz	r0, .L120
 824:Core/Src/main.c **** 
 2327              		.loc 1 824 3 is_stmt 1 view .LVU745
 2328 005c 0548     		ldr	r0, .L121
ARM GAS  /tmp/ccr4Jxlr.s 			page 78


 2329 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2330              	.LVL128:
 826:Core/Src/main.c **** 
 2331              		.loc 1 826 1 is_stmt 0 view .LVU746
 2332 0062 0BB0     		add	sp, sp, #44
 2333              	.LCFI38:
 2334              		.cfi_remember_state
 2335              		.cfi_def_cfa_offset 4
 2336              		@ sp needed
 2337 0064 5DF804FB 		ldr	pc, [sp], #4
 2338              	.L118:
 2339              	.LCFI39:
 2340              		.cfi_restore_state
 805:Core/Src/main.c ****   }
 2341              		.loc 1 805 5 is_stmt 1 view .LVU747
 2342 0068 FFF7FEFF 		bl	Error_Handler
 2343              	.LVL129:
 2344              	.L119:
 811:Core/Src/main.c ****   }
 2345              		.loc 1 811 5 view .LVU748
 2346 006c FFF7FEFF 		bl	Error_Handler
 2347              	.LVL130:
 2348              	.L120:
 819:Core/Src/main.c ****   }
 2349              		.loc 1 819 5 view .LVU749
 2350 0070 FFF7FEFF 		bl	Error_Handler
 2351              	.LVL131:
 2352              	.L122:
 2353              		.align	2
 2354              	.L121:
 2355 0074 00000000 		.word	htim2
 2356              		.cfi_endproc
 2357              	.LFE371:
 2359              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2360              		.align	1
 2361              		.syntax unified
 2362              		.thumb
 2363              		.thumb_func
 2364              		.fpu fpv5-d16
 2366              	MX_TIM5_Init:
 2367              	.LFB374:
 948:Core/Src/main.c **** 
 2368              		.loc 1 948 1 view -0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 40
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372 0000 00B5     		push	{lr}
 2373              	.LCFI40:
 2374              		.cfi_def_cfa_offset 4
 2375              		.cfi_offset 14, -4
 2376 0002 8BB0     		sub	sp, sp, #44
 2377              	.LCFI41:
 2378              		.cfi_def_cfa_offset 48
 954:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2379              		.loc 1 954 3 view .LVU751
 954:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2380              		.loc 1 954 27 is_stmt 0 view .LVU752
ARM GAS  /tmp/ccr4Jxlr.s 			page 79


 2381 0004 0023     		movs	r3, #0
 2382 0006 0793     		str	r3, [sp, #28]
 2383 0008 0893     		str	r3, [sp, #32]
 2384 000a 0993     		str	r3, [sp, #36]
 955:Core/Src/main.c **** 
 2385              		.loc 1 955 3 is_stmt 1 view .LVU753
 955:Core/Src/main.c **** 
 2386              		.loc 1 955 22 is_stmt 0 view .LVU754
 2387 000c 0093     		str	r3, [sp]
 2388 000e 0193     		str	r3, [sp, #4]
 2389 0010 0293     		str	r3, [sp, #8]
 2390 0012 0393     		str	r3, [sp, #12]
 2391 0014 0493     		str	r3, [sp, #16]
 2392 0016 0593     		str	r3, [sp, #20]
 2393 0018 0693     		str	r3, [sp, #24]
 960:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2394              		.loc 1 960 3 is_stmt 1 view .LVU755
 960:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2395              		.loc 1 960 18 is_stmt 0 view .LVU756
 2396 001a 1648     		ldr	r0, .L131
 2397 001c 164A     		ldr	r2, .L131+4
 2398 001e 0260     		str	r2, [r0]
 961:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2399              		.loc 1 961 3 is_stmt 1 view .LVU757
 961:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2400              		.loc 1 961 24 is_stmt 0 view .LVU758
 2401 0020 4360     		str	r3, [r0, #4]
 962:Core/Src/main.c ****   htim5.Init.Period = 90;
 2402              		.loc 1 962 3 is_stmt 1 view .LVU759
 962:Core/Src/main.c ****   htim5.Init.Period = 90;
 2403              		.loc 1 962 26 is_stmt 0 view .LVU760
 2404 0022 8360     		str	r3, [r0, #8]
 963:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2405              		.loc 1 963 3 is_stmt 1 view .LVU761
 963:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2406              		.loc 1 963 21 is_stmt 0 view .LVU762
 2407 0024 5A22     		movs	r2, #90
 2408 0026 C260     		str	r2, [r0, #12]
 964:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2409              		.loc 1 964 3 is_stmt 1 view .LVU763
 964:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2410              		.loc 1 964 28 is_stmt 0 view .LVU764
 2411 0028 0361     		str	r3, [r0, #16]
 965:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2412              		.loc 1 965 3 is_stmt 1 view .LVU765
 965:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2413              		.loc 1 965 32 is_stmt 0 view .LVU766
 2414 002a 8361     		str	r3, [r0, #24]
 966:Core/Src/main.c ****   {
 2415              		.loc 1 966 3 is_stmt 1 view .LVU767
 966:Core/Src/main.c ****   {
 2416              		.loc 1 966 7 is_stmt 0 view .LVU768
 2417 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2418              	.LVL132:
 966:Core/Src/main.c ****   {
 2419              		.loc 1 966 6 view .LVU769
 2420 0030 C8B9     		cbnz	r0, .L128
ARM GAS  /tmp/ccr4Jxlr.s 			page 80


 970:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2421              		.loc 1 970 3 is_stmt 1 view .LVU770
 970:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2422              		.loc 1 970 37 is_stmt 0 view .LVU771
 2423 0032 0023     		movs	r3, #0
 2424 0034 0793     		str	r3, [sp, #28]
 971:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2425              		.loc 1 971 3 is_stmt 1 view .LVU772
 971:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2426              		.loc 1 971 33 is_stmt 0 view .LVU773
 2427 0036 0993     		str	r3, [sp, #36]
 972:Core/Src/main.c ****   {
 2428              		.loc 1 972 3 is_stmt 1 view .LVU774
 972:Core/Src/main.c ****   {
 2429              		.loc 1 972 7 is_stmt 0 view .LVU775
 2430 0038 07A9     		add	r1, sp, #28
 2431 003a 0E48     		ldr	r0, .L131
 2432 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2433              	.LVL133:
 972:Core/Src/main.c ****   {
 2434              		.loc 1 972 6 view .LVU776
 2435 0040 98B9     		cbnz	r0, .L129
 976:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2436              		.loc 1 976 3 is_stmt 1 view .LVU777
 976:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2437              		.loc 1 976 20 is_stmt 0 view .LVU778
 2438 0042 6023     		movs	r3, #96
 2439 0044 0093     		str	r3, [sp]
 977:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2440              		.loc 1 977 3 is_stmt 1 view .LVU779
 977:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2441              		.loc 1 977 19 is_stmt 0 view .LVU780
 2442 0046 0023     		movs	r3, #0
 2443 0048 0193     		str	r3, [sp, #4]
 978:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2444              		.loc 1 978 3 is_stmt 1 view .LVU781
 978:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2445              		.loc 1 978 24 is_stmt 0 view .LVU782
 2446 004a 0293     		str	r3, [sp, #8]
 979:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2447              		.loc 1 979 3 is_stmt 1 view .LVU783
 979:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2448              		.loc 1 979 24 is_stmt 0 view .LVU784
 2449 004c 0493     		str	r3, [sp, #16]
 980:Core/Src/main.c ****   {
 2450              		.loc 1 980 3 is_stmt 1 view .LVU785
 980:Core/Src/main.c ****   {
 2451              		.loc 1 980 7 is_stmt 0 view .LVU786
 2452 004e 0C22     		movs	r2, #12
 2453 0050 6946     		mov	r1, sp
 2454 0052 0848     		ldr	r0, .L131
 2455 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2456              	.LVL134:
 980:Core/Src/main.c ****   {
 2457              		.loc 1 980 6 view .LVU787
 2458 0058 48B9     		cbnz	r0, .L130
 987:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 81


 2459              		.loc 1 987 3 is_stmt 1 view .LVU788
 2460 005a 0648     		ldr	r0, .L131
 2461 005c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2462              	.LVL135:
 989:Core/Src/main.c **** 
 2463              		.loc 1 989 1 is_stmt 0 view .LVU789
 2464 0060 0BB0     		add	sp, sp, #44
 2465              	.LCFI42:
 2466              		.cfi_remember_state
 2467              		.cfi_def_cfa_offset 4
 2468              		@ sp needed
 2469 0062 5DF804FB 		ldr	pc, [sp], #4
 2470              	.L128:
 2471              	.LCFI43:
 2472              		.cfi_restore_state
 968:Core/Src/main.c ****   }
 2473              		.loc 1 968 5 is_stmt 1 view .LVU790
 2474 0066 FFF7FEFF 		bl	Error_Handler
 2475              	.LVL136:
 2476              	.L129:
 974:Core/Src/main.c ****   }
 2477              		.loc 1 974 5 view .LVU791
 2478 006a FFF7FEFF 		bl	Error_Handler
 2479              	.LVL137:
 2480              	.L130:
 982:Core/Src/main.c ****   }
 2481              		.loc 1 982 5 view .LVU792
 2482 006e FFF7FEFF 		bl	Error_Handler
 2483              	.LVL138:
 2484              	.L132:
 2485 0072 00BF     		.align	2
 2486              	.L131:
 2487 0074 00000000 		.word	htim5
 2488 0078 000C0040 		.word	1073744896
 2489              		.cfi_endproc
 2490              	.LFE374:
 2492              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2493              		.align	1
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2497              		.fpu fpv5-d16
 2499              	MX_TIM3_Init:
 2500              	.LFB372:
 834:Core/Src/main.c **** 
 2501              		.loc 1 834 1 view -0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 40
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 2505 0000 00B5     		push	{lr}
 2506              	.LCFI44:
 2507              		.cfi_def_cfa_offset 4
 2508              		.cfi_offset 14, -4
 2509 0002 8BB0     		sub	sp, sp, #44
 2510              	.LCFI45:
 2511              		.cfi_def_cfa_offset 48
 840:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/ccr4Jxlr.s 			page 82


 2512              		.loc 1 840 3 view .LVU794
 840:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2513              		.loc 1 840 27 is_stmt 0 view .LVU795
 2514 0004 0023     		movs	r3, #0
 2515 0006 0793     		str	r3, [sp, #28]
 2516 0008 0893     		str	r3, [sp, #32]
 2517 000a 0993     		str	r3, [sp, #36]
 841:Core/Src/main.c **** 
 2518              		.loc 1 841 3 is_stmt 1 view .LVU796
 841:Core/Src/main.c **** 
 2519              		.loc 1 841 22 is_stmt 0 view .LVU797
 2520 000c 0093     		str	r3, [sp]
 2521 000e 0193     		str	r3, [sp, #4]
 2522 0010 0293     		str	r3, [sp, #8]
 2523 0012 0393     		str	r3, [sp, #12]
 2524 0014 0493     		str	r3, [sp, #16]
 2525 0016 0593     		str	r3, [sp, #20]
 2526 0018 0693     		str	r3, [sp, #24]
 846:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2527              		.loc 1 846 3 is_stmt 1 view .LVU798
 846:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2528              		.loc 1 846 18 is_stmt 0 view .LVU799
 2529 001a 1948     		ldr	r0, .L143
 2530 001c 194A     		ldr	r2, .L143+4
 2531 001e 0260     		str	r2, [r0]
 847:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2532              		.loc 1 847 3 is_stmt 1 view .LVU800
 847:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2533              		.loc 1 847 24 is_stmt 0 view .LVU801
 2534 0020 4360     		str	r3, [r0, #4]
 848:Core/Src/main.c ****   htim3.Init.Period = 90;
 2535              		.loc 1 848 3 is_stmt 1 view .LVU802
 848:Core/Src/main.c ****   htim3.Init.Period = 90;
 2536              		.loc 1 848 26 is_stmt 0 view .LVU803
 2537 0022 8360     		str	r3, [r0, #8]
 849:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2538              		.loc 1 849 3 is_stmt 1 view .LVU804
 849:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2539              		.loc 1 849 21 is_stmt 0 view .LVU805
 2540 0024 5A22     		movs	r2, #90
 2541 0026 C260     		str	r2, [r0, #12]
 850:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2542              		.loc 1 850 3 is_stmt 1 view .LVU806
 850:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2543              		.loc 1 850 28 is_stmt 0 view .LVU807
 2544 0028 0361     		str	r3, [r0, #16]
 851:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 2545              		.loc 1 851 3 is_stmt 1 view .LVU808
 851:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 2546              		.loc 1 851 32 is_stmt 0 view .LVU809
 2547 002a 8361     		str	r3, [r0, #24]
 852:Core/Src/main.c ****   {
 2548              		.loc 1 852 3 is_stmt 1 view .LVU810
 852:Core/Src/main.c ****   {
 2549              		.loc 1 852 7 is_stmt 0 view .LVU811
 2550 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2551              	.LVL139:
ARM GAS  /tmp/ccr4Jxlr.s 			page 83


 852:Core/Src/main.c ****   {
 2552              		.loc 1 852 6 view .LVU812
 2553 0030 F0B9     		cbnz	r0, .L139
 856:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2554              		.loc 1 856 3 is_stmt 1 view .LVU813
 856:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2555              		.loc 1 856 37 is_stmt 0 view .LVU814
 2556 0032 0023     		movs	r3, #0
 2557 0034 0793     		str	r3, [sp, #28]
 857:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2558              		.loc 1 857 3 is_stmt 1 view .LVU815
 857:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2559              		.loc 1 857 33 is_stmt 0 view .LVU816
 2560 0036 0993     		str	r3, [sp, #36]
 858:Core/Src/main.c ****   {
 2561              		.loc 1 858 3 is_stmt 1 view .LVU817
 858:Core/Src/main.c ****   {
 2562              		.loc 1 858 7 is_stmt 0 view .LVU818
 2563 0038 07A9     		add	r1, sp, #28
 2564 003a 1148     		ldr	r0, .L143
 2565 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2566              	.LVL140:
 858:Core/Src/main.c ****   {
 2567              		.loc 1 858 6 view .LVU819
 2568 0040 C0B9     		cbnz	r0, .L140
 862:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2569              		.loc 1 862 3 is_stmt 1 view .LVU820
 862:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2570              		.loc 1 862 20 is_stmt 0 view .LVU821
 2571 0042 6023     		movs	r3, #96
 2572 0044 0093     		str	r3, [sp]
 863:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2573              		.loc 1 863 3 is_stmt 1 view .LVU822
 863:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2574              		.loc 1 863 19 is_stmt 0 view .LVU823
 2575 0046 0022     		movs	r2, #0
 2576 0048 0192     		str	r2, [sp, #4]
 864:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2577              		.loc 1 864 3 is_stmt 1 view .LVU824
 864:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2578              		.loc 1 864 24 is_stmt 0 view .LVU825
 2579 004a 0292     		str	r2, [sp, #8]
 865:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2580              		.loc 1 865 3 is_stmt 1 view .LVU826
 865:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2581              		.loc 1 865 24 is_stmt 0 view .LVU827
 2582 004c 0492     		str	r2, [sp, #16]
 866:Core/Src/main.c ****   {
 2583              		.loc 1 866 3 is_stmt 1 view .LVU828
 866:Core/Src/main.c ****   {
 2584              		.loc 1 866 7 is_stmt 0 view .LVU829
 2585 004e 6946     		mov	r1, sp
 2586 0050 0B48     		ldr	r0, .L143
 2587 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2588              	.LVL141:
 866:Core/Src/main.c ****   {
 2589              		.loc 1 866 6 view .LVU830
ARM GAS  /tmp/ccr4Jxlr.s 			page 84


 2590 0056 78B9     		cbnz	r0, .L141
 870:Core/Src/main.c ****   {
 2591              		.loc 1 870 3 is_stmt 1 view .LVU831
 870:Core/Src/main.c ****   {
 2592              		.loc 1 870 7 is_stmt 0 view .LVU832
 2593 0058 0422     		movs	r2, #4
 2594 005a 6946     		mov	r1, sp
 2595 005c 0848     		ldr	r0, .L143
 2596 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2597              	.LVL142:
 870:Core/Src/main.c ****   {
 2598              		.loc 1 870 6 view .LVU833
 2599 0062 58B9     		cbnz	r0, .L142
 877:Core/Src/main.c **** 
 2600              		.loc 1 877 3 is_stmt 1 view .LVU834
 2601 0064 0648     		ldr	r0, .L143
 2602 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2603              	.LVL143:
 879:Core/Src/main.c **** 
 2604              		.loc 1 879 1 is_stmt 0 view .LVU835
 2605 006a 0BB0     		add	sp, sp, #44
 2606              	.LCFI46:
 2607              		.cfi_remember_state
 2608              		.cfi_def_cfa_offset 4
 2609              		@ sp needed
 2610 006c 5DF804FB 		ldr	pc, [sp], #4
 2611              	.L139:
 2612              	.LCFI47:
 2613              		.cfi_restore_state
 854:Core/Src/main.c ****   }
 2614              		.loc 1 854 5 is_stmt 1 view .LVU836
 2615 0070 FFF7FEFF 		bl	Error_Handler
 2616              	.LVL144:
 2617              	.L140:
 860:Core/Src/main.c ****   }
 2618              		.loc 1 860 5 view .LVU837
 2619 0074 FFF7FEFF 		bl	Error_Handler
 2620              	.LVL145:
 2621              	.L141:
 868:Core/Src/main.c ****   }
 2622              		.loc 1 868 5 view .LVU838
 2623 0078 FFF7FEFF 		bl	Error_Handler
 2624              	.LVL146:
 2625              	.L142:
 872:Core/Src/main.c ****   }
 2626              		.loc 1 872 5 view .LVU839
 2627 007c FFF7FEFF 		bl	Error_Handler
 2628              	.LVL147:
 2629              	.L144:
 2630              		.align	2
 2631              	.L143:
 2632 0080 00000000 		.word	htim3
 2633 0084 00040040 		.word	1073742848
 2634              		.cfi_endproc
 2635              	.LFE372:
 2637              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2638              		.align	1
ARM GAS  /tmp/ccr4Jxlr.s 			page 85


 2639              		.syntax unified
 2640              		.thumb
 2641              		.thumb_func
 2642              		.fpu fpv5-d16
 2644              	MX_SPI1_Init:
 2645              	.LFB368:
 641:Core/Src/main.c **** 
 2646              		.loc 1 641 1 view -0
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 0
 2649              		@ frame_needed = 0, uses_anonymous_args = 0
 2650 0000 08B5     		push	{r3, lr}
 2651              	.LCFI48:
 2652              		.cfi_def_cfa_offset 8
 2653              		.cfi_offset 3, -8
 2654              		.cfi_offset 14, -4
 651:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2655              		.loc 1 651 3 view .LVU841
 651:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2656              		.loc 1 651 18 is_stmt 0 view .LVU842
 2657 0002 1448     		ldr	r0, .L149
 2658 0004 144B     		ldr	r3, .L149+4
 2659 0006 0360     		str	r3, [r0]
 652:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2660              		.loc 1 652 3 is_stmt 1 view .LVU843
 652:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2661              		.loc 1 652 19 is_stmt 0 view .LVU844
 2662 0008 4FF48003 		mov	r3, #4194304
 2663 000c 4360     		str	r3, [r0, #4]
 653:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2664              		.loc 1 653 3 is_stmt 1 view .LVU845
 653:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2665              		.loc 1 653 24 is_stmt 0 view .LVU846
 2666 000e 0023     		movs	r3, #0
 2667 0010 8360     		str	r3, [r0, #8]
 654:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2668              		.loc 1 654 3 is_stmt 1 view .LVU847
 654:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2669              		.loc 1 654 23 is_stmt 0 view .LVU848
 2670 0012 0722     		movs	r2, #7
 2671 0014 C260     		str	r2, [r0, #12]
 655:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2672              		.loc 1 655 3 is_stmt 1 view .LVU849
 655:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2673              		.loc 1 655 26 is_stmt 0 view .LVU850
 2674 0016 0361     		str	r3, [r0, #16]
 656:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2675              		.loc 1 656 3 is_stmt 1 view .LVU851
 656:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2676              		.loc 1 656 23 is_stmt 0 view .LVU852
 2677 0018 4361     		str	r3, [r0, #20]
 657:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2678              		.loc 1 657 3 is_stmt 1 view .LVU853
 657:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2679              		.loc 1 657 18 is_stmt 0 view .LVU854
 2680 001a 4FF08062 		mov	r2, #67108864
 2681 001e 8261     		str	r2, [r0, #24]
ARM GAS  /tmp/ccr4Jxlr.s 			page 86


 658:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2682              		.loc 1 658 3 is_stmt 1 view .LVU855
 658:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2683              		.loc 1 658 32 is_stmt 0 view .LVU856
 2684 0020 4FF0C042 		mov	r2, #1610612736
 2685 0024 C261     		str	r2, [r0, #28]
 659:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2686              		.loc 1 659 3 is_stmt 1 view .LVU857
 659:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2687              		.loc 1 659 23 is_stmt 0 view .LVU858
 2688 0026 0362     		str	r3, [r0, #32]
 660:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2689              		.loc 1 660 3 is_stmt 1 view .LVU859
 660:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2690              		.loc 1 660 21 is_stmt 0 view .LVU860
 2691 0028 4362     		str	r3, [r0, #36]
 661:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2692              		.loc 1 661 3 is_stmt 1 view .LVU861
 661:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2693              		.loc 1 661 29 is_stmt 0 view .LVU862
 2694 002a 8362     		str	r3, [r0, #40]
 662:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2695              		.loc 1 662 3 is_stmt 1 view .LVU863
 662:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2696              		.loc 1 662 28 is_stmt 0 view .LVU864
 2697 002c C362     		str	r3, [r0, #44]
 663:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2698              		.loc 1 663 3 is_stmt 1 view .LVU865
 663:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2699              		.loc 1 663 23 is_stmt 0 view .LVU866
 2700 002e 4FF08042 		mov	r2, #1073741824
 2701 0032 4263     		str	r2, [r0, #52]
 664:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2702              		.loc 1 664 3 is_stmt 1 view .LVU867
 664:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2703              		.loc 1 664 26 is_stmt 0 view .LVU868
 2704 0034 8363     		str	r3, [r0, #56]
 665:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2705              		.loc 1 665 3 is_stmt 1 view .LVU869
 665:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2706              		.loc 1 665 28 is_stmt 0 view .LVU870
 2707 0036 C363     		str	r3, [r0, #60]
 666:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2708              		.loc 1 666 3 is_stmt 1 view .LVU871
 666:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2709              		.loc 1 666 41 is_stmt 0 view .LVU872
 2710 0038 0364     		str	r3, [r0, #64]
 667:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2711              		.loc 1 667 3 is_stmt 1 view .LVU873
 667:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2712              		.loc 1 667 41 is_stmt 0 view .LVU874
 2713 003a 4364     		str	r3, [r0, #68]
 668:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2714              		.loc 1 668 3 is_stmt 1 view .LVU875
 668:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2715              		.loc 1 668 31 is_stmt 0 view .LVU876
 2716 003c 8364     		str	r3, [r0, #72]
ARM GAS  /tmp/ccr4Jxlr.s 			page 87


 669:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2717              		.loc 1 669 3 is_stmt 1 view .LVU877
 669:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2718              		.loc 1 669 38 is_stmt 0 view .LVU878
 2719 003e C364     		str	r3, [r0, #76]
 670:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2720              		.loc 1 670 3 is_stmt 1 view .LVU879
 670:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2721              		.loc 1 670 37 is_stmt 0 view .LVU880
 2722 0040 0365     		str	r3, [r0, #80]
 671:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2723              		.loc 1 671 3 is_stmt 1 view .LVU881
 671:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2724              		.loc 1 671 32 is_stmt 0 view .LVU882
 2725 0042 4365     		str	r3, [r0, #84]
 672:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2726              		.loc 1 672 3 is_stmt 1 view .LVU883
 672:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2727              		.loc 1 672 21 is_stmt 0 view .LVU884
 2728 0044 8365     		str	r3, [r0, #88]
 673:Core/Src/main.c ****   {
 2729              		.loc 1 673 3 is_stmt 1 view .LVU885
 673:Core/Src/main.c ****   {
 2730              		.loc 1 673 7 is_stmt 0 view .LVU886
 2731 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2732              	.LVL148:
 673:Core/Src/main.c ****   {
 2733              		.loc 1 673 6 view .LVU887
 2734 004a 00B9     		cbnz	r0, .L148
 681:Core/Src/main.c **** 
 2735              		.loc 1 681 1 view .LVU888
 2736 004c 08BD     		pop	{r3, pc}
 2737              	.L148:
 675:Core/Src/main.c ****   }
 2738              		.loc 1 675 5 is_stmt 1 view .LVU889
 2739 004e FFF7FEFF 		bl	Error_Handler
 2740              	.LVL149:
 2741              	.L150:
 2742 0052 00BF     		.align	2
 2743              	.L149:
 2744 0054 00000000 		.word	hspi1
 2745 0058 00300140 		.word	1073819648
 2746              		.cfi_endproc
 2747              	.LFE368:
 2749              		.section	.text.MX_UART4_Init,"ax",%progbits
 2750              		.align	1
 2751              		.syntax unified
 2752              		.thumb
 2753              		.thumb_func
 2754              		.fpu fpv5-d16
 2756              	MX_UART4_Init:
 2757              	.LFB377:
1059:Core/Src/main.c **** 
 2758              		.loc 1 1059 1 view -0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccr4Jxlr.s 			page 88


 2762 0000 08B5     		push	{r3, lr}
 2763              	.LCFI49:
 2764              		.cfi_def_cfa_offset 8
 2765              		.cfi_offset 3, -8
 2766              		.cfi_offset 14, -4
1068:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2767              		.loc 1 1068 3 view .LVU891
1068:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2768              		.loc 1 1068 19 is_stmt 0 view .LVU892
 2769 0002 1548     		ldr	r0, .L161
 2770 0004 154B     		ldr	r3, .L161+4
 2771 0006 0360     		str	r3, [r0]
1069:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2772              		.loc 1 1069 3 is_stmt 1 view .LVU893
1069:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2773              		.loc 1 1069 24 is_stmt 0 view .LVU894
 2774 0008 4FF4E133 		mov	r3, #115200
 2775 000c 4360     		str	r3, [r0, #4]
1070:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2776              		.loc 1 1070 3 is_stmt 1 view .LVU895
1070:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2777              		.loc 1 1070 26 is_stmt 0 view .LVU896
 2778 000e 0023     		movs	r3, #0
 2779 0010 8360     		str	r3, [r0, #8]
1071:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2780              		.loc 1 1071 3 is_stmt 1 view .LVU897
1071:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2781              		.loc 1 1071 24 is_stmt 0 view .LVU898
 2782 0012 C360     		str	r3, [r0, #12]
1072:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2783              		.loc 1 1072 3 is_stmt 1 view .LVU899
1072:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2784              		.loc 1 1072 22 is_stmt 0 view .LVU900
 2785 0014 0361     		str	r3, [r0, #16]
1073:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2786              		.loc 1 1073 3 is_stmt 1 view .LVU901
1073:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2787              		.loc 1 1073 20 is_stmt 0 view .LVU902
 2788 0016 0C22     		movs	r2, #12
 2789 0018 4261     		str	r2, [r0, #20]
1074:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2790              		.loc 1 1074 3 is_stmt 1 view .LVU903
1074:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2791              		.loc 1 1074 25 is_stmt 0 view .LVU904
 2792 001a 8361     		str	r3, [r0, #24]
1075:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2793              		.loc 1 1075 3 is_stmt 1 view .LVU905
1075:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2794              		.loc 1 1075 28 is_stmt 0 view .LVU906
 2795 001c C361     		str	r3, [r0, #28]
1076:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2796              		.loc 1 1076 3 is_stmt 1 view .LVU907
1076:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2797              		.loc 1 1076 30 is_stmt 0 view .LVU908
 2798 001e 0362     		str	r3, [r0, #32]
1077:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2799              		.loc 1 1077 3 is_stmt 1 view .LVU909
ARM GAS  /tmp/ccr4Jxlr.s 			page 89


1077:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2800              		.loc 1 1077 30 is_stmt 0 view .LVU910
 2801 0020 4362     		str	r3, [r0, #36]
1078:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2802              		.loc 1 1078 3 is_stmt 1 view .LVU911
1078:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2803              		.loc 1 1078 38 is_stmt 0 view .LVU912
 2804 0022 8362     		str	r3, [r0, #40]
1079:Core/Src/main.c ****   {
 2805              		.loc 1 1079 3 is_stmt 1 view .LVU913
1079:Core/Src/main.c ****   {
 2806              		.loc 1 1079 7 is_stmt 0 view .LVU914
 2807 0024 FFF7FEFF 		bl	HAL_UART_Init
 2808              	.LVL150:
1079:Core/Src/main.c ****   {
 2809              		.loc 1 1079 6 view .LVU915
 2810 0028 70B9     		cbnz	r0, .L157
1083:Core/Src/main.c ****   {
 2811              		.loc 1 1083 3 is_stmt 1 view .LVU916
1083:Core/Src/main.c ****   {
 2812              		.loc 1 1083 7 is_stmt 0 view .LVU917
 2813 002a 0021     		movs	r1, #0
 2814 002c 0A48     		ldr	r0, .L161
 2815 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 2816              	.LVL151:
1083:Core/Src/main.c ****   {
 2817              		.loc 1 1083 6 view .LVU918
 2818 0032 58B9     		cbnz	r0, .L158
1087:Core/Src/main.c ****   {
 2819              		.loc 1 1087 3 is_stmt 1 view .LVU919
1087:Core/Src/main.c ****   {
 2820              		.loc 1 1087 7 is_stmt 0 view .LVU920
 2821 0034 0021     		movs	r1, #0
 2822 0036 0848     		ldr	r0, .L161
 2823 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 2824              	.LVL152:
1087:Core/Src/main.c ****   {
 2825              		.loc 1 1087 6 view .LVU921
 2826 003c 40B9     		cbnz	r0, .L159
1091:Core/Src/main.c ****   {
 2827              		.loc 1 1091 3 is_stmt 1 view .LVU922
1091:Core/Src/main.c ****   {
 2828              		.loc 1 1091 7 is_stmt 0 view .LVU923
 2829 003e 0648     		ldr	r0, .L161
 2830 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 2831              	.LVL153:
1091:Core/Src/main.c ****   {
 2832              		.loc 1 1091 6 view .LVU924
 2833 0044 30B9     		cbnz	r0, .L160
1099:Core/Src/main.c **** 
 2834              		.loc 1 1099 1 view .LVU925
 2835 0046 08BD     		pop	{r3, pc}
 2836              	.L157:
1081:Core/Src/main.c ****   }
 2837              		.loc 1 1081 5 is_stmt 1 view .LVU926
 2838 0048 FFF7FEFF 		bl	Error_Handler
 2839              	.LVL154:
ARM GAS  /tmp/ccr4Jxlr.s 			page 90


 2840              	.L158:
1085:Core/Src/main.c ****   }
 2841              		.loc 1 1085 5 view .LVU927
 2842 004c FFF7FEFF 		bl	Error_Handler
 2843              	.LVL155:
 2844              	.L159:
1089:Core/Src/main.c ****   }
 2845              		.loc 1 1089 5 view .LVU928
 2846 0050 FFF7FEFF 		bl	Error_Handler
 2847              	.LVL156:
 2848              	.L160:
1093:Core/Src/main.c ****   }
 2849              		.loc 1 1093 5 view .LVU929
 2850 0054 FFF7FEFF 		bl	Error_Handler
 2851              	.LVL157:
 2852              	.L162:
 2853              		.align	2
 2854              	.L161:
 2855 0058 00000000 		.word	huart4
 2856 005c 004C0040 		.word	1073761280
 2857              		.cfi_endproc
 2858              	.LFE377:
 2860              		.section	.text.MX_TIM13_Init,"ax",%progbits
 2861              		.align	1
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2865              		.fpu fpv5-d16
 2867              	MX_TIM13_Init:
 2868              	.LFB375:
 997:Core/Src/main.c **** 
 2869              		.loc 1 997 1 view -0
 2870              		.cfi_startproc
 2871              		@ args = 0, pretend = 0, frame = 0
 2872              		@ frame_needed = 0, uses_anonymous_args = 0
 2873 0000 08B5     		push	{r3, lr}
 2874              	.LCFI50:
 2875              		.cfi_def_cfa_offset 8
 2876              		.cfi_offset 3, -8
 2877              		.cfi_offset 14, -4
1006:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 2878              		.loc 1 1006 3 view .LVU931
1006:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 2879              		.loc 1 1006 19 is_stmt 0 view .LVU932
 2880 0002 0948     		ldr	r0, .L167
 2881 0004 094B     		ldr	r3, .L167+4
 2882 0006 0360     		str	r3, [r0]
1007:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 2883              		.loc 1 1007 3 is_stmt 1 view .LVU933
1007:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 2884              		.loc 1 1007 25 is_stmt 0 view .LVU934
 2885 0008 6323     		movs	r3, #99
 2886 000a 4360     		str	r3, [r0, #4]
1008:Core/Src/main.c ****   htim13.Init.Period = 65535;
 2887              		.loc 1 1008 3 is_stmt 1 view .LVU935
1008:Core/Src/main.c ****   htim13.Init.Period = 65535;
 2888              		.loc 1 1008 27 is_stmt 0 view .LVU936
ARM GAS  /tmp/ccr4Jxlr.s 			page 91


 2889 000c 0023     		movs	r3, #0
 2890 000e 8360     		str	r3, [r0, #8]
1009:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2891              		.loc 1 1009 3 is_stmt 1 view .LVU937
1009:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2892              		.loc 1 1009 22 is_stmt 0 view .LVU938
 2893 0010 4FF6FF72 		movw	r2, #65535
 2894 0014 C260     		str	r2, [r0, #12]
1010:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2895              		.loc 1 1010 3 is_stmt 1 view .LVU939
1010:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2896              		.loc 1 1010 29 is_stmt 0 view .LVU940
 2897 0016 0361     		str	r3, [r0, #16]
1011:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 2898              		.loc 1 1011 3 is_stmt 1 view .LVU941
1011:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 2899              		.loc 1 1011 33 is_stmt 0 view .LVU942
 2900 0018 8361     		str	r3, [r0, #24]
1012:Core/Src/main.c ****   {
 2901              		.loc 1 1012 3 is_stmt 1 view .LVU943
1012:Core/Src/main.c ****   {
 2902              		.loc 1 1012 7 is_stmt 0 view .LVU944
 2903 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2904              	.LVL158:
1012:Core/Src/main.c ****   {
 2905              		.loc 1 1012 6 view .LVU945
 2906 001e 00B9     		cbnz	r0, .L166
1020:Core/Src/main.c **** 
 2907              		.loc 1 1020 1 view .LVU946
 2908 0020 08BD     		pop	{r3, pc}
 2909              	.L166:
1014:Core/Src/main.c ****   }
 2910              		.loc 1 1014 5 is_stmt 1 view .LVU947
 2911 0022 FFF7FEFF 		bl	Error_Handler
 2912              	.LVL159:
 2913              	.L168:
 2914 0026 00BF     		.align	2
 2915              	.L167:
 2916 0028 00000000 		.word	htim13
 2917 002c 001C0040 		.word	1073748992
 2918              		.cfi_endproc
 2919              	.LFE375:
 2921              		.section	.text.MX_TIM14_Init,"ax",%progbits
 2922              		.align	1
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu fpv5-d16
 2928              	MX_TIM14_Init:
 2929              	.LFB376:
1028:Core/Src/main.c **** 
 2930              		.loc 1 1028 1 view -0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 0
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 2934 0000 08B5     		push	{r3, lr}
 2935              	.LCFI51:
ARM GAS  /tmp/ccr4Jxlr.s 			page 92


 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 3, -8
 2938              		.cfi_offset 14, -4
1037:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 2939              		.loc 1 1037 3 view .LVU949
1037:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 2940              		.loc 1 1037 19 is_stmt 0 view .LVU950
 2941 0002 0948     		ldr	r0, .L173
 2942 0004 094B     		ldr	r3, .L173+4
 2943 0006 0360     		str	r3, [r0]
1038:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2944              		.loc 1 1038 3 is_stmt 1 view .LVU951
1038:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 2945              		.loc 1 1038 25 is_stmt 0 view .LVU952
 2946 0008 6323     		movs	r3, #99
 2947 000a 4360     		str	r3, [r0, #4]
1039:Core/Src/main.c ****   htim14.Init.Period = 65535;
 2948              		.loc 1 1039 3 is_stmt 1 view .LVU953
1039:Core/Src/main.c ****   htim14.Init.Period = 65535;
 2949              		.loc 1 1039 27 is_stmt 0 view .LVU954
 2950 000c 0023     		movs	r3, #0
 2951 000e 8360     		str	r3, [r0, #8]
1040:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2952              		.loc 1 1040 3 is_stmt 1 view .LVU955
1040:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2953              		.loc 1 1040 22 is_stmt 0 view .LVU956
 2954 0010 4FF6FF72 		movw	r2, #65535
 2955 0014 C260     		str	r2, [r0, #12]
1041:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2956              		.loc 1 1041 3 is_stmt 1 view .LVU957
1041:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2957              		.loc 1 1041 29 is_stmt 0 view .LVU958
 2958 0016 0361     		str	r3, [r0, #16]
1042:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2959              		.loc 1 1042 3 is_stmt 1 view .LVU959
1042:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 2960              		.loc 1 1042 33 is_stmt 0 view .LVU960
 2961 0018 8361     		str	r3, [r0, #24]
1043:Core/Src/main.c ****   {
 2962              		.loc 1 1043 3 is_stmt 1 view .LVU961
1043:Core/Src/main.c ****   {
 2963              		.loc 1 1043 7 is_stmt 0 view .LVU962
 2964 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 2965              	.LVL160:
1043:Core/Src/main.c ****   {
 2966              		.loc 1 1043 6 view .LVU963
 2967 001e 00B9     		cbnz	r0, .L172
1051:Core/Src/main.c **** 
 2968              		.loc 1 1051 1 view .LVU964
 2969 0020 08BD     		pop	{r3, pc}
 2970              	.L172:
1045:Core/Src/main.c ****   }
 2971              		.loc 1 1045 5 is_stmt 1 view .LVU965
 2972 0022 FFF7FEFF 		bl	Error_Handler
 2973              	.LVL161:
 2974              	.L174:
 2975 0026 00BF     		.align	2
ARM GAS  /tmp/ccr4Jxlr.s 			page 93


 2976              	.L173:
 2977 0028 00000000 		.word	htim14
 2978 002c 00200040 		.word	1073750016
 2979              		.cfi_endproc
 2980              	.LFE376:
 2982              		.section	.text.SystemClock_Config,"ax",%progbits
 2983              		.align	1
 2984              		.global	SystemClock_Config
 2985              		.syntax unified
 2986              		.thumb
 2987              		.thumb_func
 2988              		.fpu fpv5-d16
 2990              	SystemClock_Config:
 2991              	.LFB361:
 292:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2992              		.loc 1 292 1 view -0
 2993              		.cfi_startproc
 2994              		@ args = 0, pretend = 0, frame = 112
 2995              		@ frame_needed = 0, uses_anonymous_args = 0
 2996 0000 00B5     		push	{lr}
 2997              	.LCFI52:
 2998              		.cfi_def_cfa_offset 4
 2999              		.cfi_offset 14, -4
 3000 0002 9DB0     		sub	sp, sp, #116
 3001              	.LCFI53:
 3002              		.cfi_def_cfa_offset 120
 293:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3003              		.loc 1 293 3 view .LVU967
 293:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3004              		.loc 1 293 22 is_stmt 0 view .LVU968
 3005 0004 4C22     		movs	r2, #76
 3006 0006 0021     		movs	r1, #0
 3007 0008 09A8     		add	r0, sp, #36
 3008 000a FFF7FEFF 		bl	memset
 3009              	.LVL162:
 294:Core/Src/main.c **** 
 3010              		.loc 1 294 3 is_stmt 1 view .LVU969
 294:Core/Src/main.c **** 
 3011              		.loc 1 294 22 is_stmt 0 view .LVU970
 3012 000e 2022     		movs	r2, #32
 3013 0010 0021     		movs	r1, #0
 3014 0012 01A8     		add	r0, sp, #4
 3015 0014 FFF7FEFF 		bl	memset
 3016              	.LVL163:
 298:Core/Src/main.c **** 
 3017              		.loc 1 298 3 is_stmt 1 view .LVU971
 3018 0018 0220     		movs	r0, #2
 3019 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 3020              	.LVL164:
 302:Core/Src/main.c **** 
 3021              		.loc 1 302 3 view .LVU972
 3022              	.LBB15:
 302:Core/Src/main.c **** 
 3023              		.loc 1 302 3 view .LVU973
 3024 001e 0023     		movs	r3, #0
 3025 0020 0093     		str	r3, [sp]
 302:Core/Src/main.c **** 
ARM GAS  /tmp/ccr4Jxlr.s 			page 94


 3026              		.loc 1 302 3 view .LVU974
 3027 0022 264A     		ldr	r2, .L182
 3028 0024 9369     		ldr	r3, [r2, #24]
 3029 0026 23F44043 		bic	r3, r3, #49152
 3030 002a 43F40043 		orr	r3, r3, #32768
 3031 002e 9361     		str	r3, [r2, #24]
 302:Core/Src/main.c **** 
 3032              		.loc 1 302 3 view .LVU975
 3033 0030 9369     		ldr	r3, [r2, #24]
 3034 0032 03F44043 		and	r3, r3, #49152
 3035 0036 0093     		str	r3, [sp]
 302:Core/Src/main.c **** 
 3036              		.loc 1 302 3 view .LVU976
 3037 0038 009B     		ldr	r3, [sp]
 3038              	.LBE15:
 302:Core/Src/main.c **** 
 3039              		.loc 1 302 3 view .LVU977
 304:Core/Src/main.c **** 
 3040              		.loc 1 304 3 view .LVU978
 3041              	.L176:
 304:Core/Src/main.c **** 
 3042              		.loc 1 304 48 discriminator 1 view .LVU979
 304:Core/Src/main.c **** 
 3043              		.loc 1 304 8 discriminator 1 view .LVU980
 304:Core/Src/main.c **** 
 3044              		.loc 1 304 10 is_stmt 0 discriminator 1 view .LVU981
 3045 003a 204B     		ldr	r3, .L182
 3046 003c 9B69     		ldr	r3, [r3, #24]
 304:Core/Src/main.c **** 
 3047              		.loc 1 304 8 discriminator 1 view .LVU982
 3048 003e 13F4005F 		tst	r3, #8192
 3049 0042 FAD0     		beq	.L176
 309:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3050              		.loc 1 309 3 is_stmt 1 view .LVU983
 309:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3051              		.loc 1 309 36 is_stmt 0 view .LVU984
 3052 0044 2223     		movs	r3, #34
 3053 0046 0993     		str	r3, [sp, #36]
 310:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3054              		.loc 1 310 3 is_stmt 1 view .LVU985
 310:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3055              		.loc 1 310 30 is_stmt 0 view .LVU986
 3056 0048 0122     		movs	r2, #1
 3057 004a 0C92     		str	r2, [sp, #48]
 311:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3058              		.loc 1 311 3 is_stmt 1 view .LVU987
 311:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3059              		.loc 1 311 41 is_stmt 0 view .LVU988
 3060 004c 4023     		movs	r3, #64
 3061 004e 0D93     		str	r3, [sp, #52]
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3062              		.loc 1 312 3 is_stmt 1 view .LVU989
 312:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3063              		.loc 1 312 32 is_stmt 0 view .LVU990
 3064 0050 0F92     		str	r2, [sp, #60]
 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3065              		.loc 1 313 3 is_stmt 1 view .LVU991
ARM GAS  /tmp/ccr4Jxlr.s 			page 95


 313:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3066              		.loc 1 313 34 is_stmt 0 view .LVU992
 3067 0052 0220     		movs	r0, #2
 3068 0054 1290     		str	r0, [sp, #72]
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3069              		.loc 1 314 3 is_stmt 1 view .LVU993
 314:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3070              		.loc 1 314 35 is_stmt 0 view .LVU994
 3071 0056 0023     		movs	r3, #0
 3072 0058 1393     		str	r3, [sp, #76]
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3073              		.loc 1 315 3 is_stmt 1 view .LVU995
 315:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3074              		.loc 1 315 30 is_stmt 0 view .LVU996
 3075 005a 0421     		movs	r1, #4
 3076 005c 1491     		str	r1, [sp, #80]
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3077              		.loc 1 316 3 is_stmt 1 view .LVU997
 316:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3078              		.loc 1 316 30 is_stmt 0 view .LVU998
 3079 005e 0C21     		movs	r1, #12
 3080 0060 1591     		str	r1, [sp, #84]
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3081              		.loc 1 317 3 is_stmt 1 view .LVU999
 317:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3082              		.loc 1 317 30 is_stmt 0 view .LVU1000
 3083 0062 1692     		str	r2, [sp, #88]
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3084              		.loc 1 318 3 is_stmt 1 view .LVU1001
 318:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3085              		.loc 1 318 30 is_stmt 0 view .LVU1002
 3086 0064 0322     		movs	r2, #3
 3087 0066 1792     		str	r2, [sp, #92]
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3088              		.loc 1 319 3 is_stmt 1 view .LVU1003
 319:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3089              		.loc 1 319 30 is_stmt 0 view .LVU1004
 3090 0068 1890     		str	r0, [sp, #96]
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3091              		.loc 1 320 3 is_stmt 1 view .LVU1005
 320:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3092              		.loc 1 320 32 is_stmt 0 view .LVU1006
 3093 006a 1991     		str	r1, [sp, #100]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3094              		.loc 1 321 3 is_stmt 1 view .LVU1007
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3095              		.loc 1 321 35 is_stmt 0 view .LVU1008
 3096 006c 1A93     		str	r3, [sp, #104]
 322:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3097              		.loc 1 322 3 is_stmt 1 view .LVU1009
 322:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3098              		.loc 1 322 34 is_stmt 0 view .LVU1010
 3099 006e 1B93     		str	r3, [sp, #108]
 323:Core/Src/main.c ****   {
 3100              		.loc 1 323 3 is_stmt 1 view .LVU1011
 323:Core/Src/main.c ****   {
 3101              		.loc 1 323 7 is_stmt 0 view .LVU1012
ARM GAS  /tmp/ccr4Jxlr.s 			page 96


 3102 0070 09A8     		add	r0, sp, #36
 3103 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3104              	.LVL165:
 323:Core/Src/main.c ****   {
 3105              		.loc 1 323 6 view .LVU1013
 3106 0076 E0B9     		cbnz	r0, .L180
 330:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3107              		.loc 1 330 3 is_stmt 1 view .LVU1014
 330:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3108              		.loc 1 330 31 is_stmt 0 view .LVU1015
 3109 0078 3F23     		movs	r3, #63
 3110 007a 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3111              		.loc 1 333 3 is_stmt 1 view .LVU1016
 333:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3112              		.loc 1 333 34 is_stmt 0 view .LVU1017
 3113 007c 0323     		movs	r3, #3
 3114 007e 0293     		str	r3, [sp, #8]
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3115              		.loc 1 334 3 is_stmt 1 view .LVU1018
 334:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3116              		.loc 1 334 35 is_stmt 0 view .LVU1019
 3117 0080 0023     		movs	r3, #0
 3118 0082 0393     		str	r3, [sp, #12]
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3119              		.loc 1 335 3 is_stmt 1 view .LVU1020
 335:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3120              		.loc 1 335 35 is_stmt 0 view .LVU1021
 3121 0084 0823     		movs	r3, #8
 3122 0086 0493     		str	r3, [sp, #16]
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3123              		.loc 1 336 3 is_stmt 1 view .LVU1022
 336:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3124              		.loc 1 336 36 is_stmt 0 view .LVU1023
 3125 0088 4023     		movs	r3, #64
 3126 008a 0593     		str	r3, [sp, #20]
 337:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3127              		.loc 1 337 3 is_stmt 1 view .LVU1024
 337:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3128              		.loc 1 337 36 is_stmt 0 view .LVU1025
 3129 008c 0693     		str	r3, [sp, #24]
 338:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3130              		.loc 1 338 3 is_stmt 1 view .LVU1026
 338:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3131              		.loc 1 338 36 is_stmt 0 view .LVU1027
 3132 008e 4FF48062 		mov	r2, #1024
 3133 0092 0792     		str	r2, [sp, #28]
 339:Core/Src/main.c **** 
 3134              		.loc 1 339 3 is_stmt 1 view .LVU1028
 339:Core/Src/main.c **** 
 3135              		.loc 1 339 36 is_stmt 0 view .LVU1029
 3136 0094 0893     		str	r3, [sp, #32]
 341:Core/Src/main.c ****   {
 3137              		.loc 1 341 3 is_stmt 1 view .LVU1030
 341:Core/Src/main.c ****   {
 3138              		.loc 1 341 7 is_stmt 0 view .LVU1031
 3139 0096 0121     		movs	r1, #1
ARM GAS  /tmp/ccr4Jxlr.s 			page 97


 3140 0098 01A8     		add	r0, sp, #4
 3141 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3142              	.LVL166:
 341:Core/Src/main.c ****   {
 3143              		.loc 1 341 6 view .LVU1032
 3144 009e 50B9     		cbnz	r0, .L181
 345:Core/Src/main.c **** }
 3145              		.loc 1 345 3 is_stmt 1 view .LVU1033
 3146 00a0 4FF48022 		mov	r2, #262144
 3147 00a4 0021     		movs	r1, #0
 3148 00a6 0846     		mov	r0, r1
 3149 00a8 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 3150              	.LVL167:
 346:Core/Src/main.c **** 
 3151              		.loc 1 346 1 is_stmt 0 view .LVU1034
 3152 00ac 1DB0     		add	sp, sp, #116
 3153              	.LCFI54:
 3154              		.cfi_remember_state
 3155              		.cfi_def_cfa_offset 4
 3156              		@ sp needed
 3157 00ae 5DF804FB 		ldr	pc, [sp], #4
 3158              	.L180:
 3159              	.LCFI55:
 3160              		.cfi_restore_state
 325:Core/Src/main.c ****   }
 3161              		.loc 1 325 5 is_stmt 1 view .LVU1035
 3162 00b2 FFF7FEFF 		bl	Error_Handler
 3163              	.LVL168:
 3164              	.L181:
 343:Core/Src/main.c ****   }
 3165              		.loc 1 343 5 view .LVU1036
 3166 00b6 FFF7FEFF 		bl	Error_Handler
 3167              	.LVL169:
 3168              	.L183:
 3169 00ba 00BF     		.align	2
 3170              	.L182:
 3171 00bc 00480258 		.word	1476544512
 3172              		.cfi_endproc
 3173              	.LFE361:
 3175              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 3176              		.align	1
 3177              		.global	PeriphCommonClock_Config
 3178              		.syntax unified
 3179              		.thumb
 3180              		.thumb_func
 3181              		.fpu fpv5-d16
 3183              	PeriphCommonClock_Config:
 3184              	.LFB362:
 353:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 3185              		.loc 1 353 1 view -0
 3186              		.cfi_startproc
 3187              		@ args = 0, pretend = 0, frame = 184
 3188              		@ frame_needed = 0, uses_anonymous_args = 0
 3189 0000 00B5     		push	{lr}
 3190              	.LCFI56:
 3191              		.cfi_def_cfa_offset 4
 3192              		.cfi_offset 14, -4
ARM GAS  /tmp/ccr4Jxlr.s 			page 98


 3193 0002 AFB0     		sub	sp, sp, #188
 3194              	.LCFI57:
 3195              		.cfi_def_cfa_offset 192
 354:Core/Src/main.c **** 
 3196              		.loc 1 354 3 view .LVU1038
 354:Core/Src/main.c **** 
 3197              		.loc 1 354 28 is_stmt 0 view .LVU1039
 3198 0004 9022     		movs	r2, #144
 3199 0006 0021     		movs	r1, #0
 3200 0008 0AA8     		add	r0, sp, #40
 3201 000a FFF7FEFF 		bl	memset
 3202              	.LVL170:
 358:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3203              		.loc 1 358 3 is_stmt 1 view .LVU1040
 358:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3204              		.loc 1 358 44 is_stmt 0 view .LVU1041
 3205 000e 4FF40122 		mov	r2, #528384
 3206 0012 0023     		movs	r3, #0
 3207 0014 CDE90023 		strd	r2, [sp]
 360:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3208              		.loc 1 360 3 is_stmt 1 view .LVU1042
 360:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3209              		.loc 1 360 34 is_stmt 0 view .LVU1043
 3210 0018 0423     		movs	r3, #4
 3211 001a 0293     		str	r3, [sp, #8]
 361:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3212              		.loc 1 361 3 is_stmt 1 view .LVU1044
 361:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3213              		.loc 1 361 34 is_stmt 0 view .LVU1045
 3214 001c 0C22     		movs	r2, #12
 3215 001e 0392     		str	r2, [sp, #12]
 362:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3216              		.loc 1 362 3 is_stmt 1 view .LVU1046
 362:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3217              		.loc 1 362 34 is_stmt 0 view .LVU1047
 3218 0020 0493     		str	r3, [sp, #16]
 363:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3219              		.loc 1 363 3 is_stmt 1 view .LVU1048
 363:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3220              		.loc 1 363 34 is_stmt 0 view .LVU1049
 3221 0022 0223     		movs	r3, #2
 3222 0024 0593     		str	r3, [sp, #20]
 364:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3223              		.loc 1 364 3 is_stmt 1 view .LVU1050
 364:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3224              		.loc 1 364 34 is_stmt 0 view .LVU1051
 3225 0026 0693     		str	r3, [sp, #24]
 365:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3226              		.loc 1 365 3 is_stmt 1 view .LVU1052
 365:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3227              		.loc 1 365 36 is_stmt 0 view .LVU1053
 3228 0028 C023     		movs	r3, #192
 3229 002a 0793     		str	r3, [sp, #28]
 366:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3230              		.loc 1 366 3 is_stmt 1 view .LVU1054
 366:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3231              		.loc 1 366 39 is_stmt 0 view .LVU1055
ARM GAS  /tmp/ccr4Jxlr.s 			page 99


 3232 002c 0023     		movs	r3, #0
 3233 002e 0893     		str	r3, [sp, #32]
 367:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3234              		.loc 1 367 3 is_stmt 1 view .LVU1056
 367:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3235              		.loc 1 367 38 is_stmt 0 view .LVU1057
 3236 0030 0993     		str	r3, [sp, #36]
 368:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3237              		.loc 1 368 3 is_stmt 1 view .LVU1058
 368:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3238              		.loc 1 368 44 is_stmt 0 view .LVU1059
 3239 0032 4FF48053 		mov	r3, #4096
 3240 0036 1793     		str	r3, [sp, #92]
 369:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3241              		.loc 1 369 3 is_stmt 1 view .LVU1060
 370:Core/Src/main.c ****   {
 3242              		.loc 1 370 3 view .LVU1061
 370:Core/Src/main.c ****   {
 3243              		.loc 1 370 7 is_stmt 0 view .LVU1062
 3244 0038 6846     		mov	r0, sp
 3245 003a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3246              	.LVL171:
 370:Core/Src/main.c ****   {
 3247              		.loc 1 370 6 view .LVU1063
 3248 003e 10B9     		cbnz	r0, .L187
 374:Core/Src/main.c **** 
 3249              		.loc 1 374 1 view .LVU1064
 3250 0040 2FB0     		add	sp, sp, #188
 3251              	.LCFI58:
 3252              		.cfi_remember_state
 3253              		.cfi_def_cfa_offset 4
 3254              		@ sp needed
 3255 0042 5DF804FB 		ldr	pc, [sp], #4
 3256              	.L187:
 3257              	.LCFI59:
 3258              		.cfi_restore_state
 372:Core/Src/main.c ****   }
 3259              		.loc 1 372 5 is_stmt 1 view .LVU1065
 3260 0046 FFF7FEFF 		bl	Error_Handler
 3261              	.LVL172:
 3262              		.cfi_endproc
 3263              	.LFE362:
 3265              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3266              		.align	2
 3267              	.LC3:
 3268 0000 4C472031 		.ascii	"LG 1\000"
 3268      00
 3269 0005 000000   		.align	2
 3270              	.LC4:
 3271 0008 4C472032 		.ascii	"LG 2\000"
 3271      00
 3272              		.section	.text.main,"ax",%progbits
 3273              		.align	1
 3274              		.global	main
 3275              		.syntax unified
 3276              		.thumb
 3277              		.thumb_func
ARM GAS  /tmp/ccr4Jxlr.s 			page 100


 3278              		.fpu fpv5-d16
 3280              	main:
 3281              	.LFB360:
 207:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3282              		.loc 1 207 1 view -0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 0
 3285              		@ frame_needed = 0, uses_anonymous_args = 0
 3286 0000 10B5     		push	{r4, lr}
 3287              	.LCFI60:
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 210:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 3291              		.loc 1 210 2 view .LVU1067
 211:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 3292              		.loc 1 211 2 view .LVU1068
 212:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 3293              		.loc 1 212 2 view .LVU1069
 213:Core/Src/main.c ****   /* USER CODE END 1 */
 3294              		.loc 1 213 2 view .LVU1070
 219:Core/Src/main.c **** 
 3295              		.loc 1 219 3 view .LVU1071
 3296 0002 FFF7FEFF 		bl	HAL_Init
 3297              	.LVL173:
 226:Core/Src/main.c **** 
 3298              		.loc 1 226 3 view .LVU1072
 3299 0006 FFF7FEFF 		bl	SystemClock_Config
 3300              	.LVL174:
 229:Core/Src/main.c **** 
 3301              		.loc 1 229 3 view .LVU1073
 3302 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 3303              	.LVL175:
 236:Core/Src/main.c ****   MX_DMA_Init();
 3304              		.loc 1 236 3 view .LVU1074
 3305 000e FFF7FEFF 		bl	MX_GPIO_Init
 3306              	.LVL176:
 237:Core/Src/main.c ****   MX_SPI3_Init();
 3307              		.loc 1 237 3 view .LVU1075
 3308 0012 FFF7FEFF 		bl	MX_DMA_Init
 3309              	.LVL177:
 238:Core/Src/main.c ****   MX_FDCAN3_Init();
 3310              		.loc 1 238 3 view .LVU1076
 3311 0016 FFF7FEFF 		bl	MX_SPI3_Init
 3312              	.LVL178:
 239:Core/Src/main.c ****   MX_USART6_UART_Init();
 3313              		.loc 1 239 3 view .LVU1077
 3314 001a FFF7FEFF 		bl	MX_FDCAN3_Init
 3315              	.LVL179:
 240:Core/Src/main.c ****   MX_ADC1_Init();
 3316              		.loc 1 240 3 view .LVU1078
 3317 001e FFF7FEFF 		bl	MX_USART6_UART_Init
 3318              	.LVL180:
 241:Core/Src/main.c ****   MX_TIM4_Init();
 3319              		.loc 1 241 3 view .LVU1079
 3320 0022 FFF7FEFF 		bl	MX_ADC1_Init
 3321              	.LVL181:
ARM GAS  /tmp/ccr4Jxlr.s 			page 101


 242:Core/Src/main.c ****   MX_ADC3_Init();
 3322              		.loc 1 242 3 view .LVU1080
 3323 0026 FFF7FEFF 		bl	MX_TIM4_Init
 3324              	.LVL182:
 243:Core/Src/main.c ****   MX_SPI2_Init();
 3325              		.loc 1 243 3 view .LVU1081
 3326 002a FFF7FEFF 		bl	MX_ADC3_Init
 3327              	.LVL183:
 244:Core/Src/main.c ****   MX_I2C2_Init();
 3328              		.loc 1 244 3 view .LVU1082
 3329 002e FFF7FEFF 		bl	MX_SPI2_Init
 3330              	.LVL184:
 245:Core/Src/main.c ****   MX_TIM2_Init();
 3331              		.loc 1 245 3 view .LVU1083
 3332 0032 FFF7FEFF 		bl	MX_I2C2_Init
 3333              	.LVL185:
 246:Core/Src/main.c ****   MX_TIM5_Init();
 3334              		.loc 1 246 3 view .LVU1084
 3335 0036 FFF7FEFF 		bl	MX_TIM2_Init
 3336              	.LVL186:
 247:Core/Src/main.c ****   MX_TIM3_Init();
 3337              		.loc 1 247 3 view .LVU1085
 3338 003a FFF7FEFF 		bl	MX_TIM5_Init
 3339              	.LVL187:
 248:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 3340              		.loc 1 248 3 view .LVU1086
 3341 003e FFF7FEFF 		bl	MX_TIM3_Init
 3342              	.LVL188:
 249:Core/Src/main.c ****   MX_SPI1_Init();
 3343              		.loc 1 249 3 view .LVU1087
 3344 0042 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3345              	.LVL189:
 250:Core/Src/main.c ****   MX_UART4_Init();
 3346              		.loc 1 250 3 view .LVU1088
 3347 0046 FFF7FEFF 		bl	MX_SPI1_Init
 3348              	.LVL190:
 251:Core/Src/main.c ****   MX_FATFS_Init();
 3349              		.loc 1 251 3 view .LVU1089
 3350 004a FFF7FEFF 		bl	MX_UART4_Init
 3351              	.LVL191:
 252:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 3352              		.loc 1 252 3 view .LVU1090
 3353 004e FFF7FEFF 		bl	MX_FATFS_Init
 3354              	.LVL192:
 253:Core/Src/main.c ****   MX_TIM13_Init();
 3355              		.loc 1 253 3 view .LVU1091
 3356 0052 FFF7FEFF 		bl	MX_SDMMC2_SD_Init
 3357              	.LVL193:
 254:Core/Src/main.c ****   MX_TIM14_Init();
 3358              		.loc 1 254 3 view .LVU1092
 3359 0056 FFF7FEFF 		bl	MX_TIM13_Init
 3360              	.LVL194:
 255:Core/Src/main.c ****   MX_RNG_Init();
 3361              		.loc 1 255 3 view .LVU1093
 3362 005a FFF7FEFF 		bl	MX_TIM14_Init
 3363              	.LVL195:
 256:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccr4Jxlr.s 			page 102


 3364              		.loc 1 256 3 view .LVU1094
 3365 005e FFF7FEFF 		bl	MX_RNG_Init
 3366              	.LVL196:
 258:Core/Src/main.c **** 
 3367              		.loc 1 258 2 view .LVU1095
 258:Core/Src/main.c **** 
 3368              		.loc 1 258 22 is_stmt 0 view .LVU1096
 3369 0062 FFF7FEFF 		bl	LG_Check
 3370              	.LVL197:
 3371 0066 0446     		mov	r4, r0
 3372              	.LVL198:
 260:Core/Src/main.c **** 		setStatus("LG 1", 2);
 3373              		.loc 1 260 2 is_stmt 1 view .LVU1097
 260:Core/Src/main.c **** 		setStatus("LG 1", 2);
 3374              		.loc 1 260 4 is_stmt 0 view .LVU1098
 3375 0068 10F0010F 		tst	r0, #1
 3376 006c 28D0     		beq	.L189
 261:Core/Src/main.c **** 	}else{
 3377              		.loc 1 261 3 is_stmt 1 view .LVU1099
 3378 006e 0221     		movs	r1, #2
 3379 0070 1848     		ldr	r0, .L194
 3380              	.LVL199:
 261:Core/Src/main.c **** 	}else{
 3381              		.loc 1 261 3 is_stmt 0 view .LVU1100
 3382 0072 FFF7FEFF 		bl	setStatus
 3383              	.LVL200:
 3384              	.L190:
 266:Core/Src/main.c **** 		setStatus("LG 2", 2);
 3385              		.loc 1 266 2 is_stmt 1 view .LVU1101
 266:Core/Src/main.c **** 		setStatus("LG 2", 2);
 3386              		.loc 1 266 4 is_stmt 0 view .LVU1102
 3387 0076 14F0020F 		tst	r4, #2
 3388 007a 26D0     		beq	.L191
 267:Core/Src/main.c **** 	}else{
 3389              		.loc 1 267 3 is_stmt 1 view .LVU1103
 3390 007c 0221     		movs	r1, #2
 3391 007e 1648     		ldr	r0, .L194+4
 3392 0080 FFF7FEFF 		bl	setStatus
 3393              	.LVL201:
 3394              	.L192:
 271:Core/Src/main.c **** 	HAL_Delay(3000);
 3395              		.loc 1 271 2 view .LVU1104
 3396 0084 FFF7FEFF 		bl	LG_Configure
 3397              	.LVL202:
 272:Core/Src/main.c **** 	HG2_Write_Register(0x1C, 0b10111111);
 3398              		.loc 1 272 2 view .LVU1105
 3399 0088 40F6B830 		movw	r0, #3000
 3400 008c FFF7FEFF 		bl	HAL_Delay
 3401              	.LVL203:
 273:Core/Src/main.c **** 	HAL_Delay(2);
 3402              		.loc 1 273 2 view .LVU1106
 3403 0090 BF21     		movs	r1, #191
 3404 0092 1C20     		movs	r0, #28
 3405 0094 FFF7FEFF 		bl	HG2_Write_Register
 3406              	.LVL204:
 274:Core/Src/main.c **** 
 3407              		.loc 1 274 2 view .LVU1107
ARM GAS  /tmp/ccr4Jxlr.s 			page 103


 3408 0098 0220     		movs	r0, #2
 3409 009a FFF7FEFF 		bl	HAL_Delay
 3410              	.LVL205:
 276:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b11011000);
 3411              		.loc 1 276 2 view .LVU1108
 3412 009e 5821     		movs	r1, #88
 3413 00a0 1B20     		movs	r0, #27
 3414 00a2 FFF7FEFF 		bl	HG2_Write_Register
 3415              	.LVL206:
 277:Core/Src/main.c **** 
 3416              		.loc 1 277 2 view .LVU1109
 3417 00a6 D821     		movs	r1, #216
 3418 00a8 1B20     		movs	r0, #27
 3419 00aa FFF7FEFF 		bl	HG2_Write_Register
 3420              	.LVL207:
 279:Core/Src/main.c **** 
 3421              		.loc 1 279 2 view .LVU1110
 3422 00ae FFF7FEFF 		bl	Baro2_Configure
 3423              	.LVL208:
 281:Core/Src/main.c ****   /* USER CODE END 2 */
 3424              		.loc 1 281 3 view .LVU1111
 3425 00b2 0A4A     		ldr	r2, .L194+8
 3426 00b4 0A49     		ldr	r1, .L194+12
 3427 00b6 0B48     		ldr	r0, .L194+16
 3428 00b8 FFF7FEFF 		bl	multiplyQuat
 3429              	.LVL209:
 285:Core/Src/main.c **** 
 3430              		.loc 1 285 1 is_stmt 0 view .LVU1112
 3431 00bc 0020     		movs	r0, #0
 3432 00be 10BD     		pop	{r4, pc}
 3433              	.LVL210:
 3434              	.L189:
 263:Core/Src/main.c **** 	}
 3435              		.loc 1 263 3 is_stmt 1 view .LVU1113
 3436 00c0 0021     		movs	r1, #0
 3437 00c2 0448     		ldr	r0, .L194
 3438              	.LVL211:
 263:Core/Src/main.c **** 	}
 3439              		.loc 1 263 3 is_stmt 0 view .LVU1114
 3440 00c4 FFF7FEFF 		bl	setStatus
 3441              	.LVL212:
 3442 00c8 D5E7     		b	.L190
 3443              	.L191:
 269:Core/Src/main.c **** 	}
 3444              		.loc 1 269 3 is_stmt 1 view .LVU1115
 3445 00ca 0021     		movs	r1, #0
 3446 00cc 0248     		ldr	r0, .L194+4
 3447 00ce FFF7FEFF 		bl	setStatus
 3448              	.LVL213:
 3449 00d2 D7E7     		b	.L192
 3450              	.L195:
 3451              		.align	2
 3452              	.L194:
 3453 00d4 00000000 		.word	.LC3
 3454 00d8 08000000 		.word	.LC4
 3455 00dc 00000000 		.word	z
 3456 00e0 00000000 		.word	y
ARM GAS  /tmp/ccr4Jxlr.s 			page 104


 3457 00e4 00000000 		.word	x
 3458              		.cfi_endproc
 3459              	.LFE360:
 3461              		.comm	FR_Status,1,1
 3462              		.comm	Fil,4144,4
 3463              		.comm	FatFs,4152,4
 3464              		.comm	z,32,8
 3465              		.comm	y,32,8
 3466              		.comm	x,32,8
 3467              		.comm	LED_Color_Data,42,4
 3468              		.global	datasentflag
 3469              		.comm	huart6,148,4
 3470              		.comm	huart4,148,4
 3471              		.comm	hdma_tim5_ch4,120,4
 3472              		.comm	hdma_tim4_ch3,120,4
 3473              		.comm	hdma_tim3_ch1,120,4
 3474              		.comm	hdma_tim3_ch2,120,4
 3475              		.comm	hdma_tim2_ch3,120,4
 3476              		.comm	htim14,76,4
 3477              		.comm	htim13,76,4
 3478              		.comm	htim5,76,4
 3479              		.comm	htim4,76,4
 3480              		.comm	htim3,76,4
 3481              		.comm	htim2,76,4
 3482              		.comm	hspi3,136,4
 3483              		.comm	hspi2,136,4
 3484              		.comm	hspi1,136,4
 3485              		.comm	hsd2,124,4
 3486              		.comm	hrng,20,4
 3487              		.comm	hi2c2,84,4
 3488              		.comm	hfdcan3,160,4
 3489              		.comm	hdma_adc3,120,4
 3490              		.comm	hdma_adc1,120,4
 3491              		.comm	hadc3,112,4
 3492              		.comm	hadc1,112,4
 3493              		.comm	read_Data,2,2
 3494              		.comm	DMA_data,2,2
 3495              		.section	.bss.datasentflag,"aw",%nobits
 3496              		.align	2
 3499              	datasentflag:
 3500 0000 00000000 		.space	4
 3501              		.text
 3502              	.Letext0:
 3503              		.file 3 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3504              		.file 4 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3505              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 3506              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3507              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 3508              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 3509              		.file 9 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/lib/gcc/arm-none-eabi/
 3510              		.file 10 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3511              		.file 11 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3512              		.file 12 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3513              		.file 13 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3514              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3515              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 3516              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
ARM GAS  /tmp/ccr4Jxlr.s 			page 105


 3517              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3518              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 3519              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 3520              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 3521              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 3522              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3523              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 3524              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rng.h"
 3525              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 3526              		.file 26 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 3527              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 3528              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 3529              		.file 29 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 3530              		.file 30 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 3531              		.file 31 "Middlewares/Third_Party/FatFs/src/integer.h"
 3532              		.file 32 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3533              		.file 33 "Middlewares/Third_Party/FatFs/src/ff.h"
 3534              		.file 34 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3535              		.file 35 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3536              		.file 36 "FATFS/Target/sd_diskio.h"
 3537              		.file 37 "FATFS/App/fatfs.h"
 3538              		.file 38 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 3539              		.file 39 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 3540              		.file 40 "USB_DEVICE/App/usbd_cdc_if.h"
 3541              		.file 41 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3542              		.file 42 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 3543              		.file 43 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 3544              		.file 44 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 3545              		.file 45 "Core/Inc/main.h"
 3546              		.file 46 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c_ex.h"
 3547              		.file 47 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 3548              		.file 48 "USB_DEVICE/App/usb_device.h"
 3549              		.file 49 "Core/Inc/random.h"
 3550              		.file 50 "Core/Inc/LG_IMU.h"
 3551              		.file 51 "Core/Inc/StatusDisplay.h"
 3552              		.file 52 "Core/Inc/AvioNEXT.h"
 3553              		.file 53 "Core/Inc/math_utils.h"
 3554              		.file 54 "<built-in>"
ARM GAS  /tmp/ccr4Jxlr.s 			page 106


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccr4Jxlr.s:17     .text.MX_SDMMC2_SD_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:24     .text.MX_SDMMC2_SD_Init:0000000000000000 MX_SDMMC2_SD_Init
     /tmp/ccr4Jxlr.s:60     .text.MX_SDMMC2_SD_Init:000000000000001c $d
                            *COM*:000000000000007c hsd2
     /tmp/ccr4Jxlr.s:66     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:72     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccr4Jxlr.s:486    .text.MX_GPIO_Init:000000000000021c $d
     /tmp/ccr4Jxlr.s:498    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:504    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccr4Jxlr.s:627    .text.MX_DMA_Init:00000000000000ac $d
     /tmp/ccr4Jxlr.s:632    .rodata.disarm.str1.4:0000000000000000 $d
     /tmp/ccr4Jxlr.s:639    .text.disarm:0000000000000000 $t
     /tmp/ccr4Jxlr.s:646    .text.disarm:0000000000000000 disarm
     /tmp/ccr4Jxlr.s:748    .text.disarm:0000000000000098 $d
     /tmp/ccr4Jxlr.s:757    .text.Baro2_Read_Register:0000000000000000 $t
     /tmp/ccr4Jxlr.s:764    .text.Baro2_Read_Register:0000000000000000 Baro2_Read_Register
     /tmp/ccr4Jxlr.s:827    .text.Baro2_Read_Register:000000000000004c $d
                            *COM*:0000000000000088 hspi2
     /tmp/ccr4Jxlr.s:833    .text.Baro2_Write_Register:0000000000000000 $t
     /tmp/ccr4Jxlr.s:840    .text.Baro2_Write_Register:0000000000000000 Baro2_Write_Register
     /tmp/ccr4Jxlr.s:900    .text.Baro2_Write_Register:0000000000000048 $d
     /tmp/ccr4Jxlr.s:906    .text.Baro2_Configure:0000000000000000 $t
     /tmp/ccr4Jxlr.s:913    .text.Baro2_Configure:0000000000000000 Baro2_Configure
     /tmp/ccr4Jxlr.s:954    .text.Baro2_Get_Pressure:0000000000000000 $t
     /tmp/ccr4Jxlr.s:961    .text.Baro2_Get_Pressure:0000000000000000 Baro2_Get_Pressure
     /tmp/ccr4Jxlr.s:1012   .text.mount_SD:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1019   .text.mount_SD:0000000000000000 mount_SD
     /tmp/ccr4Jxlr.s:1043   .text.mount_SD:0000000000000010 $d
     /tmp/ccr4Jxlr.s:1049   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1056   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccr4Jxlr.s:1070   .rodata.HAL_ADC_ConvHalfCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccr4Jxlr.s:1074   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1081   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccr4Jxlr.s:1130   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000030 $d
                            *COM*:0000000000000002 read_Data
                            *COM*:0000000000000002 DMA_data
     /tmp/ccr4Jxlr.s:1137   .text.Error_Handler:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1144   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccr4Jxlr.s:1176   .text.MX_SPI3_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1182   .text.MX_SPI3_Init:0000000000000000 MX_SPI3_Init
     /tmp/ccr4Jxlr.s:1282   .text.MX_SPI3_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi3
     /tmp/ccr4Jxlr.s:1288   .text.MX_FDCAN3_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1294   .text.MX_FDCAN3_Init:0000000000000000 MX_FDCAN3_Init
     /tmp/ccr4Jxlr.s:1411   .text.MX_FDCAN3_Init:0000000000000054 $d
                            *COM*:00000000000000a0 hfdcan3
     /tmp/ccr4Jxlr.s:1417   .text.MX_USART6_UART_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1423   .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
     /tmp/ccr4Jxlr.s:1522   .text.MX_USART6_UART_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart6
     /tmp/ccr4Jxlr.s:1528   .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1534   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccr4Jxlr.s:1688   .text.MX_ADC1_Init:0000000000000090 $d
                            *COM*:0000000000000070 hadc1
     /tmp/ccr4Jxlr.s:1695   .text.MX_TIM4_Init:0000000000000000 $t
ARM GAS  /tmp/ccr4Jxlr.s 			page 107


     /tmp/ccr4Jxlr.s:1701   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccr4Jxlr.s:1861   .text.MX_TIM4_Init:00000000000000a4 $d
                            *COM*:000000000000004c htim4
     /tmp/ccr4Jxlr.s:1867   .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:1873   .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/ccr4Jxlr.s:2014   .text.MX_ADC3_Init:0000000000000084 $d
                            *COM*:0000000000000070 hadc3
     /tmp/ccr4Jxlr.s:2021   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2027   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccr4Jxlr.s:2127   .text.MX_SPI2_Init:0000000000000054 $d
     /tmp/ccr4Jxlr.s:2133   .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2139   .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccr4Jxlr.s:2221   .text.MX_I2C2_Init:0000000000000048 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccr4Jxlr.s:2228   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2234   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccr4Jxlr.s:2355   .text.MX_TIM2_Init:0000000000000074 $d
                            *COM*:000000000000004c htim2
     /tmp/ccr4Jxlr.s:2360   .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2366   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccr4Jxlr.s:2487   .text.MX_TIM5_Init:0000000000000074 $d
                            *COM*:000000000000004c htim5
     /tmp/ccr4Jxlr.s:2493   .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2499   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccr4Jxlr.s:2632   .text.MX_TIM3_Init:0000000000000080 $d
                            *COM*:000000000000004c htim3
     /tmp/ccr4Jxlr.s:2638   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2644   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccr4Jxlr.s:2744   .text.MX_SPI1_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi1
     /tmp/ccr4Jxlr.s:2750   .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2756   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccr4Jxlr.s:2855   .text.MX_UART4_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart4
     /tmp/ccr4Jxlr.s:2861   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2867   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccr4Jxlr.s:2916   .text.MX_TIM13_Init:0000000000000028 $d
                            *COM*:000000000000004c htim13
     /tmp/ccr4Jxlr.s:2922   .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2928   .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccr4Jxlr.s:2977   .text.MX_TIM14_Init:0000000000000028 $d
                            *COM*:000000000000004c htim14
     /tmp/ccr4Jxlr.s:2983   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccr4Jxlr.s:2990   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccr4Jxlr.s:3171   .text.SystemClock_Config:00000000000000bc $d
     /tmp/ccr4Jxlr.s:3176   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccr4Jxlr.s:3183   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccr4Jxlr.s:3266   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccr4Jxlr.s:3273   .text.main:0000000000000000 $t
     /tmp/ccr4Jxlr.s:3280   .text.main:0000000000000000 main
     /tmp/ccr4Jxlr.s:3453   .text.main:00000000000000d4 $d
                            *COM*:0000000000000020 z
                            *COM*:0000000000000020 y
                            *COM*:0000000000000020 x
                            *COM*:0000000000000001 FR_Status
                            *COM*:0000000000001030 Fil
                            *COM*:0000000000001038 FatFs
ARM GAS  /tmp/ccr4Jxlr.s 			page 108


                            *COM*:000000000000002a LED_Color_Data
     /tmp/ccr4Jxlr.s:3499   .bss.datasentflag:0000000000000000 datasentflag
                            *COM*:0000000000000078 hdma_tim5_ch4
                            *COM*:0000000000000078 hdma_tim4_ch3
                            *COM*:0000000000000078 hdma_tim3_ch1
                            *COM*:0000000000000078 hdma_tim3_ch2
                            *COM*:0000000000000078 hdma_tim2_ch3
                            *COM*:0000000000000014 hrng
                            *COM*:0000000000000078 hdma_adc3
                            *COM*:0000000000000078 hdma_adc1
     /tmp/ccr4Jxlr.s:3496   .bss.datasentflag:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
setStatus
HAL_SPI_Transmit
HAL_SPI_Receive
f_mount
SDPath
SDFatFS
strlen
CDC_Transmit_HS
HAL_SPI_Init
HAL_FDCAN_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
MX_FATFS_Init
MX_RNG_Init
LG_Check
LG_Configure
HAL_Delay
HG2_Write_Register
multiplyQuat
ARM GAS  /tmp/ccr4Jxlr.s 			page 109


