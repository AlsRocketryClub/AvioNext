ARM GAS  /tmp/ccEqzQ6F.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.MX_SDMMC2_SD_Init,"ax",%progbits
  17              		.align	1
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-d16
  24              	MX_SDMMC2_SD_Init:
  25              	.LFB369:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "LoRA"
  27:Core/Src/main.c **** #include "AvioNEXT.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "LG_IMU.h"
  30:Core/Src/main.c **** #include "max_m10s.h"
  31:Core/Src/main.c **** #include "StatusDisplay.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccEqzQ6F.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** uint16_t DMA_data;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** uint16_t read_Data;
  45:Core/Src/main.c **** ;
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  55:Core/Src/main.c **** ADC_HandleTypeDef hadc3;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc3;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** RNG_HandleTypeDef hrng;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** SD_HandleTypeDef hsd2;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  68:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  69:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  72:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  73:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  74:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  75:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  76:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  77:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch3;
  78:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch2;
  79:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim3_ch1;
  80:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim4_ch3;
  81:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim5_ch4;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** UART_HandleTypeDef huart4;
  84:Core/Src/main.c **** UART_HandleTypeDef huart6;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE BEGIN PV */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /* USER CODE END PV */
  89:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 3


  90:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  91:Core/Src/main.c **** void SystemClock_Config(void);
  92:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  93:Core/Src/main.c **** static void MX_GPIO_Init(void);
  94:Core/Src/main.c **** static void MX_DMA_Init(void);
  95:Core/Src/main.c **** static void MX_SPI3_Init(void);
  96:Core/Src/main.c **** static void MX_FDCAN3_Init(void);
  97:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  98:Core/Src/main.c **** static void MX_ADC1_Init(void);
  99:Core/Src/main.c **** static void MX_TIM4_Init(void);
 100:Core/Src/main.c **** static void MX_ADC3_Init(void);
 101:Core/Src/main.c **** static void MX_SPI2_Init(void);
 102:Core/Src/main.c **** static void MX_I2C2_Init(void);
 103:Core/Src/main.c **** static void MX_TIM2_Init(void);
 104:Core/Src/main.c **** static void MX_TIM5_Init(void);
 105:Core/Src/main.c **** static void MX_TIM3_Init(void);
 106:Core/Src/main.c **** static void MX_SPI1_Init(void);
 107:Core/Src/main.c **** static void MX_UART4_Init(void);
 108:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void);
 109:Core/Src/main.c **** static void MX_TIM13_Init(void);
 110:Core/Src/main.c **** static void MX_TIM14_Init(void);
 111:Core/Src/main.c **** static void MX_RNG_Init(void);
 112:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* USER CODE END PFP */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 117:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** volatile int datasentflag = 0;
 120:Core/Src/main.c **** uint8_t LED_Color_Data[14][3];
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** int disarm(char *state) {
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 124:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 0);
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 129:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 0);
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 134:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 	setStatus("ARM", 2);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 	strcpy(state, "DISARMED");
 140:Core/Src/main.c **** 	return 0;
 141:Core/Src/main.c **** }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** int arm(char *state) {
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 145:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 4


 147:Core/Src/main.c **** 	strcpy(state, "ARMED");
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	setStatus("ARM", 0);
 150:Core/Src/main.c **** 	return 0;
 151:Core/Src/main.c **** }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** double x[4];
 154:Core/Src/main.c **** void multiplyQuat(double r[4], double s[4]) {
 155:Core/Src/main.c **** 	float temp[4];
 156:Core/Src/main.c **** 	temp[0] = r[0] * s[0] - r[1] * s[1] - r[2] * s[2] - r[3] * s[3];
 157:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 158:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 159:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 160:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 161:Core/Src/main.c **** 		x[i] = temp[i];
 162:Core/Src/main.c **** 	}
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** uint8_t Baro2_Read_Register(uint8_t addr) {
 166:Core/Src/main.c **** 	uint8_t reg_value;
 167:Core/Src/main.c **** 	addr |= (1 << 7);
 168:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 171:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	return reg_value;
 176:Core/Src/main.c **** }
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** void Baro2_Write_Register(uint8_t addr, uint8_t data) {
 179:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 180:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 181:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 182:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** void Baro2_Configure(){
 187:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 188:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 189:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 	Baro2_Write_Register(0x18, cal_L);
 192:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** 	Baro2_Write_Register(0x10, 0b01000000); //50Hz refresh rate, low pass off
 196:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** int32_t Baro2_Get_Pressure(){
 200:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 201:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 202:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 203:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 5


 204:Core/Src/main.c **** 	int32_t BARO = 0;
 205:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 206:Core/Src/main.c **** 	return BARO;
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** /* USER CODE END 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief  The application entry point.
 213:Core/Src/main.c ****   * @retval int
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** int main(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** 	char state[50] = "DISARMED";
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** 	FRESULT res; /* FatFs function common result code */
 223:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 224:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 225:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 226:Core/Src/main.c ****   /* USER CODE END 1 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 231:Core/Src/main.c ****   HAL_Init();
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END Init */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* Configure the system clock */
 238:Core/Src/main.c ****   SystemClock_Config();
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /* Configure the peripherals common clocks */
 241:Core/Src/main.c ****   PeriphCommonClock_Config();
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END SysInit */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* Initialize all configured peripherals */
 248:Core/Src/main.c ****   MX_GPIO_Init();
 249:Core/Src/main.c ****   MX_DMA_Init();
 250:Core/Src/main.c ****   MX_SPI3_Init();
 251:Core/Src/main.c ****   MX_FDCAN3_Init();
 252:Core/Src/main.c ****   MX_USART6_UART_Init();
 253:Core/Src/main.c ****   MX_ADC1_Init();
 254:Core/Src/main.c ****   MX_TIM4_Init();
 255:Core/Src/main.c ****   MX_ADC3_Init();
 256:Core/Src/main.c ****   MX_SPI2_Init();
 257:Core/Src/main.c ****   MX_I2C2_Init();
 258:Core/Src/main.c ****   MX_TIM2_Init();
 259:Core/Src/main.c ****   MX_TIM5_Init();
 260:Core/Src/main.c ****   MX_TIM3_Init();
ARM GAS  /tmp/ccEqzQ6F.s 			page 6


 261:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 262:Core/Src/main.c ****   MX_SPI1_Init();
 263:Core/Src/main.c ****   MX_UART4_Init();
 264:Core/Src/main.c ****   MX_FATFS_Init();
 265:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 266:Core/Src/main.c ****   MX_TIM13_Init();
 267:Core/Src/main.c ****   MX_TIM14_Init();
 268:Core/Src/main.c ****   MX_RNG_Init();
 269:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 270:Core/Src/main.c ****   while(1) {
 271:Core/Src/main.c ****     CDC_Transmit_HS("not Hi\n", strlen("not hi\n"));
 272:Core/Src/main.c ****     HAL_Delay(1000);
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c **** 	//if (MAX_M10s_init(&hi2c2))
 275:Core/Src/main.c **** 	//	Error_Handler();
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** 	//MAX_M10S_init(&hi2c2);
 278:Core/Src/main.c **** 	const int MAX = 50;
 279:Core/Src/main.c **** 	const double SPEED = 2.0 / 2000;
 280:Core/Src/main.c **** 	const double r_offset = 0;
 281:Core/Src/main.c **** 	const double g_offset = 1;
 282:Core/Src/main.c **** 	const double b_offset = 2;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** 	uint8_t LG_status = LG_Check();
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 	if(LG_status & 1){
 288:Core/Src/main.c **** 		setStatus("LG 1", 2);
 289:Core/Src/main.c **** 	}else{
 290:Core/Src/main.c **** 		setStatus("LG 1", 0);
 291:Core/Src/main.c **** 	}
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 	if(LG_status & 2){
 294:Core/Src/main.c **** 		setStatus("LG 2", 2);
 295:Core/Src/main.c **** 	}else{
 296:Core/Src/main.c **** 		setStatus("LG 2", 0);
 297:Core/Src/main.c **** 	}
 298:Core/Src/main.c **** 	LG_Configure();
 299:Core/Src/main.c **** 	HAL_Delay(3000);
 300:Core/Src/main.c **** 	HG2_Write_Register(0x1C, 0b10111111);
 301:Core/Src/main.c **** 	HAL_Delay(2);
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b01011000);
 304:Core/Src/main.c **** 	HG2_Write_Register(0x1B, 0b11011000);
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** 	Baro2_Configure();
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** 	double temperature = 275.15;
 309:Core/Src/main.c **** 	double sea_level_pressure = 101.7;
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 	int index = 0;
 312:Core/Src/main.c **** 	double avg_tab[100];
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** 	for(int i = 0; i < 14; i++){
 315:Core/Src/main.c **** 		LED_Color_Data[i][0] = 0;
 316:Core/Src/main.c **** 		LED_Color_Data[i][1] = 255;
 317:Core/Src/main.c **** 		LED_Color_Data[i][2] = 0;
ARM GAS  /tmp/ccEqzQ6F.s 			page 7


 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** 	}
 320:Core/Src/main.c **** 	disarm(state);
 321:Core/Src/main.c **** 	setLEDs(LED_Color_Data);
 322:Core/Src/main.c **** 	setStatus("CAN", 1);
 323:Core/Src/main.c **** 	for(int i = 0; i < 100; i++){
 324:Core/Src/main.c **** 		avg_tab[i] = 0;
 325:Core/Src/main.c **** 	}
 326:Core/Src/main.c **** 	while (1) {
 327:Core/Src/main.c **** 		int32_t int_pressure = Baro2_Get_Pressure();
 328:Core/Src/main.c **** 		double float_pressure = (double)int_pressure / (40960.0 * 256.0);
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** 		avg_tab[index] = float_pressure;
 331:Core/Src/main.c **** 		index++;
 332:Core/Src/main.c **** 		if(index > 99){
 333:Core/Src/main.c **** 			index = 0;
 334:Core/Src/main.c **** 		}
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** 		double sum = 0;
 337:Core/Src/main.c **** 		for(int i = 0; i < 100; i++){
 338:Core/Src/main.c **** 			sum += avg_tab[i];
 339:Core/Src/main.c **** 		}
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** 		sum /= 100;
 342:Core/Src/main.c **** 		double altitude = (temperature/0.0065) *(1- pow((sum/sea_level_pressure), (1/5.256)));
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** 		char data_gyro[50];
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 		double test = LG_Get_Acc_Z();
 347:Core/Src/main.c **** 		sprintf(data_gyro, "%f\n", test);
 348:Core/Src/main.c **** 		CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 349:Core/Src/main.c **** 		HAL_Delay(20);
 350:Core/Src/main.c **** 		updateStatus();
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** 	}
 353:Core/Src/main.c **** 	float rotZ = 0;
 354:Core/Src/main.c **** 	uint32_t lastTime = 0;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** 	float calOmegaX = 0;
 357:Core/Src/main.c **** 	float calOmegaY = 0;
 358:Core/Src/main.c **** 	float calOmegaZ = 0;
 359:Core/Src/main.c **** 	HAL_Delay(2000);
 360:Core/Src/main.c **** 	for (int i = 0; i < 500; i++) {
 361:Core/Src/main.c **** 		if (LG_Read_Register(0x1E) | (1 << 1)) {
 362:Core/Src/main.c **** 			calOmegaX += LG_Get_Gyro_X();
 363:Core/Src/main.c **** 			calOmegaY += LG_Get_Gyro_Y();
 364:Core/Src/main.c **** 			calOmegaZ += LG_Get_Gyro_Z();
 365:Core/Src/main.c **** 		}
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 		//HAL_Delay(20);
 368:Core/Src/main.c **** 	}
 369:Core/Src/main.c **** 	calOmegaX /= 500;
 370:Core/Src/main.c **** 	calOmegaY /= 500;
 371:Core/Src/main.c **** 	calOmegaZ /= 500;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 1);
 374:Core/Src/main.c **** 	HAL_Delay(200);
ARM GAS  /tmp/ccEqzQ6F.s 			page 8


 375:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 0);
 376:Core/Src/main.c **** 	HAL_Delay(200);
 377:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, 1);
 378:Core/Src/main.c **** 	HAL_Delay(200);
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, 1);
 381:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_3, 1);
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
 384:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 385:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 386:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** 	setServo(1, 90);
 389:Core/Src/main.c **** 	setServo(2, 180);
 390:Core/Src/main.c **** 	setServo(3, 0);
 391:Core/Src/main.c **** 	setServo(4, 45);
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** 	LoRA_begin(868000000);
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** 	//HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** 	int connected = 0;
 398:Core/Src/main.c **** 	long last_packet = 0;
 399:Core/Src/main.c **** 	int ARMED = 0;
 400:Core/Src/main.c ****   /* USER CODE END 2 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* Infinite loop */
 403:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 404:Core/Src/main.c **** 	//HAL_ADC_Start_DMA(&hadc3, &read_Data, 1);
 405:Core/Src/main.c **** 	while (1) {
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 		char command[50];
 408:Core/Src/main.c **** 		char acknowledge[50];
 409:Core/Src/main.c **** 		char recieved_packet[50];
 410:Core/Src/main.c **** 		char response_packet[50];
 411:Core/Src/main.c **** 		char sendMessage[50];
 412:Core/Src/main.c **** 		int last = 0;
 413:Core/Src/main.c **** 		int packetId;
 414:Core/Src/main.c **** 		char communication_state[50] = "RECIEVING";
 415:Core/Src/main.c **** 		int isReceived = 0;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 		x[0] = 0;
 418:Core/Src/main.c **** 		x[1] = 1;
 419:Core/Src/main.c **** 		x[2] = 0;
 420:Core/Src/main.c **** 		x[3] = 0;
 421:Core/Src/main.c **** 		double rotQuaternion[4];
 422:Core/Src/main.c **** 		uint16_t lastMeasure = 0;
 423:Core/Src/main.c **** 		rotQuaternion[0] = 1;
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** 		HAL_TIM_Base_Start(&htim13);
 426:Core/Src/main.c **** 		TIM13->CNT = 0;
 427:Core/Src/main.c **** 		double elapsedTime = 0;
 428:Core/Src/main.c **** 		int counter = 0;
 429:Core/Src/main.c **** 		while (1) {
 430:Core/Src/main.c **** 			float Gx;
 431:Core/Src/main.c **** 			float Gy;
ARM GAS  /tmp/ccEqzQ6F.s 			page 9


 432:Core/Src/main.c **** 			float Gz;
 433:Core/Src/main.c **** 			if (LG_Read_Register(0x1E) & (1 << 1)) {
 434:Core/Src/main.c **** 				elapsedTime = (TIM13->CNT / 1000.0);
 435:Core/Src/main.c **** 				TIM13->CNT = 0;
 436:Core/Src/main.c **** 				Gx = LG_Get_Gyro_X();
 437:Core/Src/main.c **** 				Gy = LG_Get_Gyro_Y();
 438:Core/Src/main.c **** 				Gz = LG_Get_Gyro_Z();
 439:Core/Src/main.c **** 				rotQuaternion[1] = (Gx - calOmegaX) * (3.1415 / 360000)
 440:Core/Src/main.c **** 						* elapsedTime;
 441:Core/Src/main.c **** 				rotQuaternion[2] = (Gy - calOmegaY) * (3.1415 / 360000)
 442:Core/Src/main.c **** 						* elapsedTime;
 443:Core/Src/main.c **** 				rotQuaternion[3] = (Gz - calOmegaZ) * (3.1415 / 360000)
 444:Core/Src/main.c **** 						* elapsedTime;
 445:Core/Src/main.c **** 				rotQuaternion[0] = sqrt(
 446:Core/Src/main.c **** 						1 - (rotQuaternion[1] * rotQuaternion[1])
 447:Core/Src/main.c **** 								- (rotQuaternion[2] * rotQuaternion[2])
 448:Core/Src/main.c **** 								- (rotQuaternion[3] * rotQuaternion[3]));
 449:Core/Src/main.c **** 				counter++;
 450:Core/Src/main.c **** 				lastMeasure = HAL_GetTick();
 451:Core/Src/main.c **** 				multiplyQuat(rotQuaternion, x);
 452:Core/Src/main.c **** 				rotQuaternion[1] = -rotQuaternion[1];
 453:Core/Src/main.c **** 				rotQuaternion[2] = -rotQuaternion[2];
 454:Core/Src/main.c **** 				rotQuaternion[3] = -rotQuaternion[3];
 455:Core/Src/main.c **** 				multiplyQuat(x, rotQuaternion);
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** 			}
 458:Core/Src/main.c **** 			if (counter > 50) {
 459:Core/Src/main.c **** 				counter = 0;
 460:Core/Src/main.c **** 				float pitch = 180 * (asin(x[3]) / 3.1415);
 461:Core/Src/main.c **** 				//float magnitude = sqrt((x[1]*x[1]) + (x[2]*x[2]) + x[3] * x[3]);
 462:Core/Src/main.c **** 				char data_gyro[50];
 463:Core/Src/main.c **** 				sprintf(data_gyro, "%f, %f, %f, %f\n", pitch, x[1], x[2], x[3]);
 464:Core/Src/main.c **** 				CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 465:Core/Src/main.c **** 			}
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** 		}
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** 		while (1) {
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 			if (strcmp(communication_state, "RECIEVING") == 0) {
 472:Core/Src/main.c **** 
 473:Core/Src/main.c **** 				if (isReceived) {
 474:Core/Src/main.c **** 					//if crc then:
 475:Core/Src/main.c **** 					//send acknowledge
 476:Core/Src/main.c **** 					//{
 477:Core/Src/main.c **** 					strcpy(command, recieved_packet);
 478:Core/Src/main.c **** 					LoRA_sendPacket(recieved_packet);
 479:Core/Src/main.c **** 					strcpy(communication_state, "WAITING FOR PRIVILIGE");
 480:Core/Src/main.c **** 					//}
 481:Core/Src/main.c **** 				} else {
 482:Core/Src/main.c **** 					//give up MASTER
 483:Core/Src/main.c **** 					LoRA_sendPacket("$");
 484:Core/Src/main.c **** 					isReceived = 0;
 485:Core/Src/main.c **** 					for (int i = 0; i < 1000; i++) {
 486:Core/Src/main.c **** 						if (recv_packet(recieved_packet, 50)) {
 487:Core/Src/main.c **** 							isReceived = 1;
 488:Core/Src/main.c **** 						}
ARM GAS  /tmp/ccEqzQ6F.s 			page 10


 489:Core/Src/main.c **** 						HAL_Delay(1);
 490:Core/Src/main.c **** 					}
 491:Core/Src/main.c **** 					//LoRA_parsePacket();
 492:Core/Src/main.c **** 					//char gotten[50];
 493:Core/Src/main.c **** 					//sprintf(gotten,"gotten: %d",LoRA_parsePacket());
 494:Core/Src/main.c **** 					//LoRA_sendPacket(gotten);
 495:Core/Src/main.c **** 					//HAL_Delay(1000);
 496:Core/Src/main.c **** 				}
 497:Core/Src/main.c **** 			} else if (strcmp(communication_state, "WAITING FOR PRIVILIGE")
 498:Core/Src/main.c **** 					== 0) {
 499:Core/Src/main.c **** 				if (recv_packet(recieved_packet, 50)) {
 500:Core/Src/main.c **** 					LoRA_sendPacket("Recived packet");
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** 					//if crc then:
 503:Core/Src/main.c **** 					//{
 504:Core/Src/main.c **** 					if (strcmp(recieved_packet, "$") == 0) {
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 						strcpy(communication_state, "MASTER");
 507:Core/Src/main.c **** 					} else {
 508:Core/Src/main.c **** 						LoRA_sendPacket("Received not $");
 509:Core/Src/main.c **** 
 510:Core/Src/main.c **** 						//send acknowledge again
 511:Core/Src/main.c **** 						strcpy(command, recieved_packet);
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** 					}
 514:Core/Src/main.c **** 					//}
 515:Core/Src/main.c **** 				}
 516:Core/Src/main.c **** 			} else if (strcmp(communication_state, "MASTER") == 0) {
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 				LoRA_sendPacket("MASTER");
 519:Core/Src/main.c **** 				strcpy(communication_state, "RECIEVING");
 520:Core/Src/main.c **** //        if(strcmp(state, "DISARMED") == 0)
 521:Core/Src/main.c **** //        {
 522:Core/Src/main.c **** //          if(strcmp(command, "ARM") == 0)
 523:Core/Src/main.c **** //          {
 524:Core/Src/main.c **** //            if(!arm(state))
 525:Core/Src/main.c **** //            {
 526:Core/Src/main.c **** //              reliable_send_packet("ARM SUCCESS");
 527:Core/Src/main.c **** //            }
 528:Core/Src/main.c **** //            else
 529:Core/Src/main.c **** //            {
 530:Core/Src/main.c **** //              reliable_send_packet("ARM UNSUCCESSFUL");
 531:Core/Src/main.c **** //            }
 532:Core/Src/main.c **** //          }
 533:Core/Src/main.c **** //          else if(strcmp(command, "DISARM") == 0)
 534:Core/Src/main.c **** //          {
 535:Core/Src/main.c **** //            reliable_send_packet("ALREADY DISARMED");
 536:Core/Src/main.c **** //          }
 537:Core/Src/main.c **** //          else if(strcmp(command, "CONT") == 0)
 538:Core/Src/main.c **** //          {
 539:Core/Src/main.c **** //            uint8_t CONTS[8];
 540:Core/Src/main.c **** //            CONTS[0] = HAL_GPIO_ReadPin(CONT1_GPIO_Port, CONT1_Pin);
 541:Core/Src/main.c **** //            CONTS[1] = HAL_GPIO_ReadPin(CONT2_GPIO_Port, CONT2_Pin);
 542:Core/Src/main.c **** //            CONTS[2] = HAL_GPIO_ReadPin(CONT3_GPIO_Port, CONT3_Pin);
 543:Core/Src/main.c **** //            CONTS[3] = HAL_GPIO_ReadPin(CONT4_GPIO_Port, CONT4_Pin);
 544:Core/Src/main.c **** //            CONTS[4] = HAL_GPIO_ReadPin(CONT5_GPIO_Port, CONT5_Pin);
 545:Core/Src/main.c **** //            CONTS[5] = HAL_GPIO_ReadPin(CONT6_GPIO_Port, CONT6_Pin);
ARM GAS  /tmp/ccEqzQ6F.s 			page 11


 546:Core/Src/main.c **** //            CONTS[6] = HAL_GPIO_ReadPin(CONT7_GPIO_Port, CONT7_Pin);
 547:Core/Src/main.c **** //            CONTS[7] = HAL_GPIO_ReadPin(CONT8_GPIO_Port, CONT8_Pin);
 548:Core/Src/main.c **** //
 549:Core/Src/main.c **** //            char message[100];
 550:Core/Src/main.c **** //            for(int i=0; i<8; i++)
 551:Core/Src/main.c **** //            {
 552:Core/Src/main.c **** //              if(CONTS[i])
 553:Core/Src/main.c **** //              {
 554:Core/Src/main.c **** //                sprintf( message,  "PYRO %d DOESN'T HAVE CONTINUITY", i+1);
 555:Core/Src/main.c **** //              }
 556:Core/Src/main.c **** //              else
 557:Core/Src/main.c **** //              {
 558:Core/Src/main.c **** //                sprintf( message,  "PYRO %d HAS CONTINUITY", i+1);
 559:Core/Src/main.c **** //              }
 560:Core/Src/main.c **** //
 561:Core/Src/main.c **** //              reliable_send_packet(message);
 562:Core/Src/main.c **** //          }
 563:Core/Src/main.c **** //        }
 564:Core/Src/main.c **** //        else if(strcmp(state, "ARMED") == 0)
 565:Core/Src/main.c **** //        {
 566:Core/Src/main.c **** //          if(strcmp(command, "DISARM") == 0)
 567:Core/Src/main.c **** //          {
 568:Core/Src/main.c **** //            if(disarm(state))
 569:Core/Src/main.c **** //            {
 570:Core/Src/main.c **** //              //not success
 571:Core/Src/main.c **** //            }
 572:Core/Src/main.c **** //            else
 573:Core/Src/main.c **** //            {
 574:Core/Src/main.c **** //              //success
 575:Core/Src/main.c **** //            }
 576:Core/Src/main.c **** //
 577:Core/Src/main.c **** //          }
 578:Core/Src/main.c **** //        }
 579:Core/Src/main.c **** //        else if(strcmp(state, "STATIC_FIRE_LOGGING") == 0)
 580:Core/Src/main.c **** //        {
 581:Core/Src/main.c **** //          if(strcmp(command, "STOP") == 0)
 582:Core/Src/main.c **** //          {
 583:Core/Src/main.c **** //            strcpy(state,"ARMED");
 584:Core/Src/main.c **** //          }
 585:Core/Src/main.c **** //        }
 586:Core/Src/main.c **** //        else
 587:Core/Src/main.c **** //        {
 588:Core/Src/main.c **** //
 589:Core/Src/main.c **** //        }
 590:Core/Src/main.c **** //      }
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** 			}
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** 			//WS2812_Send();
 595:Core/Src/main.c **** 			//HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 596:Core/Src/main.c **** 			//TIM4->CCR3 = *ptr;
 597:Core/Src/main.c **** 			/*
 598:Core/Src/main.c **** 			 for(int i = 0; i < 14; i++){
 599:Core/Src/main.c **** 
 600:Core/Src/main.c **** 			 int time = HAL_GetTick();
 601:Core/Src/main.c **** 			 double height_offset = LED_order[i]*1.0/LED_num_max;
 602:Core/Src/main.c **** 			 double color_offset = time*SPEED + height_offset;
ARM GAS  /tmp/ccEqzQ6F.s 			page 12


 603:Core/Src/main.c **** 
 604:Core/Src/main.c **** 			 LED_Color_Data[i][0] = (uint32_t)MAX*triangle_space(color_offset+r_offset);
 605:Core/Src/main.c **** 			 LED_Color_Data[i][1] = (uint32_t)MAX*triangle_space(color_offset+g_offset);
 606:Core/Src/main.c **** 			 LED_Color_Data[i][2] = (uint32_t)MAX*triangle_space(color_offset+b_offset);
 607:Core/Src/main.c **** 			 }
 608:Core/Src/main.c **** 			 setLEDs();
 609:Core/Src/main.c **** 
 610:Core/Src/main.c **** 			 uint8_t* data_gyro[100];
 611:Core/Src/main.c **** 			 //		for(int i = 0; i < 14; i++){
 612:Core/Src/main.c **** 			 //
 613:Core/Src/main.c **** 			 //			int time = HAL_GetTick();
 614:Core/Src/main.c **** 			 //			double height_offset = LED_order[i]*1.0/LED_num_max;
 615:Core/Src/main.c **** 			 //			double color_offset = time*SPEED + height_offset;
 616:Core/Src/main.c **** 			 //
 617:Core/Src/main.c **** 			 //			LED_Color_Data[i][0] = (uint32_t)MAX*triangle_space(color_offset+r_offset);
 618:Core/Src/main.c **** 			 //			LED_Color_Data[i][1] = (uint32_t)MAX*triangle_space(color_offset+g_offset);
 619:Core/Src/main.c **** 			 //			LED_Color_Data[i][2] = (uint32_t)MAX*triangle_space(color_offset+b_offset);
 620:Core/Src/main.c **** 			 //		}
 621:Core/Src/main.c **** 
 622:Core/Src/main.c **** 			 float timeElapsed = ((float)(HAL_GetTick() - lastTime)) / 1000;
 623:Core/Src/main.c **** 
 624:Core/Src/main.c **** 			 //float omegaZ = LG_Get_Gyro_Z() - calOmegaZ;
 625:Core/Src/main.c **** 			 //rotZ += omegaZ * timeElapsed;
 626:Core/Src/main.c **** 
 627:Core/Src/main.c **** 			 //int16_t accZ = LG_Get_Acc_X();
 628:Core/Src/main.c **** 
 629:Core/Src/main.c **** 			 //HG2_Get_Acc();
 630:Core/Src/main.c **** 			 //int16_t AccX = (int16_t)(HG2_Acc[1] << 8) | HG2_Acc[0];
 631:Core/Src/main.c **** 			 //float AccX = LG_Get_Acc_X();
 632:Core/Src/main.c **** 			 //float AccY = LG_Get_Acc_Y();
 633:Core/Src/main.c **** 			 //float AccZ = LG_Get_Acc_Z();
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** 			 //float GyroX = LG_Get_Gyro_X() - calOmegaX;
 636:Core/Src/main.c **** 			 //float GyroY = LG_Get_Gyro_Y() - calOmegaY;
 637:Core/Src/main.c **** 			 //float GyroZ = LG_Get_Gyro_Z() - calOmegaZ;
 638:Core/Src/main.c **** 
 639:Core/Src/main.c **** 			 lastTime = HAL_GetTick();
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** 			 int a = add(2, 5);
 642:Core/Src/main.c **** 
 643:Core/Src/main.c **** 			 int btr = MAX_M10s_bytesToRead(&hi2c2);
 644:Core/Src/main.c **** 			 if (btr == -1) Error_Handler();
 645:Core/Src/main.c **** 			 for (int i = 0; i < btr; i++)
 646:Core/Src/main.c **** 			 MAX_M10s_poll(&hi2c2);
 647:Core/Src/main.c **** 			 MAX_M10S_parse();
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** 			 /*
 650:Core/Src/main.c **** 			 sprintf(data_gyro, "%d\n", a);
 651:Core/Src/main.c **** 			 //sprintf( data_gyro,  "%d,%d,%d,%d\n", (int)(GyroX*1000), (int)(GyroY*1000), (int)(GyroZ*1000)
 652:Core/Src/main.c **** 			 CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 653:Core/Src/main.c **** 
 654:Core/Src/main.c **** 			 HAL_Delay(1000);
 655:Core/Src/main.c **** 			 */
 656:Core/Src/main.c **** //		int packetLenght = LoRA_parsePacket();
 657:Core/Src/main.c **** //		if(packetLenght > 0){
 658:Core/Src/main.c **** //			for(int i = 0; i < packetLenght; i++){
 659:Core/Src/main.c **** //				data_gyro[i] = LoRA_Read_Register(0x00);
ARM GAS  /tmp/ccEqzQ6F.s 			page 13


 660:Core/Src/main.c **** //			}
 661:Core/Src/main.c **** //		    CDC_Transmit_HS(data_gyro, strlen(packetLenght));
 662:Core/Src/main.c **** //
 663:Core/Src/main.c **** //		}
 664:Core/Src/main.c **** 			//write_EEPROM(1, 1);
 665:Core/Src/main.c **** 			// Start ADC Conversion
 666:Core/Src/main.c **** 			//HAL_Delay(100);
 667:Core/Src/main.c **** 			if (HAL_GetTick() - last_packet > 1000) {
 668:Core/Src/main.c **** 				connected = 0;
 669:Core/Src/main.c **** 			}
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** 			if (connected) {
 672:Core/Src/main.c **** 				LED_Color_Data[2][0] = 255;
 673:Core/Src/main.c **** 				LED_Color_Data[2][1] = 0;
 674:Core/Src/main.c **** 				LED_Color_Data[2][2] = 0;
 675:Core/Src/main.c **** 			} else {
 676:Core/Src/main.c **** 				LED_Color_Data[2][0] = 120;
 677:Core/Src/main.c **** 				LED_Color_Data[2][1] = 255;
 678:Core/Src/main.c **** 				LED_Color_Data[2][2] = 0;
 679:Core/Src/main.c **** 			}
 680:Core/Src/main.c **** 
 681:Core/Src/main.c **** 			if (!ARMED) {
 682:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 683:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 0);
 686:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 687:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 688:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 689:Core/Src/main.c **** 
 690:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 0);
 691:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 692:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 693:Core/Src/main.c **** 				HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 694:Core/Src/main.c **** 
 695:Core/Src/main.c **** 				LED_Color_Data[7][0] = 255;
 696:Core/Src/main.c **** 				LED_Color_Data[7][1] = 0;
 697:Core/Src/main.c **** 				LED_Color_Data[7][2] = 0;
 698:Core/Src/main.c **** 			} else {
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 701:Core/Src/main.c **** 				HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 702:Core/Src/main.c **** 
 703:Core/Src/main.c **** 				LED_Color_Data[7][0] = 0;
 704:Core/Src/main.c **** 				LED_Color_Data[7][1] = 255;
 705:Core/Src/main.c **** 				LED_Color_Data[7][2] = 0;
 706:Core/Src/main.c **** 			}
 707:Core/Src/main.c **** 
 708:Core/Src/main.c **** 			int packet_lenght = LoRA_parsePacket();
 709:Core/Src/main.c **** 			char LoRA_data[50];
 710:Core/Src/main.c **** 			if (packet_lenght) {
 711:Core/Src/main.c **** 
 712:Core/Src/main.c **** 				connected = 1;
 713:Core/Src/main.c **** 				last_packet = HAL_GetTick();
 714:Core/Src/main.c **** 				for (int i = 0; i < packet_lenght; i++) {
 715:Core/Src/main.c **** 					LoRA_data[i] = LoRA_Read_Register(0x00);
 716:Core/Src/main.c **** 				}
ARM GAS  /tmp/ccEqzQ6F.s 			page 14


 717:Core/Src/main.c **** 				LoRA_data[packet_lenght] = '\0';
 718:Core/Src/main.c **** 				//LoRA_data[packet_lenght+1] = '';
 719:Core/Src/main.c **** 				char data_gyro[50];
 720:Core/Src/main.c **** 				//sprintf( data_gyro,  "%d   %d\n", strlen(LoRA_data), packet_lenght);
 721:Core/Src/main.c **** 				//CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 722:Core/Src/main.c **** 
 723:Core/Src/main.c **** 				//CDC_Transmit_HS(LoRA_data, packet_lenght);
 724:Core/Src/main.c **** 
 725:Core/Src/main.c **** 				if (strcmp(LoRA_data, "ARM") == 0) {
 726:Core/Src/main.c **** 					ARMED = 1;
 727:Core/Src/main.c **** 					LoRA_sendPacket("ARM SUCCESS");
 728:Core/Src/main.c **** 				}
 729:Core/Src/main.c **** 				if (strcmp(LoRA_data, "DISARM") == 0) {
 730:Core/Src/main.c **** 					ARMED = 0;
 731:Core/Src/main.c **** 					LoRA_sendPacket("DISARM SUCCESS");
 732:Core/Src/main.c **** 				}
 733:Core/Src/main.c **** 				if (strcmp(LoRA_data, "CONT") == 0) {
 734:Core/Src/main.c **** 
 735:Core/Src/main.c **** 					char cont_str[150];
 736:Core/Src/main.c **** 					uint8_t CONTS[8];
 737:Core/Src/main.c **** 					CONTS[0] = HAL_GPIO_ReadPin(CONT1_GPIO_Port, CONT1_Pin);
 738:Core/Src/main.c **** 					CONTS[1] = HAL_GPIO_ReadPin(CONT2_GPIO_Port, CONT2_Pin);
 739:Core/Src/main.c **** 					CONTS[2] = HAL_GPIO_ReadPin(CONT3_GPIO_Port, CONT3_Pin);
 740:Core/Src/main.c **** 					CONTS[3] = HAL_GPIO_ReadPin(CONT4_GPIO_Port, CONT4_Pin);
 741:Core/Src/main.c **** 					CONTS[4] = HAL_GPIO_ReadPin(CONT5_GPIO_Port, CONT5_Pin);
 742:Core/Src/main.c **** 					CONTS[5] = HAL_GPIO_ReadPin(CONT6_GPIO_Port, CONT6_Pin);
 743:Core/Src/main.c **** 					CONTS[6] = HAL_GPIO_ReadPin(CONT7_GPIO_Port, CONT7_Pin);
 744:Core/Src/main.c **** 					CONTS[7] = HAL_GPIO_ReadPin(CONT8_GPIO_Port, CONT8_Pin);
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** 					char message[100];
 747:Core/Src/main.c **** 					for (int i = 0; i < 8; i++) {
 748:Core/Src/main.c **** 						if (CONTS[i]) {
 749:Core/Src/main.c **** 							sprintf(message, "PYRO %d DOESN'T HAVE CONTINUITY",
 750:Core/Src/main.c **** 									i + 1);
 751:Core/Src/main.c **** 						} else {
 752:Core/Src/main.c **** 							sprintf(message, "PYRO %d HAS CONTINUITY", i + 1);
 753:Core/Src/main.c **** 						}
 754:Core/Src/main.c **** 
 755:Core/Src/main.c **** 						LoRA_sendPacket(message);
 756:Core/Src/main.c **** 						HAL_Delay(100);
 757:Core/Src/main.c **** 					}
 758:Core/Src/main.c **** 
 759:Core/Src/main.c **** 				}
 760:Core/Src/main.c **** 
 761:Core/Src/main.c **** 				if (strcmp(LoRA_data, "STATIC_FIRE") == 0) {
 762:Core/Src/main.c **** 					if (ARMED) {
 763:Core/Src/main.c **** 						LoRA_sendPacket("PYRO 1 FIRED");
 764:Core/Src/main.c **** 						//HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 1);
 765:Core/Src/main.c **** 						char LoRA_data[50];
 766:Core/Src/main.c **** 						int logging = 1;
 767:Core/Src/main.c **** 						while (logging) {
 768:Core/Src/main.c **** 							int packet_lenght;
 769:Core/Src/main.c **** 							long startTime = HAL_GetTick();
 770:Core/Src/main.c **** 							while (HAL_GetTick() - startTime < 10) {
 771:Core/Src/main.c **** 								packet_lenght = LoRA_parsePacket();
 772:Core/Src/main.c **** 								HAL_Delay(0.1);
 773:Core/Src/main.c **** 							}
ARM GAS  /tmp/ccEqzQ6F.s 			page 15


 774:Core/Src/main.c **** 							if (packet_lenght) {
 775:Core/Src/main.c **** 								//flush data from buffer
 776:Core/Src/main.c **** 								//last_packet = HAL_GetTick();
 777:Core/Src/main.c **** 								for (int i = 0; i < packet_lenght; i++) {
 778:Core/Src/main.c **** 									LoRA_data[i] = LoRA_Read_Register(0x00);
 779:Core/Src/main.c **** 								}
 780:Core/Src/main.c **** 								LoRA_data[packet_lenght] = '\0';
 781:Core/Src/main.c **** 								if (strcmp(LoRA_data, "STOP") == 0) {
 782:Core/Src/main.c **** 									logging = 0;
 783:Core/Src/main.c **** 								}
 784:Core/Src/main.c **** 							}
 785:Core/Src/main.c **** 							LoRA_sendPacket("Fake data: 21231, 99999");
 786:Core/Src/main.c **** 						}
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** 					}
 789:Core/Src/main.c **** 
 790:Core/Src/main.c **** 				}
 791:Core/Src/main.c **** 
 792:Core/Src/main.c **** 				int channel_num;
 793:Core/Src/main.c **** 				char fire_data[50];
 794:Core/Src/main.c **** 				sscanf(LoRA_data, "%s %d", fire_data, &channel_num);
 795:Core/Src/main.c **** 				if (strcmp(fire_data, "FIRE") == 0) {
 796:Core/Src/main.c **** 					if (ARMED) {
 797:Core/Src/main.c **** 						switch (channel_num) {
 798:Core/Src/main.c **** 						case 1:
 799:Core/Src/main.c **** 							LoRA_sendPacket("PYRO 1 FIRED");
 800:Core/Src/main.c **** 
 801:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, 1);
 802:Core/Src/main.c **** 							break;
 803:Core/Src/main.c **** 						case 2:
 804:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 1);
 805:Core/Src/main.c **** 							break;
 806:Core/Src/main.c **** 						case 3:
 807:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 1);
 808:Core/Src/main.c **** 							break;
 809:Core/Src/main.c **** 						case 4:
 810:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 1);
 811:Core/Src/main.c **** 							break;
 812:Core/Src/main.c **** 
 813:Core/Src/main.c **** 						case 5:
 814:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO5_GPIO_Port, PYRO5_Pin, 1);
 815:Core/Src/main.c **** 							break;
 816:Core/Src/main.c **** 						case 6:
 817:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 1);
 818:Core/Src/main.c **** 							break;
 819:Core/Src/main.c **** 						case 7:
 820:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 1);
 821:Core/Src/main.c **** 							break;
 822:Core/Src/main.c **** 						case 8:
 823:Core/Src/main.c **** 							HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 1);
 824:Core/Src/main.c **** 							break;
 825:Core/Src/main.c **** 						default:
 826:Core/Src/main.c **** 							break;
 827:Core/Src/main.c **** 						}
 828:Core/Src/main.c **** 					} else {
 829:Core/Src/main.c **** 						LoRA_sendPacket("CANNOT FIRE, BOARD NOT ARMED");
 830:Core/Src/main.c **** 					}
ARM GAS  /tmp/ccEqzQ6F.s 			page 16


 831:Core/Src/main.c **** 				}
 832:Core/Src/main.c **** 			}
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** 			//uint8_t data = read_EEPROM(1);
 835:Core/Src/main.c **** 			//sprintf( data_gyro,  "%d\n", DMA_data);
 836:Core/Src/main.c **** 
 837:Core/Src/main.c **** 			//HAL_Delay(1000);
 838:Core/Src/main.c ****     /* USER CODE END WHILE */
 839:Core/Src/main.c **** 
 840:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 841:Core/Src/main.c **** 		}
 842:Core/Src/main.c **** 	}
 843:Core/Src/main.c ****   /* USER CODE END 3 */
 844:Core/Src/main.c **** }
 845:Core/Src/main.c **** 
 846:Core/Src/main.c **** /**
 847:Core/Src/main.c ****   * @brief System Clock Configuration
 848:Core/Src/main.c ****   * @retval None
 849:Core/Src/main.c ****   */
 850:Core/Src/main.c **** void SystemClock_Config(void)
 851:Core/Src/main.c **** {
 852:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 853:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 854:Core/Src/main.c **** 
 855:Core/Src/main.c ****   /** Supply configuration update enable
 856:Core/Src/main.c ****   */
 857:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 858:Core/Src/main.c **** 
 859:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 860:Core/Src/main.c ****   */
 861:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 862:Core/Src/main.c **** 
 863:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 864:Core/Src/main.c **** 
 865:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 866:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 867:Core/Src/main.c ****   */
 868:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSI;
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 871:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 881:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 882:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 883:Core/Src/main.c ****   {
 884:Core/Src/main.c ****     Error_Handler();
 885:Core/Src/main.c ****   }
 886:Core/Src/main.c **** 
 887:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  /tmp/ccEqzQ6F.s 			page 17


 888:Core/Src/main.c ****   */
 889:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 890:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 891:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 893:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 894:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 898:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 899:Core/Src/main.c **** 
 900:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 901:Core/Src/main.c ****   {
 902:Core/Src/main.c ****     Error_Handler();
 903:Core/Src/main.c ****   }
 904:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 905:Core/Src/main.c **** }
 906:Core/Src/main.c **** 
 907:Core/Src/main.c **** /**
 908:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 909:Core/Src/main.c ****   * @retval None
 910:Core/Src/main.c ****   */
 911:Core/Src/main.c **** void PeriphCommonClock_Config(void)
 912:Core/Src/main.c **** {
 913:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****   /** Initializes the peripherals clock
 916:Core/Src/main.c ****   */
 917:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_ADC|RCC_PERIPHCLK_SPI3
 918:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 4;
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 926:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 927:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 928:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 929:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 930:Core/Src/main.c ****   {
 931:Core/Src/main.c ****     Error_Handler();
 932:Core/Src/main.c ****   }
 933:Core/Src/main.c **** }
 934:Core/Src/main.c **** 
 935:Core/Src/main.c **** /**
 936:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 937:Core/Src/main.c ****   * @param None
 938:Core/Src/main.c ****   * @retval None
 939:Core/Src/main.c ****   */
 940:Core/Src/main.c **** static void MX_ADC1_Init(void)
 941:Core/Src/main.c **** {
 942:Core/Src/main.c **** 
 943:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 944:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 18


 945:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 946:Core/Src/main.c **** 
 947:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 948:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 949:Core/Src/main.c **** 
 950:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 951:Core/Src/main.c **** 
 952:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 953:Core/Src/main.c **** 
 954:Core/Src/main.c ****   /** Common config
 955:Core/Src/main.c ****   */
 956:Core/Src/main.c ****   hadc1.Instance = ADC1;
 957:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 958:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 959:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 960:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 961:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 962:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 963:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 964:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 966:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 967:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 968:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 969:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 970:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 971:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 972:Core/Src/main.c ****   {
 973:Core/Src/main.c ****     Error_Handler();
 974:Core/Src/main.c ****   }
 975:Core/Src/main.c **** 
 976:Core/Src/main.c ****   /** Configure the ADC multi-mode
 977:Core/Src/main.c ****   */
 978:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 979:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 980:Core/Src/main.c ****   {
 981:Core/Src/main.c ****     Error_Handler();
 982:Core/Src/main.c ****   }
 983:Core/Src/main.c **** 
 984:Core/Src/main.c ****   /** Configure Regular Channel
 985:Core/Src/main.c ****   */
 986:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_14;
 987:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 988:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 989:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 990:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 991:Core/Src/main.c ****   sConfig.Offset = 0;
 992:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 993:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 994:Core/Src/main.c ****   {
 995:Core/Src/main.c ****     Error_Handler();
 996:Core/Src/main.c ****   }
 997:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
1000:Core/Src/main.c **** 
1001:Core/Src/main.c **** }
ARM GAS  /tmp/ccEqzQ6F.s 			page 19


1002:Core/Src/main.c **** 
1003:Core/Src/main.c **** /**
1004:Core/Src/main.c ****   * @brief ADC3 Initialization Function
1005:Core/Src/main.c ****   * @param None
1006:Core/Src/main.c ****   * @retval None
1007:Core/Src/main.c ****   */
1008:Core/Src/main.c **** static void MX_ADC3_Init(void)
1009:Core/Src/main.c **** {
1010:Core/Src/main.c **** 
1011:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 0 */
1012:Core/Src/main.c **** 
1013:Core/Src/main.c ****   /* USER CODE END ADC3_Init 0 */
1014:Core/Src/main.c **** 
1015:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
1016:Core/Src/main.c **** 
1017:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 1 */
1018:Core/Src/main.c **** 
1019:Core/Src/main.c ****   /* USER CODE END ADC3_Init 1 */
1020:Core/Src/main.c **** 
1021:Core/Src/main.c ****   /** Common config
1022:Core/Src/main.c ****   */
1023:Core/Src/main.c ****   hadc3.Instance = ADC3;
1024:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
1025:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
1026:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
1027:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
1028:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
1029:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
1030:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
1031:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
1032:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
1034:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
1035:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
1036:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
1037:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
1038:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
1039:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
1040:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
1041:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
1042:Core/Src/main.c ****   {
1043:Core/Src/main.c ****     Error_Handler();
1044:Core/Src/main.c ****   }
1045:Core/Src/main.c **** 
1046:Core/Src/main.c ****   /** Configure Regular Channel
1047:Core/Src/main.c ****   */
1048:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
1049:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
1050:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
1051:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
1052:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
1053:Core/Src/main.c ****   sConfig.Offset = 0;
1054:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
1055:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
1056:Core/Src/main.c ****   {
1057:Core/Src/main.c ****     Error_Handler();
1058:Core/Src/main.c ****   }
ARM GAS  /tmp/ccEqzQ6F.s 			page 20


1059:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 2 */
1060:Core/Src/main.c **** 
1061:Core/Src/main.c ****   /* USER CODE END ADC3_Init 2 */
1062:Core/Src/main.c **** 
1063:Core/Src/main.c **** }
1064:Core/Src/main.c **** 
1065:Core/Src/main.c **** /**
1066:Core/Src/main.c ****   * @brief FDCAN3 Initialization Function
1067:Core/Src/main.c ****   * @param None
1068:Core/Src/main.c ****   * @retval None
1069:Core/Src/main.c ****   */
1070:Core/Src/main.c **** static void MX_FDCAN3_Init(void)
1071:Core/Src/main.c **** {
1072:Core/Src/main.c **** 
1073:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 0 */
1074:Core/Src/main.c **** 
1075:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 0 */
1076:Core/Src/main.c **** 
1077:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 1 */
1078:Core/Src/main.c **** 
1079:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 1 */
1080:Core/Src/main.c ****   hfdcan3.Instance = FDCAN3;
1081:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
1082:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
1083:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
1084:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
1085:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
1086:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
1087:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
1089:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
1090:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
1091:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
1093:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
1094:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
1095:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
1096:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
1100:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
1101:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
1102:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
1103:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
1104:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
1106:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
1107:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
1108:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
1109:Core/Src/main.c ****   {
1110:Core/Src/main.c ****     Error_Handler();
1111:Core/Src/main.c ****   }
1112:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN3_Init 2 */
1113:Core/Src/main.c **** 
1114:Core/Src/main.c ****   /* USER CODE END FDCAN3_Init 2 */
1115:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 21


1116:Core/Src/main.c **** }
1117:Core/Src/main.c **** 
1118:Core/Src/main.c **** /**
1119:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1120:Core/Src/main.c ****   * @param None
1121:Core/Src/main.c ****   * @retval None
1122:Core/Src/main.c ****   */
1123:Core/Src/main.c **** static void MX_I2C2_Init(void)
1124:Core/Src/main.c **** {
1125:Core/Src/main.c **** 
1126:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1127:Core/Src/main.c **** 
1128:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1129:Core/Src/main.c **** 
1130:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1131:Core/Src/main.c **** 
1132:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1133:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1134:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
1135:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1136:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1137:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1139:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
1140:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1141:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1142:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1143:Core/Src/main.c ****   {
1144:Core/Src/main.c ****     Error_Handler();
1145:Core/Src/main.c ****   }
1146:Core/Src/main.c **** 
1147:Core/Src/main.c ****   /** Configure Analogue filter
1148:Core/Src/main.c ****   */
1149:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
1150:Core/Src/main.c ****   {
1151:Core/Src/main.c ****     Error_Handler();
1152:Core/Src/main.c ****   }
1153:Core/Src/main.c **** 
1154:Core/Src/main.c ****   /** Configure Digital filter
1155:Core/Src/main.c ****   */
1156:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
1157:Core/Src/main.c ****   {
1158:Core/Src/main.c ****     Error_Handler();
1159:Core/Src/main.c ****   }
1160:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1161:Core/Src/main.c **** 
1162:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1163:Core/Src/main.c **** 
1164:Core/Src/main.c **** }
1165:Core/Src/main.c **** 
1166:Core/Src/main.c **** /**
1167:Core/Src/main.c ****   * @brief RNG Initialization Function
1168:Core/Src/main.c ****   * @param None
1169:Core/Src/main.c ****   * @retval None
1170:Core/Src/main.c ****   */
1171:Core/Src/main.c **** static void MX_RNG_Init(void)
1172:Core/Src/main.c **** {
ARM GAS  /tmp/ccEqzQ6F.s 			page 22


1173:Core/Src/main.c **** 
1174:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 0 */
1175:Core/Src/main.c **** 
1176:Core/Src/main.c ****   /* USER CODE END RNG_Init 0 */
1177:Core/Src/main.c **** 
1178:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 1 */
1179:Core/Src/main.c **** 
1180:Core/Src/main.c ****   /* USER CODE END RNG_Init 1 */
1181:Core/Src/main.c ****   hrng.Instance = RNG;
1182:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
1183:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
1184:Core/Src/main.c ****   {
1185:Core/Src/main.c ****     Error_Handler();
1186:Core/Src/main.c ****   }
1187:Core/Src/main.c ****   /* USER CODE BEGIN RNG_Init 2 */
1188:Core/Src/main.c **** 
1189:Core/Src/main.c ****   /* USER CODE END RNG_Init 2 */
1190:Core/Src/main.c **** 
1191:Core/Src/main.c **** }
1192:Core/Src/main.c **** 
1193:Core/Src/main.c **** /**
1194:Core/Src/main.c ****   * @brief SDMMC2 Initialization Function
1195:Core/Src/main.c ****   * @param None
1196:Core/Src/main.c ****   * @retval None
1197:Core/Src/main.c ****   */
1198:Core/Src/main.c **** static void MX_SDMMC2_SD_Init(void)
1199:Core/Src/main.c **** {
  27              		.loc 1 1199 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1200:Core/Src/main.c **** 
1201:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 0 */
1202:Core/Src/main.c **** 
1203:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 0 */
1204:Core/Src/main.c **** 
1205:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 1 */
1206:Core/Src/main.c **** 
1207:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 1 */
1208:Core/Src/main.c ****   hsd2.Instance = SDMMC2;
  32              		.loc 1 1208 3 view .LVU1
  33              		.loc 1 1208 17 is_stmt 0 view .LVU2
  34 0000 064B     		ldr	r3, .L2
  35 0002 074A     		ldr	r2, .L2+4
  36 0004 1A60     		str	r2, [r3]
1209:Core/Src/main.c ****   hsd2.Init.ClockEdge = SDMMC_CLOCK_EDGE_RISING;
  37              		.loc 1 1209 3 is_stmt 1 view .LVU3
  38              		.loc 1 1209 23 is_stmt 0 view .LVU4
  39 0006 0022     		movs	r2, #0
  40 0008 5A60     		str	r2, [r3, #4]
1210:Core/Src/main.c ****   hsd2.Init.ClockPowerSave = SDMMC_CLOCK_POWER_SAVE_DISABLE;
  41              		.loc 1 1210 3 is_stmt 1 view .LVU5
  42              		.loc 1 1210 28 is_stmt 0 view .LVU6
  43 000a 9A60     		str	r2, [r3, #8]
1211:Core/Src/main.c ****   hsd2.Init.BusWide = SDMMC_BUS_WIDE_4B;
  44              		.loc 1 1211 3 is_stmt 1 view .LVU7
ARM GAS  /tmp/ccEqzQ6F.s 			page 23


  45              		.loc 1 1211 21 is_stmt 0 view .LVU8
  46 000c 4FF48041 		mov	r1, #16384
  47 0010 D960     		str	r1, [r3, #12]
1212:Core/Src/main.c ****   hsd2.Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
  48              		.loc 1 1212 3 is_stmt 1 view .LVU9
  49              		.loc 1 1212 33 is_stmt 0 view .LVU10
  50 0012 1A61     		str	r2, [r3, #16]
1213:Core/Src/main.c ****   hsd2.Init.ClockDiv = 8;
  51              		.loc 1 1213 3 is_stmt 1 view .LVU11
  52              		.loc 1 1213 22 is_stmt 0 view .LVU12
  53 0014 0822     		movs	r2, #8
  54 0016 5A61     		str	r2, [r3, #20]
1214:Core/Src/main.c ****   /* USER CODE BEGIN SDMMC2_Init 2 */
1215:Core/Src/main.c **** 
1216:Core/Src/main.c ****   /* USER CODE END SDMMC2_Init 2 */
1217:Core/Src/main.c **** 
1218:Core/Src/main.c **** }
  55              		.loc 1 1218 1 view .LVU13
  56 0018 7047     		bx	lr
  57              	.L3:
  58 001a 00BF     		.align	2
  59              	.L2:
  60 001c 00000000 		.word	hsd2
  61 0020 00240248 		.word	1208099840
  62              		.cfi_endproc
  63              	.LFE369:
  65              		.section	.text.MX_GPIO_Init,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu fpv5-d16
  72              	MX_GPIO_Init:
  73              	.LFB382:
1219:Core/Src/main.c **** 
1220:Core/Src/main.c **** /**
1221:Core/Src/main.c ****   * @brief SPI1 Initialization Function
1222:Core/Src/main.c ****   * @param None
1223:Core/Src/main.c ****   * @retval None
1224:Core/Src/main.c ****   */
1225:Core/Src/main.c **** static void MX_SPI1_Init(void)
1226:Core/Src/main.c **** {
1227:Core/Src/main.c **** 
1228:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
1229:Core/Src/main.c **** 
1230:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
1231:Core/Src/main.c **** 
1232:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
1233:Core/Src/main.c **** 
1234:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
1235:Core/Src/main.c ****   /* SPI1 parameter configuration*/
1236:Core/Src/main.c ****   hspi1.Instance = SPI1;
1237:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
1238:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
1239:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
1240:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
1241:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  /tmp/ccEqzQ6F.s 			page 24


1242:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
1243:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
1244:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
1245:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
1246:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1247:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
1248:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1249:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1250:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
1251:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1252:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1253:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1254:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1255:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1256:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1257:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1258:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
1259:Core/Src/main.c ****   {
1260:Core/Src/main.c ****     Error_Handler();
1261:Core/Src/main.c ****   }
1262:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
1263:Core/Src/main.c **** 
1264:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
1265:Core/Src/main.c **** 
1266:Core/Src/main.c **** }
1267:Core/Src/main.c **** 
1268:Core/Src/main.c **** /**
1269:Core/Src/main.c ****   * @brief SPI2 Initialization Function
1270:Core/Src/main.c ****   * @param None
1271:Core/Src/main.c ****   * @retval None
1272:Core/Src/main.c ****   */
1273:Core/Src/main.c **** static void MX_SPI2_Init(void)
1274:Core/Src/main.c **** {
1275:Core/Src/main.c **** 
1276:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
1277:Core/Src/main.c **** 
1278:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
1279:Core/Src/main.c **** 
1280:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
1281:Core/Src/main.c **** 
1282:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
1283:Core/Src/main.c ****   /* SPI2 parameter configuration*/
1284:Core/Src/main.c ****   hspi2.Instance = SPI2;
1285:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
1286:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
1287:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
1288:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
1289:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
1290:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
1291:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
1292:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
1293:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
1294:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1295:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
1296:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1297:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1298:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
ARM GAS  /tmp/ccEqzQ6F.s 			page 25


1299:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1300:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1301:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1302:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1303:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1304:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1305:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1306:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
1307:Core/Src/main.c ****   {
1308:Core/Src/main.c ****     Error_Handler();
1309:Core/Src/main.c ****   }
1310:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
1311:Core/Src/main.c **** 
1312:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
1313:Core/Src/main.c **** 
1314:Core/Src/main.c **** }
1315:Core/Src/main.c **** 
1316:Core/Src/main.c **** /**
1317:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1318:Core/Src/main.c ****   * @param None
1319:Core/Src/main.c ****   * @retval None
1320:Core/Src/main.c ****   */
1321:Core/Src/main.c **** static void MX_SPI3_Init(void)
1322:Core/Src/main.c **** {
1323:Core/Src/main.c **** 
1324:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1325:Core/Src/main.c **** 
1326:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1327:Core/Src/main.c **** 
1328:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1329:Core/Src/main.c **** 
1330:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1331:Core/Src/main.c ****   /* SPI3 parameter configuration*/
1332:Core/Src/main.c ****   hspi3.Instance = SPI3;
1333:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1334:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1335:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1336:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1337:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1338:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1339:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
1340:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1341:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1342:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1343:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
1344:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
1345:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
1346:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
1347:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1348:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
1349:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
1350:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
1351:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
1352:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
1353:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
1354:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1355:Core/Src/main.c ****   {
ARM GAS  /tmp/ccEqzQ6F.s 			page 26


1356:Core/Src/main.c ****     Error_Handler();
1357:Core/Src/main.c ****   }
1358:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1359:Core/Src/main.c **** 
1360:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1361:Core/Src/main.c **** 
1362:Core/Src/main.c **** }
1363:Core/Src/main.c **** 
1364:Core/Src/main.c **** /**
1365:Core/Src/main.c ****   * @brief TIM2 Initialization Function
1366:Core/Src/main.c ****   * @param None
1367:Core/Src/main.c ****   * @retval None
1368:Core/Src/main.c ****   */
1369:Core/Src/main.c **** static void MX_TIM2_Init(void)
1370:Core/Src/main.c **** {
1371:Core/Src/main.c **** 
1372:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
1373:Core/Src/main.c **** 
1374:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
1375:Core/Src/main.c **** 
1376:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1377:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1378:Core/Src/main.c **** 
1379:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
1380:Core/Src/main.c **** 
1381:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
1382:Core/Src/main.c ****   htim2.Instance = TIM2;
1383:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
1384:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
1385:Core/Src/main.c ****   htim2.Init.Period = 90;
1386:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1387:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1388:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
1389:Core/Src/main.c ****   {
1390:Core/Src/main.c ****     Error_Handler();
1391:Core/Src/main.c ****   }
1392:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1393:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1394:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
1395:Core/Src/main.c ****   {
1396:Core/Src/main.c ****     Error_Handler();
1397:Core/Src/main.c ****   }
1398:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1399:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1400:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1401:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1402:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
1403:Core/Src/main.c ****   {
1404:Core/Src/main.c ****     Error_Handler();
1405:Core/Src/main.c ****   }
1406:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
1407:Core/Src/main.c **** 
1408:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
1409:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
1410:Core/Src/main.c **** 
1411:Core/Src/main.c **** }
1412:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 27


1413:Core/Src/main.c **** /**
1414:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1415:Core/Src/main.c ****   * @param None
1416:Core/Src/main.c ****   * @retval None
1417:Core/Src/main.c ****   */
1418:Core/Src/main.c **** static void MX_TIM3_Init(void)
1419:Core/Src/main.c **** {
1420:Core/Src/main.c **** 
1421:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1422:Core/Src/main.c **** 
1423:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1424:Core/Src/main.c **** 
1425:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1426:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1427:Core/Src/main.c **** 
1428:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1429:Core/Src/main.c **** 
1430:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1431:Core/Src/main.c ****   htim3.Instance = TIM3;
1432:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
1433:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1434:Core/Src/main.c ****   htim3.Init.Period = 90;
1435:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1436:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1437:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
1438:Core/Src/main.c ****   {
1439:Core/Src/main.c ****     Error_Handler();
1440:Core/Src/main.c ****   }
1441:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1442:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1443:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1444:Core/Src/main.c ****   {
1445:Core/Src/main.c ****     Error_Handler();
1446:Core/Src/main.c ****   }
1447:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1448:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1449:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1450:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1451:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1452:Core/Src/main.c ****   {
1453:Core/Src/main.c ****     Error_Handler();
1454:Core/Src/main.c ****   }
1455:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
1456:Core/Src/main.c ****   {
1457:Core/Src/main.c ****     Error_Handler();
1458:Core/Src/main.c ****   }
1459:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1460:Core/Src/main.c **** 
1461:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1462:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
1463:Core/Src/main.c **** 
1464:Core/Src/main.c **** }
1465:Core/Src/main.c **** 
1466:Core/Src/main.c **** /**
1467:Core/Src/main.c ****   * @brief TIM4 Initialization Function
1468:Core/Src/main.c ****   * @param None
1469:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccEqzQ6F.s 			page 28


1470:Core/Src/main.c ****   */
1471:Core/Src/main.c **** static void MX_TIM4_Init(void)
1472:Core/Src/main.c **** {
1473:Core/Src/main.c **** 
1474:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
1475:Core/Src/main.c **** 
1476:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
1477:Core/Src/main.c **** 
1478:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1479:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1480:Core/Src/main.c **** 
1481:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
1482:Core/Src/main.c **** 
1483:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
1484:Core/Src/main.c ****   htim4.Instance = TIM4;
1485:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
1486:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
1487:Core/Src/main.c ****   htim4.Init.Period = 9999;
1488:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1489:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1490:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
1491:Core/Src/main.c ****   {
1492:Core/Src/main.c ****     Error_Handler();
1493:Core/Src/main.c ****   }
1494:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1495:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1496:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
1497:Core/Src/main.c ****   {
1498:Core/Src/main.c ****     Error_Handler();
1499:Core/Src/main.c ****   }
1500:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1501:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1502:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1503:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1504:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
1505:Core/Src/main.c ****   {
1506:Core/Src/main.c ****     Error_Handler();
1507:Core/Src/main.c ****   }
1508:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
1509:Core/Src/main.c ****   {
1510:Core/Src/main.c ****     Error_Handler();
1511:Core/Src/main.c ****   }
1512:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
1513:Core/Src/main.c ****   {
1514:Core/Src/main.c ****     Error_Handler();
1515:Core/Src/main.c ****   }
1516:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1517:Core/Src/main.c ****   {
1518:Core/Src/main.c ****     Error_Handler();
1519:Core/Src/main.c ****   }
1520:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
1521:Core/Src/main.c **** 
1522:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
1523:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
1524:Core/Src/main.c **** 
1525:Core/Src/main.c **** }
1526:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 29


1527:Core/Src/main.c **** /**
1528:Core/Src/main.c ****   * @brief TIM5 Initialization Function
1529:Core/Src/main.c ****   * @param None
1530:Core/Src/main.c ****   * @retval None
1531:Core/Src/main.c ****   */
1532:Core/Src/main.c **** static void MX_TIM5_Init(void)
1533:Core/Src/main.c **** {
1534:Core/Src/main.c **** 
1535:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
1536:Core/Src/main.c **** 
1537:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
1538:Core/Src/main.c **** 
1539:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1540:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
1541:Core/Src/main.c **** 
1542:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
1543:Core/Src/main.c **** 
1544:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
1545:Core/Src/main.c ****   htim5.Instance = TIM5;
1546:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
1547:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
1548:Core/Src/main.c ****   htim5.Init.Period = 90;
1549:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1550:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1551:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
1552:Core/Src/main.c ****   {
1553:Core/Src/main.c ****     Error_Handler();
1554:Core/Src/main.c ****   }
1555:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1556:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1557:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
1558:Core/Src/main.c ****   {
1559:Core/Src/main.c ****     Error_Handler();
1560:Core/Src/main.c ****   }
1561:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
1562:Core/Src/main.c ****   sConfigOC.Pulse = 0;
1563:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
1564:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
1565:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
1566:Core/Src/main.c ****   {
1567:Core/Src/main.c ****     Error_Handler();
1568:Core/Src/main.c ****   }
1569:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
1570:Core/Src/main.c **** 
1571:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
1572:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
1573:Core/Src/main.c **** 
1574:Core/Src/main.c **** }
1575:Core/Src/main.c **** 
1576:Core/Src/main.c **** /**
1577:Core/Src/main.c ****   * @brief TIM13 Initialization Function
1578:Core/Src/main.c ****   * @param None
1579:Core/Src/main.c ****   * @retval None
1580:Core/Src/main.c ****   */
1581:Core/Src/main.c **** static void MX_TIM13_Init(void)
1582:Core/Src/main.c **** {
1583:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 30


1584:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
1585:Core/Src/main.c **** 
1586:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
1587:Core/Src/main.c **** 
1588:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
1589:Core/Src/main.c **** 
1590:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
1591:Core/Src/main.c ****   htim13.Instance = TIM13;
1592:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
1593:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
1594:Core/Src/main.c ****   htim13.Init.Period = 65535;
1595:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1596:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1597:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
1598:Core/Src/main.c ****   {
1599:Core/Src/main.c ****     Error_Handler();
1600:Core/Src/main.c ****   }
1601:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
1602:Core/Src/main.c **** 
1603:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
1604:Core/Src/main.c **** 
1605:Core/Src/main.c **** }
1606:Core/Src/main.c **** 
1607:Core/Src/main.c **** /**
1608:Core/Src/main.c ****   * @brief TIM14 Initialization Function
1609:Core/Src/main.c ****   * @param None
1610:Core/Src/main.c ****   * @retval None
1611:Core/Src/main.c ****   */
1612:Core/Src/main.c **** static void MX_TIM14_Init(void)
1613:Core/Src/main.c **** {
1614:Core/Src/main.c **** 
1615:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
1616:Core/Src/main.c **** 
1617:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
1618:Core/Src/main.c **** 
1619:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
1620:Core/Src/main.c **** 
1621:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
1622:Core/Src/main.c ****   htim14.Instance = TIM14;
1623:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
1624:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
1625:Core/Src/main.c ****   htim14.Init.Period = 65535;
1626:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1627:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1628:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
1629:Core/Src/main.c ****   {
1630:Core/Src/main.c ****     Error_Handler();
1631:Core/Src/main.c ****   }
1632:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
1633:Core/Src/main.c **** 
1634:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
1635:Core/Src/main.c **** 
1636:Core/Src/main.c **** }
1637:Core/Src/main.c **** 
1638:Core/Src/main.c **** /**
1639:Core/Src/main.c ****   * @brief UART4 Initialization Function
1640:Core/Src/main.c ****   * @param None
ARM GAS  /tmp/ccEqzQ6F.s 			page 31


1641:Core/Src/main.c ****   * @retval None
1642:Core/Src/main.c ****   */
1643:Core/Src/main.c **** static void MX_UART4_Init(void)
1644:Core/Src/main.c **** {
1645:Core/Src/main.c **** 
1646:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
1647:Core/Src/main.c **** 
1648:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
1649:Core/Src/main.c **** 
1650:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
1651:Core/Src/main.c **** 
1652:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
1653:Core/Src/main.c ****   huart4.Instance = UART4;
1654:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
1655:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
1656:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
1657:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
1658:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
1659:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1660:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
1661:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1662:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1663:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1664:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
1665:Core/Src/main.c ****   {
1666:Core/Src/main.c ****     Error_Handler();
1667:Core/Src/main.c ****   }
1668:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1669:Core/Src/main.c ****   {
1670:Core/Src/main.c ****     Error_Handler();
1671:Core/Src/main.c ****   }
1672:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1673:Core/Src/main.c ****   {
1674:Core/Src/main.c ****     Error_Handler();
1675:Core/Src/main.c ****   }
1676:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
1677:Core/Src/main.c ****   {
1678:Core/Src/main.c ****     Error_Handler();
1679:Core/Src/main.c ****   }
1680:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
1681:Core/Src/main.c **** 
1682:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
1683:Core/Src/main.c **** 
1684:Core/Src/main.c **** }
1685:Core/Src/main.c **** 
1686:Core/Src/main.c **** /**
1687:Core/Src/main.c ****   * @brief USART6 Initialization Function
1688:Core/Src/main.c ****   * @param None
1689:Core/Src/main.c ****   * @retval None
1690:Core/Src/main.c ****   */
1691:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
1692:Core/Src/main.c **** {
1693:Core/Src/main.c **** 
1694:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
1695:Core/Src/main.c **** 
1696:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
1697:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 32


1698:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
1699:Core/Src/main.c **** 
1700:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
1701:Core/Src/main.c ****   huart6.Instance = USART6;
1702:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
1703:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
1704:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
1705:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
1706:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
1707:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1708:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
1709:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
1710:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
1711:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
1712:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
1713:Core/Src/main.c ****   {
1714:Core/Src/main.c ****     Error_Handler();
1715:Core/Src/main.c ****   }
1716:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart6, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
1717:Core/Src/main.c ****   {
1718:Core/Src/main.c ****     Error_Handler();
1719:Core/Src/main.c ****   }
1720:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart6, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
1721:Core/Src/main.c ****   {
1722:Core/Src/main.c ****     Error_Handler();
1723:Core/Src/main.c ****   }
1724:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart6) != HAL_OK)
1725:Core/Src/main.c ****   {
1726:Core/Src/main.c ****     Error_Handler();
1727:Core/Src/main.c ****   }
1728:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
1729:Core/Src/main.c **** 
1730:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
1731:Core/Src/main.c **** 
1732:Core/Src/main.c **** }
1733:Core/Src/main.c **** 
1734:Core/Src/main.c **** /**
1735:Core/Src/main.c ****   * Enable DMA controller clock
1736:Core/Src/main.c ****   */
1737:Core/Src/main.c **** static void MX_DMA_Init(void)
1738:Core/Src/main.c **** {
1739:Core/Src/main.c **** 
1740:Core/Src/main.c ****   /* DMA controller clock enable */
1741:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
1742:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
1743:Core/Src/main.c **** 
1744:Core/Src/main.c ****   /* DMA interrupt init */
1745:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
1746:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
1747:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
1748:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
1749:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
1750:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
1751:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
1752:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
1753:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
1754:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
ARM GAS  /tmp/ccEqzQ6F.s 			page 33


1755:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 0, 0);
1756:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
1757:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
1758:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
1759:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
1760:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
1761:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
1762:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
1763:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
1764:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 0, 0);
1765:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
1766:Core/Src/main.c **** 
1767:Core/Src/main.c **** }
1768:Core/Src/main.c **** 
1769:Core/Src/main.c **** /**
1770:Core/Src/main.c ****   * @brief GPIO Initialization Function
1771:Core/Src/main.c ****   * @param None
1772:Core/Src/main.c ****   * @retval None
1773:Core/Src/main.c ****   */
1774:Core/Src/main.c **** static void MX_GPIO_Init(void)
1775:Core/Src/main.c **** {
  74              		.loc 1 1775 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 48
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 36
  81              		.cfi_offset 4, -36
  82              		.cfi_offset 5, -32
  83              		.cfi_offset 6, -28
  84              		.cfi_offset 7, -24
  85              		.cfi_offset 8, -20
  86              		.cfi_offset 9, -16
  87              		.cfi_offset 10, -12
  88              		.cfi_offset 11, -8
  89              		.cfi_offset 14, -4
  90 0004 8DB0     		sub	sp, sp, #52
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 88
1776:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  93              		.loc 1 1776 3 view .LVU15
  94              		.loc 1 1776 20 is_stmt 0 view .LVU16
  95 0006 0024     		movs	r4, #0
  96 0008 0794     		str	r4, [sp, #28]
  97 000a 0894     		str	r4, [sp, #32]
  98 000c 0994     		str	r4, [sp, #36]
  99 000e 0A94     		str	r4, [sp, #40]
 100 0010 0B94     		str	r4, [sp, #44]
1777:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1778:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1779:Core/Src/main.c **** 
1780:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1781:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 101              		.loc 1 1781 3 is_stmt 1 view .LVU17
 102              	.LBB4:
 103              		.loc 1 1781 3 view .LVU18
ARM GAS  /tmp/ccEqzQ6F.s 			page 34


 104              		.loc 1 1781 3 view .LVU19
 105 0012 824B     		ldr	r3, .L6
 106 0014 D3F8E020 		ldr	r2, [r3, #224]
 107 0018 42F01002 		orr	r2, r2, #16
 108 001c C3F8E020 		str	r2, [r3, #224]
 109              		.loc 1 1781 3 view .LVU20
 110 0020 D3F8E020 		ldr	r2, [r3, #224]
 111 0024 02F01002 		and	r2, r2, #16
 112 0028 0092     		str	r2, [sp]
 113              		.loc 1 1781 3 view .LVU21
 114 002a 009A     		ldr	r2, [sp]
 115              	.LBE4:
 116              		.loc 1 1781 3 view .LVU22
1782:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 117              		.loc 1 1782 3 view .LVU23
 118              	.LBB5:
 119              		.loc 1 1782 3 view .LVU24
 120              		.loc 1 1782 3 view .LVU25
 121 002c D3F8E020 		ldr	r2, [r3, #224]
 122 0030 42F02002 		orr	r2, r2, #32
 123 0034 C3F8E020 		str	r2, [r3, #224]
 124              		.loc 1 1782 3 view .LVU26
 125 0038 D3F8E020 		ldr	r2, [r3, #224]
 126 003c 02F02002 		and	r2, r2, #32
 127 0040 0192     		str	r2, [sp, #4]
 128              		.loc 1 1782 3 view .LVU27
 129 0042 019A     		ldr	r2, [sp, #4]
 130              	.LBE5:
 131              		.loc 1 1782 3 view .LVU28
1783:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 132              		.loc 1 1783 3 view .LVU29
 133              	.LBB6:
 134              		.loc 1 1783 3 view .LVU30
 135              		.loc 1 1783 3 view .LVU31
 136 0044 D3F8E020 		ldr	r2, [r3, #224]
 137 0048 42F00402 		orr	r2, r2, #4
 138 004c C3F8E020 		str	r2, [r3, #224]
 139              		.loc 1 1783 3 view .LVU32
 140 0050 D3F8E020 		ldr	r2, [r3, #224]
 141 0054 02F00402 		and	r2, r2, #4
 142 0058 0292     		str	r2, [sp, #8]
 143              		.loc 1 1783 3 view .LVU33
 144 005a 029A     		ldr	r2, [sp, #8]
 145              	.LBE6:
 146              		.loc 1 1783 3 view .LVU34
1784:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 147              		.loc 1 1784 3 view .LVU35
 148              	.LBB7:
 149              		.loc 1 1784 3 view .LVU36
 150              		.loc 1 1784 3 view .LVU37
 151 005c D3F8E020 		ldr	r2, [r3, #224]
 152 0060 42F00102 		orr	r2, r2, #1
 153 0064 C3F8E020 		str	r2, [r3, #224]
 154              		.loc 1 1784 3 view .LVU38
 155 0068 D3F8E020 		ldr	r2, [r3, #224]
 156 006c 02F00102 		and	r2, r2, #1
 157 0070 0392     		str	r2, [sp, #12]
ARM GAS  /tmp/ccEqzQ6F.s 			page 35


 158              		.loc 1 1784 3 view .LVU39
 159 0072 039A     		ldr	r2, [sp, #12]
 160              	.LBE7:
 161              		.loc 1 1784 3 view .LVU40
1785:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 162              		.loc 1 1785 3 view .LVU41
 163              	.LBB8:
 164              		.loc 1 1785 3 view .LVU42
 165              		.loc 1 1785 3 view .LVU43
 166 0074 D3F8E020 		ldr	r2, [r3, #224]
 167 0078 42F00202 		orr	r2, r2, #2
 168 007c C3F8E020 		str	r2, [r3, #224]
 169              		.loc 1 1785 3 view .LVU44
 170 0080 D3F8E020 		ldr	r2, [r3, #224]
 171 0084 02F00202 		and	r2, r2, #2
 172 0088 0492     		str	r2, [sp, #16]
 173              		.loc 1 1785 3 view .LVU45
 174 008a 049A     		ldr	r2, [sp, #16]
 175              	.LBE8:
 176              		.loc 1 1785 3 view .LVU46
1786:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 177              		.loc 1 1786 3 view .LVU47
 178              	.LBB9:
 179              		.loc 1 1786 3 view .LVU48
 180              		.loc 1 1786 3 view .LVU49
 181 008c D3F8E020 		ldr	r2, [r3, #224]
 182 0090 42F04002 		orr	r2, r2, #64
 183 0094 C3F8E020 		str	r2, [r3, #224]
 184              		.loc 1 1786 3 view .LVU50
 185 0098 D3F8E020 		ldr	r2, [r3, #224]
 186 009c 02F04002 		and	r2, r2, #64
 187 00a0 0592     		str	r2, [sp, #20]
 188              		.loc 1 1786 3 view .LVU51
 189 00a2 059A     		ldr	r2, [sp, #20]
 190              	.LBE9:
 191              		.loc 1 1786 3 view .LVU52
1787:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 192              		.loc 1 1787 3 view .LVU53
 193              	.LBB10:
 194              		.loc 1 1787 3 view .LVU54
 195              		.loc 1 1787 3 view .LVU55
 196 00a4 D3F8E020 		ldr	r2, [r3, #224]
 197 00a8 42F00802 		orr	r2, r2, #8
 198 00ac C3F8E020 		str	r2, [r3, #224]
 199              		.loc 1 1787 3 view .LVU56
 200 00b0 D3F8E030 		ldr	r3, [r3, #224]
 201 00b4 03F00803 		and	r3, r3, #8
 202 00b8 0693     		str	r3, [sp, #24]
 203              		.loc 1 1787 3 view .LVU57
 204 00ba 069B     		ldr	r3, [sp, #24]
 205              	.LBE10:
 206              		.loc 1 1787 3 view .LVU58
1788:Core/Src/main.c **** 
1789:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1790:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin, GPIO_PIN_RESET);
 207              		.loc 1 1790 3 view .LVU59
 208 00bc DFF86C81 		ldr	r8, .L6+16
ARM GAS  /tmp/ccEqzQ6F.s 			page 36


 209 00c0 2246     		mov	r2, r4
 210 00c2 41F20451 		movw	r1, #5380
 211 00c6 4046     		mov	r0, r8
 212 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 213              	.LVL0:
1791:Core/Src/main.c **** 
1792:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1793:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ARM1_Pin|GPIO_PIN_15, GPIO_PIN_RESET);
 214              		.loc 1 1793 3 view .LVU60
 215 00cc 544F     		ldr	r7, .L6+4
 216 00ce 2246     		mov	r2, r4
 217 00d0 48F20201 		movw	r1, #32770
 218 00d4 3846     		mov	r0, r7
 219 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL1:
1794:Core/Src/main.c **** 
1795:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1796:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
 221              		.loc 1 1796 3 view .LVU61
 222 00da DFF854B1 		ldr	fp, .L6+20
 223 00de 2246     		mov	r2, r4
 224 00e0 3021     		movs	r1, #48
 225 00e2 5846     		mov	r0, fp
 226 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227              	.LVL2:
1797:Core/Src/main.c **** 
1798:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1799:Core/Src/main.c ****   HAL_GPIO_WritePin(PYRO1_GPIO_Port, PYRO1_Pin, GPIO_PIN_RESET);
 228              		.loc 1 1799 3 view .LVU62
 229 00e8 DFF848A1 		ldr	r10, .L6+24
 230 00ec 2246     		mov	r2, r4
 231 00ee 0221     		movs	r1, #2
 232 00f0 5046     		mov	r0, r10
 233 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL3:
1800:Core/Src/main.c **** 
1801:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1802:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, PYRO2_Pin|PYRO3_Pin|PYRO4_Pin, GPIO_PIN_RESET);
 235              		.loc 1 1802 3 view .LVU63
 236 00f6 DFF84091 		ldr	r9, .L6+28
 237 00fa 2246     		mov	r2, r4
 238 00fc 4FF42841 		mov	r1, #43008
 239 0100 4846     		mov	r0, r9
 240 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 241              	.LVL4:
1803:Core/Src/main.c **** 
1804:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1805:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3, GPIO_PIN_RESET);
 242              		.loc 1 1805 3 view .LVU64
 243 0106 474E     		ldr	r6, .L6+8
 244 0108 2246     		mov	r2, r4
 245 010a 0E21     		movs	r1, #14
 246 010c 3046     		mov	r0, r6
 247 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 248              	.LVL5:
1806:Core/Src/main.c **** 
1807:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccEqzQ6F.s 			page 37


1808:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0, GPIO_PIN_RESET);
 249              		.loc 1 1808 3 view .LVU65
 250 0112 2246     		mov	r2, r4
 251 0114 40F20131 		movw	r1, #769
 252 0118 4348     		ldr	r0, .L6+12
 253 011a FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL6:
1809:Core/Src/main.c **** 
1810:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PYRO6_Pin PYRO7_Pin PYRO8_Pin */
1811:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|PYRO6_Pin|PYRO7_Pin|PYRO8_Pin;
 255              		.loc 1 1811 3 view .LVU66
 256              		.loc 1 1811 23 is_stmt 0 view .LVU67
 257 011e 41F20453 		movw	r3, #5380
 258 0122 0793     		str	r3, [sp, #28]
1812:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 259              		.loc 1 1812 3 is_stmt 1 view .LVU68
 260              		.loc 1 1812 24 is_stmt 0 view .LVU69
 261 0124 0125     		movs	r5, #1
 262 0126 0895     		str	r5, [sp, #32]
1813:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 263              		.loc 1 1813 3 is_stmt 1 view .LVU70
 264              		.loc 1 1813 24 is_stmt 0 view .LVU71
 265 0128 0994     		str	r4, [sp, #36]
1814:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 266              		.loc 1 1814 3 is_stmt 1 view .LVU72
 267              		.loc 1 1814 25 is_stmt 0 view .LVU73
 268 012a 0A94     		str	r4, [sp, #40]
1815:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 269              		.loc 1 1815 3 is_stmt 1 view .LVU74
 270 012c 07A9     		add	r1, sp, #28
 271 012e 4046     		mov	r0, r8
 272 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 273              	.LVL7:
1816:Core/Src/main.c **** 
1817:Core/Src/main.c ****   /*Configure GPIO pins : ARM1_Pin PA15 */
1818:Core/Src/main.c ****   GPIO_InitStruct.Pin = ARM1_Pin|GPIO_PIN_15;
 274              		.loc 1 1818 3 view .LVU75
 275              		.loc 1 1818 23 is_stmt 0 view .LVU76
 276 0134 48F20203 		movw	r3, #32770
 277 0138 0793     		str	r3, [sp, #28]
1819:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 278              		.loc 1 1819 3 is_stmt 1 view .LVU77
 279              		.loc 1 1819 24 is_stmt 0 view .LVU78
 280 013a 0895     		str	r5, [sp, #32]
1820:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 281              		.loc 1 1820 3 is_stmt 1 view .LVU79
 282              		.loc 1 1820 24 is_stmt 0 view .LVU80
 283 013c 0994     		str	r4, [sp, #36]
1821:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 284              		.loc 1 1821 3 is_stmt 1 view .LVU81
 285              		.loc 1 1821 25 is_stmt 0 view .LVU82
 286 013e 0A94     		str	r4, [sp, #40]
1822:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 287              		.loc 1 1822 3 is_stmt 1 view .LVU83
 288 0140 07A9     		add	r1, sp, #28
 289 0142 3846     		mov	r0, r7
 290 0144 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccEqzQ6F.s 			page 38


 291              	.LVL8:
1823:Core/Src/main.c **** 
1824:Core/Src/main.c ****   /*Configure GPIO pins : PC4 PC5 */
1825:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 292              		.loc 1 1825 3 view .LVU84
 293              		.loc 1 1825 23 is_stmt 0 view .LVU85
 294 0148 3023     		movs	r3, #48
 295 014a 0793     		str	r3, [sp, #28]
1826:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 296              		.loc 1 1826 3 is_stmt 1 view .LVU86
 297              		.loc 1 1826 24 is_stmt 0 view .LVU87
 298 014c 0895     		str	r5, [sp, #32]
1827:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 299              		.loc 1 1827 3 is_stmt 1 view .LVU88
 300              		.loc 1 1827 24 is_stmt 0 view .LVU89
 301 014e 0994     		str	r4, [sp, #36]
1828:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 302              		.loc 1 1828 3 is_stmt 1 view .LVU90
 303              		.loc 1 1828 25 is_stmt 0 view .LVU91
 304 0150 0A94     		str	r4, [sp, #40]
1829:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 305              		.loc 1 1829 3 is_stmt 1 view .LVU92
 306 0152 07A9     		add	r1, sp, #28
 307 0154 5846     		mov	r0, fp
 308 0156 FFF7FEFF 		bl	HAL_GPIO_Init
 309              	.LVL9:
1830:Core/Src/main.c **** 
1831:Core/Src/main.c ****   /*Configure GPIO pin : PYRO1_Pin */
1832:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO1_Pin;
 310              		.loc 1 1832 3 view .LVU93
 311              		.loc 1 1832 23 is_stmt 0 view .LVU94
 312 015a 4FF0020B 		mov	fp, #2
 313 015e CDF81CB0 		str	fp, [sp, #28]
1833:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 314              		.loc 1 1833 3 is_stmt 1 view .LVU95
 315              		.loc 1 1833 24 is_stmt 0 view .LVU96
 316 0162 0895     		str	r5, [sp, #32]
1834:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 317              		.loc 1 1834 3 is_stmt 1 view .LVU97
 318              		.loc 1 1834 24 is_stmt 0 view .LVU98
 319 0164 0994     		str	r4, [sp, #36]
1835:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 320              		.loc 1 1835 3 is_stmt 1 view .LVU99
 321              		.loc 1 1835 25 is_stmt 0 view .LVU100
 322 0166 0A94     		str	r4, [sp, #40]
1836:Core/Src/main.c ****   HAL_GPIO_Init(PYRO1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 1836 3 is_stmt 1 view .LVU101
 324 0168 07A9     		add	r1, sp, #28
 325 016a 5046     		mov	r0, r10
 326 016c FFF7FEFF 		bl	HAL_GPIO_Init
 327              	.LVL10:
1837:Core/Src/main.c **** 
1838:Core/Src/main.c ****   /*Configure GPIO pin : CONT1_Pin */
1839:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT1_Pin;
 328              		.loc 1 1839 3 view .LVU102
 329              		.loc 1 1839 23 is_stmt 0 view .LVU103
 330 0170 0423     		movs	r3, #4
ARM GAS  /tmp/ccEqzQ6F.s 			page 39


 331 0172 0793     		str	r3, [sp, #28]
1840:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 332              		.loc 1 1840 3 is_stmt 1 view .LVU104
 333              		.loc 1 1840 24 is_stmt 0 view .LVU105
 334 0174 0894     		str	r4, [sp, #32]
1841:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 335              		.loc 1 1841 3 is_stmt 1 view .LVU106
 336              		.loc 1 1841 24 is_stmt 0 view .LVU107
 337 0176 0995     		str	r5, [sp, #36]
1842:Core/Src/main.c ****   HAL_GPIO_Init(CONT1_GPIO_Port, &GPIO_InitStruct);
 338              		.loc 1 1842 3 is_stmt 1 view .LVU108
 339 0178 07A9     		add	r1, sp, #28
 340 017a 5046     		mov	r0, r10
 341 017c FFF7FEFF 		bl	HAL_GPIO_Init
 342              	.LVL11:
1843:Core/Src/main.c **** 
1844:Core/Src/main.c ****   /*Configure GPIO pins : PYRO2_Pin PYRO3_Pin PYRO4_Pin */
1845:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO2_Pin|PYRO3_Pin|PYRO4_Pin;
 343              		.loc 1 1845 3 view .LVU109
 344              		.loc 1 1845 23 is_stmt 0 view .LVU110
 345 0180 4FF42843 		mov	r3, #43008
 346 0184 0793     		str	r3, [sp, #28]
1846:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 347              		.loc 1 1846 3 is_stmt 1 view .LVU111
 348              		.loc 1 1846 24 is_stmt 0 view .LVU112
 349 0186 0895     		str	r5, [sp, #32]
1847:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 350              		.loc 1 1847 3 is_stmt 1 view .LVU113
 351              		.loc 1 1847 24 is_stmt 0 view .LVU114
 352 0188 0994     		str	r4, [sp, #36]
1848:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 353              		.loc 1 1848 3 is_stmt 1 view .LVU115
 354              		.loc 1 1848 25 is_stmt 0 view .LVU116
 355 018a 0A94     		str	r4, [sp, #40]
1849:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 356              		.loc 1 1849 3 is_stmt 1 view .LVU117
 357 018c 07A9     		add	r1, sp, #28
 358 018e 4846     		mov	r0, r9
 359 0190 FFF7FEFF 		bl	HAL_GPIO_Init
 360              	.LVL12:
1850:Core/Src/main.c **** 
1851:Core/Src/main.c ****   /*Configure GPIO pins : CONT2_Pin CONT3_Pin */
1852:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT2_Pin|CONT3_Pin;
 361              		.loc 1 1852 3 view .LVU118
 362              		.loc 1 1852 23 is_stmt 0 view .LVU119
 363 0194 4FF4A043 		mov	r3, #20480
 364 0198 0793     		str	r3, [sp, #28]
1853:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 365              		.loc 1 1853 3 is_stmt 1 view .LVU120
 366              		.loc 1 1853 24 is_stmt 0 view .LVU121
 367 019a 0894     		str	r4, [sp, #32]
1854:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 368              		.loc 1 1854 3 is_stmt 1 view .LVU122
 369              		.loc 1 1854 24 is_stmt 0 view .LVU123
 370 019c 0995     		str	r5, [sp, #36]
1855:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 371              		.loc 1 1855 3 is_stmt 1 view .LVU124
ARM GAS  /tmp/ccEqzQ6F.s 			page 40


 372 019e 07A9     		add	r1, sp, #28
 373 01a0 4846     		mov	r0, r9
 374 01a2 FFF7FEFF 		bl	HAL_GPIO_Init
 375              	.LVL13:
1856:Core/Src/main.c **** 
1857:Core/Src/main.c ****   /*Configure GPIO pin : CONT4_Pin */
1858:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT4_Pin;
 376              		.loc 1 1858 3 view .LVU125
 377              		.loc 1 1858 23 is_stmt 0 view .LVU126
 378 01a6 0795     		str	r5, [sp, #28]
1859:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 379              		.loc 1 1859 3 is_stmt 1 view .LVU127
 380              		.loc 1 1859 24 is_stmt 0 view .LVU128
 381 01a8 0894     		str	r4, [sp, #32]
1860:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 382              		.loc 1 1860 3 is_stmt 1 view .LVU129
 383              		.loc 1 1860 24 is_stmt 0 view .LVU130
 384 01aa 0995     		str	r5, [sp, #36]
1861:Core/Src/main.c ****   HAL_GPIO_Init(CONT4_GPIO_Port, &GPIO_InitStruct);
 385              		.loc 1 1861 3 is_stmt 1 view .LVU131
 386 01ac 07A9     		add	r1, sp, #28
 387 01ae 3046     		mov	r0, r6
 388 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 389              	.LVL14:
1862:Core/Src/main.c **** 
1863:Core/Src/main.c ****   /*Configure GPIO pins : PYRO5_Pin PG2 PG3 */
1864:Core/Src/main.c ****   GPIO_InitStruct.Pin = PYRO5_Pin|GPIO_PIN_2|GPIO_PIN_3;
 390              		.loc 1 1864 3 view .LVU132
 391              		.loc 1 1864 23 is_stmt 0 view .LVU133
 392 01b4 0E23     		movs	r3, #14
 393 01b6 0793     		str	r3, [sp, #28]
1865:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 394              		.loc 1 1865 3 is_stmt 1 view .LVU134
 395              		.loc 1 1865 24 is_stmt 0 view .LVU135
 396 01b8 0895     		str	r5, [sp, #32]
1866:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 397              		.loc 1 1866 3 is_stmt 1 view .LVU136
 398              		.loc 1 1866 24 is_stmt 0 view .LVU137
 399 01ba 0994     		str	r4, [sp, #36]
1867:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 400              		.loc 1 1867 3 is_stmt 1 view .LVU138
 401              		.loc 1 1867 25 is_stmt 0 view .LVU139
 402 01bc 0A94     		str	r4, [sp, #40]
1868:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 403              		.loc 1 1868 3 is_stmt 1 view .LVU140
 404 01be 07A9     		add	r1, sp, #28
 405 01c0 3046     		mov	r0, r6
 406 01c2 FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL15:
1869:Core/Src/main.c **** 
1870:Core/Src/main.c ****   /*Configure GPIO pins : CONT5_Pin CONT6_Pin CONT7_Pin CONT8_Pin */
1871:Core/Src/main.c ****   GPIO_InitStruct.Pin = CONT5_Pin|CONT6_Pin|CONT7_Pin|CONT8_Pin;
 408              		.loc 1 1871 3 view .LVU141
 409              		.loc 1 1871 23 is_stmt 0 view .LVU142
 410 01c6 4FF42A53 		mov	r3, #10880
 411 01ca 0793     		str	r3, [sp, #28]
1872:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  /tmp/ccEqzQ6F.s 			page 41


 412              		.loc 1 1872 3 is_stmt 1 view .LVU143
 413              		.loc 1 1872 24 is_stmt 0 view .LVU144
 414 01cc 0894     		str	r4, [sp, #32]
1873:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 415              		.loc 1 1873 3 is_stmt 1 view .LVU145
 416              		.loc 1 1873 24 is_stmt 0 view .LVU146
 417 01ce 0995     		str	r5, [sp, #36]
1874:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 418              		.loc 1 1874 3 is_stmt 1 view .LVU147
 419 01d0 07A9     		add	r1, sp, #28
 420 01d2 4046     		mov	r0, r8
 421 01d4 FFF7FEFF 		bl	HAL_GPIO_Init
 422              	.LVL16:
1875:Core/Src/main.c **** 
1876:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD0 */
1877:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_0;
 423              		.loc 1 1877 3 view .LVU148
 424              		.loc 1 1877 23 is_stmt 0 view .LVU149
 425 01d8 40F20133 		movw	r3, #769
 426 01dc 0793     		str	r3, [sp, #28]
1878:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 427              		.loc 1 1878 3 is_stmt 1 view .LVU150
 428              		.loc 1 1878 24 is_stmt 0 view .LVU151
 429 01de 0895     		str	r5, [sp, #32]
1879:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 430              		.loc 1 1879 3 is_stmt 1 view .LVU152
 431              		.loc 1 1879 24 is_stmt 0 view .LVU153
 432 01e0 0994     		str	r4, [sp, #36]
1880:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 433              		.loc 1 1880 3 is_stmt 1 view .LVU154
 434              		.loc 1 1880 25 is_stmt 0 view .LVU155
 435 01e2 0A94     		str	r4, [sp, #40]
1881:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 436              		.loc 1 1881 3 is_stmt 1 view .LVU156
 437 01e4 07A9     		add	r1, sp, #28
 438 01e6 1048     		ldr	r0, .L6+12
 439 01e8 FFF7FEFF 		bl	HAL_GPIO_Init
 440              	.LVL17:
1882:Core/Src/main.c **** 
1883:Core/Src/main.c ****   /*Configure GPIO pin : Servo_ARM_CHECK_Pin */
1884:Core/Src/main.c ****   GPIO_InitStruct.Pin = Servo_ARM_CHECK_Pin;
 441              		.loc 1 1884 3 view .LVU157
 442              		.loc 1 1884 23 is_stmt 0 view .LVU158
 443 01ec 1023     		movs	r3, #16
 444 01ee 0793     		str	r3, [sp, #28]
1885:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 445              		.loc 1 1885 3 is_stmt 1 view .LVU159
 446              		.loc 1 1885 24 is_stmt 0 view .LVU160
 447 01f0 0894     		str	r4, [sp, #32]
1886:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 448              		.loc 1 1886 3 is_stmt 1 view .LVU161
 449              		.loc 1 1886 24 is_stmt 0 view .LVU162
 450 01f2 0994     		str	r4, [sp, #36]
1887:Core/Src/main.c ****   HAL_GPIO_Init(Servo_ARM_CHECK_GPIO_Port, &GPIO_InitStruct);
 451              		.loc 1 1887 3 is_stmt 1 view .LVU163
 452 01f4 07A9     		add	r1, sp, #28
 453 01f6 3046     		mov	r0, r6
ARM GAS  /tmp/ccEqzQ6F.s 			page 42


 454 01f8 FFF7FEFF 		bl	HAL_GPIO_Init
 455              	.LVL18:
1888:Core/Src/main.c **** 
1889:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
1890:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 456              		.loc 1 1890 3 view .LVU164
 457              		.loc 1 1890 23 is_stmt 0 view .LVU165
 458 01fc 4FF48073 		mov	r3, #256
 459 0200 0793     		str	r3, [sp, #28]
1891:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 460              		.loc 1 1891 3 is_stmt 1 view .LVU166
 461              		.loc 1 1891 24 is_stmt 0 view .LVU167
 462 0202 CDF820B0 		str	fp, [sp, #32]
1892:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 463              		.loc 1 1892 3 is_stmt 1 view .LVU168
 464              		.loc 1 1892 24 is_stmt 0 view .LVU169
 465 0206 0994     		str	r4, [sp, #36]
1893:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 466              		.loc 1 1893 3 is_stmt 1 view .LVU170
 467              		.loc 1 1893 25 is_stmt 0 view .LVU171
 468 0208 0A94     		str	r4, [sp, #40]
1894:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 469              		.loc 1 1894 3 is_stmt 1 view .LVU172
 470              		.loc 1 1894 29 is_stmt 0 view .LVU173
 471 020a 0B94     		str	r4, [sp, #44]
1895:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 472              		.loc 1 1895 3 is_stmt 1 view .LVU174
 473 020c 07A9     		add	r1, sp, #28
 474 020e 3846     		mov	r0, r7
 475 0210 FFF7FEFF 		bl	HAL_GPIO_Init
 476              	.LVL19:
1896:Core/Src/main.c **** 
1897:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1898:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1899:Core/Src/main.c **** }
 477              		.loc 1 1899 1 is_stmt 0 view .LVU175
 478 0214 0DB0     		add	sp, sp, #52
 479              	.LCFI2:
 480              		.cfi_def_cfa_offset 36
 481              		@ sp needed
 482 0216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 483              	.L7:
 484 021a 00BF     		.align	2
 485              	.L6:
 486 021c 00440258 		.word	1476543488
 487 0220 00000258 		.word	1476526080
 488 0224 00180258 		.word	1476532224
 489 0228 000C0258 		.word	1476529152
 490 022c 00100258 		.word	1476530176
 491 0230 00080258 		.word	1476528128
 492 0234 00040258 		.word	1476527104
 493 0238 00140258 		.word	1476531200
 494              		.cfi_endproc
 495              	.LFE382:
 497              		.section	.text.MX_DMA_Init,"ax",%progbits
 498              		.align	1
 499              		.syntax unified
ARM GAS  /tmp/ccEqzQ6F.s 			page 43


 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv5-d16
 504              	MX_DMA_Init:
 505              	.LFB381:
1738:Core/Src/main.c **** 
 506              		.loc 1 1738 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 00B5     		push	{lr}
 511              	.LCFI3:
 512              		.cfi_def_cfa_offset 4
 513              		.cfi_offset 14, -4
 514 0002 83B0     		sub	sp, sp, #12
 515              	.LCFI4:
 516              		.cfi_def_cfa_offset 16
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 517              		.loc 1 1741 3 view .LVU177
 518              	.LBB11:
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 519              		.loc 1 1741 3 view .LVU178
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 520              		.loc 1 1741 3 view .LVU179
 521 0004 294B     		ldr	r3, .L10
 522 0006 D3F8D820 		ldr	r2, [r3, #216]
 523 000a 42F00102 		orr	r2, r2, #1
 524 000e C3F8D820 		str	r2, [r3, #216]
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 525              		.loc 1 1741 3 view .LVU180
 526 0012 D3F8D820 		ldr	r2, [r3, #216]
 527 0016 02F00102 		and	r2, r2, #1
 528 001a 0092     		str	r2, [sp]
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 529              		.loc 1 1741 3 view .LVU181
 530 001c 009A     		ldr	r2, [sp]
 531              	.LBE11:
1741:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 532              		.loc 1 1741 3 view .LVU182
1742:Core/Src/main.c **** 
 533              		.loc 1 1742 3 view .LVU183
 534              	.LBB12:
1742:Core/Src/main.c **** 
 535              		.loc 1 1742 3 view .LVU184
1742:Core/Src/main.c **** 
 536              		.loc 1 1742 3 view .LVU185
 537 001e D3F8D820 		ldr	r2, [r3, #216]
 538 0022 42F00202 		orr	r2, r2, #2
 539 0026 C3F8D820 		str	r2, [r3, #216]
1742:Core/Src/main.c **** 
 540              		.loc 1 1742 3 view .LVU186
 541 002a D3F8D830 		ldr	r3, [r3, #216]
 542 002e 03F00203 		and	r3, r3, #2
 543 0032 0193     		str	r3, [sp, #4]
1742:Core/Src/main.c **** 
 544              		.loc 1 1742 3 view .LVU187
 545 0034 019B     		ldr	r3, [sp, #4]
ARM GAS  /tmp/ccEqzQ6F.s 			page 44


 546              	.LBE12:
1742:Core/Src/main.c **** 
 547              		.loc 1 1742 3 view .LVU188
1746:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 548              		.loc 1 1746 3 view .LVU189
 549 0036 0022     		movs	r2, #0
 550 0038 1146     		mov	r1, r2
 551 003a 0B20     		movs	r0, #11
 552 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 553              	.LVL20:
1747:Core/Src/main.c ****   /* DMA1_Stream1_IRQn interrupt configuration */
 554              		.loc 1 1747 3 view .LVU190
 555 0040 0B20     		movs	r0, #11
 556 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 557              	.LVL21:
1749:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 558              		.loc 1 1749 3 view .LVU191
 559 0046 0022     		movs	r2, #0
 560 0048 1146     		mov	r1, r2
 561 004a 0C20     		movs	r0, #12
 562 004c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 563              	.LVL22:
1750:Core/Src/main.c ****   /* DMA1_Stream2_IRQn interrupt configuration */
 564              		.loc 1 1750 3 view .LVU192
 565 0050 0C20     		movs	r0, #12
 566 0052 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 567              	.LVL23:
1752:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 568              		.loc 1 1752 3 view .LVU193
 569 0056 0022     		movs	r2, #0
 570 0058 1146     		mov	r1, r2
 571 005a 0D20     		movs	r0, #13
 572 005c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 573              	.LVL24:
1753:Core/Src/main.c ****   /* DMA1_Stream3_IRQn interrupt configuration */
 574              		.loc 1 1753 3 view .LVU194
 575 0060 0D20     		movs	r0, #13
 576 0062 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 577              	.LVL25:
1755:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
 578              		.loc 1 1755 3 view .LVU195
 579 0066 0022     		movs	r2, #0
 580 0068 1146     		mov	r1, r2
 581 006a 0E20     		movs	r0, #14
 582 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 583              	.LVL26:
1756:Core/Src/main.c ****   /* DMA1_Stream4_IRQn interrupt configuration */
 584              		.loc 1 1756 3 view .LVU196
 585 0070 0E20     		movs	r0, #14
 586 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 587              	.LVL27:
1758:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 588              		.loc 1 1758 3 view .LVU197
 589 0076 0022     		movs	r2, #0
 590 0078 1146     		mov	r1, r2
 591 007a 0F20     		movs	r0, #15
 592 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccEqzQ6F.s 			page 45


 593              	.LVL28:
1759:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 594              		.loc 1 1759 3 view .LVU198
 595 0080 0F20     		movs	r0, #15
 596 0082 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 597              	.LVL29:
1761:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 598              		.loc 1 1761 3 view .LVU199
 599 0086 0022     		movs	r2, #0
 600 0088 1146     		mov	r1, r2
 601 008a 1020     		movs	r0, #16
 602 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 603              	.LVL30:
1762:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 604              		.loc 1 1762 3 view .LVU200
 605 0090 1020     		movs	r0, #16
 606 0092 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 607              	.LVL31:
1764:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 608              		.loc 1 1764 3 view .LVU201
 609 0096 0022     		movs	r2, #0
 610 0098 1146     		mov	r1, r2
 611 009a 4620     		movs	r0, #70
 612 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 613              	.LVL32:
1765:Core/Src/main.c **** 
 614              		.loc 1 1765 3 view .LVU202
 615 00a0 4620     		movs	r0, #70
 616 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 617              	.LVL33:
1767:Core/Src/main.c **** 
 618              		.loc 1 1767 1 is_stmt 0 view .LVU203
 619 00a6 03B0     		add	sp, sp, #12
 620              	.LCFI5:
 621              		.cfi_def_cfa_offset 4
 622              		@ sp needed
 623 00a8 5DF804FB 		ldr	pc, [sp], #4
 624              	.L11:
 625              		.align	2
 626              	.L10:
 627 00ac 00440258 		.word	1476543488
 628              		.cfi_endproc
 629              	.LFE381:
 631              		.section	.rodata.disarm.str1.4,"aMS",%progbits,1
 632              		.align	2
 633              	.LC0:
 634 0000 41524D00 		.ascii	"ARM\000"
 635              		.align	2
 636              	.LC1:
 637 0004 44495341 		.ascii	"DISARMED\000"
 637      524D4544 
 637      00
 638              		.section	.text.disarm,"ax",%progbits
 639              		.align	1
 640              		.global	disarm
 641              		.syntax unified
 642              		.thumb
ARM GAS  /tmp/ccEqzQ6F.s 			page 46


 643              		.thumb_func
 644              		.fpu fpv5-d16
 646              	disarm:
 647              	.LVL34:
 648              	.LFB354:
 122:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 649              		.loc 1 122 25 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 122:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 0);
 653              		.loc 1 122 25 is_stmt 0 view .LVU205
 654 0000 38B5     		push	{r3, r4, r5, lr}
 655              	.LCFI6:
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 3, -16
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 0446     		mov	r4, r0
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 662              		.loc 1 123 2 is_stmt 1 view .LVU206
 663 0004 244D     		ldr	r5, .L14
 664 0006 0022     		movs	r2, #0
 665 0008 0221     		movs	r1, #2
 666 000a 2846     		mov	r0, r5
 667              	.LVL35:
 123:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 0);
 668              		.loc 1 123 2 is_stmt 0 view .LVU207
 669 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 670              	.LVL36:
 124:Core/Src/main.c **** 
 671              		.loc 1 124 2 is_stmt 1 view .LVU208
 672 0010 0022     		movs	r2, #0
 673 0012 0421     		movs	r1, #4
 674 0014 2846     		mov	r0, r5
 675 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 676              	.LVL37:
 126:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO2_GPIO_Port, PYRO2_Pin, 0);
 677              		.loc 1 126 2 view .LVU209
 678 001a 0022     		movs	r2, #0
 679 001c 0221     		movs	r1, #2
 680 001e 1F48     		ldr	r0, .L14+4
 681 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 682              	.LVL38:
 127:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO3_GPIO_Port, PYRO3_Pin, 0);
 683              		.loc 1 127 2 view .LVU210
 684 0024 05F5A055 		add	r5, r5, #5120
 685 0028 0022     		movs	r2, #0
 686 002a 4FF40061 		mov	r1, #2048
 687 002e 2846     		mov	r0, r5
 688 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689              	.LVL39:
 128:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO4_GPIO_Port, PYRO4_Pin, 0);
 690              		.loc 1 128 2 view .LVU211
 691 0034 0022     		movs	r2, #0
 692 0036 4FF40051 		mov	r1, #8192
ARM GAS  /tmp/ccEqzQ6F.s 			page 47


 693 003a 2846     		mov	r0, r5
 694 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 695              	.LVL40:
 129:Core/Src/main.c **** 
 696              		.loc 1 129 2 view .LVU212
 697 0040 0022     		movs	r2, #0
 698 0042 4FF40041 		mov	r1, #32768
 699 0046 2846     		mov	r0, r5
 700 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 701              	.LVL41:
 131:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO6_GPIO_Port, PYRO6_Pin, 0);
 702              		.loc 1 131 2 view .LVU213
 703 004c 0022     		movs	r2, #0
 704 004e 0221     		movs	r1, #2
 705 0050 1348     		ldr	r0, .L14+8
 706 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 707              	.LVL42:
 132:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO7_GPIO_Port, PYRO7_Pin, 0);
 708              		.loc 1 132 2 view .LVU214
 709 0056 A5F58065 		sub	r5, r5, #1024
 710 005a 0022     		movs	r2, #0
 711 005c 4FF48071 		mov	r1, #256
 712 0060 2846     		mov	r0, r5
 713 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 714              	.LVL43:
 133:Core/Src/main.c **** 	HAL_GPIO_WritePin(PYRO8_GPIO_Port, PYRO8_Pin, 0);
 715              		.loc 1 133 2 view .LVU215
 716 0066 0022     		movs	r2, #0
 717 0068 4FF48061 		mov	r1, #1024
 718 006c 2846     		mov	r0, r5
 719 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 720              	.LVL44:
 134:Core/Src/main.c **** 
 721              		.loc 1 134 2 view .LVU216
 722 0072 0022     		movs	r2, #0
 723 0074 4FF48051 		mov	r1, #4096
 724 0078 2846     		mov	r0, r5
 725 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 726              	.LVL45:
 137:Core/Src/main.c **** 
 727              		.loc 1 137 2 view .LVU217
 728 007e 0221     		movs	r1, #2
 729 0080 0848     		ldr	r0, .L14+12
 730 0082 FFF7FEFF 		bl	setStatus
 731              	.LVL46:
 139:Core/Src/main.c **** 	return 0;
 732              		.loc 1 139 2 view .LVU218
 733 0086 084B     		ldr	r3, .L14+16
 734 0088 03CB     		ldmia	r3!, {r0, r1}
 735 008a 2060     		str	r0, [r4]	@ unaligned
 736 008c 6160     		str	r1, [r4, #4]	@ unaligned
 737 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 738 0090 2372     		strb	r3, [r4, #8]
 140:Core/Src/main.c **** }
 739              		.loc 1 140 2 view .LVU219
 141:Core/Src/main.c **** 
 740              		.loc 1 141 1 is_stmt 0 view .LVU220
ARM GAS  /tmp/ccEqzQ6F.s 			page 48


 741 0092 0020     		movs	r0, #0
 742 0094 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL47:
 744              	.L15:
 141:Core/Src/main.c **** 
 745              		.loc 1 141 1 view .LVU221
 746 0096 00BF     		.align	2
 747              	.L14:
 748 0098 00000258 		.word	1476526080
 749 009c 00040258 		.word	1476527104
 750 00a0 00180258 		.word	1476532224
 751 00a4 00000000 		.word	.LC0
 752 00a8 04000000 		.word	.LC1
 753              		.cfi_endproc
 754              	.LFE354:
 756              		.section	.rodata.arm.str1.4,"aMS",%progbits,1
 757              		.align	2
 758              	.LC2:
 759 0000 41524D45 		.ascii	"ARMED\000"
 759      4400
 760              		.section	.text.arm,"ax",%progbits
 761              		.align	1
 762              		.global	arm
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu fpv5-d16
 768              	arm:
 769              	.LVL48:
 770              	.LFB355:
 143:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 771              		.loc 1 143 22 is_stmt 1 view -0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM1_GPIO_Port, ARM1_Pin, 1);
 775              		.loc 1 143 22 is_stmt 0 view .LVU223
 776 0000 38B5     		push	{r3, r4, r5, lr}
 777              	.LCFI7:
 778              		.cfi_def_cfa_offset 16
 779              		.cfi_offset 3, -16
 780              		.cfi_offset 4, -12
 781              		.cfi_offset 5, -8
 782              		.cfi_offset 14, -4
 783 0002 0446     		mov	r4, r0
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 784              		.loc 1 144 2 is_stmt 1 view .LVU224
 785 0004 0A4D     		ldr	r5, .L18
 786 0006 0122     		movs	r2, #1
 787 0008 0221     		movs	r1, #2
 788 000a 2846     		mov	r0, r5
 789              	.LVL49:
 144:Core/Src/main.c **** 	HAL_GPIO_WritePin(ARM2_GPIO_Port, ARM2_Pin, 1);
 790              		.loc 1 144 2 is_stmt 0 view .LVU225
 791 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 792              	.LVL50:
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 49


 793              		.loc 1 145 2 is_stmt 1 view .LVU226
 794 0010 0122     		movs	r2, #1
 795 0012 0421     		movs	r1, #4
 796 0014 2846     		mov	r0, r5
 797 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 798              	.LVL51:
 147:Core/Src/main.c **** 
 799              		.loc 1 147 2 view .LVU227
 800 001a 064B     		ldr	r3, .L18+4
 801 001c 1868     		ldr	r0, [r3]
 802 001e 2060     		str	r0, [r4]	@ unaligned
 803 0020 9B88     		ldrh	r3, [r3, #4]	@ unaligned
 804 0022 A380     		strh	r3, [r4, #4]	@ unaligned
 149:Core/Src/main.c **** 	return 0;
 805              		.loc 1 149 2 view .LVU228
 806 0024 0021     		movs	r1, #0
 807 0026 0448     		ldr	r0, .L18+8
 808 0028 FFF7FEFF 		bl	setStatus
 809              	.LVL52:
 150:Core/Src/main.c **** }
 810              		.loc 1 150 2 view .LVU229
 151:Core/Src/main.c **** 
 811              		.loc 1 151 1 is_stmt 0 view .LVU230
 812 002c 0020     		movs	r0, #0
 813 002e 38BD     		pop	{r3, r4, r5, pc}
 814              	.LVL53:
 815              	.L19:
 151:Core/Src/main.c **** 
 816              		.loc 1 151 1 view .LVU231
 817              		.align	2
 818              	.L18:
 819 0030 00000258 		.word	1476526080
 820 0034 00000000 		.word	.LC2
 821 0038 00000000 		.word	.LC0
 822              		.cfi_endproc
 823              	.LFE355:
 825              		.section	.text.multiplyQuat,"ax",%progbits
 826              		.align	1
 827              		.global	multiplyQuat
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 831              		.fpu fpv5-d16
 833              	multiplyQuat:
 834              	.LVL54:
 835              	.LFB356:
 154:Core/Src/main.c **** 	float temp[4];
 836              		.loc 1 154 45 is_stmt 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 154:Core/Src/main.c **** 	float temp[4];
 841              		.loc 1 154 45 is_stmt 0 view .LVU233
 842 0000 2DED028B 		vpush.64	{d8}
 843              	.LCFI8:
 844              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccEqzQ6F.s 			page 50


 845              		.cfi_offset 80, -8
 846              		.cfi_offset 81, -4
 847 0004 84B0     		sub	sp, sp, #16
 848              	.LCFI9:
 849              		.cfi_def_cfa_offset 24
 155:Core/Src/main.c **** 	temp[0] = r[0] * s[0] - r[1] * s[1] - r[2] * s[2] - r[3] * s[3];
 850              		.loc 1 155 2 is_stmt 1 view .LVU234
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 851              		.loc 1 156 2 view .LVU235
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 852              		.loc 1 156 13 is_stmt 0 view .LVU236
 853 0006 90ED000B 		vldr.64	d0, [r0]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 854              		.loc 1 156 20 view .LVU237
 855 000a 91ED004B 		vldr.64	d4, [r1]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 856              		.loc 1 156 27 view .LVU238
 857 000e 90ED027B 		vldr.64	d7, [r0, #8]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 858              		.loc 1 156 34 view .LVU239
 859 0012 91ED022B 		vldr.64	d2, [r1, #8]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 860              		.loc 1 156 31 view .LVU240
 861 0016 27EE026B 		vmul.f64	d6, d7, d2
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 862              		.loc 1 156 24 view .LVU241
 863 001a 10EE046B 		vnmls.f64	d6, d0, d4
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 864              		.loc 1 156 41 view .LVU242
 865 001e 90ED043B 		vldr.64	d3, [r0, #16]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 866              		.loc 1 156 48 view .LVU243
 867 0022 91ED048B 		vldr.64	d8, [r1, #16]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 868              		.loc 1 156 38 view .LVU244
 869 0026 03EE486B 		vmls.f64	d6, d3, d8
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 870              		.loc 1 156 55 view .LVU245
 871 002a 90ED065B 		vldr.64	d5, [r0, #24]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 872              		.loc 1 156 62 view .LVU246
 873 002e 91ED061B 		vldr.64	d1, [r1, #24]
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 874              		.loc 1 156 52 view .LVU247
 875 0032 05EE416B 		vmls.f64	d6, d5, d1
 876 0036 B7EEC66B 		vcvt.f32.f64	s12, d6
 156:Core/Src/main.c **** 	temp[1] = r[0] * s[1] + r[1] * s[0] - r[2] * s[3] + r[3] * s[2];
 877              		.loc 1 156 10 view .LVU248
 878 003a 8DED006A 		vstr.32	s12, [sp]
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 879              		.loc 1 157 2 is_stmt 1 view .LVU249
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 880              		.loc 1 157 31 is_stmt 0 view .LVU250
 881 003e 24EE076B 		vmul.f64	d6, d4, d7
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 882              		.loc 1 157 24 view .LVU251
 883 0042 00EE026B 		vmla.f64	d6, d0, d2
ARM GAS  /tmp/ccEqzQ6F.s 			page 51


 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 884              		.loc 1 157 38 view .LVU252
 885 0046 03EE416B 		vmls.f64	d6, d3, d1
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 886              		.loc 1 157 52 view .LVU253
 887 004a 08EE056B 		vmla.f64	d6, d8, d5
 888 004e B7EEC66B 		vcvt.f32.f64	s12, d6
 157:Core/Src/main.c **** 	temp[2] = r[0] * s[2] + r[1] * s[3] + r[2] * s[0] - r[3] * s[1];
 889              		.loc 1 157 10 view .LVU254
 890 0052 8DED016A 		vstr.32	s12, [sp, #4]
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 891              		.loc 1 158 2 is_stmt 1 view .LVU255
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 892              		.loc 1 158 31 is_stmt 0 view .LVU256
 893 0056 27EE016B 		vmul.f64	d6, d7, d1
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 894              		.loc 1 158 24 view .LVU257
 895 005a 00EE086B 		vmla.f64	d6, d0, d8
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 896              		.loc 1 158 38 view .LVU258
 897 005e 04EE036B 		vmla.f64	d6, d4, d3
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 898              		.loc 1 158 52 view .LVU259
 899 0062 02EE456B 		vmls.f64	d6, d2, d5
 900 0066 B7EEC66B 		vcvt.f32.f64	s12, d6
 158:Core/Src/main.c **** 	temp[3] = r[0] * s[3] - r[1] * s[2] + r[2] * s[1] + r[3] * s[0];
 901              		.loc 1 158 10 view .LVU260
 902 006a 8DED026A 		vstr.32	s12, [sp, #8]
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 903              		.loc 1 159 2 is_stmt 1 view .LVU261
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 904              		.loc 1 159 31 is_stmt 0 view .LVU262
 905 006e 27EE087B 		vmul.f64	d7, d7, d8
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 906              		.loc 1 159 24 view .LVU263
 907 0072 10EE017B 		vnmls.f64	d7, d0, d1
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 908              		.loc 1 159 38 view .LVU264
 909 0076 02EE037B 		vmla.f64	d7, d2, d3
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 910              		.loc 1 159 52 view .LVU265
 911 007a 04EE057B 		vmla.f64	d7, d4, d5
 912 007e B7EEC77B 		vcvt.f32.f64	s14, d7
 159:Core/Src/main.c **** 	for (int i = 0; i < 4; i++) {
 913              		.loc 1 159 10 view .LVU266
 914 0082 8DED037A 		vstr.32	s14, [sp, #12]
 160:Core/Src/main.c **** 		x[i] = temp[i];
 915              		.loc 1 160 2 is_stmt 1 view .LVU267
 916              	.LBB13:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 917              		.loc 1 160 7 view .LVU268
 918              	.LVL55:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 919              		.loc 1 160 11 is_stmt 0 view .LVU269
 920 0086 0023     		movs	r3, #0
 160:Core/Src/main.c **** 		x[i] = temp[i];
 921              		.loc 1 160 2 view .LVU270
ARM GAS  /tmp/ccEqzQ6F.s 			page 52


 922 0088 0CE0     		b	.L21
 923              	.LVL56:
 924              	.L22:
 161:Core/Src/main.c **** 	}
 925              		.loc 1 161 3 is_stmt 1 discriminator 3 view .LVU271
 161:Core/Src/main.c **** 	}
 926              		.loc 1 161 14 is_stmt 0 discriminator 3 view .LVU272
 927 008a 04AA     		add	r2, sp, #16
 928 008c 02EB8302 		add	r2, r2, r3, lsl #2
 929 0090 12ED047A 		vldr.32	s14, [r2, #-16]
 930 0094 B7EEC77A 		vcvt.f64.f32	d7, s14
 161:Core/Src/main.c **** 	}
 931              		.loc 1 161 8 discriminator 3 view .LVU273
 932 0098 054A     		ldr	r2, .L24
 933 009a 02EBC302 		add	r2, r2, r3, lsl #3
 934 009e 82ED007B 		vstr.64	d7, [r2]
 160:Core/Src/main.c **** 		x[i] = temp[i];
 935              		.loc 1 160 25 is_stmt 1 discriminator 3 view .LVU274
 160:Core/Src/main.c **** 		x[i] = temp[i];
 936              		.loc 1 160 26 is_stmt 0 discriminator 3 view .LVU275
 937 00a2 0133     		adds	r3, r3, #1
 938              	.LVL57:
 939              	.L21:
 160:Core/Src/main.c **** 		x[i] = temp[i];
 940              		.loc 1 160 18 is_stmt 1 discriminator 1 view .LVU276
 160:Core/Src/main.c **** 		x[i] = temp[i];
 941              		.loc 1 160 2 is_stmt 0 discriminator 1 view .LVU277
 942 00a4 032B     		cmp	r3, #3
 943 00a6 F0DD     		ble	.L22
 944              	.LBE13:
 163:Core/Src/main.c **** 
 945              		.loc 1 163 1 view .LVU278
 946 00a8 04B0     		add	sp, sp, #16
 947              	.LCFI10:
 948              		.cfi_def_cfa_offset 8
 949              		@ sp needed
 950 00aa BDEC028B 		vldm	sp!, {d8}
 951              	.LCFI11:
 952              		.cfi_restore 80
 953              		.cfi_restore 81
 954              		.cfi_def_cfa_offset 0
 955 00ae 7047     		bx	lr
 956              	.L25:
 957              		.align	2
 958              	.L24:
 959 00b0 00000000 		.word	x
 960              		.cfi_endproc
 961              	.LFE356:
 963              		.section	.text.Baro2_Read_Register,"ax",%progbits
 964              		.align	1
 965              		.global	Baro2_Read_Register
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 969              		.fpu fpv5-d16
 971              	Baro2_Read_Register:
 972              	.LVL58:
ARM GAS  /tmp/ccEqzQ6F.s 			page 53


 973              	.LFB357:
 165:Core/Src/main.c **** 	uint8_t reg_value;
 974              		.loc 1 165 43 is_stmt 1 view -0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 16
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Core/Src/main.c **** 	uint8_t reg_value;
 978              		.loc 1 165 43 is_stmt 0 view .LVU280
 979 0000 30B5     		push	{r4, r5, lr}
 980              	.LCFI12:
 981              		.cfi_def_cfa_offset 12
 982              		.cfi_offset 4, -12
 983              		.cfi_offset 5, -8
 984              		.cfi_offset 14, -4
 985 0002 85B0     		sub	sp, sp, #20
 986              	.LCFI13:
 987              		.cfi_def_cfa_offset 32
 166:Core/Src/main.c **** 	addr |= (1 << 7);
 988              		.loc 1 166 2 is_stmt 1 view .LVU281
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 989              		.loc 1 167 2 view .LVU282
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 990              		.loc 1 167 7 is_stmt 0 view .LVU283
 991 0004 60F07F00 		orn	r0, r0, #127
 992              	.LVL59:
 167:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 993              		.loc 1 167 7 view .LVU284
 994 0008 8DF80700 		strb	r0, [sp, #7]
 168:Core/Src/main.c **** 
 995              		.loc 1 168 2 is_stmt 1 view .LVU285
 996 000c 0F4C     		ldr	r4, .L28
 997 000e 0022     		movs	r2, #0
 998 0010 4FF48061 		mov	r1, #1024
 999 0014 2046     		mov	r0, r4
 1000 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1001              	.LVL60:
 170:Core/Src/main.c **** 	HAL_SPI_Receive(&hspi2, &reg_value, 1, 100);
 1002              		.loc 1 170 2 view .LVU286
 1003 001a 0D4D     		ldr	r5, .L28+4
 1004 001c 6423     		movs	r3, #100
 1005 001e 0122     		movs	r2, #1
 1006 0020 0DF10701 		add	r1, sp, #7
 1007 0024 2846     		mov	r0, r5
 1008 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 1009              	.LVL61:
 171:Core/Src/main.c **** 
 1010              		.loc 1 171 2 view .LVU287
 1011 002a 6423     		movs	r3, #100
 1012 002c 0122     		movs	r2, #1
 1013 002e 0DF10F01 		add	r1, sp, #15
 1014 0032 2846     		mov	r0, r5
 1015 0034 FFF7FEFF 		bl	HAL_SPI_Receive
 1016              	.LVL62:
 173:Core/Src/main.c **** 
 1017              		.loc 1 173 2 view .LVU288
 1018 0038 0122     		movs	r2, #1
 1019 003a 4FF48061 		mov	r1, #1024
ARM GAS  /tmp/ccEqzQ6F.s 			page 54


 1020 003e 2046     		mov	r0, r4
 1021 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1022              	.LVL63:
 175:Core/Src/main.c **** }
 1023              		.loc 1 175 2 view .LVU289
 176:Core/Src/main.c **** 
 1024              		.loc 1 176 1 is_stmt 0 view .LVU290
 1025 0044 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 1026 0048 05B0     		add	sp, sp, #20
 1027              	.LCFI14:
 1028              		.cfi_def_cfa_offset 12
 1029              		@ sp needed
 1030 004a 30BD     		pop	{r4, r5, pc}
 1031              	.L29:
 1032              		.align	2
 1033              	.L28:
 1034 004c 000C0258 		.word	1476529152
 1035 0050 00000000 		.word	hspi2
 1036              		.cfi_endproc
 1037              	.LFE357:
 1039              		.section	.text.Baro2_Write_Register,"ax",%progbits
 1040              		.align	1
 1041              		.global	Baro2_Write_Register
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1045              		.fpu fpv5-d16
 1047              	Baro2_Write_Register:
 1048              	.LVL64:
 1049              	.LFB358:
 178:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 1050              		.loc 1 178 55 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 8
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 178:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 0);
 1054              		.loc 1 178 55 is_stmt 0 view .LVU292
 1055 0000 30B5     		push	{r4, r5, lr}
 1056              	.LCFI15:
 1057              		.cfi_def_cfa_offset 12
 1058              		.cfi_offset 4, -12
 1059              		.cfi_offset 5, -8
 1060              		.cfi_offset 14, -4
 1061 0002 83B0     		sub	sp, sp, #12
 1062              	.LCFI16:
 1063              		.cfi_def_cfa_offset 24
 1064 0004 8DF80700 		strb	r0, [sp, #7]
 1065 0008 8DF80610 		strb	r1, [sp, #6]
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1066              		.loc 1 179 2 is_stmt 1 view .LVU293
 1067 000c 0E4C     		ldr	r4, .L32
 1068 000e 0022     		movs	r2, #0
 1069 0010 4FF48061 		mov	r1, #1024
 1070              	.LVL65:
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1071              		.loc 1 179 2 is_stmt 0 view .LVU294
 1072 0014 2046     		mov	r0, r4
ARM GAS  /tmp/ccEqzQ6F.s 			page 55


 1073              	.LVL66:
 179:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &addr, 1, 100);
 1074              		.loc 1 179 2 view .LVU295
 1075 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1076              	.LVL67:
 180:Core/Src/main.c **** 	HAL_SPI_Transmit(&hspi2, &data, 1, 100);
 1077              		.loc 1 180 2 is_stmt 1 view .LVU296
 1078 001a 0C4D     		ldr	r5, .L32+4
 1079 001c 6423     		movs	r3, #100
 1080 001e 0122     		movs	r2, #1
 1081 0020 0DF10701 		add	r1, sp, #7
 1082 0024 2846     		mov	r0, r5
 1083 0026 FFF7FEFF 		bl	HAL_SPI_Transmit
 1084              	.LVL68:
 181:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_10, 1);
 1085              		.loc 1 181 2 view .LVU297
 1086 002a 6423     		movs	r3, #100
 1087 002c 0122     		movs	r2, #1
 1088 002e 0DF10601 		add	r1, sp, #6
 1089 0032 2846     		mov	r0, r5
 1090 0034 FFF7FEFF 		bl	HAL_SPI_Transmit
 1091              	.LVL69:
 182:Core/Src/main.c **** 
 1092              		.loc 1 182 2 view .LVU298
 1093 0038 0122     		movs	r2, #1
 1094 003a 4FF48061 		mov	r1, #1024
 1095 003e 2046     		mov	r0, r4
 1096 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1097              	.LVL70:
 184:Core/Src/main.c **** 
 1098              		.loc 1 184 1 is_stmt 0 view .LVU299
 1099 0044 03B0     		add	sp, sp, #12
 1100              	.LCFI17:
 1101              		.cfi_def_cfa_offset 12
 1102              		@ sp needed
 1103 0046 30BD     		pop	{r4, r5, pc}
 1104              	.L33:
 1105              		.align	2
 1106              	.L32:
 1107 0048 000C0258 		.word	1476529152
 1108 004c 00000000 		.word	hspi2
 1109              		.cfi_endproc
 1110              	.LFE358:
 1112              		.section	.text.Baro2_Configure,"ax",%progbits
 1113              		.align	1
 1114              		.global	Baro2_Configure
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu fpv5-d16
 1120              	Baro2_Configure:
 1121              	.LFB359:
 186:Core/Src/main.c **** 	int16_t cal_val = 0; //calibration value for soldering stresses, measured on 19/08/2024
 1122              		.loc 1 186 23 is_stmt 1 view -0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 0
 1125              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccEqzQ6F.s 			page 56


 1126 0000 08B5     		push	{r3, lr}
 1127              	.LCFI18:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 3, -8
 1130              		.cfi_offset 14, -4
 187:Core/Src/main.c **** 	int8_t cal_L = (int8_t)cal_val;
 1131              		.loc 1 187 2 view .LVU301
 1132              	.LVL71:
 188:Core/Src/main.c **** 	int8_t cal_H = (int8_t)(cal_val>>8);
 1133              		.loc 1 188 2 view .LVU302
 189:Core/Src/main.c **** 
 1134              		.loc 1 189 2 view .LVU303
 191:Core/Src/main.c **** 	Baro2_Write_Register(0x19, cal_H);
 1135              		.loc 1 191 2 view .LVU304
 1136 0002 0021     		movs	r1, #0
 1137 0004 1820     		movs	r0, #24
 1138 0006 FFF7FEFF 		bl	Baro2_Write_Register
 1139              	.LVL72:
 192:Core/Src/main.c **** 
 1140              		.loc 1 192 2 view .LVU305
 1141 000a 0021     		movs	r1, #0
 1142 000c 1920     		movs	r0, #25
 1143 000e FFF7FEFF 		bl	Baro2_Write_Register
 1144              	.LVL73:
 195:Core/Src/main.c **** 	Baro2_Write_Register(0x11, 0b00000010); //enables low noise mode
 1145              		.loc 1 195 2 view .LVU306
 1146 0012 4021     		movs	r1, #64
 1147 0014 1020     		movs	r0, #16
 1148 0016 FFF7FEFF 		bl	Baro2_Write_Register
 1149              	.LVL74:
 196:Core/Src/main.c **** }
 1150              		.loc 1 196 2 view .LVU307
 1151 001a 0221     		movs	r1, #2
 1152 001c 1120     		movs	r0, #17
 1153 001e FFF7FEFF 		bl	Baro2_Write_Register
 1154              	.LVL75:
 197:Core/Src/main.c **** 
 1155              		.loc 1 197 1 is_stmt 0 view .LVU308
 1156 0022 08BD     		pop	{r3, pc}
 1157              		.cfi_endproc
 1158              	.LFE359:
 1160              		.section	.text.Baro2_Get_Pressure,"ax",%progbits
 1161              		.align	1
 1162              		.global	Baro2_Get_Pressure
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1166              		.fpu fpv5-d16
 1168              	Baro2_Get_Pressure:
 1169              	.LFB360:
 199:Core/Src/main.c **** 	uint8_t BARO_L = Baro2_Read_Register(0x28);
 1170              		.loc 1 199 29 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174 0000 38B5     		push	{r3, r4, r5, lr}
 1175              	.LCFI19:
ARM GAS  /tmp/ccEqzQ6F.s 			page 57


 1176              		.cfi_def_cfa_offset 16
 1177              		.cfi_offset 3, -16
 1178              		.cfi_offset 4, -12
 1179              		.cfi_offset 5, -8
 1180              		.cfi_offset 14, -4
 200:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 1181              		.loc 1 200 2 view .LVU310
 200:Core/Src/main.c **** 	uint8_t BARO_M = Baro2_Read_Register(0x29);
 1182              		.loc 1 200 19 is_stmt 0 view .LVU311
 1183 0002 2820     		movs	r0, #40
 1184 0004 FFF7FEFF 		bl	Baro2_Read_Register
 1185              	.LVL76:
 1186 0008 0546     		mov	r5, r0
 1187              	.LVL77:
 201:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 1188              		.loc 1 201 2 is_stmt 1 view .LVU312
 201:Core/Src/main.c **** 	uint8_t BARO_H = Baro2_Read_Register(0x2A);
 1189              		.loc 1 201 19 is_stmt 0 view .LVU313
 1190 000a 2920     		movs	r0, #41
 1191 000c FFF7FEFF 		bl	Baro2_Read_Register
 1192              	.LVL78:
 1193 0010 0446     		mov	r4, r0
 1194              	.LVL79:
 202:Core/Src/main.c **** 
 1195              		.loc 1 202 2 is_stmt 1 view .LVU314
 202:Core/Src/main.c **** 
 1196              		.loc 1 202 19 is_stmt 0 view .LVU315
 1197 0012 2A20     		movs	r0, #42
 1198 0014 FFF7FEFF 		bl	Baro2_Read_Register
 1199              	.LVL80:
 204:Core/Src/main.c **** 	BARO = ((int32_t)BARO_H << 24) | ((int32_t)BARO_M << 16) | ((int32_t)BARO_L << 8);
 1200              		.loc 1 204 2 is_stmt 1 view .LVU316
 205:Core/Src/main.c **** 	return BARO;
 1201              		.loc 1 205 2 view .LVU317
 205:Core/Src/main.c **** 	return BARO;
 1202              		.loc 1 205 52 is_stmt 0 view .LVU318
 1203 0018 2404     		lsls	r4, r4, #16
 1204              	.LVL81:
 205:Core/Src/main.c **** 	return BARO;
 1205              		.loc 1 205 33 view .LVU319
 1206 001a 44EA0060 		orr	r0, r4, r0, lsl #24
 1207              	.LVL82:
 206:Core/Src/main.c **** 
 1208              		.loc 1 206 2 is_stmt 1 view .LVU320
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1209              		.loc 1 208 1 is_stmt 0 view .LVU321
 1210 001e 40EA0520 		orr	r0, r0, r5, lsl #8
 1211              	.LVL83:
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1212              		.loc 1 208 1 view .LVU322
 1213 0022 38BD     		pop	{r3, r4, r5, pc}
 208:Core/Src/main.c **** /* USER CODE END 0 */
 1214              		.loc 1 208 1 view .LVU323
 1215              		.cfi_endproc
 1216              	.LFE360:
 1218              		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 1219              		.align	1
ARM GAS  /tmp/ccEqzQ6F.s 			page 58


 1220              		.global	HAL_I2C_MasterRxCpltCallback
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv5-d16
 1226              	HAL_I2C_MasterRxCpltCallback:
 1227              	.LVL84:
 1228              	.LFB383:
1900:Core/Src/main.c **** 
1901:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1902:Core/Src/main.c **** 
1903:Core/Src/main.c **** void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c) {
 1229              		.loc 1 1903 60 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
1904:Core/Src/main.c **** //MAX_M10s_irq_handler(hi2c);
1905:Core/Src/main.c **** }
 1234              		.loc 1 1905 1 view .LVU325
 1235 0000 7047     		bx	lr
 1236              		.cfi_endproc
 1237              	.LFE383:
 1239              		.section	.rodata.HAL_ADC_ConvHalfCpltCallback.str1.4,"aMS",%progbits,1
 1240              		.align	2
 1241              	.LC3:
 1242 0000 610A00   		.ascii	"a\012\000"
 1243              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1244              		.align	1
 1245              		.global	HAL_ADC_ConvHalfCpltCallback
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1249              		.fpu fpv5-d16
 1251              	HAL_ADC_ConvHalfCpltCallback:
 1252              	.LVL85:
 1253              	.LFB384:
1906:Core/Src/main.c **** 
1907:Core/Src/main.c **** void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc) {
 1254              		.loc 1 1907 60 view -0
 1255              		.cfi_startproc
 1256              		@ args = 0, pretend = 0, frame = 104
 1257              		@ frame_needed = 0, uses_anonymous_args = 0
 1258              		.loc 1 1907 60 is_stmt 0 view .LVU327
 1259 0000 00B5     		push	{lr}
 1260              	.LCFI20:
 1261              		.cfi_def_cfa_offset 4
 1262              		.cfi_offset 14, -4
 1263 0002 9BB0     		sub	sp, sp, #108
 1264              	.LCFI21:
 1265              		.cfi_def_cfa_offset 112
1908:Core/Src/main.c **** DMA_data = read_Data;
 1266              		.loc 1 1908 1 is_stmt 1 view .LVU328
 1267              		.loc 1 1908 10 is_stmt 0 view .LVU329
 1268 0004 0A4B     		ldr	r3, .L41
 1269 0006 1A88     		ldrh	r2, [r3]
 1270 0008 0A4B     		ldr	r3, .L41+4
ARM GAS  /tmp/ccEqzQ6F.s 			page 59


 1271 000a 1A80     		strh	r2, [r3]	@ movhi
1909:Core/Src/main.c **** char data_gyro[100];
 1272              		.loc 1 1909 1 is_stmt 1 view .LVU330
1910:Core/Src/main.c **** sprintf(data_gyro, "a\n");
 1273              		.loc 1 1910 1 view .LVU331
 1274 000c 0A4B     		ldr	r3, .L41+8
 1275 000e 1B68     		ldr	r3, [r3]
 1276 0010 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1277 0014 1B0C     		lsrs	r3, r3, #16
 1278 0016 8DF80630 		strb	r3, [sp, #6]
1911:Core/Src/main.c **** CDC_Transmit_HS(data_gyro, strlen(data_gyro));
 1279              		.loc 1 1911 1 view .LVU332
 1280 001a 01A8     		add	r0, sp, #4
 1281              	.LVL86:
 1282              		.loc 1 1911 1 is_stmt 0 view .LVU333
 1283 001c FFF7FEFF 		bl	strlen
 1284              	.LVL87:
 1285 0020 0146     		mov	r1, r0
 1286 0022 01A8     		add	r0, sp, #4
 1287 0024 FFF7FEFF 		bl	CDC_Transmit_HS
 1288              	.LVL88:
1912:Core/Src/main.c **** }
 1289              		.loc 1 1912 1 view .LVU334
 1290 0028 1BB0     		add	sp, sp, #108
 1291              	.LCFI22:
 1292              		.cfi_def_cfa_offset 4
 1293              		@ sp needed
 1294 002a 5DF804FB 		ldr	pc, [sp], #4
 1295              	.L42:
 1296 002e 00BF     		.align	2
 1297              	.L41:
 1298 0030 00000000 		.word	read_Data
 1299 0034 00000000 		.word	DMA_data
 1300 0038 00000000 		.word	.LC3
 1301              		.cfi_endproc
 1302              	.LFE384:
 1304              		.section	.text.Error_Handler,"ax",%progbits
 1305              		.align	1
 1306              		.global	Error_Handler
 1307              		.syntax unified
 1308              		.thumb
 1309              		.thumb_func
 1310              		.fpu fpv5-d16
 1312              	Error_Handler:
 1313              	.LFB385:
1913:Core/Src/main.c **** /* USER CODE END 4 */
1914:Core/Src/main.c **** 
1915:Core/Src/main.c **** /**
1916:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1917:Core/Src/main.c ****   * @retval None
1918:Core/Src/main.c ****   */
1919:Core/Src/main.c **** void Error_Handler(void)
1920:Core/Src/main.c **** {
 1314              		.loc 1 1920 1 is_stmt 1 view -0
 1315              		.cfi_startproc
 1316              		@ Volatile: function does not return.
 1317              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEqzQ6F.s 			page 60


 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
1921:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1922:Core/Src/main.c **** /* User can add his own implementation to report the HAL error return state */
1923:Core/Src/main.c **** __disable_irq();
 1320              		.loc 1 1923 1 view .LVU336
 1321              	.LBB14:
 1322              	.LBI14:
 1323              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccEqzQ6F.s 			page 61


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccEqzQ6F.s 			page 62


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
ARM GAS  /tmp/ccEqzQ6F.s 			page 63


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1324              		.loc 2 207 27 view .LVU337
 1325              	.LBB15:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1326              		.loc 2 209 3 view .LVU338
 1327              		.syntax unified
 1328              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1329 0000 72B6     		cpsid i
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333              	.L44:
ARM GAS  /tmp/ccEqzQ6F.s 			page 64


 1334              	.LBE15:
 1335              	.LBE14:
1924:Core/Src/main.c **** while (1) {
 1336              		.loc 1 1924 1 discriminator 1 view .LVU339
1925:Core/Src/main.c **** }
 1337              		.loc 1 1925 1 discriminator 1 view .LVU340
1924:Core/Src/main.c **** while (1) {
 1338              		.loc 1 1924 7 discriminator 1 view .LVU341
 1339 0002 FEE7     		b	.L44
 1340              		.cfi_endproc
 1341              	.LFE385:
 1343              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1344              		.align	1
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1348              		.fpu fpv5-d16
 1350              	MX_SPI3_Init:
 1351              	.LFB372:
1322:Core/Src/main.c **** 
 1352              		.loc 1 1322 1 view -0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356 0000 08B5     		push	{r3, lr}
 1357              	.LCFI23:
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 3, -8
 1360              		.cfi_offset 14, -4
1332:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1361              		.loc 1 1332 3 view .LVU343
1332:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1362              		.loc 1 1332 18 is_stmt 0 view .LVU344
 1363 0002 1448     		ldr	r0, .L49
 1364 0004 144B     		ldr	r3, .L49+4
 1365 0006 0360     		str	r3, [r0]
1333:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1366              		.loc 1 1333 3 is_stmt 1 view .LVU345
1333:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1367              		.loc 1 1333 19 is_stmt 0 view .LVU346
 1368 0008 4FF48003 		mov	r3, #4194304
 1369 000c 4360     		str	r3, [r0, #4]
1334:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1370              		.loc 1 1334 3 is_stmt 1 view .LVU347
1334:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1371              		.loc 1 1334 24 is_stmt 0 view .LVU348
 1372 000e 0023     		movs	r3, #0
 1373 0010 8360     		str	r3, [r0, #8]
1335:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1374              		.loc 1 1335 3 is_stmt 1 view .LVU349
1335:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1375              		.loc 1 1335 23 is_stmt 0 view .LVU350
 1376 0012 0722     		movs	r2, #7
 1377 0014 C260     		str	r2, [r0, #12]
1336:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1378              		.loc 1 1336 3 is_stmt 1 view .LVU351
1336:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  /tmp/ccEqzQ6F.s 			page 65


 1379              		.loc 1 1336 26 is_stmt 0 view .LVU352
 1380 0016 0361     		str	r3, [r0, #16]
1337:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1381              		.loc 1 1337 3 is_stmt 1 view .LVU353
1337:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1382              		.loc 1 1337 23 is_stmt 0 view .LVU354
 1383 0018 4361     		str	r3, [r0, #20]
1338:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1384              		.loc 1 1338 3 is_stmt 1 view .LVU355
1338:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 1385              		.loc 1 1338 18 is_stmt 0 view .LVU356
 1386 001a 4FF08062 		mov	r2, #67108864
 1387 001e 8261     		str	r2, [r0, #24]
1339:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1388              		.loc 1 1339 3 is_stmt 1 view .LVU357
1339:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1389              		.loc 1 1339 32 is_stmt 0 view .LVU358
 1390 0020 4FF0C042 		mov	r2, #1610612736
 1391 0024 C261     		str	r2, [r0, #28]
1340:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1392              		.loc 1 1340 3 is_stmt 1 view .LVU359
1340:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1393              		.loc 1 1340 23 is_stmt 0 view .LVU360
 1394 0026 0362     		str	r3, [r0, #32]
1341:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1395              		.loc 1 1341 3 is_stmt 1 view .LVU361
1341:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1396              		.loc 1 1341 21 is_stmt 0 view .LVU362
 1397 0028 4362     		str	r3, [r0, #36]
1342:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1398              		.loc 1 1342 3 is_stmt 1 view .LVU363
1342:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 0x0;
 1399              		.loc 1 1342 29 is_stmt 0 view .LVU364
 1400 002a 8362     		str	r3, [r0, #40]
1343:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1401              		.loc 1 1343 3 is_stmt 1 view .LVU365
1343:Core/Src/main.c ****   hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1402              		.loc 1 1343 28 is_stmt 0 view .LVU366
 1403 002c C362     		str	r3, [r0, #44]
1344:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1404              		.loc 1 1344 3 is_stmt 1 view .LVU367
1344:Core/Src/main.c ****   hspi3.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1405              		.loc 1 1344 23 is_stmt 0 view .LVU368
 1406 002e 4FF08042 		mov	r2, #1073741824
 1407 0032 4263     		str	r2, [r0, #52]
1345:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1408              		.loc 1 1345 3 is_stmt 1 view .LVU369
1345:Core/Src/main.c ****   hspi3.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1409              		.loc 1 1345 26 is_stmt 0 view .LVU370
 1410 0034 8363     		str	r3, [r0, #56]
1346:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1411              		.loc 1 1346 3 is_stmt 1 view .LVU371
1346:Core/Src/main.c ****   hspi3.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1412              		.loc 1 1346 28 is_stmt 0 view .LVU372
 1413 0036 C363     		str	r3, [r0, #60]
1347:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1414              		.loc 1 1347 3 is_stmt 1 view .LVU373
ARM GAS  /tmp/ccEqzQ6F.s 			page 66


1347:Core/Src/main.c ****   hspi3.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1415              		.loc 1 1347 41 is_stmt 0 view .LVU374
 1416 0038 0364     		str	r3, [r0, #64]
1348:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1417              		.loc 1 1348 3 is_stmt 1 view .LVU375
1348:Core/Src/main.c ****   hspi3.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1418              		.loc 1 1348 41 is_stmt 0 view .LVU376
 1419 003a 4364     		str	r3, [r0, #68]
1349:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1420              		.loc 1 1349 3 is_stmt 1 view .LVU377
1349:Core/Src/main.c ****   hspi3.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1421              		.loc 1 1349 31 is_stmt 0 view .LVU378
 1422 003c 8364     		str	r3, [r0, #72]
1350:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1423              		.loc 1 1350 3 is_stmt 1 view .LVU379
1350:Core/Src/main.c ****   hspi3.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1424              		.loc 1 1350 38 is_stmt 0 view .LVU380
 1425 003e C364     		str	r3, [r0, #76]
1351:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1426              		.loc 1 1351 3 is_stmt 1 view .LVU381
1351:Core/Src/main.c ****   hspi3.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1427              		.loc 1 1351 37 is_stmt 0 view .LVU382
 1428 0040 0365     		str	r3, [r0, #80]
1352:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1429              		.loc 1 1352 3 is_stmt 1 view .LVU383
1352:Core/Src/main.c ****   hspi3.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1430              		.loc 1 1352 32 is_stmt 0 view .LVU384
 1431 0042 4365     		str	r3, [r0, #84]
1353:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1432              		.loc 1 1353 3 is_stmt 1 view .LVU385
1353:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1433              		.loc 1 1353 21 is_stmt 0 view .LVU386
 1434 0044 8365     		str	r3, [r0, #88]
1354:Core/Src/main.c ****   {
 1435              		.loc 1 1354 3 is_stmt 1 view .LVU387
1354:Core/Src/main.c ****   {
 1436              		.loc 1 1354 7 is_stmt 0 view .LVU388
 1437 0046 FFF7FEFF 		bl	HAL_SPI_Init
 1438              	.LVL89:
1354:Core/Src/main.c ****   {
 1439              		.loc 1 1354 6 view .LVU389
 1440 004a 00B9     		cbnz	r0, .L48
1362:Core/Src/main.c **** 
 1441              		.loc 1 1362 1 view .LVU390
 1442 004c 08BD     		pop	{r3, pc}
 1443              	.L48:
1356:Core/Src/main.c ****   }
 1444              		.loc 1 1356 5 is_stmt 1 view .LVU391
 1445 004e FFF7FEFF 		bl	Error_Handler
 1446              	.LVL90:
 1447              	.L50:
 1448 0052 00BF     		.align	2
 1449              	.L49:
 1450 0054 00000000 		.word	hspi3
 1451 0058 003C0040 		.word	1073757184
 1452              		.cfi_endproc
 1453              	.LFE372:
ARM GAS  /tmp/ccEqzQ6F.s 			page 67


 1455              		.section	.text.MX_FDCAN3_Init,"ax",%progbits
 1456              		.align	1
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1460              		.fpu fpv5-d16
 1462              	MX_FDCAN3_Init:
 1463              	.LFB366:
1071:Core/Src/main.c **** 
 1464              		.loc 1 1071 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 1468 0000 08B5     		push	{r3, lr}
 1469              	.LCFI24:
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 3, -8
 1472              		.cfi_offset 14, -4
1080:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1473              		.loc 1 1080 3 view .LVU393
1080:Core/Src/main.c ****   hfdcan3.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1474              		.loc 1 1080 20 is_stmt 0 view .LVU394
 1475 0002 1448     		ldr	r0, .L55
 1476 0004 144B     		ldr	r3, .L55+4
 1477 0006 0360     		str	r3, [r0]
1081:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1478              		.loc 1 1081 3 is_stmt 1 view .LVU395
1081:Core/Src/main.c ****   hfdcan3.Init.Mode = FDCAN_MODE_NORMAL;
 1479              		.loc 1 1081 28 is_stmt 0 view .LVU396
 1480 0008 0023     		movs	r3, #0
 1481 000a 8360     		str	r3, [r0, #8]
1082:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1482              		.loc 1 1082 3 is_stmt 1 view .LVU397
1082:Core/Src/main.c ****   hfdcan3.Init.AutoRetransmission = DISABLE;
 1483              		.loc 1 1082 21 is_stmt 0 view .LVU398
 1484 000c C360     		str	r3, [r0, #12]
1083:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1485              		.loc 1 1083 3 is_stmt 1 view .LVU399
1083:Core/Src/main.c ****   hfdcan3.Init.TransmitPause = DISABLE;
 1486              		.loc 1 1083 35 is_stmt 0 view .LVU400
 1487 000e 0374     		strb	r3, [r0, #16]
1084:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1488              		.loc 1 1084 3 is_stmt 1 view .LVU401
1084:Core/Src/main.c ****   hfdcan3.Init.ProtocolException = DISABLE;
 1489              		.loc 1 1084 30 is_stmt 0 view .LVU402
 1490 0010 4374     		strb	r3, [r0, #17]
1085:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1491              		.loc 1 1085 3 is_stmt 1 view .LVU403
1085:Core/Src/main.c ****   hfdcan3.Init.NominalPrescaler = 16;
 1492              		.loc 1 1085 34 is_stmt 0 view .LVU404
 1493 0012 8374     		strb	r3, [r0, #18]
1086:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1494              		.loc 1 1086 3 is_stmt 1 view .LVU405
1086:Core/Src/main.c ****   hfdcan3.Init.NominalSyncJumpWidth = 1;
 1495              		.loc 1 1086 33 is_stmt 0 view .LVU406
 1496 0014 1022     		movs	r2, #16
 1497 0016 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccEqzQ6F.s 			page 68


1087:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1498              		.loc 1 1087 3 is_stmt 1 view .LVU407
1087:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg1 = 2;
 1499              		.loc 1 1087 37 is_stmt 0 view .LVU408
 1500 0018 0122     		movs	r2, #1
 1501 001a 8261     		str	r2, [r0, #24]
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1502              		.loc 1 1088 3 is_stmt 1 view .LVU409
1088:Core/Src/main.c ****   hfdcan3.Init.NominalTimeSeg2 = 2;
 1503              		.loc 1 1088 32 is_stmt 0 view .LVU410
 1504 001c 0221     		movs	r1, #2
 1505 001e C161     		str	r1, [r0, #28]
1089:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1506              		.loc 1 1089 3 is_stmt 1 view .LVU411
1089:Core/Src/main.c ****   hfdcan3.Init.DataPrescaler = 1;
 1507              		.loc 1 1089 32 is_stmt 0 view .LVU412
 1508 0020 0162     		str	r1, [r0, #32]
1090:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1509              		.loc 1 1090 3 is_stmt 1 view .LVU413
1090:Core/Src/main.c ****   hfdcan3.Init.DataSyncJumpWidth = 1;
 1510              		.loc 1 1090 30 is_stmt 0 view .LVU414
 1511 0022 4262     		str	r2, [r0, #36]
1091:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1512              		.loc 1 1091 3 is_stmt 1 view .LVU415
1091:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg1 = 1;
 1513              		.loc 1 1091 34 is_stmt 0 view .LVU416
 1514 0024 8262     		str	r2, [r0, #40]
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1515              		.loc 1 1092 3 is_stmt 1 view .LVU417
1092:Core/Src/main.c ****   hfdcan3.Init.DataTimeSeg2 = 1;
 1516              		.loc 1 1092 29 is_stmt 0 view .LVU418
 1517 0026 C262     		str	r2, [r0, #44]
1093:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1518              		.loc 1 1093 3 is_stmt 1 view .LVU419
1093:Core/Src/main.c ****   hfdcan3.Init.MessageRAMOffset = 0;
 1519              		.loc 1 1093 29 is_stmt 0 view .LVU420
 1520 0028 0263     		str	r2, [r0, #48]
1094:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1521              		.loc 1 1094 3 is_stmt 1 view .LVU421
1094:Core/Src/main.c ****   hfdcan3.Init.StdFiltersNbr = 0;
 1522              		.loc 1 1094 33 is_stmt 0 view .LVU422
 1523 002a 4363     		str	r3, [r0, #52]
1095:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1524              		.loc 1 1095 3 is_stmt 1 view .LVU423
1095:Core/Src/main.c ****   hfdcan3.Init.ExtFiltersNbr = 0;
 1525              		.loc 1 1095 30 is_stmt 0 view .LVU424
 1526 002c 8363     		str	r3, [r0, #56]
1096:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1527              		.loc 1 1096 3 is_stmt 1 view .LVU425
1096:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtsNbr = 0;
 1528              		.loc 1 1096 30 is_stmt 0 view .LVU426
 1529 002e C363     		str	r3, [r0, #60]
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1530              		.loc 1 1097 3 is_stmt 1 view .LVU427
1097:Core/Src/main.c ****   hfdcan3.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1531              		.loc 1 1097 32 is_stmt 0 view .LVU428
 1532 0030 0364     		str	r3, [r0, #64]
ARM GAS  /tmp/ccEqzQ6F.s 			page 69


1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1533              		.loc 1 1098 3 is_stmt 1 view .LVU429
1098:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtsNbr = 0;
 1534              		.loc 1 1098 32 is_stmt 0 view .LVU430
 1535 0032 0422     		movs	r2, #4
 1536 0034 4264     		str	r2, [r0, #68]
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1537              		.loc 1 1099 3 is_stmt 1 view .LVU431
1099:Core/Src/main.c ****   hfdcan3.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1538              		.loc 1 1099 32 is_stmt 0 view .LVU432
 1539 0036 8364     		str	r3, [r0, #72]
1100:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1540              		.loc 1 1100 3 is_stmt 1 view .LVU433
1100:Core/Src/main.c ****   hfdcan3.Init.RxBuffersNbr = 0;
 1541              		.loc 1 1100 32 is_stmt 0 view .LVU434
 1542 0038 C264     		str	r2, [r0, #76]
1101:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1543              		.loc 1 1101 3 is_stmt 1 view .LVU435
1101:Core/Src/main.c ****   hfdcan3.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1544              		.loc 1 1101 29 is_stmt 0 view .LVU436
 1545 003a 0365     		str	r3, [r0, #80]
1102:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1546              		.loc 1 1102 3 is_stmt 1 view .LVU437
1102:Core/Src/main.c ****   hfdcan3.Init.TxEventsNbr = 0;
 1547              		.loc 1 1102 29 is_stmt 0 view .LVU438
 1548 003c 4265     		str	r2, [r0, #84]
1103:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1549              		.loc 1 1103 3 is_stmt 1 view .LVU439
1103:Core/Src/main.c ****   hfdcan3.Init.TxBuffersNbr = 0;
 1550              		.loc 1 1103 28 is_stmt 0 view .LVU440
 1551 003e 8365     		str	r3, [r0, #88]
1104:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1552              		.loc 1 1104 3 is_stmt 1 view .LVU441
1104:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueElmtsNbr = 0;
 1553              		.loc 1 1104 29 is_stmt 0 view .LVU442
 1554 0040 C365     		str	r3, [r0, #92]
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1555              		.loc 1 1105 3 is_stmt 1 view .LVU443
1105:Core/Src/main.c ****   hfdcan3.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1556              		.loc 1 1105 36 is_stmt 0 view .LVU444
 1557 0042 0366     		str	r3, [r0, #96]
1106:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1558              		.loc 1 1106 3 is_stmt 1 view .LVU445
1106:Core/Src/main.c ****   hfdcan3.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1559              		.loc 1 1106 32 is_stmt 0 view .LVU446
 1560 0044 4366     		str	r3, [r0, #100]
1107:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1561              		.loc 1 1107 3 is_stmt 1 view .LVU447
1107:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan3) != HAL_OK)
 1562              		.loc 1 1107 27 is_stmt 0 view .LVU448
 1563 0046 8266     		str	r2, [r0, #104]
1108:Core/Src/main.c ****   {
 1564              		.loc 1 1108 3 is_stmt 1 view .LVU449
1108:Core/Src/main.c ****   {
 1565              		.loc 1 1108 7 is_stmt 0 view .LVU450
 1566 0048 FFF7FEFF 		bl	HAL_FDCAN_Init
 1567              	.LVL91:
ARM GAS  /tmp/ccEqzQ6F.s 			page 70


1108:Core/Src/main.c ****   {
 1568              		.loc 1 1108 6 view .LVU451
 1569 004c 00B9     		cbnz	r0, .L54
1116:Core/Src/main.c **** 
 1570              		.loc 1 1116 1 view .LVU452
 1571 004e 08BD     		pop	{r3, pc}
 1572              	.L54:
1110:Core/Src/main.c ****   }
 1573              		.loc 1 1110 5 is_stmt 1 view .LVU453
 1574 0050 FFF7FEFF 		bl	Error_Handler
 1575              	.LVL92:
 1576              	.L56:
 1577              		.align	2
 1578              	.L55:
 1579 0054 00000000 		.word	hfdcan3
 1580 0058 00D40040 		.word	1073796096
 1581              		.cfi_endproc
 1582              	.LFE366:
 1584              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1585              		.align	1
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu fpv5-d16
 1591              	MX_USART6_UART_Init:
 1592              	.LFB380:
1692:Core/Src/main.c **** 
 1593              		.loc 1 1692 1 view -0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 0
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
 1597 0000 08B5     		push	{r3, lr}
 1598              	.LCFI25:
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 3, -8
 1601              		.cfi_offset 14, -4
1701:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1602              		.loc 1 1701 3 view .LVU455
1701:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1603              		.loc 1 1701 19 is_stmt 0 view .LVU456
 1604 0002 1548     		ldr	r0, .L67
 1605 0004 154B     		ldr	r3, .L67+4
 1606 0006 0360     		str	r3, [r0]
1702:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1607              		.loc 1 1702 3 is_stmt 1 view .LVU457
1702:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1608              		.loc 1 1702 24 is_stmt 0 view .LVU458
 1609 0008 4FF4E133 		mov	r3, #115200
 1610 000c 4360     		str	r3, [r0, #4]
1703:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1611              		.loc 1 1703 3 is_stmt 1 view .LVU459
1703:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1612              		.loc 1 1703 26 is_stmt 0 view .LVU460
 1613 000e 0023     		movs	r3, #0
 1614 0010 8360     		str	r3, [r0, #8]
1704:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1615              		.loc 1 1704 3 is_stmt 1 view .LVU461
ARM GAS  /tmp/ccEqzQ6F.s 			page 71


1704:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1616              		.loc 1 1704 24 is_stmt 0 view .LVU462
 1617 0012 C360     		str	r3, [r0, #12]
1705:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1618              		.loc 1 1705 3 is_stmt 1 view .LVU463
1705:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1619              		.loc 1 1705 22 is_stmt 0 view .LVU464
 1620 0014 0361     		str	r3, [r0, #16]
1706:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1621              		.loc 1 1706 3 is_stmt 1 view .LVU465
1706:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1622              		.loc 1 1706 20 is_stmt 0 view .LVU466
 1623 0016 0C22     		movs	r2, #12
 1624 0018 4261     		str	r2, [r0, #20]
1707:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1625              		.loc 1 1707 3 is_stmt 1 view .LVU467
1707:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1626              		.loc 1 1707 25 is_stmt 0 view .LVU468
 1627 001a 8361     		str	r3, [r0, #24]
1708:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1628              		.loc 1 1708 3 is_stmt 1 view .LVU469
1708:Core/Src/main.c ****   huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1629              		.loc 1 1708 28 is_stmt 0 view .LVU470
 1630 001c C361     		str	r3, [r0, #28]
1709:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1631              		.loc 1 1709 3 is_stmt 1 view .LVU471
1709:Core/Src/main.c ****   huart6.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1632              		.loc 1 1709 30 is_stmt 0 view .LVU472
 1633 001e 0362     		str	r3, [r0, #32]
1710:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1634              		.loc 1 1710 3 is_stmt 1 view .LVU473
1710:Core/Src/main.c ****   huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1635              		.loc 1 1710 30 is_stmt 0 view .LVU474
 1636 0020 4362     		str	r3, [r0, #36]
1711:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1637              		.loc 1 1711 3 is_stmt 1 view .LVU475
1711:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1638              		.loc 1 1711 38 is_stmt 0 view .LVU476
 1639 0022 8362     		str	r3, [r0, #40]
1712:Core/Src/main.c ****   {
 1640              		.loc 1 1712 3 is_stmt 1 view .LVU477
1712:Core/Src/main.c ****   {
 1641              		.loc 1 1712 7 is_stmt 0 view .LVU478
 1642 0024 FFF7FEFF 		bl	HAL_UART_Init
 1643              	.LVL93:
1712:Core/Src/main.c ****   {
 1644              		.loc 1 1712 6 view .LVU479
 1645 0028 70B9     		cbnz	r0, .L63
1716:Core/Src/main.c ****   {
 1646              		.loc 1 1716 3 is_stmt 1 view .LVU480
1716:Core/Src/main.c ****   {
 1647              		.loc 1 1716 7 is_stmt 0 view .LVU481
 1648 002a 0021     		movs	r1, #0
 1649 002c 0A48     		ldr	r0, .L67
 1650 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1651              	.LVL94:
1716:Core/Src/main.c ****   {
ARM GAS  /tmp/ccEqzQ6F.s 			page 72


 1652              		.loc 1 1716 6 view .LVU482
 1653 0032 58B9     		cbnz	r0, .L64
1720:Core/Src/main.c ****   {
 1654              		.loc 1 1720 3 is_stmt 1 view .LVU483
1720:Core/Src/main.c ****   {
 1655              		.loc 1 1720 7 is_stmt 0 view .LVU484
 1656 0034 0021     		movs	r1, #0
 1657 0036 0848     		ldr	r0, .L67
 1658 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1659              	.LVL95:
1720:Core/Src/main.c ****   {
 1660              		.loc 1 1720 6 view .LVU485
 1661 003c 40B9     		cbnz	r0, .L65
1724:Core/Src/main.c ****   {
 1662              		.loc 1 1724 3 is_stmt 1 view .LVU486
1724:Core/Src/main.c ****   {
 1663              		.loc 1 1724 7 is_stmt 0 view .LVU487
 1664 003e 0648     		ldr	r0, .L67
 1665 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1666              	.LVL96:
1724:Core/Src/main.c ****   {
 1667              		.loc 1 1724 6 view .LVU488
 1668 0044 30B9     		cbnz	r0, .L66
1732:Core/Src/main.c **** 
 1669              		.loc 1 1732 1 view .LVU489
 1670 0046 08BD     		pop	{r3, pc}
 1671              	.L63:
1714:Core/Src/main.c ****   }
 1672              		.loc 1 1714 5 is_stmt 1 view .LVU490
 1673 0048 FFF7FEFF 		bl	Error_Handler
 1674              	.LVL97:
 1675              	.L64:
1718:Core/Src/main.c ****   }
 1676              		.loc 1 1718 5 view .LVU491
 1677 004c FFF7FEFF 		bl	Error_Handler
 1678              	.LVL98:
 1679              	.L65:
1722:Core/Src/main.c ****   }
 1680              		.loc 1 1722 5 view .LVU492
 1681 0050 FFF7FEFF 		bl	Error_Handler
 1682              	.LVL99:
 1683              	.L66:
1726:Core/Src/main.c ****   }
 1684              		.loc 1 1726 5 view .LVU493
 1685 0054 FFF7FEFF 		bl	Error_Handler
 1686              	.LVL100:
 1687              	.L68:
 1688              		.align	2
 1689              	.L67:
 1690 0058 00000000 		.word	huart6
 1691 005c 00140140 		.word	1073812480
 1692              		.cfi_endproc
 1693              	.LFE380:
 1695              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1696              		.align	1
 1697              		.syntax unified
 1698              		.thumb
ARM GAS  /tmp/ccEqzQ6F.s 			page 73


 1699              		.thumb_func
 1700              		.fpu fpv5-d16
 1702              	MX_ADC1_Init:
 1703              	.LFB364:
 941:Core/Src/main.c **** 
 1704              		.loc 1 941 1 view -0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 48
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708 0000 10B5     		push	{r4, lr}
 1709              	.LCFI26:
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 4, -8
 1712              		.cfi_offset 14, -4
 1713 0002 8CB0     		sub	sp, sp, #48
 1714              	.LCFI27:
 1715              		.cfi_def_cfa_offset 56
 947:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1716              		.loc 1 947 3 view .LVU495
 947:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1717              		.loc 1 947 24 is_stmt 0 view .LVU496
 1718 0004 0024     		movs	r4, #0
 1719 0006 0994     		str	r4, [sp, #36]
 1720 0008 0A94     		str	r4, [sp, #40]
 1721 000a 0B94     		str	r4, [sp, #44]
 948:Core/Src/main.c **** 
 1722              		.loc 1 948 3 is_stmt 1 view .LVU497
 948:Core/Src/main.c **** 
 1723              		.loc 1 948 26 is_stmt 0 view .LVU498
 1724 000c 2422     		movs	r2, #36
 1725 000e 2146     		mov	r1, r4
 1726 0010 6846     		mov	r0, sp
 1727 0012 FFF7FEFF 		bl	memset
 1728              	.LVL101:
 956:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1729              		.loc 1 956 3 is_stmt 1 view .LVU499
 956:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 1730              		.loc 1 956 18 is_stmt 0 view .LVU500
 1731 0016 1E48     		ldr	r0, .L77
 1732 0018 1E4B     		ldr	r3, .L77+4
 1733 001a 0360     		str	r3, [r0]
 957:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1734              		.loc 1 957 3 is_stmt 1 view .LVU501
 957:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 1735              		.loc 1 957 29 is_stmt 0 view .LVU502
 1736 001c 4FF43013 		mov	r3, #2883584
 1737 0020 4360     		str	r3, [r0, #4]
 958:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1738              		.loc 1 958 3 is_stmt 1 view .LVU503
 958:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 1739              		.loc 1 958 25 is_stmt 0 view .LVU504
 1740 0022 8460     		str	r4, [r0, #8]
 959:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1741              		.loc 1 959 3 is_stmt 1 view .LVU505
 959:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1742              		.loc 1 959 27 is_stmt 0 view .LVU506
 1743 0024 0461     		str	r4, [r0, #16]
ARM GAS  /tmp/ccEqzQ6F.s 			page 74


 960:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1744              		.loc 1 960 3 is_stmt 1 view .LVU507
 960:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 1745              		.loc 1 960 27 is_stmt 0 view .LVU508
 1746 0026 0423     		movs	r3, #4
 1747 0028 4361     		str	r3, [r0, #20]
 961:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1748              		.loc 1 961 3 is_stmt 1 view .LVU509
 961:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1749              		.loc 1 961 31 is_stmt 0 view .LVU510
 1750 002a 0476     		strb	r4, [r0, #24]
 962:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1751              		.loc 1 962 3 is_stmt 1 view .LVU511
 962:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1752              		.loc 1 962 33 is_stmt 0 view .LVU512
 1753 002c 4476     		strb	r4, [r0, #25]
 963:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1754              		.loc 1 963 3 is_stmt 1 view .LVU513
 963:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1755              		.loc 1 963 30 is_stmt 0 view .LVU514
 1756 002e 0123     		movs	r3, #1
 1757 0030 C361     		str	r3, [r0, #28]
 964:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1758              		.loc 1 964 3 is_stmt 1 view .LVU515
 964:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1759              		.loc 1 964 36 is_stmt 0 view .LVU516
 1760 0032 80F82040 		strb	r4, [r0, #32]
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1761              		.loc 1 965 3 is_stmt 1 view .LVU517
 965:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1762              		.loc 1 965 31 is_stmt 0 view .LVU518
 1763 0036 8462     		str	r4, [r0, #40]
 966:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1764              		.loc 1 966 3 is_stmt 1 view .LVU519
 966:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 1765              		.loc 1 966 35 is_stmt 0 view .LVU520
 1766 0038 C462     		str	r4, [r0, #44]
 967:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1767              		.loc 1 967 3 is_stmt 1 view .LVU521
 967:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 1768              		.loc 1 967 39 is_stmt 0 view .LVU522
 1769 003a 0463     		str	r4, [r0, #48]
 968:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1770              		.loc 1 968 3 is_stmt 1 view .LVU523
 968:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 1771              		.loc 1 968 22 is_stmt 0 view .LVU524
 1772 003c C463     		str	r4, [r0, #60]
 969:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1773              		.loc 1 969 3 is_stmt 1 view .LVU525
 969:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 1774              		.loc 1 969 27 is_stmt 0 view .LVU526
 1775 003e 0464     		str	r4, [r0, #64]
 970:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1776              		.loc 1 970 3 is_stmt 1 view .LVU527
 970:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1777              		.loc 1 970 31 is_stmt 0 view .LVU528
 1778 0040 80F84440 		strb	r4, [r0, #68]
ARM GAS  /tmp/ccEqzQ6F.s 			page 75


 971:Core/Src/main.c ****   {
 1779              		.loc 1 971 3 is_stmt 1 view .LVU529
 971:Core/Src/main.c ****   {
 1780              		.loc 1 971 7 is_stmt 0 view .LVU530
 1781 0044 FFF7FEFF 		bl	HAL_ADC_Init
 1782              	.LVL102:
 971:Core/Src/main.c ****   {
 1783              		.loc 1 971 6 view .LVU531
 1784 0048 E0B9     		cbnz	r0, .L74
 978:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1785              		.loc 1 978 3 is_stmt 1 view .LVU532
 978:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 1786              		.loc 1 978 18 is_stmt 0 view .LVU533
 1787 004a 0023     		movs	r3, #0
 1788 004c 0993     		str	r3, [sp, #36]
 979:Core/Src/main.c ****   {
 1789              		.loc 1 979 3 is_stmt 1 view .LVU534
 979:Core/Src/main.c ****   {
 1790              		.loc 1 979 7 is_stmt 0 view .LVU535
 1791 004e 09A9     		add	r1, sp, #36
 1792 0050 0F48     		ldr	r0, .L77
 1793 0052 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 1794              	.LVL103:
 979:Core/Src/main.c ****   {
 1795              		.loc 1 979 6 view .LVU536
 1796 0056 B8B9     		cbnz	r0, .L75
 986:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1797              		.loc 1 986 3 is_stmt 1 view .LVU537
 986:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 1798              		.loc 1 986 19 is_stmt 0 view .LVU538
 1799 0058 0F4B     		ldr	r3, .L77+8
 1800 005a 0093     		str	r3, [sp]
 987:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1801              		.loc 1 987 3 is_stmt 1 view .LVU539
 987:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_16CYCLES_5;
 1802              		.loc 1 987 16 is_stmt 0 view .LVU540
 1803 005c 0623     		movs	r3, #6
 1804 005e 0193     		str	r3, [sp, #4]
 988:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1805              		.loc 1 988 3 is_stmt 1 view .LVU541
 988:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 1806              		.loc 1 988 24 is_stmt 0 view .LVU542
 1807 0060 0323     		movs	r3, #3
 1808 0062 0293     		str	r3, [sp, #8]
 989:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1809              		.loc 1 989 3 is_stmt 1 view .LVU543
 989:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 1810              		.loc 1 989 22 is_stmt 0 view .LVU544
 1811 0064 40F2FF73 		movw	r3, #2047
 1812 0068 0393     		str	r3, [sp, #12]
 990:Core/Src/main.c ****   sConfig.Offset = 0;
 1813              		.loc 1 990 3 is_stmt 1 view .LVU545
 990:Core/Src/main.c ****   sConfig.Offset = 0;
 1814              		.loc 1 990 24 is_stmt 0 view .LVU546
 1815 006a 0423     		movs	r3, #4
 1816 006c 0493     		str	r3, [sp, #16]
 991:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
ARM GAS  /tmp/ccEqzQ6F.s 			page 76


 1817              		.loc 1 991 3 is_stmt 1 view .LVU547
 991:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1818              		.loc 1 991 18 is_stmt 0 view .LVU548
 1819 006e 0023     		movs	r3, #0
 1820 0070 0593     		str	r3, [sp, #20]
 992:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1821              		.loc 1 992 3 is_stmt 1 view .LVU549
 992:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1822              		.loc 1 992 34 is_stmt 0 view .LVU550
 1823 0072 8DF82130 		strb	r3, [sp, #33]
 993:Core/Src/main.c ****   {
 1824              		.loc 1 993 3 is_stmt 1 view .LVU551
 993:Core/Src/main.c ****   {
 1825              		.loc 1 993 7 is_stmt 0 view .LVU552
 1826 0076 6946     		mov	r1, sp
 1827 0078 0548     		ldr	r0, .L77
 1828 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1829              	.LVL104:
 993:Core/Src/main.c ****   {
 1830              		.loc 1 993 6 view .LVU553
 1831 007e 28B9     		cbnz	r0, .L76
1001:Core/Src/main.c **** 
 1832              		.loc 1 1001 1 view .LVU554
 1833 0080 0CB0     		add	sp, sp, #48
 1834              	.LCFI28:
 1835              		.cfi_remember_state
 1836              		.cfi_def_cfa_offset 8
 1837              		@ sp needed
 1838 0082 10BD     		pop	{r4, pc}
 1839              	.L74:
 1840              	.LCFI29:
 1841              		.cfi_restore_state
 973:Core/Src/main.c ****   }
 1842              		.loc 1 973 5 is_stmt 1 view .LVU555
 1843 0084 FFF7FEFF 		bl	Error_Handler
 1844              	.LVL105:
 1845              	.L75:
 981:Core/Src/main.c ****   }
 1846              		.loc 1 981 5 view .LVU556
 1847 0088 FFF7FEFF 		bl	Error_Handler
 1848              	.LVL106:
 1849              	.L76:
 995:Core/Src/main.c ****   }
 1850              		.loc 1 995 5 view .LVU557
 1851 008c FFF7FEFF 		bl	Error_Handler
 1852              	.LVL107:
 1853              	.L78:
 1854              		.align	2
 1855              	.L77:
 1856 0090 00000000 		.word	hadc1
 1857 0094 00200240 		.word	1073881088
 1858 0098 0040C03A 		.word	985677824
 1859              		.cfi_endproc
 1860              	.LFE364:
 1862              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1863              		.align	1
 1864              		.syntax unified
ARM GAS  /tmp/ccEqzQ6F.s 			page 77


 1865              		.thumb
 1866              		.thumb_func
 1867              		.fpu fpv5-d16
 1869              	MX_TIM4_Init:
 1870              	.LFB375:
1472:Core/Src/main.c **** 
 1871              		.loc 1 1472 1 view -0
 1872              		.cfi_startproc
 1873              		@ args = 0, pretend = 0, frame = 40
 1874              		@ frame_needed = 0, uses_anonymous_args = 0
 1875 0000 00B5     		push	{lr}
 1876              	.LCFI30:
 1877              		.cfi_def_cfa_offset 4
 1878              		.cfi_offset 14, -4
 1879 0002 8BB0     		sub	sp, sp, #44
 1880              	.LCFI31:
 1881              		.cfi_def_cfa_offset 48
1478:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1882              		.loc 1 1478 3 view .LVU559
1478:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1883              		.loc 1 1478 27 is_stmt 0 view .LVU560
 1884 0004 0023     		movs	r3, #0
 1885 0006 0793     		str	r3, [sp, #28]
 1886 0008 0893     		str	r3, [sp, #32]
 1887 000a 0993     		str	r3, [sp, #36]
1479:Core/Src/main.c **** 
 1888              		.loc 1 1479 3 is_stmt 1 view .LVU561
1479:Core/Src/main.c **** 
 1889              		.loc 1 1479 22 is_stmt 0 view .LVU562
 1890 000c 0093     		str	r3, [sp]
 1891 000e 0193     		str	r3, [sp, #4]
 1892 0010 0293     		str	r3, [sp, #8]
 1893 0012 0393     		str	r3, [sp, #12]
 1894 0014 0493     		str	r3, [sp, #16]
 1895 0016 0593     		str	r3, [sp, #20]
 1896 0018 0693     		str	r3, [sp, #24]
1484:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1897              		.loc 1 1484 3 is_stmt 1 view .LVU563
1484:Core/Src/main.c ****   htim4.Init.Prescaler = 29;
 1898              		.loc 1 1484 18 is_stmt 0 view .LVU564
 1899 001a 2248     		ldr	r0, .L93
 1900 001c 224A     		ldr	r2, .L93+4
 1901 001e 0260     		str	r2, [r0]
1485:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1902              		.loc 1 1485 3 is_stmt 1 view .LVU565
1485:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1903              		.loc 1 1485 24 is_stmt 0 view .LVU566
 1904 0020 1D22     		movs	r2, #29
 1905 0022 4260     		str	r2, [r0, #4]
1486:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1906              		.loc 1 1486 3 is_stmt 1 view .LVU567
1486:Core/Src/main.c ****   htim4.Init.Period = 9999;
 1907              		.loc 1 1486 26 is_stmt 0 view .LVU568
 1908 0024 8360     		str	r3, [r0, #8]
1487:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1909              		.loc 1 1487 3 is_stmt 1 view .LVU569
1487:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccEqzQ6F.s 			page 78


 1910              		.loc 1 1487 21 is_stmt 0 view .LVU570
 1911 0026 42F20F72 		movw	r2, #9999
 1912 002a C260     		str	r2, [r0, #12]
1488:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1913              		.loc 1 1488 3 is_stmt 1 view .LVU571
1488:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1914              		.loc 1 1488 28 is_stmt 0 view .LVU572
 1915 002c 0361     		str	r3, [r0, #16]
1489:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1916              		.loc 1 1489 3 is_stmt 1 view .LVU573
1489:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 1917              		.loc 1 1489 32 is_stmt 0 view .LVU574
 1918 002e 8361     		str	r3, [r0, #24]
1490:Core/Src/main.c ****   {
 1919              		.loc 1 1490 3 is_stmt 1 view .LVU575
1490:Core/Src/main.c ****   {
 1920              		.loc 1 1490 7 is_stmt 0 view .LVU576
 1921 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1922              	.LVL108:
1490:Core/Src/main.c ****   {
 1923              		.loc 1 1490 6 view .LVU577
 1924 0034 50BB     		cbnz	r0, .L87
1494:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1925              		.loc 1 1494 3 is_stmt 1 view .LVU578
1494:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1926              		.loc 1 1494 37 is_stmt 0 view .LVU579
 1927 0036 0023     		movs	r3, #0
 1928 0038 0793     		str	r3, [sp, #28]
1495:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1929              		.loc 1 1495 3 is_stmt 1 view .LVU580
1495:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1930              		.loc 1 1495 33 is_stmt 0 view .LVU581
 1931 003a 0993     		str	r3, [sp, #36]
1496:Core/Src/main.c ****   {
 1932              		.loc 1 1496 3 is_stmt 1 view .LVU582
1496:Core/Src/main.c ****   {
 1933              		.loc 1 1496 7 is_stmt 0 view .LVU583
 1934 003c 07A9     		add	r1, sp, #28
 1935 003e 1948     		ldr	r0, .L93
 1936 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1937              	.LVL109:
1496:Core/Src/main.c ****   {
 1938              		.loc 1 1496 6 view .LVU584
 1939 0044 20BB     		cbnz	r0, .L88
1500:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1940              		.loc 1 1500 3 is_stmt 1 view .LVU585
1500:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1941              		.loc 1 1500 20 is_stmt 0 view .LVU586
 1942 0046 6023     		movs	r3, #96
 1943 0048 0093     		str	r3, [sp]
1501:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1944              		.loc 1 1501 3 is_stmt 1 view .LVU587
1501:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1945              		.loc 1 1501 19 is_stmt 0 view .LVU588
 1946 004a 0022     		movs	r2, #0
 1947 004c 0192     		str	r2, [sp, #4]
1502:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccEqzQ6F.s 			page 79


 1948              		.loc 1 1502 3 is_stmt 1 view .LVU589
1502:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1949              		.loc 1 1502 24 is_stmt 0 view .LVU590
 1950 004e 0292     		str	r2, [sp, #8]
1503:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1951              		.loc 1 1503 3 is_stmt 1 view .LVU591
1503:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1952              		.loc 1 1503 24 is_stmt 0 view .LVU592
 1953 0050 0492     		str	r2, [sp, #16]
1504:Core/Src/main.c ****   {
 1954              		.loc 1 1504 3 is_stmt 1 view .LVU593
1504:Core/Src/main.c ****   {
 1955              		.loc 1 1504 7 is_stmt 0 view .LVU594
 1956 0052 6946     		mov	r1, sp
 1957 0054 1348     		ldr	r0, .L93
 1958 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1959              	.LVL110:
1504:Core/Src/main.c ****   {
 1960              		.loc 1 1504 6 view .LVU595
 1961 005a D8B9     		cbnz	r0, .L89
1508:Core/Src/main.c ****   {
 1962              		.loc 1 1508 3 is_stmt 1 view .LVU596
1508:Core/Src/main.c ****   {
 1963              		.loc 1 1508 7 is_stmt 0 view .LVU597
 1964 005c 0422     		movs	r2, #4
 1965 005e 6946     		mov	r1, sp
 1966 0060 1048     		ldr	r0, .L93
 1967 0062 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1968              	.LVL111:
1508:Core/Src/main.c ****   {
 1969              		.loc 1 1508 6 view .LVU598
 1970 0066 B8B9     		cbnz	r0, .L90
1512:Core/Src/main.c ****   {
 1971              		.loc 1 1512 3 is_stmt 1 view .LVU599
1512:Core/Src/main.c ****   {
 1972              		.loc 1 1512 7 is_stmt 0 view .LVU600
 1973 0068 0822     		movs	r2, #8
 1974 006a 6946     		mov	r1, sp
 1975 006c 0D48     		ldr	r0, .L93
 1976 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1977              	.LVL112:
1512:Core/Src/main.c ****   {
 1978              		.loc 1 1512 6 view .LVU601
 1979 0072 98B9     		cbnz	r0, .L91
1516:Core/Src/main.c ****   {
 1980              		.loc 1 1516 3 is_stmt 1 view .LVU602
1516:Core/Src/main.c ****   {
 1981              		.loc 1 1516 7 is_stmt 0 view .LVU603
 1982 0074 0C22     		movs	r2, #12
 1983 0076 6946     		mov	r1, sp
 1984 0078 0A48     		ldr	r0, .L93
 1985 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1986              	.LVL113:
1516:Core/Src/main.c ****   {
 1987              		.loc 1 1516 6 view .LVU604
 1988 007e 78B9     		cbnz	r0, .L92
1523:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 80


 1989              		.loc 1 1523 3 is_stmt 1 view .LVU605
 1990 0080 0848     		ldr	r0, .L93
 1991 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1992              	.LVL114:
1525:Core/Src/main.c **** 
 1993              		.loc 1 1525 1 is_stmt 0 view .LVU606
 1994 0086 0BB0     		add	sp, sp, #44
 1995              	.LCFI32:
 1996              		.cfi_remember_state
 1997              		.cfi_def_cfa_offset 4
 1998              		@ sp needed
 1999 0088 5DF804FB 		ldr	pc, [sp], #4
 2000              	.L87:
 2001              	.LCFI33:
 2002              		.cfi_restore_state
1492:Core/Src/main.c ****   }
 2003              		.loc 1 1492 5 is_stmt 1 view .LVU607
 2004 008c FFF7FEFF 		bl	Error_Handler
 2005              	.LVL115:
 2006              	.L88:
1498:Core/Src/main.c ****   }
 2007              		.loc 1 1498 5 view .LVU608
 2008 0090 FFF7FEFF 		bl	Error_Handler
 2009              	.LVL116:
 2010              	.L89:
1506:Core/Src/main.c ****   }
 2011              		.loc 1 1506 5 view .LVU609
 2012 0094 FFF7FEFF 		bl	Error_Handler
 2013              	.LVL117:
 2014              	.L90:
1510:Core/Src/main.c ****   }
 2015              		.loc 1 1510 5 view .LVU610
 2016 0098 FFF7FEFF 		bl	Error_Handler
 2017              	.LVL118:
 2018              	.L91:
1514:Core/Src/main.c ****   }
 2019              		.loc 1 1514 5 view .LVU611
 2020 009c FFF7FEFF 		bl	Error_Handler
 2021              	.LVL119:
 2022              	.L92:
1518:Core/Src/main.c ****   }
 2023              		.loc 1 1518 5 view .LVU612
 2024 00a0 FFF7FEFF 		bl	Error_Handler
 2025              	.LVL120:
 2026              	.L94:
 2027              		.align	2
 2028              	.L93:
 2029 00a4 00000000 		.word	htim4
 2030 00a8 00080040 		.word	1073743872
 2031              		.cfi_endproc
 2032              	.LFE375:
 2034              		.section	.text.MX_ADC3_Init,"ax",%progbits
 2035              		.align	1
 2036              		.syntax unified
 2037              		.thumb
 2038              		.thumb_func
 2039              		.fpu fpv5-d16
ARM GAS  /tmp/ccEqzQ6F.s 			page 81


 2041              	MX_ADC3_Init:
 2042              	.LFB365:
1009:Core/Src/main.c **** 
 2043              		.loc 1 1009 1 view -0
 2044              		.cfi_startproc
 2045              		@ args = 0, pretend = 0, frame = 40
 2046              		@ frame_needed = 0, uses_anonymous_args = 0
 2047 0000 00B5     		push	{lr}
 2048              	.LCFI34:
 2049              		.cfi_def_cfa_offset 4
 2050              		.cfi_offset 14, -4
 2051 0002 8BB0     		sub	sp, sp, #44
 2052              	.LCFI35:
 2053              		.cfi_def_cfa_offset 48
1015:Core/Src/main.c **** 
 2054              		.loc 1 1015 3 view .LVU614
1015:Core/Src/main.c **** 
 2055              		.loc 1 1015 26 is_stmt 0 view .LVU615
 2056 0004 2422     		movs	r2, #36
 2057 0006 0021     		movs	r1, #0
 2058 0008 01A8     		add	r0, sp, #4
 2059 000a FFF7FEFF 		bl	memset
 2060              	.LVL121:
1023:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 2061              		.loc 1 1023 3 is_stmt 1 view .LVU616
1023:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV256;
 2062              		.loc 1 1023 18 is_stmt 0 view .LVU617
 2063 000e 1D48     		ldr	r0, .L101
 2064 0010 1D4B     		ldr	r3, .L101+4
 2065 0012 0360     		str	r3, [r0]
1024:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 2066              		.loc 1 1024 3 is_stmt 1 view .LVU618
1024:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 2067              		.loc 1 1024 29 is_stmt 0 view .LVU619
 2068 0014 4FF43013 		mov	r3, #2883584
 2069 0018 4360     		str	r3, [r0, #4]
1025:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 2070              		.loc 1 1025 3 is_stmt 1 view .LVU620
1025:Core/Src/main.c ****   hadc3.Init.DataAlign = ADC3_DATAALIGN_RIGHT;
 2071              		.loc 1 1025 25 is_stmt 0 view .LVU621
 2072 001a 0823     		movs	r3, #8
 2073 001c 8360     		str	r3, [r0, #8]
1026:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2074              		.loc 1 1026 3 is_stmt 1 view .LVU622
1026:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 2075              		.loc 1 1026 24 is_stmt 0 view .LVU623
 2076 001e 0023     		movs	r3, #0
 2077 0020 C360     		str	r3, [r0, #12]
1027:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2078              		.loc 1 1027 3 is_stmt 1 view .LVU624
1027:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 2079              		.loc 1 1027 27 is_stmt 0 view .LVU625
 2080 0022 0361     		str	r3, [r0, #16]
1028:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 2081              		.loc 1 1028 3 is_stmt 1 view .LVU626
1028:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 2082              		.loc 1 1028 27 is_stmt 0 view .LVU627
ARM GAS  /tmp/ccEqzQ6F.s 			page 82


 2083 0024 0422     		movs	r2, #4
 2084 0026 4261     		str	r2, [r0, #20]
1029:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 2085              		.loc 1 1029 3 is_stmt 1 view .LVU628
1029:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 2086              		.loc 1 1029 31 is_stmt 0 view .LVU629
 2087 0028 0376     		strb	r3, [r0, #24]
1030:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 2088              		.loc 1 1030 3 is_stmt 1 view .LVU630
1030:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 1;
 2089              		.loc 1 1030 33 is_stmt 0 view .LVU631
 2090 002a 4376     		strb	r3, [r0, #25]
1031:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 2091              		.loc 1 1031 3 is_stmt 1 view .LVU632
1031:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 2092              		.loc 1 1031 30 is_stmt 0 view .LVU633
 2093 002c 0122     		movs	r2, #1
 2094 002e C261     		str	r2, [r0, #28]
1032:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2095              		.loc 1 1032 3 is_stmt 1 view .LVU634
1032:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 2096              		.loc 1 1032 36 is_stmt 0 view .LVU635
 2097 0030 80F82030 		strb	r3, [r0, #32]
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2098              		.loc 1 1033 3 is_stmt 1 view .LVU636
1033:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 2099              		.loc 1 1033 31 is_stmt 0 view .LVU637
 2100 0034 8362     		str	r3, [r0, #40]
1034:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 2101              		.loc 1 1034 3 is_stmt 1 view .LVU638
1034:Core/Src/main.c ****   hadc3.Init.DMAContinuousRequests = ENABLE;
 2102              		.loc 1 1034 35 is_stmt 0 view .LVU639
 2103 0036 C362     		str	r3, [r0, #44]
1035:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 2104              		.loc 1 1035 3 is_stmt 1 view .LVU640
1035:Core/Src/main.c ****   hadc3.Init.SamplingMode = ADC_SAMPLING_MODE_NORMAL;
 2105              		.loc 1 1035 36 is_stmt 0 view .LVU641
 2106 0038 80F83820 		strb	r2, [r0, #56]
1036:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 2107              		.loc 1 1036 3 is_stmt 1 view .LVU642
1036:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 2108              		.loc 1 1036 27 is_stmt 0 view .LVU643
 2109 003c 4363     		str	r3, [r0, #52]
1037:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2110              		.loc 1 1037 3 is_stmt 1 view .LVU644
1037:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 2111              		.loc 1 1037 39 is_stmt 0 view .LVU645
 2112 003e 0363     		str	r3, [r0, #48]
1038:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 2113              		.loc 1 1038 3 is_stmt 1 view .LVU646
1038:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 2114              		.loc 1 1038 22 is_stmt 0 view .LVU647
 2115 0040 C363     		str	r3, [r0, #60]
1039:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 2116              		.loc 1 1039 3 is_stmt 1 view .LVU648
1039:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 2117              		.loc 1 1039 27 is_stmt 0 view .LVU649
ARM GAS  /tmp/ccEqzQ6F.s 			page 83


 2118 0042 0364     		str	r3, [r0, #64]
1040:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 2119              		.loc 1 1040 3 is_stmt 1 view .LVU650
1040:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 2120              		.loc 1 1040 31 is_stmt 0 view .LVU651
 2121 0044 80F84430 		strb	r3, [r0, #68]
1041:Core/Src/main.c ****   {
 2122              		.loc 1 1041 3 is_stmt 1 view .LVU652
1041:Core/Src/main.c ****   {
 2123              		.loc 1 1041 7 is_stmt 0 view .LVU653
 2124 0048 FFF7FEFF 		bl	HAL_ADC_Init
 2125              	.LVL122:
1041:Core/Src/main.c ****   {
 2126              		.loc 1 1041 6 view .LVU654
 2127 004c A8B9     		cbnz	r0, .L99
1048:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2128              		.loc 1 1048 3 is_stmt 1 view .LVU655
1048:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 2129              		.loc 1 1048 19 is_stmt 0 view .LVU656
 2130 004e 0F4B     		ldr	r3, .L101+8
 2131 0050 0193     		str	r3, [sp, #4]
1049:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 2132              		.loc 1 1049 3 is_stmt 1 view .LVU657
1049:Core/Src/main.c ****   sConfig.SamplingTime = ADC3_SAMPLETIME_2CYCLES_5;
 2133              		.loc 1 1049 16 is_stmt 0 view .LVU658
 2134 0052 0623     		movs	r3, #6
 2135 0054 0293     		str	r3, [sp, #8]
1050:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2136              		.loc 1 1050 3 is_stmt 1 view .LVU659
1050:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 2137              		.loc 1 1050 24 is_stmt 0 view .LVU660
 2138 0056 0023     		movs	r3, #0
 2139 0058 0393     		str	r3, [sp, #12]
1051:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2140              		.loc 1 1051 3 is_stmt 1 view .LVU661
1051:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 2141              		.loc 1 1051 22 is_stmt 0 view .LVU662
 2142 005a 40F2FF72 		movw	r2, #2047
 2143 005e 0492     		str	r2, [sp, #16]
1052:Core/Src/main.c ****   sConfig.Offset = 0;
 2144              		.loc 1 1052 3 is_stmt 1 view .LVU663
1052:Core/Src/main.c ****   sConfig.Offset = 0;
 2145              		.loc 1 1052 24 is_stmt 0 view .LVU664
 2146 0060 0422     		movs	r2, #4
 2147 0062 0592     		str	r2, [sp, #20]
1053:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 2148              		.loc 1 1053 3 is_stmt 1 view .LVU665
1053:Core/Src/main.c ****   sConfig.OffsetSign = ADC3_OFFSET_SIGN_NEGATIVE;
 2149              		.loc 1 1053 18 is_stmt 0 view .LVU666
 2150 0064 0693     		str	r3, [sp, #24]
1054:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 2151              		.loc 1 1054 3 is_stmt 1 view .LVU667
1054:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 2152              		.loc 1 1054 22 is_stmt 0 view .LVU668
 2153 0066 0893     		str	r3, [sp, #32]
1055:Core/Src/main.c ****   {
 2154              		.loc 1 1055 3 is_stmt 1 view .LVU669
ARM GAS  /tmp/ccEqzQ6F.s 			page 84


1055:Core/Src/main.c ****   {
 2155              		.loc 1 1055 7 is_stmt 0 view .LVU670
 2156 0068 0DEB0201 		add	r1, sp, r2
 2157 006c 0548     		ldr	r0, .L101
 2158 006e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 2159              	.LVL123:
1055:Core/Src/main.c ****   {
 2160              		.loc 1 1055 6 view .LVU671
 2161 0072 20B9     		cbnz	r0, .L100
1063:Core/Src/main.c **** 
 2162              		.loc 1 1063 1 view .LVU672
 2163 0074 0BB0     		add	sp, sp, #44
 2164              	.LCFI36:
 2165              		.cfi_remember_state
 2166              		.cfi_def_cfa_offset 4
 2167              		@ sp needed
 2168 0076 5DF804FB 		ldr	pc, [sp], #4
 2169              	.L99:
 2170              	.LCFI37:
 2171              		.cfi_restore_state
1043:Core/Src/main.c ****   }
 2172              		.loc 1 1043 5 is_stmt 1 view .LVU673
 2173 007a FFF7FEFF 		bl	Error_Handler
 2174              	.LVL124:
 2175              	.L100:
1057:Core/Src/main.c ****   }
 2176              		.loc 1 1057 5 view .LVU674
 2177 007e FFF7FEFF 		bl	Error_Handler
 2178              	.LVL125:
 2179              	.L102:
 2180 0082 00BF     		.align	2
 2181              	.L101:
 2182 0084 00000000 		.word	hadc3
 2183 0088 00600258 		.word	1476550656
 2184 008c 02003004 		.word	70254594
 2185              		.cfi_endproc
 2186              	.LFE365:
 2188              		.section	.text.MX_SPI2_Init,"ax",%progbits
 2189              		.align	1
 2190              		.syntax unified
 2191              		.thumb
 2192              		.thumb_func
 2193              		.fpu fpv5-d16
 2195              	MX_SPI2_Init:
 2196              	.LFB371:
1274:Core/Src/main.c **** 
 2197              		.loc 1 1274 1 view -0
 2198              		.cfi_startproc
 2199              		@ args = 0, pretend = 0, frame = 0
 2200              		@ frame_needed = 0, uses_anonymous_args = 0
 2201 0000 08B5     		push	{r3, lr}
 2202              	.LCFI38:
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 3, -8
 2205              		.cfi_offset 14, -4
1284:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2206              		.loc 1 1284 3 view .LVU676
ARM GAS  /tmp/ccEqzQ6F.s 			page 85


1284:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 2207              		.loc 1 1284 18 is_stmt 0 view .LVU677
 2208 0002 1448     		ldr	r0, .L107
 2209 0004 144B     		ldr	r3, .L107+4
 2210 0006 0360     		str	r3, [r0]
1285:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2211              		.loc 1 1285 3 is_stmt 1 view .LVU678
1285:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 2212              		.loc 1 1285 19 is_stmt 0 view .LVU679
 2213 0008 4FF48003 		mov	r3, #4194304
 2214 000c 4360     		str	r3, [r0, #4]
1286:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2215              		.loc 1 1286 3 is_stmt 1 view .LVU680
1286:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 2216              		.loc 1 1286 24 is_stmt 0 view .LVU681
 2217 000e 0023     		movs	r3, #0
 2218 0010 8360     		str	r3, [r0, #8]
1287:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2219              		.loc 1 1287 3 is_stmt 1 view .LVU682
1287:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 2220              		.loc 1 1287 23 is_stmt 0 view .LVU683
 2221 0012 0722     		movs	r2, #7
 2222 0014 C260     		str	r2, [r0, #12]
1288:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2223              		.loc 1 1288 3 is_stmt 1 view .LVU684
1288:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 2224              		.loc 1 1288 26 is_stmt 0 view .LVU685
 2225 0016 0361     		str	r3, [r0, #16]
1289:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2226              		.loc 1 1289 3 is_stmt 1 view .LVU686
1289:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 2227              		.loc 1 1289 23 is_stmt 0 view .LVU687
 2228 0018 4361     		str	r3, [r0, #20]
1290:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2229              		.loc 1 1290 3 is_stmt 1 view .LVU688
1290:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2230              		.loc 1 1290 18 is_stmt 0 view .LVU689
 2231 001a 4FF08062 		mov	r2, #67108864
 2232 001e 8261     		str	r2, [r0, #24]
1291:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2233              		.loc 1 1291 3 is_stmt 1 view .LVU690
1291:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2234              		.loc 1 1291 32 is_stmt 0 view .LVU691
 2235 0020 4FF00052 		mov	r2, #536870912
 2236 0024 C261     		str	r2, [r0, #28]
1292:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2237              		.loc 1 1292 3 is_stmt 1 view .LVU692
1292:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 2238              		.loc 1 1292 23 is_stmt 0 view .LVU693
 2239 0026 0362     		str	r3, [r0, #32]
1293:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2240              		.loc 1 1293 3 is_stmt 1 view .LVU694
1293:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2241              		.loc 1 1293 21 is_stmt 0 view .LVU695
 2242 0028 4362     		str	r3, [r0, #36]
1294:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2243              		.loc 1 1294 3 is_stmt 1 view .LVU696
ARM GAS  /tmp/ccEqzQ6F.s 			page 86


1294:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 0x0;
 2244              		.loc 1 1294 29 is_stmt 0 view .LVU697
 2245 002a 8362     		str	r3, [r0, #40]
1295:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2246              		.loc 1 1295 3 is_stmt 1 view .LVU698
1295:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2247              		.loc 1 1295 28 is_stmt 0 view .LVU699
 2248 002c C362     		str	r3, [r0, #44]
1296:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2249              		.loc 1 1296 3 is_stmt 1 view .LVU700
1296:Core/Src/main.c ****   hspi2.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2250              		.loc 1 1296 23 is_stmt 0 view .LVU701
 2251 002e 4FF08042 		mov	r2, #1073741824
 2252 0032 4263     		str	r2, [r0, #52]
1297:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2253              		.loc 1 1297 3 is_stmt 1 view .LVU702
1297:Core/Src/main.c ****   hspi2.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2254              		.loc 1 1297 26 is_stmt 0 view .LVU703
 2255 0034 8363     		str	r3, [r0, #56]
1298:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2256              		.loc 1 1298 3 is_stmt 1 view .LVU704
1298:Core/Src/main.c ****   hspi2.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2257              		.loc 1 1298 28 is_stmt 0 view .LVU705
 2258 0036 C363     		str	r3, [r0, #60]
1299:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2259              		.loc 1 1299 3 is_stmt 1 view .LVU706
1299:Core/Src/main.c ****   hspi2.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2260              		.loc 1 1299 41 is_stmt 0 view .LVU707
 2261 0038 0364     		str	r3, [r0, #64]
1300:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2262              		.loc 1 1300 3 is_stmt 1 view .LVU708
1300:Core/Src/main.c ****   hspi2.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2263              		.loc 1 1300 41 is_stmt 0 view .LVU709
 2264 003a 4364     		str	r3, [r0, #68]
1301:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2265              		.loc 1 1301 3 is_stmt 1 view .LVU710
1301:Core/Src/main.c ****   hspi2.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2266              		.loc 1 1301 31 is_stmt 0 view .LVU711
 2267 003c 8364     		str	r3, [r0, #72]
1302:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2268              		.loc 1 1302 3 is_stmt 1 view .LVU712
1302:Core/Src/main.c ****   hspi2.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2269              		.loc 1 1302 38 is_stmt 0 view .LVU713
 2270 003e C364     		str	r3, [r0, #76]
1303:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2271              		.loc 1 1303 3 is_stmt 1 view .LVU714
1303:Core/Src/main.c ****   hspi2.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2272              		.loc 1 1303 37 is_stmt 0 view .LVU715
 2273 0040 0365     		str	r3, [r0, #80]
1304:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2274              		.loc 1 1304 3 is_stmt 1 view .LVU716
1304:Core/Src/main.c ****   hspi2.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2275              		.loc 1 1304 32 is_stmt 0 view .LVU717
 2276 0042 4365     		str	r3, [r0, #84]
1305:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 2277              		.loc 1 1305 3 is_stmt 1 view .LVU718
1305:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
ARM GAS  /tmp/ccEqzQ6F.s 			page 87


 2278              		.loc 1 1305 21 is_stmt 0 view .LVU719
 2279 0044 8365     		str	r3, [r0, #88]
1306:Core/Src/main.c ****   {
 2280              		.loc 1 1306 3 is_stmt 1 view .LVU720
1306:Core/Src/main.c ****   {
 2281              		.loc 1 1306 7 is_stmt 0 view .LVU721
 2282 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2283              	.LVL126:
1306:Core/Src/main.c ****   {
 2284              		.loc 1 1306 6 view .LVU722
 2285 004a 00B9     		cbnz	r0, .L106
1314:Core/Src/main.c **** 
 2286              		.loc 1 1314 1 view .LVU723
 2287 004c 08BD     		pop	{r3, pc}
 2288              	.L106:
1308:Core/Src/main.c ****   }
 2289              		.loc 1 1308 5 is_stmt 1 view .LVU724
 2290 004e FFF7FEFF 		bl	Error_Handler
 2291              	.LVL127:
 2292              	.L108:
 2293 0052 00BF     		.align	2
 2294              	.L107:
 2295 0054 00000000 		.word	hspi2
 2296 0058 00380040 		.word	1073756160
 2297              		.cfi_endproc
 2298              	.LFE371:
 2300              		.section	.text.MX_I2C2_Init,"ax",%progbits
 2301              		.align	1
 2302              		.syntax unified
 2303              		.thumb
 2304              		.thumb_func
 2305              		.fpu fpv5-d16
 2307              	MX_I2C2_Init:
 2308              	.LFB367:
1124:Core/Src/main.c **** 
 2309              		.loc 1 1124 1 view -0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 0
 2312              		@ frame_needed = 0, uses_anonymous_args = 0
 2313 0000 08B5     		push	{r3, lr}
 2314              	.LCFI39:
 2315              		.cfi_def_cfa_offset 8
 2316              		.cfi_offset 3, -8
 2317              		.cfi_offset 14, -4
1133:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2318              		.loc 1 1133 3 view .LVU726
1133:Core/Src/main.c ****   hi2c2.Init.Timing = 0x20303E5D;
 2319              		.loc 1 1133 18 is_stmt 0 view .LVU727
 2320 0002 1148     		ldr	r0, .L117
 2321 0004 114B     		ldr	r3, .L117+4
 2322 0006 0360     		str	r3, [r0]
1134:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2323              		.loc 1 1134 3 is_stmt 1 view .LVU728
1134:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 2324              		.loc 1 1134 21 is_stmt 0 view .LVU729
 2325 0008 114B     		ldr	r3, .L117+8
 2326 000a 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccEqzQ6F.s 			page 88


1135:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2327              		.loc 1 1135 3 is_stmt 1 view .LVU730
1135:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 2328              		.loc 1 1135 26 is_stmt 0 view .LVU731
 2329 000c 0023     		movs	r3, #0
 2330 000e 8360     		str	r3, [r0, #8]
1136:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2331              		.loc 1 1136 3 is_stmt 1 view .LVU732
1136:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 2332              		.loc 1 1136 29 is_stmt 0 view .LVU733
 2333 0010 0122     		movs	r2, #1
 2334 0012 C260     		str	r2, [r0, #12]
1137:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2335              		.loc 1 1137 3 is_stmt 1 view .LVU734
1137:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 2336              		.loc 1 1137 30 is_stmt 0 view .LVU735
 2337 0014 0361     		str	r3, [r0, #16]
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2338              		.loc 1 1138 3 is_stmt 1 view .LVU736
1138:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 2339              		.loc 1 1138 26 is_stmt 0 view .LVU737
 2340 0016 4361     		str	r3, [r0, #20]
1139:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2341              		.loc 1 1139 3 is_stmt 1 view .LVU738
1139:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 2342              		.loc 1 1139 31 is_stmt 0 view .LVU739
 2343 0018 8361     		str	r3, [r0, #24]
1140:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2344              		.loc 1 1140 3 is_stmt 1 view .LVU740
1140:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 2345              		.loc 1 1140 30 is_stmt 0 view .LVU741
 2346 001a C361     		str	r3, [r0, #28]
1141:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2347              		.loc 1 1141 3 is_stmt 1 view .LVU742
1141:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 2348              		.loc 1 1141 28 is_stmt 0 view .LVU743
 2349 001c 0362     		str	r3, [r0, #32]
1142:Core/Src/main.c ****   {
 2350              		.loc 1 1142 3 is_stmt 1 view .LVU744
1142:Core/Src/main.c ****   {
 2351              		.loc 1 1142 7 is_stmt 0 view .LVU745
 2352 001e FFF7FEFF 		bl	HAL_I2C_Init
 2353              	.LVL128:
1142:Core/Src/main.c ****   {
 2354              		.loc 1 1142 6 view .LVU746
 2355 0022 50B9     		cbnz	r0, .L114
1149:Core/Src/main.c ****   {
 2356              		.loc 1 1149 3 is_stmt 1 view .LVU747
1149:Core/Src/main.c ****   {
 2357              		.loc 1 1149 7 is_stmt 0 view .LVU748
 2358 0024 0021     		movs	r1, #0
 2359 0026 0848     		ldr	r0, .L117
 2360 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 2361              	.LVL129:
1149:Core/Src/main.c ****   {
 2362              		.loc 1 1149 6 view .LVU749
 2363 002c 38B9     		cbnz	r0, .L115
ARM GAS  /tmp/ccEqzQ6F.s 			page 89


1156:Core/Src/main.c ****   {
 2364              		.loc 1 1156 3 is_stmt 1 view .LVU750
1156:Core/Src/main.c ****   {
 2365              		.loc 1 1156 7 is_stmt 0 view .LVU751
 2366 002e 0021     		movs	r1, #0
 2367 0030 0548     		ldr	r0, .L117
 2368 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 2369              	.LVL130:
1156:Core/Src/main.c ****   {
 2370              		.loc 1 1156 6 view .LVU752
 2371 0036 20B9     		cbnz	r0, .L116
1164:Core/Src/main.c **** 
 2372              		.loc 1 1164 1 view .LVU753
 2373 0038 08BD     		pop	{r3, pc}
 2374              	.L114:
1144:Core/Src/main.c ****   }
 2375              		.loc 1 1144 5 is_stmt 1 view .LVU754
 2376 003a FFF7FEFF 		bl	Error_Handler
 2377              	.LVL131:
 2378              	.L115:
1151:Core/Src/main.c ****   }
 2379              		.loc 1 1151 5 view .LVU755
 2380 003e FFF7FEFF 		bl	Error_Handler
 2381              	.LVL132:
 2382              	.L116:
1158:Core/Src/main.c ****   }
 2383              		.loc 1 1158 5 view .LVU756
 2384 0042 FFF7FEFF 		bl	Error_Handler
 2385              	.LVL133:
 2386              	.L118:
 2387 0046 00BF     		.align	2
 2388              	.L117:
 2389 0048 00000000 		.word	hi2c2
 2390 004c 00580040 		.word	1073764352
 2391 0050 5D3E3020 		.word	540032605
 2392              		.cfi_endproc
 2393              	.LFE367:
 2395              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2396              		.align	1
 2397              		.syntax unified
 2398              		.thumb
 2399              		.thumb_func
 2400              		.fpu fpv5-d16
 2402              	MX_TIM2_Init:
 2403              	.LFB373:
1370:Core/Src/main.c **** 
 2404              		.loc 1 1370 1 view -0
 2405              		.cfi_startproc
 2406              		@ args = 0, pretend = 0, frame = 40
 2407              		@ frame_needed = 0, uses_anonymous_args = 0
 2408 0000 00B5     		push	{lr}
 2409              	.LCFI40:
 2410              		.cfi_def_cfa_offset 4
 2411              		.cfi_offset 14, -4
 2412 0002 8BB0     		sub	sp, sp, #44
 2413              	.LCFI41:
 2414              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccEqzQ6F.s 			page 90


1376:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2415              		.loc 1 1376 3 view .LVU758
1376:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2416              		.loc 1 1376 27 is_stmt 0 view .LVU759
 2417 0004 0023     		movs	r3, #0
 2418 0006 0793     		str	r3, [sp, #28]
 2419 0008 0893     		str	r3, [sp, #32]
 2420 000a 0993     		str	r3, [sp, #36]
1377:Core/Src/main.c **** 
 2421              		.loc 1 1377 3 is_stmt 1 view .LVU760
1377:Core/Src/main.c **** 
 2422              		.loc 1 1377 22 is_stmt 0 view .LVU761
 2423 000c 0093     		str	r3, [sp]
 2424 000e 0193     		str	r3, [sp, #4]
 2425 0010 0293     		str	r3, [sp, #8]
 2426 0012 0393     		str	r3, [sp, #12]
 2427 0014 0493     		str	r3, [sp, #16]
 2428 0016 0593     		str	r3, [sp, #20]
 2429 0018 0693     		str	r3, [sp, #24]
1382:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2430              		.loc 1 1382 3 is_stmt 1 view .LVU762
1382:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2431              		.loc 1 1382 18 is_stmt 0 view .LVU763
 2432 001a 1648     		ldr	r0, .L127
 2433 001c 4FF08042 		mov	r2, #1073741824
 2434 0020 0260     		str	r2, [r0]
1383:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2435              		.loc 1 1383 3 is_stmt 1 view .LVU764
1383:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2436              		.loc 1 1383 24 is_stmt 0 view .LVU765
 2437 0022 4360     		str	r3, [r0, #4]
1384:Core/Src/main.c ****   htim2.Init.Period = 90;
 2438              		.loc 1 1384 3 is_stmt 1 view .LVU766
1384:Core/Src/main.c ****   htim2.Init.Period = 90;
 2439              		.loc 1 1384 26 is_stmt 0 view .LVU767
 2440 0024 8360     		str	r3, [r0, #8]
1385:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2441              		.loc 1 1385 3 is_stmt 1 view .LVU768
1385:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2442              		.loc 1 1385 21 is_stmt 0 view .LVU769
 2443 0026 5A22     		movs	r2, #90
 2444 0028 C260     		str	r2, [r0, #12]
1386:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2445              		.loc 1 1386 3 is_stmt 1 view .LVU770
1386:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2446              		.loc 1 1386 28 is_stmt 0 view .LVU771
 2447 002a 0361     		str	r3, [r0, #16]
1387:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2448              		.loc 1 1387 3 is_stmt 1 view .LVU772
1387:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 2449              		.loc 1 1387 32 is_stmt 0 view .LVU773
 2450 002c 8361     		str	r3, [r0, #24]
1388:Core/Src/main.c ****   {
 2451              		.loc 1 1388 3 is_stmt 1 view .LVU774
1388:Core/Src/main.c ****   {
 2452              		.loc 1 1388 7 is_stmt 0 view .LVU775
 2453 002e FFF7FEFF 		bl	HAL_TIM_PWM_Init
ARM GAS  /tmp/ccEqzQ6F.s 			page 91


 2454              	.LVL134:
1388:Core/Src/main.c ****   {
 2455              		.loc 1 1388 6 view .LVU776
 2456 0032 C8B9     		cbnz	r0, .L124
1392:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2457              		.loc 1 1392 3 is_stmt 1 view .LVU777
1392:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2458              		.loc 1 1392 37 is_stmt 0 view .LVU778
 2459 0034 0023     		movs	r3, #0
 2460 0036 0793     		str	r3, [sp, #28]
1393:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2461              		.loc 1 1393 3 is_stmt 1 view .LVU779
1393:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2462              		.loc 1 1393 33 is_stmt 0 view .LVU780
 2463 0038 0993     		str	r3, [sp, #36]
1394:Core/Src/main.c ****   {
 2464              		.loc 1 1394 3 is_stmt 1 view .LVU781
1394:Core/Src/main.c ****   {
 2465              		.loc 1 1394 7 is_stmt 0 view .LVU782
 2466 003a 07A9     		add	r1, sp, #28
 2467 003c 0D48     		ldr	r0, .L127
 2468 003e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2469              	.LVL135:
1394:Core/Src/main.c ****   {
 2470              		.loc 1 1394 6 view .LVU783
 2471 0042 98B9     		cbnz	r0, .L125
1398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2472              		.loc 1 1398 3 is_stmt 1 view .LVU784
1398:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2473              		.loc 1 1398 20 is_stmt 0 view .LVU785
 2474 0044 6023     		movs	r3, #96
 2475 0046 0093     		str	r3, [sp]
1399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2476              		.loc 1 1399 3 is_stmt 1 view .LVU786
1399:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2477              		.loc 1 1399 19 is_stmt 0 view .LVU787
 2478 0048 0023     		movs	r3, #0
 2479 004a 0193     		str	r3, [sp, #4]
1400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2480              		.loc 1 1400 3 is_stmt 1 view .LVU788
1400:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2481              		.loc 1 1400 24 is_stmt 0 view .LVU789
 2482 004c 0293     		str	r3, [sp, #8]
1401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2483              		.loc 1 1401 3 is_stmt 1 view .LVU790
1401:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 2484              		.loc 1 1401 24 is_stmt 0 view .LVU791
 2485 004e 0493     		str	r3, [sp, #16]
1402:Core/Src/main.c ****   {
 2486              		.loc 1 1402 3 is_stmt 1 view .LVU792
1402:Core/Src/main.c ****   {
 2487              		.loc 1 1402 7 is_stmt 0 view .LVU793
 2488 0050 0822     		movs	r2, #8
 2489 0052 6946     		mov	r1, sp
 2490 0054 0748     		ldr	r0, .L127
 2491 0056 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2492              	.LVL136:
ARM GAS  /tmp/ccEqzQ6F.s 			page 92


1402:Core/Src/main.c ****   {
 2493              		.loc 1 1402 6 view .LVU794
 2494 005a 48B9     		cbnz	r0, .L126
1409:Core/Src/main.c **** 
 2495              		.loc 1 1409 3 is_stmt 1 view .LVU795
 2496 005c 0548     		ldr	r0, .L127
 2497 005e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2498              	.LVL137:
1411:Core/Src/main.c **** 
 2499              		.loc 1 1411 1 is_stmt 0 view .LVU796
 2500 0062 0BB0     		add	sp, sp, #44
 2501              	.LCFI42:
 2502              		.cfi_remember_state
 2503              		.cfi_def_cfa_offset 4
 2504              		@ sp needed
 2505 0064 5DF804FB 		ldr	pc, [sp], #4
 2506              	.L124:
 2507              	.LCFI43:
 2508              		.cfi_restore_state
1390:Core/Src/main.c ****   }
 2509              		.loc 1 1390 5 is_stmt 1 view .LVU797
 2510 0068 FFF7FEFF 		bl	Error_Handler
 2511              	.LVL138:
 2512              	.L125:
1396:Core/Src/main.c ****   }
 2513              		.loc 1 1396 5 view .LVU798
 2514 006c FFF7FEFF 		bl	Error_Handler
 2515              	.LVL139:
 2516              	.L126:
1404:Core/Src/main.c ****   }
 2517              		.loc 1 1404 5 view .LVU799
 2518 0070 FFF7FEFF 		bl	Error_Handler
 2519              	.LVL140:
 2520              	.L128:
 2521              		.align	2
 2522              	.L127:
 2523 0074 00000000 		.word	htim2
 2524              		.cfi_endproc
 2525              	.LFE373:
 2527              		.section	.text.MX_TIM5_Init,"ax",%progbits
 2528              		.align	1
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2532              		.fpu fpv5-d16
 2534              	MX_TIM5_Init:
 2535              	.LFB376:
1533:Core/Src/main.c **** 
 2536              		.loc 1 1533 1 view -0
 2537              		.cfi_startproc
 2538              		@ args = 0, pretend = 0, frame = 40
 2539              		@ frame_needed = 0, uses_anonymous_args = 0
 2540 0000 00B5     		push	{lr}
 2541              	.LCFI44:
 2542              		.cfi_def_cfa_offset 4
 2543              		.cfi_offset 14, -4
 2544 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccEqzQ6F.s 			page 93


 2545              	.LCFI45:
 2546              		.cfi_def_cfa_offset 48
1539:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2547              		.loc 1 1539 3 view .LVU801
1539:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2548              		.loc 1 1539 27 is_stmt 0 view .LVU802
 2549 0004 0023     		movs	r3, #0
 2550 0006 0793     		str	r3, [sp, #28]
 2551 0008 0893     		str	r3, [sp, #32]
 2552 000a 0993     		str	r3, [sp, #36]
1540:Core/Src/main.c **** 
 2553              		.loc 1 1540 3 is_stmt 1 view .LVU803
1540:Core/Src/main.c **** 
 2554              		.loc 1 1540 22 is_stmt 0 view .LVU804
 2555 000c 0093     		str	r3, [sp]
 2556 000e 0193     		str	r3, [sp, #4]
 2557 0010 0293     		str	r3, [sp, #8]
 2558 0012 0393     		str	r3, [sp, #12]
 2559 0014 0493     		str	r3, [sp, #16]
 2560 0016 0593     		str	r3, [sp, #20]
 2561 0018 0693     		str	r3, [sp, #24]
1545:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2562              		.loc 1 1545 3 is_stmt 1 view .LVU805
1545:Core/Src/main.c ****   htim5.Init.Prescaler = 0;
 2563              		.loc 1 1545 18 is_stmt 0 view .LVU806
 2564 001a 1648     		ldr	r0, .L137
 2565 001c 164A     		ldr	r2, .L137+4
 2566 001e 0260     		str	r2, [r0]
1546:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2567              		.loc 1 1546 3 is_stmt 1 view .LVU807
1546:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 2568              		.loc 1 1546 24 is_stmt 0 view .LVU808
 2569 0020 4360     		str	r3, [r0, #4]
1547:Core/Src/main.c ****   htim5.Init.Period = 90;
 2570              		.loc 1 1547 3 is_stmt 1 view .LVU809
1547:Core/Src/main.c ****   htim5.Init.Period = 90;
 2571              		.loc 1 1547 26 is_stmt 0 view .LVU810
 2572 0022 8360     		str	r3, [r0, #8]
1548:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2573              		.loc 1 1548 3 is_stmt 1 view .LVU811
1548:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2574              		.loc 1 1548 21 is_stmt 0 view .LVU812
 2575 0024 5A22     		movs	r2, #90
 2576 0026 C260     		str	r2, [r0, #12]
1549:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2577              		.loc 1 1549 3 is_stmt 1 view .LVU813
1549:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2578              		.loc 1 1549 28 is_stmt 0 view .LVU814
 2579 0028 0361     		str	r3, [r0, #16]
1550:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2580              		.loc 1 1550 3 is_stmt 1 view .LVU815
1550:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 2581              		.loc 1 1550 32 is_stmt 0 view .LVU816
 2582 002a 8361     		str	r3, [r0, #24]
1551:Core/Src/main.c ****   {
 2583              		.loc 1 1551 3 is_stmt 1 view .LVU817
1551:Core/Src/main.c ****   {
ARM GAS  /tmp/ccEqzQ6F.s 			page 94


 2584              		.loc 1 1551 7 is_stmt 0 view .LVU818
 2585 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2586              	.LVL141:
1551:Core/Src/main.c ****   {
 2587              		.loc 1 1551 6 view .LVU819
 2588 0030 C8B9     		cbnz	r0, .L134
1555:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2589              		.loc 1 1555 3 is_stmt 1 view .LVU820
1555:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2590              		.loc 1 1555 37 is_stmt 0 view .LVU821
 2591 0032 0023     		movs	r3, #0
 2592 0034 0793     		str	r3, [sp, #28]
1556:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2593              		.loc 1 1556 3 is_stmt 1 view .LVU822
1556:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 2594              		.loc 1 1556 33 is_stmt 0 view .LVU823
 2595 0036 0993     		str	r3, [sp, #36]
1557:Core/Src/main.c ****   {
 2596              		.loc 1 1557 3 is_stmt 1 view .LVU824
1557:Core/Src/main.c ****   {
 2597              		.loc 1 1557 7 is_stmt 0 view .LVU825
 2598 0038 07A9     		add	r1, sp, #28
 2599 003a 0E48     		ldr	r0, .L137
 2600 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2601              	.LVL142:
1557:Core/Src/main.c ****   {
 2602              		.loc 1 1557 6 view .LVU826
 2603 0040 98B9     		cbnz	r0, .L135
1561:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2604              		.loc 1 1561 3 is_stmt 1 view .LVU827
1561:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2605              		.loc 1 1561 20 is_stmt 0 view .LVU828
 2606 0042 6023     		movs	r3, #96
 2607 0044 0093     		str	r3, [sp]
1562:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2608              		.loc 1 1562 3 is_stmt 1 view .LVU829
1562:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2609              		.loc 1 1562 19 is_stmt 0 view .LVU830
 2610 0046 0023     		movs	r3, #0
 2611 0048 0193     		str	r3, [sp, #4]
1563:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2612              		.loc 1 1563 3 is_stmt 1 view .LVU831
1563:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2613              		.loc 1 1563 24 is_stmt 0 view .LVU832
 2614 004a 0293     		str	r3, [sp, #8]
1564:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2615              		.loc 1 1564 3 is_stmt 1 view .LVU833
1564:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 2616              		.loc 1 1564 24 is_stmt 0 view .LVU834
 2617 004c 0493     		str	r3, [sp, #16]
1565:Core/Src/main.c ****   {
 2618              		.loc 1 1565 3 is_stmt 1 view .LVU835
1565:Core/Src/main.c ****   {
 2619              		.loc 1 1565 7 is_stmt 0 view .LVU836
 2620 004e 0C22     		movs	r2, #12
 2621 0050 6946     		mov	r1, sp
 2622 0052 0848     		ldr	r0, .L137
ARM GAS  /tmp/ccEqzQ6F.s 			page 95


 2623 0054 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2624              	.LVL143:
1565:Core/Src/main.c ****   {
 2625              		.loc 1 1565 6 view .LVU837
 2626 0058 48B9     		cbnz	r0, .L136
1572:Core/Src/main.c **** 
 2627              		.loc 1 1572 3 is_stmt 1 view .LVU838
 2628 005a 0648     		ldr	r0, .L137
 2629 005c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2630              	.LVL144:
1574:Core/Src/main.c **** 
 2631              		.loc 1 1574 1 is_stmt 0 view .LVU839
 2632 0060 0BB0     		add	sp, sp, #44
 2633              	.LCFI46:
 2634              		.cfi_remember_state
 2635              		.cfi_def_cfa_offset 4
 2636              		@ sp needed
 2637 0062 5DF804FB 		ldr	pc, [sp], #4
 2638              	.L134:
 2639              	.LCFI47:
 2640              		.cfi_restore_state
1553:Core/Src/main.c ****   }
 2641              		.loc 1 1553 5 is_stmt 1 view .LVU840
 2642 0066 FFF7FEFF 		bl	Error_Handler
 2643              	.LVL145:
 2644              	.L135:
1559:Core/Src/main.c ****   }
 2645              		.loc 1 1559 5 view .LVU841
 2646 006a FFF7FEFF 		bl	Error_Handler
 2647              	.LVL146:
 2648              	.L136:
1567:Core/Src/main.c ****   }
 2649              		.loc 1 1567 5 view .LVU842
 2650 006e FFF7FEFF 		bl	Error_Handler
 2651              	.LVL147:
 2652              	.L138:
 2653 0072 00BF     		.align	2
 2654              	.L137:
 2655 0074 00000000 		.word	htim5
 2656 0078 000C0040 		.word	1073744896
 2657              		.cfi_endproc
 2658              	.LFE376:
 2660              		.section	.text.MX_TIM3_Init,"ax",%progbits
 2661              		.align	1
 2662              		.syntax unified
 2663              		.thumb
 2664              		.thumb_func
 2665              		.fpu fpv5-d16
 2667              	MX_TIM3_Init:
 2668              	.LFB374:
1419:Core/Src/main.c **** 
 2669              		.loc 1 1419 1 view -0
 2670              		.cfi_startproc
 2671              		@ args = 0, pretend = 0, frame = 40
 2672              		@ frame_needed = 0, uses_anonymous_args = 0
 2673 0000 00B5     		push	{lr}
 2674              	.LCFI48:
ARM GAS  /tmp/ccEqzQ6F.s 			page 96


 2675              		.cfi_def_cfa_offset 4
 2676              		.cfi_offset 14, -4
 2677 0002 8BB0     		sub	sp, sp, #44
 2678              	.LCFI49:
 2679              		.cfi_def_cfa_offset 48
1425:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2680              		.loc 1 1425 3 view .LVU844
1425:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2681              		.loc 1 1425 27 is_stmt 0 view .LVU845
 2682 0004 0023     		movs	r3, #0
 2683 0006 0793     		str	r3, [sp, #28]
 2684 0008 0893     		str	r3, [sp, #32]
 2685 000a 0993     		str	r3, [sp, #36]
1426:Core/Src/main.c **** 
 2686              		.loc 1 1426 3 is_stmt 1 view .LVU846
1426:Core/Src/main.c **** 
 2687              		.loc 1 1426 22 is_stmt 0 view .LVU847
 2688 000c 0093     		str	r3, [sp]
 2689 000e 0193     		str	r3, [sp, #4]
 2690 0010 0293     		str	r3, [sp, #8]
 2691 0012 0393     		str	r3, [sp, #12]
 2692 0014 0493     		str	r3, [sp, #16]
 2693 0016 0593     		str	r3, [sp, #20]
 2694 0018 0693     		str	r3, [sp, #24]
1431:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2695              		.loc 1 1431 3 is_stmt 1 view .LVU848
1431:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 2696              		.loc 1 1431 18 is_stmt 0 view .LVU849
 2697 001a 1948     		ldr	r0, .L149
 2698 001c 194A     		ldr	r2, .L149+4
 2699 001e 0260     		str	r2, [r0]
1432:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2700              		.loc 1 1432 3 is_stmt 1 view .LVU850
1432:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 2701              		.loc 1 1432 24 is_stmt 0 view .LVU851
 2702 0020 4360     		str	r3, [r0, #4]
1433:Core/Src/main.c ****   htim3.Init.Period = 90;
 2703              		.loc 1 1433 3 is_stmt 1 view .LVU852
1433:Core/Src/main.c ****   htim3.Init.Period = 90;
 2704              		.loc 1 1433 26 is_stmt 0 view .LVU853
 2705 0022 8360     		str	r3, [r0, #8]
1434:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2706              		.loc 1 1434 3 is_stmt 1 view .LVU854
1434:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2707              		.loc 1 1434 21 is_stmt 0 view .LVU855
 2708 0024 5A22     		movs	r2, #90
 2709 0026 C260     		str	r2, [r0, #12]
1435:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2710              		.loc 1 1435 3 is_stmt 1 view .LVU856
1435:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2711              		.loc 1 1435 28 is_stmt 0 view .LVU857
 2712 0028 0361     		str	r3, [r0, #16]
1436:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 2713              		.loc 1 1436 3 is_stmt 1 view .LVU858
1436:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 2714              		.loc 1 1436 32 is_stmt 0 view .LVU859
 2715 002a 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccEqzQ6F.s 			page 97


1437:Core/Src/main.c ****   {
 2716              		.loc 1 1437 3 is_stmt 1 view .LVU860
1437:Core/Src/main.c ****   {
 2717              		.loc 1 1437 7 is_stmt 0 view .LVU861
 2718 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 2719              	.LVL148:
1437:Core/Src/main.c ****   {
 2720              		.loc 1 1437 6 view .LVU862
 2721 0030 F0B9     		cbnz	r0, .L145
1441:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2722              		.loc 1 1441 3 is_stmt 1 view .LVU863
1441:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2723              		.loc 1 1441 37 is_stmt 0 view .LVU864
 2724 0032 0023     		movs	r3, #0
 2725 0034 0793     		str	r3, [sp, #28]
1442:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2726              		.loc 1 1442 3 is_stmt 1 view .LVU865
1442:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 2727              		.loc 1 1442 33 is_stmt 0 view .LVU866
 2728 0036 0993     		str	r3, [sp, #36]
1443:Core/Src/main.c ****   {
 2729              		.loc 1 1443 3 is_stmt 1 view .LVU867
1443:Core/Src/main.c ****   {
 2730              		.loc 1 1443 7 is_stmt 0 view .LVU868
 2731 0038 07A9     		add	r1, sp, #28
 2732 003a 1148     		ldr	r0, .L149
 2733 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2734              	.LVL149:
1443:Core/Src/main.c ****   {
 2735              		.loc 1 1443 6 view .LVU869
 2736 0040 C0B9     		cbnz	r0, .L146
1447:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2737              		.loc 1 1447 3 is_stmt 1 view .LVU870
1447:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2738              		.loc 1 1447 20 is_stmt 0 view .LVU871
 2739 0042 6023     		movs	r3, #96
 2740 0044 0093     		str	r3, [sp]
1448:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2741              		.loc 1 1448 3 is_stmt 1 view .LVU872
1448:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2742              		.loc 1 1448 19 is_stmt 0 view .LVU873
 2743 0046 0022     		movs	r2, #0
 2744 0048 0192     		str	r2, [sp, #4]
1449:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2745              		.loc 1 1449 3 is_stmt 1 view .LVU874
1449:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2746              		.loc 1 1449 24 is_stmt 0 view .LVU875
 2747 004a 0292     		str	r2, [sp, #8]
1450:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2748              		.loc 1 1450 3 is_stmt 1 view .LVU876
1450:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2749              		.loc 1 1450 24 is_stmt 0 view .LVU877
 2750 004c 0492     		str	r2, [sp, #16]
1451:Core/Src/main.c ****   {
 2751              		.loc 1 1451 3 is_stmt 1 view .LVU878
1451:Core/Src/main.c ****   {
 2752              		.loc 1 1451 7 is_stmt 0 view .LVU879
ARM GAS  /tmp/ccEqzQ6F.s 			page 98


 2753 004e 6946     		mov	r1, sp
 2754 0050 0B48     		ldr	r0, .L149
 2755 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2756              	.LVL150:
1451:Core/Src/main.c ****   {
 2757              		.loc 1 1451 6 view .LVU880
 2758 0056 78B9     		cbnz	r0, .L147
1455:Core/Src/main.c ****   {
 2759              		.loc 1 1455 3 is_stmt 1 view .LVU881
1455:Core/Src/main.c ****   {
 2760              		.loc 1 1455 7 is_stmt 0 view .LVU882
 2761 0058 0422     		movs	r2, #4
 2762 005a 6946     		mov	r1, sp
 2763 005c 0848     		ldr	r0, .L149
 2764 005e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2765              	.LVL151:
1455:Core/Src/main.c ****   {
 2766              		.loc 1 1455 6 view .LVU883
 2767 0062 58B9     		cbnz	r0, .L148
1462:Core/Src/main.c **** 
 2768              		.loc 1 1462 3 is_stmt 1 view .LVU884
 2769 0064 0648     		ldr	r0, .L149
 2770 0066 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2771              	.LVL152:
1464:Core/Src/main.c **** 
 2772              		.loc 1 1464 1 is_stmt 0 view .LVU885
 2773 006a 0BB0     		add	sp, sp, #44
 2774              	.LCFI50:
 2775              		.cfi_remember_state
 2776              		.cfi_def_cfa_offset 4
 2777              		@ sp needed
 2778 006c 5DF804FB 		ldr	pc, [sp], #4
 2779              	.L145:
 2780              	.LCFI51:
 2781              		.cfi_restore_state
1439:Core/Src/main.c ****   }
 2782              		.loc 1 1439 5 is_stmt 1 view .LVU886
 2783 0070 FFF7FEFF 		bl	Error_Handler
 2784              	.LVL153:
 2785              	.L146:
1445:Core/Src/main.c ****   }
 2786              		.loc 1 1445 5 view .LVU887
 2787 0074 FFF7FEFF 		bl	Error_Handler
 2788              	.LVL154:
 2789              	.L147:
1453:Core/Src/main.c ****   }
 2790              		.loc 1 1453 5 view .LVU888
 2791 0078 FFF7FEFF 		bl	Error_Handler
 2792              	.LVL155:
 2793              	.L148:
1457:Core/Src/main.c ****   }
 2794              		.loc 1 1457 5 view .LVU889
 2795 007c FFF7FEFF 		bl	Error_Handler
 2796              	.LVL156:
 2797              	.L150:
 2798              		.align	2
 2799              	.L149:
ARM GAS  /tmp/ccEqzQ6F.s 			page 99


 2800 0080 00000000 		.word	htim3
 2801 0084 00040040 		.word	1073742848
 2802              		.cfi_endproc
 2803              	.LFE374:
 2805              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2806              		.align	1
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2810              		.fpu fpv5-d16
 2812              	MX_SPI1_Init:
 2813              	.LFB370:
1226:Core/Src/main.c **** 
 2814              		.loc 1 1226 1 view -0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 0
 2817              		@ frame_needed = 0, uses_anonymous_args = 0
 2818 0000 08B5     		push	{r3, lr}
 2819              	.LCFI52:
 2820              		.cfi_def_cfa_offset 8
 2821              		.cfi_offset 3, -8
 2822              		.cfi_offset 14, -4
1236:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2823              		.loc 1 1236 3 view .LVU891
1236:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2824              		.loc 1 1236 18 is_stmt 0 view .LVU892
 2825 0002 1448     		ldr	r0, .L155
 2826 0004 144B     		ldr	r3, .L155+4
 2827 0006 0360     		str	r3, [r0]
1237:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2828              		.loc 1 1237 3 is_stmt 1 view .LVU893
1237:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2829              		.loc 1 1237 19 is_stmt 0 view .LVU894
 2830 0008 4FF48003 		mov	r3, #4194304
 2831 000c 4360     		str	r3, [r0, #4]
1238:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2832              		.loc 1 1238 3 is_stmt 1 view .LVU895
1238:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2833              		.loc 1 1238 24 is_stmt 0 view .LVU896
 2834 000e 0023     		movs	r3, #0
 2835 0010 8360     		str	r3, [r0, #8]
1239:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2836              		.loc 1 1239 3 is_stmt 1 view .LVU897
1239:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2837              		.loc 1 1239 23 is_stmt 0 view .LVU898
 2838 0012 0722     		movs	r2, #7
 2839 0014 C260     		str	r2, [r0, #12]
1240:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2840              		.loc 1 1240 3 is_stmt 1 view .LVU899
1240:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2841              		.loc 1 1240 26 is_stmt 0 view .LVU900
 2842 0016 0361     		str	r3, [r0, #16]
1241:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2843              		.loc 1 1241 3 is_stmt 1 view .LVU901
1241:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2844              		.loc 1 1241 23 is_stmt 0 view .LVU902
 2845 0018 4361     		str	r3, [r0, #20]
ARM GAS  /tmp/ccEqzQ6F.s 			page 100


1242:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2846              		.loc 1 1242 3 is_stmt 1 view .LVU903
1242:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 2847              		.loc 1 1242 18 is_stmt 0 view .LVU904
 2848 001a 4FF08062 		mov	r2, #67108864
 2849 001e 8261     		str	r2, [r0, #24]
1243:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2850              		.loc 1 1243 3 is_stmt 1 view .LVU905
1243:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2851              		.loc 1 1243 32 is_stmt 0 view .LVU906
 2852 0020 4FF0C042 		mov	r2, #1610612736
 2853 0024 C261     		str	r2, [r0, #28]
1244:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2854              		.loc 1 1244 3 is_stmt 1 view .LVU907
1244:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2855              		.loc 1 1244 23 is_stmt 0 view .LVU908
 2856 0026 0362     		str	r3, [r0, #32]
1245:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2857              		.loc 1 1245 3 is_stmt 1 view .LVU909
1245:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2858              		.loc 1 1245 21 is_stmt 0 view .LVU910
 2859 0028 4362     		str	r3, [r0, #36]
1246:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2860              		.loc 1 1246 3 is_stmt 1 view .LVU911
1246:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 0x0;
 2861              		.loc 1 1246 29 is_stmt 0 view .LVU912
 2862 002a 8362     		str	r3, [r0, #40]
1247:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2863              		.loc 1 1247 3 is_stmt 1 view .LVU913
1247:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2864              		.loc 1 1247 28 is_stmt 0 view .LVU914
 2865 002c C362     		str	r3, [r0, #44]
1248:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2866              		.loc 1 1248 3 is_stmt 1 view .LVU915
1248:Core/Src/main.c ****   hspi1.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 2867              		.loc 1 1248 23 is_stmt 0 view .LVU916
 2868 002e 4FF08042 		mov	r2, #1073741824
 2869 0032 4263     		str	r2, [r0, #52]
1249:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2870              		.loc 1 1249 3 is_stmt 1 view .LVU917
1249:Core/Src/main.c ****   hspi1.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 2871              		.loc 1 1249 26 is_stmt 0 view .LVU918
 2872 0034 8363     		str	r3, [r0, #56]
1250:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2873              		.loc 1 1250 3 is_stmt 1 view .LVU919
1250:Core/Src/main.c ****   hspi1.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2874              		.loc 1 1250 28 is_stmt 0 view .LVU920
 2875 0036 C363     		str	r3, [r0, #60]
1251:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2876              		.loc 1 1251 3 is_stmt 1 view .LVU921
1251:Core/Src/main.c ****   hspi1.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 2877              		.loc 1 1251 41 is_stmt 0 view .LVU922
 2878 0038 0364     		str	r3, [r0, #64]
1252:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2879              		.loc 1 1252 3 is_stmt 1 view .LVU923
1252:Core/Src/main.c ****   hspi1.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 2880              		.loc 1 1252 41 is_stmt 0 view .LVU924
ARM GAS  /tmp/ccEqzQ6F.s 			page 101


 2881 003a 4364     		str	r3, [r0, #68]
1253:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2882              		.loc 1 1253 3 is_stmt 1 view .LVU925
1253:Core/Src/main.c ****   hspi1.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 2883              		.loc 1 1253 31 is_stmt 0 view .LVU926
 2884 003c 8364     		str	r3, [r0, #72]
1254:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2885              		.loc 1 1254 3 is_stmt 1 view .LVU927
1254:Core/Src/main.c ****   hspi1.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 2886              		.loc 1 1254 38 is_stmt 0 view .LVU928
 2887 003e C364     		str	r3, [r0, #76]
1255:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2888              		.loc 1 1255 3 is_stmt 1 view .LVU929
1255:Core/Src/main.c ****   hspi1.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 2889              		.loc 1 1255 37 is_stmt 0 view .LVU930
 2890 0040 0365     		str	r3, [r0, #80]
1256:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2891              		.loc 1 1256 3 is_stmt 1 view .LVU931
1256:Core/Src/main.c ****   hspi1.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 2892              		.loc 1 1256 32 is_stmt 0 view .LVU932
 2893 0042 4365     		str	r3, [r0, #84]
1257:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2894              		.loc 1 1257 3 is_stmt 1 view .LVU933
1257:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2895              		.loc 1 1257 21 is_stmt 0 view .LVU934
 2896 0044 8365     		str	r3, [r0, #88]
1258:Core/Src/main.c ****   {
 2897              		.loc 1 1258 3 is_stmt 1 view .LVU935
1258:Core/Src/main.c ****   {
 2898              		.loc 1 1258 7 is_stmt 0 view .LVU936
 2899 0046 FFF7FEFF 		bl	HAL_SPI_Init
 2900              	.LVL157:
1258:Core/Src/main.c ****   {
 2901              		.loc 1 1258 6 view .LVU937
 2902 004a 00B9     		cbnz	r0, .L154
1266:Core/Src/main.c **** 
 2903              		.loc 1 1266 1 view .LVU938
 2904 004c 08BD     		pop	{r3, pc}
 2905              	.L154:
1260:Core/Src/main.c ****   }
 2906              		.loc 1 1260 5 is_stmt 1 view .LVU939
 2907 004e FFF7FEFF 		bl	Error_Handler
 2908              	.LVL158:
 2909              	.L156:
 2910 0052 00BF     		.align	2
 2911              	.L155:
 2912 0054 00000000 		.word	hspi1
 2913 0058 00300140 		.word	1073819648
 2914              		.cfi_endproc
 2915              	.LFE370:
 2917              		.section	.text.MX_UART4_Init,"ax",%progbits
 2918              		.align	1
 2919              		.syntax unified
 2920              		.thumb
 2921              		.thumb_func
 2922              		.fpu fpv5-d16
 2924              	MX_UART4_Init:
ARM GAS  /tmp/ccEqzQ6F.s 			page 102


 2925              	.LFB379:
1644:Core/Src/main.c **** 
 2926              		.loc 1 1644 1 view -0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 0
 2929              		@ frame_needed = 0, uses_anonymous_args = 0
 2930 0000 08B5     		push	{r3, lr}
 2931              	.LCFI53:
 2932              		.cfi_def_cfa_offset 8
 2933              		.cfi_offset 3, -8
 2934              		.cfi_offset 14, -4
1653:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2935              		.loc 1 1653 3 view .LVU941
1653:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 2936              		.loc 1 1653 19 is_stmt 0 view .LVU942
 2937 0002 1548     		ldr	r0, .L167
 2938 0004 154B     		ldr	r3, .L167+4
 2939 0006 0360     		str	r3, [r0]
1654:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2940              		.loc 1 1654 3 is_stmt 1 view .LVU943
1654:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 2941              		.loc 1 1654 24 is_stmt 0 view .LVU944
 2942 0008 4FF4E133 		mov	r3, #115200
 2943 000c 4360     		str	r3, [r0, #4]
1655:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2944              		.loc 1 1655 3 is_stmt 1 view .LVU945
1655:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 2945              		.loc 1 1655 26 is_stmt 0 view .LVU946
 2946 000e 0023     		movs	r3, #0
 2947 0010 8360     		str	r3, [r0, #8]
1656:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2948              		.loc 1 1656 3 is_stmt 1 view .LVU947
1656:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 2949              		.loc 1 1656 24 is_stmt 0 view .LVU948
 2950 0012 C360     		str	r3, [r0, #12]
1657:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2951              		.loc 1 1657 3 is_stmt 1 view .LVU949
1657:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 2952              		.loc 1 1657 22 is_stmt 0 view .LVU950
 2953 0014 0361     		str	r3, [r0, #16]
1658:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2954              		.loc 1 1658 3 is_stmt 1 view .LVU951
1658:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2955              		.loc 1 1658 20 is_stmt 0 view .LVU952
 2956 0016 0C22     		movs	r2, #12
 2957 0018 4261     		str	r2, [r0, #20]
1659:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2958              		.loc 1 1659 3 is_stmt 1 view .LVU953
1659:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 2959              		.loc 1 1659 25 is_stmt 0 view .LVU954
 2960 001a 8361     		str	r3, [r0, #24]
1660:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2961              		.loc 1 1660 3 is_stmt 1 view .LVU955
1660:Core/Src/main.c ****   huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2962              		.loc 1 1660 28 is_stmt 0 view .LVU956
 2963 001c C361     		str	r3, [r0, #28]
1661:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
ARM GAS  /tmp/ccEqzQ6F.s 			page 103


 2964              		.loc 1 1661 3 is_stmt 1 view .LVU957
1661:Core/Src/main.c ****   huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2965              		.loc 1 1661 30 is_stmt 0 view .LVU958
 2966 001e 0362     		str	r3, [r0, #32]
1662:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2967              		.loc 1 1662 3 is_stmt 1 view .LVU959
1662:Core/Src/main.c ****   huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2968              		.loc 1 1662 30 is_stmt 0 view .LVU960
 2969 0020 4362     		str	r3, [r0, #36]
1663:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2970              		.loc 1 1663 3 is_stmt 1 view .LVU961
1663:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 2971              		.loc 1 1663 38 is_stmt 0 view .LVU962
 2972 0022 8362     		str	r3, [r0, #40]
1664:Core/Src/main.c ****   {
 2973              		.loc 1 1664 3 is_stmt 1 view .LVU963
1664:Core/Src/main.c ****   {
 2974              		.loc 1 1664 7 is_stmt 0 view .LVU964
 2975 0024 FFF7FEFF 		bl	HAL_UART_Init
 2976              	.LVL159:
1664:Core/Src/main.c ****   {
 2977              		.loc 1 1664 6 view .LVU965
 2978 0028 70B9     		cbnz	r0, .L163
1668:Core/Src/main.c ****   {
 2979              		.loc 1 1668 3 is_stmt 1 view .LVU966
1668:Core/Src/main.c ****   {
 2980              		.loc 1 1668 7 is_stmt 0 view .LVU967
 2981 002a 0021     		movs	r1, #0
 2982 002c 0A48     		ldr	r0, .L167
 2983 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 2984              	.LVL160:
1668:Core/Src/main.c ****   {
 2985              		.loc 1 1668 6 view .LVU968
 2986 0032 58B9     		cbnz	r0, .L164
1672:Core/Src/main.c ****   {
 2987              		.loc 1 1672 3 is_stmt 1 view .LVU969
1672:Core/Src/main.c ****   {
 2988              		.loc 1 1672 7 is_stmt 0 view .LVU970
 2989 0034 0021     		movs	r1, #0
 2990 0036 0848     		ldr	r0, .L167
 2991 0038 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 2992              	.LVL161:
1672:Core/Src/main.c ****   {
 2993              		.loc 1 1672 6 view .LVU971
 2994 003c 40B9     		cbnz	r0, .L165
1676:Core/Src/main.c ****   {
 2995              		.loc 1 1676 3 is_stmt 1 view .LVU972
1676:Core/Src/main.c ****   {
 2996              		.loc 1 1676 7 is_stmt 0 view .LVU973
 2997 003e 0648     		ldr	r0, .L167
 2998 0040 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 2999              	.LVL162:
1676:Core/Src/main.c ****   {
 3000              		.loc 1 1676 6 view .LVU974
 3001 0044 30B9     		cbnz	r0, .L166
1684:Core/Src/main.c **** 
 3002              		.loc 1 1684 1 view .LVU975
ARM GAS  /tmp/ccEqzQ6F.s 			page 104


 3003 0046 08BD     		pop	{r3, pc}
 3004              	.L163:
1666:Core/Src/main.c ****   }
 3005              		.loc 1 1666 5 is_stmt 1 view .LVU976
 3006 0048 FFF7FEFF 		bl	Error_Handler
 3007              	.LVL163:
 3008              	.L164:
1670:Core/Src/main.c ****   }
 3009              		.loc 1 1670 5 view .LVU977
 3010 004c FFF7FEFF 		bl	Error_Handler
 3011              	.LVL164:
 3012              	.L165:
1674:Core/Src/main.c ****   }
 3013              		.loc 1 1674 5 view .LVU978
 3014 0050 FFF7FEFF 		bl	Error_Handler
 3015              	.LVL165:
 3016              	.L166:
1678:Core/Src/main.c ****   }
 3017              		.loc 1 1678 5 view .LVU979
 3018 0054 FFF7FEFF 		bl	Error_Handler
 3019              	.LVL166:
 3020              	.L168:
 3021              		.align	2
 3022              	.L167:
 3023 0058 00000000 		.word	huart4
 3024 005c 004C0040 		.word	1073761280
 3025              		.cfi_endproc
 3026              	.LFE379:
 3028              		.section	.text.MX_TIM13_Init,"ax",%progbits
 3029              		.align	1
 3030              		.syntax unified
 3031              		.thumb
 3032              		.thumb_func
 3033              		.fpu fpv5-d16
 3035              	MX_TIM13_Init:
 3036              	.LFB377:
1582:Core/Src/main.c **** 
 3037              		.loc 1 1582 1 view -0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 0
 3040              		@ frame_needed = 0, uses_anonymous_args = 0
 3041 0000 08B5     		push	{r3, lr}
 3042              	.LCFI54:
 3043              		.cfi_def_cfa_offset 8
 3044              		.cfi_offset 3, -8
 3045              		.cfi_offset 14, -4
1591:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 3046              		.loc 1 1591 3 view .LVU981
1591:Core/Src/main.c ****   htim13.Init.Prescaler = 99;
 3047              		.loc 1 1591 19 is_stmt 0 view .LVU982
 3048 0002 0948     		ldr	r0, .L173
 3049 0004 094B     		ldr	r3, .L173+4
 3050 0006 0360     		str	r3, [r0]
1592:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 3051              		.loc 1 1592 3 is_stmt 1 view .LVU983
1592:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 3052              		.loc 1 1592 25 is_stmt 0 view .LVU984
ARM GAS  /tmp/ccEqzQ6F.s 			page 105


 3053 0008 6323     		movs	r3, #99
 3054 000a 4360     		str	r3, [r0, #4]
1593:Core/Src/main.c ****   htim13.Init.Period = 65535;
 3055              		.loc 1 1593 3 is_stmt 1 view .LVU985
1593:Core/Src/main.c ****   htim13.Init.Period = 65535;
 3056              		.loc 1 1593 27 is_stmt 0 view .LVU986
 3057 000c 0023     		movs	r3, #0
 3058 000e 8360     		str	r3, [r0, #8]
1594:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3059              		.loc 1 1594 3 is_stmt 1 view .LVU987
1594:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3060              		.loc 1 1594 22 is_stmt 0 view .LVU988
 3061 0010 4FF6FF72 		movw	r2, #65535
 3062 0014 C260     		str	r2, [r0, #12]
1595:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3063              		.loc 1 1595 3 is_stmt 1 view .LVU989
1595:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3064              		.loc 1 1595 29 is_stmt 0 view .LVU990
 3065 0016 0361     		str	r3, [r0, #16]
1596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 3066              		.loc 1 1596 3 is_stmt 1 view .LVU991
1596:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 3067              		.loc 1 1596 33 is_stmt 0 view .LVU992
 3068 0018 8361     		str	r3, [r0, #24]
1597:Core/Src/main.c ****   {
 3069              		.loc 1 1597 3 is_stmt 1 view .LVU993
1597:Core/Src/main.c ****   {
 3070              		.loc 1 1597 7 is_stmt 0 view .LVU994
 3071 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 3072              	.LVL167:
1597:Core/Src/main.c ****   {
 3073              		.loc 1 1597 6 view .LVU995
 3074 001e 00B9     		cbnz	r0, .L172
1605:Core/Src/main.c **** 
 3075              		.loc 1 1605 1 view .LVU996
 3076 0020 08BD     		pop	{r3, pc}
 3077              	.L172:
1599:Core/Src/main.c ****   }
 3078              		.loc 1 1599 5 is_stmt 1 view .LVU997
 3079 0022 FFF7FEFF 		bl	Error_Handler
 3080              	.LVL168:
 3081              	.L174:
 3082 0026 00BF     		.align	2
 3083              	.L173:
 3084 0028 00000000 		.word	htim13
 3085 002c 001C0040 		.word	1073748992
 3086              		.cfi_endproc
 3087              	.LFE377:
 3089              		.section	.text.MX_TIM14_Init,"ax",%progbits
 3090              		.align	1
 3091              		.syntax unified
 3092              		.thumb
 3093              		.thumb_func
 3094              		.fpu fpv5-d16
 3096              	MX_TIM14_Init:
 3097              	.LFB378:
1613:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 106


 3098              		.loc 1 1613 1 view -0
 3099              		.cfi_startproc
 3100              		@ args = 0, pretend = 0, frame = 0
 3101              		@ frame_needed = 0, uses_anonymous_args = 0
 3102 0000 08B5     		push	{r3, lr}
 3103              	.LCFI55:
 3104              		.cfi_def_cfa_offset 8
 3105              		.cfi_offset 3, -8
 3106              		.cfi_offset 14, -4
1622:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 3107              		.loc 1 1622 3 view .LVU999
1622:Core/Src/main.c ****   htim14.Init.Prescaler = 99;
 3108              		.loc 1 1622 19 is_stmt 0 view .LVU1000
 3109 0002 0948     		ldr	r0, .L179
 3110 0004 094B     		ldr	r3, .L179+4
 3111 0006 0360     		str	r3, [r0]
1623:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 3112              		.loc 1 1623 3 is_stmt 1 view .LVU1001
1623:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 3113              		.loc 1 1623 25 is_stmt 0 view .LVU1002
 3114 0008 6323     		movs	r3, #99
 3115 000a 4360     		str	r3, [r0, #4]
1624:Core/Src/main.c ****   htim14.Init.Period = 65535;
 3116              		.loc 1 1624 3 is_stmt 1 view .LVU1003
1624:Core/Src/main.c ****   htim14.Init.Period = 65535;
 3117              		.loc 1 1624 27 is_stmt 0 view .LVU1004
 3118 000c 0023     		movs	r3, #0
 3119 000e 8360     		str	r3, [r0, #8]
1625:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3120              		.loc 1 1625 3 is_stmt 1 view .LVU1005
1625:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 3121              		.loc 1 1625 22 is_stmt 0 view .LVU1006
 3122 0010 4FF6FF72 		movw	r2, #65535
 3123 0014 C260     		str	r2, [r0, #12]
1626:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3124              		.loc 1 1626 3 is_stmt 1 view .LVU1007
1626:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 3125              		.loc 1 1626 29 is_stmt 0 view .LVU1008
 3126 0016 0361     		str	r3, [r0, #16]
1627:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 3127              		.loc 1 1627 3 is_stmt 1 view .LVU1009
1627:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 3128              		.loc 1 1627 33 is_stmt 0 view .LVU1010
 3129 0018 8361     		str	r3, [r0, #24]
1628:Core/Src/main.c ****   {
 3130              		.loc 1 1628 3 is_stmt 1 view .LVU1011
1628:Core/Src/main.c ****   {
 3131              		.loc 1 1628 7 is_stmt 0 view .LVU1012
 3132 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 3133              	.LVL169:
1628:Core/Src/main.c ****   {
 3134              		.loc 1 1628 6 view .LVU1013
 3135 001e 00B9     		cbnz	r0, .L178
1636:Core/Src/main.c **** 
 3136              		.loc 1 1636 1 view .LVU1014
 3137 0020 08BD     		pop	{r3, pc}
 3138              	.L178:
ARM GAS  /tmp/ccEqzQ6F.s 			page 107


1630:Core/Src/main.c ****   }
 3139              		.loc 1 1630 5 is_stmt 1 view .LVU1015
 3140 0022 FFF7FEFF 		bl	Error_Handler
 3141              	.LVL170:
 3142              	.L180:
 3143 0026 00BF     		.align	2
 3144              	.L179:
 3145 0028 00000000 		.word	htim14
 3146 002c 00200040 		.word	1073750016
 3147              		.cfi_endproc
 3148              	.LFE378:
 3150              		.section	.text.MX_RNG_Init,"ax",%progbits
 3151              		.align	1
 3152              		.syntax unified
 3153              		.thumb
 3154              		.thumb_func
 3155              		.fpu fpv5-d16
 3157              	MX_RNG_Init:
 3158              	.LFB368:
1172:Core/Src/main.c **** 
 3159              		.loc 1 1172 1 view -0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 0
 3162              		@ frame_needed = 0, uses_anonymous_args = 0
 3163 0000 08B5     		push	{r3, lr}
 3164              	.LCFI56:
 3165              		.cfi_def_cfa_offset 8
 3166              		.cfi_offset 3, -8
 3167              		.cfi_offset 14, -4
1181:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
 3168              		.loc 1 1181 3 view .LVU1017
1181:Core/Src/main.c ****   hrng.Init.ClockErrorDetection = RNG_CED_ENABLE;
 3169              		.loc 1 1181 17 is_stmt 0 view .LVU1018
 3170 0002 0548     		ldr	r0, .L185
 3171 0004 054B     		ldr	r3, .L185+4
 3172 0006 0360     		str	r3, [r0]
1182:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 3173              		.loc 1 1182 3 is_stmt 1 view .LVU1019
1182:Core/Src/main.c ****   if (HAL_RNG_Init(&hrng) != HAL_OK)
 3174              		.loc 1 1182 33 is_stmt 0 view .LVU1020
 3175 0008 0023     		movs	r3, #0
 3176 000a 4360     		str	r3, [r0, #4]
1183:Core/Src/main.c ****   {
 3177              		.loc 1 1183 3 is_stmt 1 view .LVU1021
1183:Core/Src/main.c ****   {
 3178              		.loc 1 1183 7 is_stmt 0 view .LVU1022
 3179 000c FFF7FEFF 		bl	HAL_RNG_Init
 3180              	.LVL171:
1183:Core/Src/main.c ****   {
 3181              		.loc 1 1183 6 view .LVU1023
 3182 0010 00B9     		cbnz	r0, .L184
1191:Core/Src/main.c **** 
 3183              		.loc 1 1191 1 view .LVU1024
 3184 0012 08BD     		pop	{r3, pc}
 3185              	.L184:
1185:Core/Src/main.c ****   }
 3186              		.loc 1 1185 5 is_stmt 1 view .LVU1025
ARM GAS  /tmp/ccEqzQ6F.s 			page 108


 3187 0014 FFF7FEFF 		bl	Error_Handler
 3188              	.LVL172:
 3189              	.L186:
 3190              		.align	2
 3191              	.L185:
 3192 0018 00000000 		.word	hrng
 3193 001c 00180248 		.word	1208096768
 3194              		.cfi_endproc
 3195              	.LFE368:
 3197              		.section	.text.SystemClock_Config,"ax",%progbits
 3198              		.align	1
 3199              		.global	SystemClock_Config
 3200              		.syntax unified
 3201              		.thumb
 3202              		.thumb_func
 3203              		.fpu fpv5-d16
 3205              	SystemClock_Config:
 3206              	.LFB362:
 851:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 3207              		.loc 1 851 1 view -0
 3208              		.cfi_startproc
 3209              		@ args = 0, pretend = 0, frame = 112
 3210              		@ frame_needed = 0, uses_anonymous_args = 0
 3211 0000 00B5     		push	{lr}
 3212              	.LCFI57:
 3213              		.cfi_def_cfa_offset 4
 3214              		.cfi_offset 14, -4
 3215 0002 9DB0     		sub	sp, sp, #116
 3216              	.LCFI58:
 3217              		.cfi_def_cfa_offset 120
 852:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3218              		.loc 1 852 3 view .LVU1027
 852:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 3219              		.loc 1 852 22 is_stmt 0 view .LVU1028
 3220 0004 4C22     		movs	r2, #76
 3221 0006 0021     		movs	r1, #0
 3222 0008 09A8     		add	r0, sp, #36
 3223 000a FFF7FEFF 		bl	memset
 3224              	.LVL173:
 853:Core/Src/main.c **** 
 3225              		.loc 1 853 3 is_stmt 1 view .LVU1029
 853:Core/Src/main.c **** 
 3226              		.loc 1 853 22 is_stmt 0 view .LVU1030
 3227 000e 2022     		movs	r2, #32
 3228 0010 0021     		movs	r1, #0
 3229 0012 01A8     		add	r0, sp, #4
 3230 0014 FFF7FEFF 		bl	memset
 3231              	.LVL174:
 857:Core/Src/main.c **** 
 3232              		.loc 1 857 3 is_stmt 1 view .LVU1031
 3233 0018 0220     		movs	r0, #2
 3234 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 3235              	.LVL175:
 861:Core/Src/main.c **** 
 3236              		.loc 1 861 3 view .LVU1032
 3237              	.LBB16:
 861:Core/Src/main.c **** 
ARM GAS  /tmp/ccEqzQ6F.s 			page 109


 3238              		.loc 1 861 3 view .LVU1033
 3239 001e 0023     		movs	r3, #0
 3240 0020 0093     		str	r3, [sp]
 861:Core/Src/main.c **** 
 3241              		.loc 1 861 3 view .LVU1034
 3242 0022 264A     		ldr	r2, .L194
 3243 0024 9369     		ldr	r3, [r2, #24]
 3244 0026 23F44043 		bic	r3, r3, #49152
 3245 002a 43F40043 		orr	r3, r3, #32768
 3246 002e 9361     		str	r3, [r2, #24]
 861:Core/Src/main.c **** 
 3247              		.loc 1 861 3 view .LVU1035
 3248 0030 9369     		ldr	r3, [r2, #24]
 3249 0032 03F44043 		and	r3, r3, #49152
 3250 0036 0093     		str	r3, [sp]
 861:Core/Src/main.c **** 
 3251              		.loc 1 861 3 view .LVU1036
 3252 0038 009B     		ldr	r3, [sp]
 3253              	.LBE16:
 861:Core/Src/main.c **** 
 3254              		.loc 1 861 3 view .LVU1037
 863:Core/Src/main.c **** 
 3255              		.loc 1 863 3 view .LVU1038
 3256              	.L188:
 863:Core/Src/main.c **** 
 3257              		.loc 1 863 48 discriminator 1 view .LVU1039
 863:Core/Src/main.c **** 
 3258              		.loc 1 863 8 discriminator 1 view .LVU1040
 863:Core/Src/main.c **** 
 3259              		.loc 1 863 10 is_stmt 0 discriminator 1 view .LVU1041
 3260 003a 204B     		ldr	r3, .L194
 3261 003c 9B69     		ldr	r3, [r3, #24]
 863:Core/Src/main.c **** 
 3262              		.loc 1 863 8 discriminator 1 view .LVU1042
 3263 003e 13F4005F 		tst	r3, #8192
 3264 0042 FAD0     		beq	.L188
 868:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3265              		.loc 1 868 3 is_stmt 1 view .LVU1043
 868:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 3266              		.loc 1 868 36 is_stmt 0 view .LVU1044
 3267 0044 2223     		movs	r3, #34
 3268 0046 0993     		str	r3, [sp, #36]
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3269              		.loc 1 869 3 is_stmt 1 view .LVU1045
 869:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 3270              		.loc 1 869 30 is_stmt 0 view .LVU1046
 3271 0048 0122     		movs	r2, #1
 3272 004a 0C92     		str	r2, [sp, #48]
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3273              		.loc 1 870 3 is_stmt 1 view .LVU1047
 870:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 3274              		.loc 1 870 41 is_stmt 0 view .LVU1048
 3275 004c 4023     		movs	r3, #64
 3276 004e 0D93     		str	r3, [sp, #52]
 871:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 3277              		.loc 1 871 3 is_stmt 1 view .LVU1049
 871:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccEqzQ6F.s 			page 110


 3278              		.loc 1 871 32 is_stmt 0 view .LVU1050
 3279 0050 0F92     		str	r2, [sp, #60]
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3280              		.loc 1 872 3 is_stmt 1 view .LVU1051
 872:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 3281              		.loc 1 872 34 is_stmt 0 view .LVU1052
 3282 0052 0220     		movs	r0, #2
 3283 0054 1290     		str	r0, [sp, #72]
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3284              		.loc 1 873 3 is_stmt 1 view .LVU1053
 873:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 3285              		.loc 1 873 35 is_stmt 0 view .LVU1054
 3286 0056 0023     		movs	r3, #0
 3287 0058 1393     		str	r3, [sp, #76]
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3288              		.loc 1 874 3 is_stmt 1 view .LVU1055
 874:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 3289              		.loc 1 874 30 is_stmt 0 view .LVU1056
 3290 005a 0421     		movs	r1, #4
 3291 005c 1491     		str	r1, [sp, #80]
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3292              		.loc 1 875 3 is_stmt 1 view .LVU1057
 875:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 3293              		.loc 1 875 30 is_stmt 0 view .LVU1058
 3294 005e 0C21     		movs	r1, #12
 3295 0060 1591     		str	r1, [sp, #84]
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3296              		.loc 1 876 3 is_stmt 1 view .LVU1059
 876:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 3297              		.loc 1 876 30 is_stmt 0 view .LVU1060
 3298 0062 1692     		str	r2, [sp, #88]
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3299              		.loc 1 877 3 is_stmt 1 view .LVU1061
 877:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 3300              		.loc 1 877 30 is_stmt 0 view .LVU1062
 3301 0064 0322     		movs	r2, #3
 3302 0066 1792     		str	r2, [sp, #92]
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3303              		.loc 1 878 3 is_stmt 1 view .LVU1063
 878:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 3304              		.loc 1 878 30 is_stmt 0 view .LVU1064
 3305 0068 1890     		str	r0, [sp, #96]
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3306              		.loc 1 879 3 is_stmt 1 view .LVU1065
 879:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 3307              		.loc 1 879 32 is_stmt 0 view .LVU1066
 3308 006a 1991     		str	r1, [sp, #100]
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3309              		.loc 1 880 3 is_stmt 1 view .LVU1067
 880:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 3310              		.loc 1 880 35 is_stmt 0 view .LVU1068
 3311 006c 1A93     		str	r3, [sp, #104]
 881:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3312              		.loc 1 881 3 is_stmt 1 view .LVU1069
 881:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 3313              		.loc 1 881 34 is_stmt 0 view .LVU1070
 3314 006e 1B93     		str	r3, [sp, #108]
ARM GAS  /tmp/ccEqzQ6F.s 			page 111


 882:Core/Src/main.c ****   {
 3315              		.loc 1 882 3 is_stmt 1 view .LVU1071
 882:Core/Src/main.c ****   {
 3316              		.loc 1 882 7 is_stmt 0 view .LVU1072
 3317 0070 09A8     		add	r0, sp, #36
 3318 0072 FFF7FEFF 		bl	HAL_RCC_OscConfig
 3319              	.LVL176:
 882:Core/Src/main.c ****   {
 3320              		.loc 1 882 6 view .LVU1073
 3321 0076 E0B9     		cbnz	r0, .L192
 889:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3322              		.loc 1 889 3 is_stmt 1 view .LVU1074
 889:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 3323              		.loc 1 889 31 is_stmt 0 view .LVU1075
 3324 0078 3F23     		movs	r3, #63
 3325 007a 0193     		str	r3, [sp, #4]
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3326              		.loc 1 892 3 is_stmt 1 view .LVU1076
 892:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 3327              		.loc 1 892 34 is_stmt 0 view .LVU1077
 3328 007c 0323     		movs	r3, #3
 3329 007e 0293     		str	r3, [sp, #8]
 893:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3330              		.loc 1 893 3 is_stmt 1 view .LVU1078
 893:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 3331              		.loc 1 893 35 is_stmt 0 view .LVU1079
 3332 0080 0023     		movs	r3, #0
 3333 0082 0393     		str	r3, [sp, #12]
 894:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3334              		.loc 1 894 3 is_stmt 1 view .LVU1080
 894:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 3335              		.loc 1 894 35 is_stmt 0 view .LVU1081
 3336 0084 0823     		movs	r3, #8
 3337 0086 0493     		str	r3, [sp, #16]
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3338              		.loc 1 895 3 is_stmt 1 view .LVU1082
 895:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 3339              		.loc 1 895 36 is_stmt 0 view .LVU1083
 3340 0088 4023     		movs	r3, #64
 3341 008a 0593     		str	r3, [sp, #20]
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3342              		.loc 1 896 3 is_stmt 1 view .LVU1084
 896:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 3343              		.loc 1 896 36 is_stmt 0 view .LVU1085
 3344 008c 0693     		str	r3, [sp, #24]
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3345              		.loc 1 897 3 is_stmt 1 view .LVU1086
 897:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 3346              		.loc 1 897 36 is_stmt 0 view .LVU1087
 3347 008e 4FF48062 		mov	r2, #1024
 3348 0092 0792     		str	r2, [sp, #28]
 898:Core/Src/main.c **** 
 3349              		.loc 1 898 3 is_stmt 1 view .LVU1088
 898:Core/Src/main.c **** 
 3350              		.loc 1 898 36 is_stmt 0 view .LVU1089
 3351 0094 0893     		str	r3, [sp, #32]
 900:Core/Src/main.c ****   {
ARM GAS  /tmp/ccEqzQ6F.s 			page 112


 3352              		.loc 1 900 3 is_stmt 1 view .LVU1090
 900:Core/Src/main.c ****   {
 3353              		.loc 1 900 7 is_stmt 0 view .LVU1091
 3354 0096 0121     		movs	r1, #1
 3355 0098 01A8     		add	r0, sp, #4
 3356 009a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 3357              	.LVL177:
 900:Core/Src/main.c ****   {
 3358              		.loc 1 900 6 view .LVU1092
 3359 009e 50B9     		cbnz	r0, .L193
 904:Core/Src/main.c **** }
 3360              		.loc 1 904 3 is_stmt 1 view .LVU1093
 3361 00a0 4FF48022 		mov	r2, #262144
 3362 00a4 0021     		movs	r1, #0
 3363 00a6 0846     		mov	r0, r1
 3364 00a8 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 3365              	.LVL178:
 905:Core/Src/main.c **** 
 3366              		.loc 1 905 1 is_stmt 0 view .LVU1094
 3367 00ac 1DB0     		add	sp, sp, #116
 3368              	.LCFI59:
 3369              		.cfi_remember_state
 3370              		.cfi_def_cfa_offset 4
 3371              		@ sp needed
 3372 00ae 5DF804FB 		ldr	pc, [sp], #4
 3373              	.L192:
 3374              	.LCFI60:
 3375              		.cfi_restore_state
 884:Core/Src/main.c ****   }
 3376              		.loc 1 884 5 is_stmt 1 view .LVU1095
 3377 00b2 FFF7FEFF 		bl	Error_Handler
 3378              	.LVL179:
 3379              	.L193:
 902:Core/Src/main.c ****   }
 3380              		.loc 1 902 5 view .LVU1096
 3381 00b6 FFF7FEFF 		bl	Error_Handler
 3382              	.LVL180:
 3383              	.L195:
 3384 00ba 00BF     		.align	2
 3385              	.L194:
 3386 00bc 00480258 		.word	1476544512
 3387              		.cfi_endproc
 3388              	.LFE362:
 3390              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 3391              		.align	1
 3392              		.global	PeriphCommonClock_Config
 3393              		.syntax unified
 3394              		.thumb
 3395              		.thumb_func
 3396              		.fpu fpv5-d16
 3398              	PeriphCommonClock_Config:
 3399              	.LFB363:
 912:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 3400              		.loc 1 912 1 view -0
 3401              		.cfi_startproc
 3402              		@ args = 0, pretend = 0, frame = 184
 3403              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccEqzQ6F.s 			page 113


 3404 0000 00B5     		push	{lr}
 3405              	.LCFI61:
 3406              		.cfi_def_cfa_offset 4
 3407              		.cfi_offset 14, -4
 3408 0002 AFB0     		sub	sp, sp, #188
 3409              	.LCFI62:
 3410              		.cfi_def_cfa_offset 192
 913:Core/Src/main.c **** 
 3411              		.loc 1 913 3 view .LVU1098
 913:Core/Src/main.c **** 
 3412              		.loc 1 913 28 is_stmt 0 view .LVU1099
 3413 0004 9022     		movs	r2, #144
 3414 0006 0021     		movs	r1, #0
 3415 0008 0AA8     		add	r0, sp, #40
 3416 000a FFF7FEFF 		bl	memset
 3417              	.LVL181:
 917:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3418              		.loc 1 917 3 is_stmt 1 view .LVU1100
 917:Core/Src/main.c ****                               |RCC_PERIPHCLK_SPI2|RCC_PERIPHCLK_SPI1;
 3419              		.loc 1 917 44 is_stmt 0 view .LVU1101
 3420 000e 4FF40122 		mov	r2, #528384
 3421 0012 0023     		movs	r3, #0
 3422 0014 CDE90023 		strd	r2, [sp]
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3423              		.loc 1 919 3 is_stmt 1 view .LVU1102
 919:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 12;
 3424              		.loc 1 919 34 is_stmt 0 view .LVU1103
 3425 0018 0423     		movs	r3, #4
 3426 001a 0293     		str	r3, [sp, #8]
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3427              		.loc 1 920 3 is_stmt 1 view .LVU1104
 920:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 4;
 3428              		.loc 1 920 34 is_stmt 0 view .LVU1105
 3429 001c 0C22     		movs	r2, #12
 3430 001e 0392     		str	r2, [sp, #12]
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3431              		.loc 1 921 3 is_stmt 1 view .LVU1106
 921:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 3432              		.loc 1 921 34 is_stmt 0 view .LVU1107
 3433 0020 0493     		str	r3, [sp, #16]
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3434              		.loc 1 922 3 is_stmt 1 view .LVU1108
 922:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 3435              		.loc 1 922 34 is_stmt 0 view .LVU1109
 3436 0022 0223     		movs	r3, #2
 3437 0024 0593     		str	r3, [sp, #20]
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3438              		.loc 1 923 3 is_stmt 1 view .LVU1110
 923:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_3;
 3439              		.loc 1 923 34 is_stmt 0 view .LVU1111
 3440 0026 0693     		str	r3, [sp, #24]
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3441              		.loc 1 924 3 is_stmt 1 view .LVU1112
 924:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOWIDE;
 3442              		.loc 1 924 36 is_stmt 0 view .LVU1113
 3443 0028 C023     		movs	r3, #192
 3444 002a 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/ccEqzQ6F.s 			page 114


 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3445              		.loc 1 925 3 is_stmt 1 view .LVU1114
 925:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 0;
 3446              		.loc 1 925 39 is_stmt 0 view .LVU1115
 3447 002c 0023     		movs	r3, #0
 3448 002e 0893     		str	r3, [sp, #32]
 926:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3449              		.loc 1 926 3 is_stmt 1 view .LVU1116
 926:Core/Src/main.c ****   PeriphClkInitStruct.Spi123ClockSelection = RCC_SPI123CLKSOURCE_PLL2;
 3450              		.loc 1 926 38 is_stmt 0 view .LVU1117
 3451 0030 0993     		str	r3, [sp, #36]
 927:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3452              		.loc 1 927 3 is_stmt 1 view .LVU1118
 927:Core/Src/main.c ****   PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLL2;
 3453              		.loc 1 927 44 is_stmt 0 view .LVU1119
 3454 0032 4FF48053 		mov	r3, #4096
 3455 0036 1793     		str	r3, [sp, #92]
 928:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 3456              		.loc 1 928 3 is_stmt 1 view .LVU1120
 929:Core/Src/main.c ****   {
 3457              		.loc 1 929 3 view .LVU1121
 929:Core/Src/main.c ****   {
 3458              		.loc 1 929 7 is_stmt 0 view .LVU1122
 3459 0038 6846     		mov	r0, sp
 3460 003a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 3461              	.LVL182:
 929:Core/Src/main.c ****   {
 3462              		.loc 1 929 6 view .LVU1123
 3463 003e 10B9     		cbnz	r0, .L199
 933:Core/Src/main.c **** 
 3464              		.loc 1 933 1 view .LVU1124
 3465 0040 2FB0     		add	sp, sp, #188
 3466              	.LCFI63:
 3467              		.cfi_remember_state
 3468              		.cfi_def_cfa_offset 4
 3469              		@ sp needed
 3470 0042 5DF804FB 		ldr	pc, [sp], #4
 3471              	.L199:
 3472              	.LCFI64:
 3473              		.cfi_restore_state
 931:Core/Src/main.c ****   }
 3474              		.loc 1 931 5 is_stmt 1 view .LVU1125
 3475 0046 FFF7FEFF 		bl	Error_Handler
 3476              	.LVL183:
 3477              		.cfi_endproc
 3478              	.LFE363:
 3480              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 3481              		.align	2
 3482              	.LC4:
 3483 0000 6E6F7420 		.ascii	"not Hi\012\000"
 3483      48690A00 
 3484              		.section	.text.main,"ax",%progbits
 3485              		.align	1
 3486              		.global	main
 3487              		.syntax unified
 3488              		.thumb
 3489              		.thumb_func
ARM GAS  /tmp/ccEqzQ6F.s 			page 115


 3490              		.fpu fpv5-d16
 3492              	main:
 3493              	.LFB361:
 216:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 3494              		.loc 1 216 1 view -0
 3495              		.cfi_startproc
 3496              		@ Volatile: function does not return.
 3497              		@ args = 0, pretend = 0, frame = 0
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 3499 0000 08B5     		push	{r3, lr}
 3500              	.LCFI65:
 3501              		.cfi_def_cfa_offset 8
 3502              		.cfi_offset 3, -8
 3503              		.cfi_offset 14, -4
 219:Core/Src/main.c **** 
 3504              		.loc 1 219 2 view .LVU1127
 222:Core/Src/main.c **** 	uint32_t byteswritten, bytesread; /* File write/read counts */
 3505              		.loc 1 222 2 view .LVU1128
 223:Core/Src/main.c **** 	uint8_t wtext[] = "STM32 FATFS works great!"; /* File write buffer */
 3506              		.loc 1 223 2 view .LVU1129
 224:Core/Src/main.c **** 	uint8_t rtext[_MAX_SS];/* File read buffer */
 3507              		.loc 1 224 2 view .LVU1130
 225:Core/Src/main.c ****   /* USER CODE END 1 */
 3508              		.loc 1 225 2 view .LVU1131
 231:Core/Src/main.c **** 
 3509              		.loc 1 231 3 view .LVU1132
 3510 0002 FFF7FEFF 		bl	HAL_Init
 3511              	.LVL184:
 238:Core/Src/main.c **** 
 3512              		.loc 1 238 3 view .LVU1133
 3513 0006 FFF7FEFF 		bl	SystemClock_Config
 3514              	.LVL185:
 241:Core/Src/main.c **** 
 3515              		.loc 1 241 3 view .LVU1134
 3516 000a FFF7FEFF 		bl	PeriphCommonClock_Config
 3517              	.LVL186:
 248:Core/Src/main.c ****   MX_DMA_Init();
 3518              		.loc 1 248 3 view .LVU1135
 3519 000e FFF7FEFF 		bl	MX_GPIO_Init
 3520              	.LVL187:
 249:Core/Src/main.c ****   MX_SPI3_Init();
 3521              		.loc 1 249 3 view .LVU1136
 3522 0012 FFF7FEFF 		bl	MX_DMA_Init
 3523              	.LVL188:
 250:Core/Src/main.c ****   MX_FDCAN3_Init();
 3524              		.loc 1 250 3 view .LVU1137
 3525 0016 FFF7FEFF 		bl	MX_SPI3_Init
 3526              	.LVL189:
 251:Core/Src/main.c ****   MX_USART6_UART_Init();
 3527              		.loc 1 251 3 view .LVU1138
 3528 001a FFF7FEFF 		bl	MX_FDCAN3_Init
 3529              	.LVL190:
 252:Core/Src/main.c ****   MX_ADC1_Init();
 3530              		.loc 1 252 3 view .LVU1139
 3531 001e FFF7FEFF 		bl	MX_USART6_UART_Init
 3532              	.LVL191:
 253:Core/Src/main.c ****   MX_TIM4_Init();
ARM GAS  /tmp/ccEqzQ6F.s 			page 116


 3533              		.loc 1 253 3 view .LVU1140
 3534 0022 FFF7FEFF 		bl	MX_ADC1_Init
 3535              	.LVL192:
 254:Core/Src/main.c ****   MX_ADC3_Init();
 3536              		.loc 1 254 3 view .LVU1141
 3537 0026 FFF7FEFF 		bl	MX_TIM4_Init
 3538              	.LVL193:
 255:Core/Src/main.c ****   MX_SPI2_Init();
 3539              		.loc 1 255 3 view .LVU1142
 3540 002a FFF7FEFF 		bl	MX_ADC3_Init
 3541              	.LVL194:
 256:Core/Src/main.c ****   MX_I2C2_Init();
 3542              		.loc 1 256 3 view .LVU1143
 3543 002e FFF7FEFF 		bl	MX_SPI2_Init
 3544              	.LVL195:
 257:Core/Src/main.c ****   MX_TIM2_Init();
 3545              		.loc 1 257 3 view .LVU1144
 3546 0032 FFF7FEFF 		bl	MX_I2C2_Init
 3547              	.LVL196:
 258:Core/Src/main.c ****   MX_TIM5_Init();
 3548              		.loc 1 258 3 view .LVU1145
 3549 0036 FFF7FEFF 		bl	MX_TIM2_Init
 3550              	.LVL197:
 259:Core/Src/main.c ****   MX_TIM3_Init();
 3551              		.loc 1 259 3 view .LVU1146
 3552 003a FFF7FEFF 		bl	MX_TIM5_Init
 3553              	.LVL198:
 260:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 3554              		.loc 1 260 3 view .LVU1147
 3555 003e FFF7FEFF 		bl	MX_TIM3_Init
 3556              	.LVL199:
 261:Core/Src/main.c ****   MX_SPI1_Init();
 3557              		.loc 1 261 3 view .LVU1148
 3558 0042 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 3559              	.LVL200:
 262:Core/Src/main.c ****   MX_UART4_Init();
 3560              		.loc 1 262 3 view .LVU1149
 3561 0046 FFF7FEFF 		bl	MX_SPI1_Init
 3562              	.LVL201:
 263:Core/Src/main.c ****   MX_FATFS_Init();
 3563              		.loc 1 263 3 view .LVU1150
 3564 004a FFF7FEFF 		bl	MX_UART4_Init
 3565              	.LVL202:
 264:Core/Src/main.c ****   MX_SDMMC2_SD_Init();
 3566              		.loc 1 264 3 view .LVU1151
 3567 004e FFF7FEFF 		bl	MX_FATFS_Init
 3568              	.LVL203:
 265:Core/Src/main.c ****   MX_TIM13_Init();
 3569              		.loc 1 265 3 view .LVU1152
 3570 0052 FFF7FEFF 		bl	MX_SDMMC2_SD_Init
 3571              	.LVL204:
 266:Core/Src/main.c ****   MX_TIM14_Init();
 3572              		.loc 1 266 3 view .LVU1153
 3573 0056 FFF7FEFF 		bl	MX_TIM13_Init
 3574              	.LVL205:
 267:Core/Src/main.c ****   MX_RNG_Init();
 3575              		.loc 1 267 3 view .LVU1154
ARM GAS  /tmp/ccEqzQ6F.s 			page 117


 3576 005a FFF7FEFF 		bl	MX_TIM14_Init
 3577              	.LVL206:
 268:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 3578              		.loc 1 268 3 view .LVU1155
 3579 005e FFF7FEFF 		bl	MX_RNG_Init
 3580              	.LVL207:
 3581              	.L201:
 270:Core/Src/main.c ****     CDC_Transmit_HS("not Hi\n", strlen("not hi\n"));
 3582              		.loc 1 270 3 discriminator 1 view .LVU1156
 3583              	.LBB17:
 271:Core/Src/main.c ****     HAL_Delay(1000);
 3584              		.loc 1 271 5 discriminator 1 view .LVU1157
 3585 0062 0721     		movs	r1, #7
 3586 0064 0348     		ldr	r0, .L203
 3587 0066 FFF7FEFF 		bl	CDC_Transmit_HS
 3588              	.LVL208:
 272:Core/Src/main.c ****   }
 3589              		.loc 1 272 5 discriminator 1 view .LVU1158
 3590 006a 4FF47A70 		mov	r0, #1000
 3591 006e FFF7FEFF 		bl	HAL_Delay
 3592              	.LVL209:
 3593              	.LBE17:
 270:Core/Src/main.c ****     CDC_Transmit_HS("not Hi\n", strlen("not hi\n"));
 3594              		.loc 1 270 8 discriminator 1 view .LVU1159
 3595 0072 F6E7     		b	.L201
 3596              	.L204:
 3597              		.align	2
 3598              	.L203:
 3599 0074 00000000 		.word	.LC4
 3600              		.cfi_endproc
 3601              	.LFE361:
 3603              		.comm	x,32,8
 3604              		.comm	LED_Color_Data,42,4
 3605              		.global	datasentflag
 3606              		.comm	huart6,148,4
 3607              		.comm	huart4,148,4
 3608              		.comm	hdma_tim5_ch4,120,4
 3609              		.comm	hdma_tim4_ch3,120,4
 3610              		.comm	hdma_tim3_ch1,120,4
 3611              		.comm	hdma_tim3_ch2,120,4
 3612              		.comm	hdma_tim2_ch3,120,4
 3613              		.comm	htim14,76,4
 3614              		.comm	htim13,76,4
 3615              		.comm	htim5,76,4
 3616              		.comm	htim4,76,4
 3617              		.comm	htim3,76,4
 3618              		.comm	htim2,76,4
 3619              		.comm	hspi3,136,4
 3620              		.comm	hspi2,136,4
 3621              		.comm	hspi1,136,4
 3622              		.comm	hsd2,124,4
 3623              		.comm	hrng,20,4
 3624              		.comm	hi2c2,84,4
 3625              		.comm	hfdcan3,160,4
 3626              		.comm	hdma_adc3,120,4
 3627              		.comm	hdma_adc1,120,4
 3628              		.comm	hadc3,112,4
ARM GAS  /tmp/ccEqzQ6F.s 			page 118


 3629              		.comm	hadc1,112,4
 3630              		.comm	read_Data,2,2
 3631              		.comm	DMA_data,2,2
 3632              		.section	.bss.datasentflag,"aw",%nobits
 3633              		.align	2
 3636              	datasentflag:
 3637 0000 00000000 		.space	4
 3638              		.text
 3639              	.Letext0:
 3640              		.file 3 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3641              		.file 4 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include/
 3642              		.file 5 "Drivers/CMSIS/Include/core_cm7.h"
 3643              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 3644              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 3645              		.file 8 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 3646              		.file 9 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/lib/gcc/arm-none-eabi/
 3647              		.file 10 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3648              		.file 11 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3649              		.file 12 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3650              		.file 13 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3651              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 3652              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 3653              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 3654              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 3655              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 3656              		.file 19 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 3657              		.file 20 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 3658              		.file 21 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 3659              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 3660              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 3661              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rng.h"
 3662              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 3663              		.file 26 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 3664              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 3665              		.file 28 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 3666              		.file 29 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 3667              		.file 30 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 3668              		.file 31 "Middlewares/Third_Party/FatFs/src/integer.h"
 3669              		.file 32 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3670              		.file 33 "Middlewares/Third_Party/FatFs/src/ff.h"
 3671              		.file 34 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3672              		.file 35 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3673              		.file 36 "FATFS/Target/sd_diskio.h"
 3674              		.file 37 "FATFS/App/fatfs.h"
 3675              		.file 38 "/nix/store/9w2nhnv8b84a8yg8jsii47ikl60bz16p-gcc-arm-embedded-9.3.1/arm-none-eabi/include
 3676              		.file 39 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 3677              		.file 40 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart_ex.h"
 3678              		.file 41 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 3679              		.file 42 "Core/Inc/main.h"
 3680              		.file 43 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c_ex.h"
 3681              		.file 44 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 3682              		.file 45 "USB_DEVICE/App/usb_device.h"
 3683              		.file 46 "Core/Inc/StatusDisplay.h"
 3684              		.file 47 "<built-in>"
ARM GAS  /tmp/ccEqzQ6F.s 			page 119


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEqzQ6F.s:17     .text.MX_SDMMC2_SD_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:24     .text.MX_SDMMC2_SD_Init:0000000000000000 MX_SDMMC2_SD_Init
     /tmp/ccEqzQ6F.s:60     .text.MX_SDMMC2_SD_Init:000000000000001c $d
                            *COM*:000000000000007c hsd2
     /tmp/ccEqzQ6F.s:66     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:72     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccEqzQ6F.s:486    .text.MX_GPIO_Init:000000000000021c $d
     /tmp/ccEqzQ6F.s:498    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:504    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccEqzQ6F.s:627    .text.MX_DMA_Init:00000000000000ac $d
     /tmp/ccEqzQ6F.s:632    .rodata.disarm.str1.4:0000000000000000 $d
     /tmp/ccEqzQ6F.s:639    .text.disarm:0000000000000000 $t
     /tmp/ccEqzQ6F.s:646    .text.disarm:0000000000000000 disarm
     /tmp/ccEqzQ6F.s:748    .text.disarm:0000000000000098 $d
     /tmp/ccEqzQ6F.s:757    .rodata.arm.str1.4:0000000000000000 $d
     /tmp/ccEqzQ6F.s:761    .text.arm:0000000000000000 $t
     /tmp/ccEqzQ6F.s:768    .text.arm:0000000000000000 arm
     /tmp/ccEqzQ6F.s:819    .text.arm:0000000000000030 $d
     /tmp/ccEqzQ6F.s:826    .text.multiplyQuat:0000000000000000 $t
     /tmp/ccEqzQ6F.s:833    .text.multiplyQuat:0000000000000000 multiplyQuat
     /tmp/ccEqzQ6F.s:959    .text.multiplyQuat:00000000000000b0 $d
                            *COM*:0000000000000020 x
     /tmp/ccEqzQ6F.s:964    .text.Baro2_Read_Register:0000000000000000 $t
     /tmp/ccEqzQ6F.s:971    .text.Baro2_Read_Register:0000000000000000 Baro2_Read_Register
     /tmp/ccEqzQ6F.s:1034   .text.Baro2_Read_Register:000000000000004c $d
                            *COM*:0000000000000088 hspi2
     /tmp/ccEqzQ6F.s:1040   .text.Baro2_Write_Register:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1047   .text.Baro2_Write_Register:0000000000000000 Baro2_Write_Register
     /tmp/ccEqzQ6F.s:1107   .text.Baro2_Write_Register:0000000000000048 $d
     /tmp/ccEqzQ6F.s:1113   .text.Baro2_Configure:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1120   .text.Baro2_Configure:0000000000000000 Baro2_Configure
     /tmp/ccEqzQ6F.s:1161   .text.Baro2_Get_Pressure:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1168   .text.Baro2_Get_Pressure:0000000000000000 Baro2_Get_Pressure
     /tmp/ccEqzQ6F.s:1219   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1226   .text.HAL_I2C_MasterRxCpltCallback:0000000000000000 HAL_I2C_MasterRxCpltCallback
     /tmp/ccEqzQ6F.s:1240   .rodata.HAL_ADC_ConvHalfCpltCallback.str1.4:0000000000000000 $d
     /tmp/ccEqzQ6F.s:1244   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1251   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccEqzQ6F.s:1298   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000030 $d
                            *COM*:0000000000000002 read_Data
                            *COM*:0000000000000002 DMA_data
     /tmp/ccEqzQ6F.s:1305   .text.Error_Handler:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1312   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccEqzQ6F.s:1344   .text.MX_SPI3_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1350   .text.MX_SPI3_Init:0000000000000000 MX_SPI3_Init
     /tmp/ccEqzQ6F.s:1450   .text.MX_SPI3_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi3
     /tmp/ccEqzQ6F.s:1456   .text.MX_FDCAN3_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1462   .text.MX_FDCAN3_Init:0000000000000000 MX_FDCAN3_Init
     /tmp/ccEqzQ6F.s:1579   .text.MX_FDCAN3_Init:0000000000000054 $d
                            *COM*:00000000000000a0 hfdcan3
     /tmp/ccEqzQ6F.s:1585   .text.MX_USART6_UART_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1591   .text.MX_USART6_UART_Init:0000000000000000 MX_USART6_UART_Init
     /tmp/ccEqzQ6F.s:1690   .text.MX_USART6_UART_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart6
ARM GAS  /tmp/ccEqzQ6F.s 			page 120


     /tmp/ccEqzQ6F.s:1696   .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1702   .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccEqzQ6F.s:1856   .text.MX_ADC1_Init:0000000000000090 $d
                            *COM*:0000000000000070 hadc1
     /tmp/ccEqzQ6F.s:1863   .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:1869   .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccEqzQ6F.s:2029   .text.MX_TIM4_Init:00000000000000a4 $d
                            *COM*:000000000000004c htim4
     /tmp/ccEqzQ6F.s:2035   .text.MX_ADC3_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2041   .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
     /tmp/ccEqzQ6F.s:2182   .text.MX_ADC3_Init:0000000000000084 $d
                            *COM*:0000000000000070 hadc3
     /tmp/ccEqzQ6F.s:2189   .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2195   .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccEqzQ6F.s:2295   .text.MX_SPI2_Init:0000000000000054 $d
     /tmp/ccEqzQ6F.s:2301   .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2307   .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccEqzQ6F.s:2389   .text.MX_I2C2_Init:0000000000000048 $d
                            *COM*:0000000000000054 hi2c2
     /tmp/ccEqzQ6F.s:2396   .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2402   .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccEqzQ6F.s:2523   .text.MX_TIM2_Init:0000000000000074 $d
                            *COM*:000000000000004c htim2
     /tmp/ccEqzQ6F.s:2528   .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2534   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccEqzQ6F.s:2655   .text.MX_TIM5_Init:0000000000000074 $d
                            *COM*:000000000000004c htim5
     /tmp/ccEqzQ6F.s:2661   .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2667   .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccEqzQ6F.s:2800   .text.MX_TIM3_Init:0000000000000080 $d
                            *COM*:000000000000004c htim3
     /tmp/ccEqzQ6F.s:2806   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2812   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccEqzQ6F.s:2912   .text.MX_SPI1_Init:0000000000000054 $d
                            *COM*:0000000000000088 hspi1
     /tmp/ccEqzQ6F.s:2918   .text.MX_UART4_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:2924   .text.MX_UART4_Init:0000000000000000 MX_UART4_Init
     /tmp/ccEqzQ6F.s:3023   .text.MX_UART4_Init:0000000000000058 $d
                            *COM*:0000000000000094 huart4
     /tmp/ccEqzQ6F.s:3029   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3035   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccEqzQ6F.s:3084   .text.MX_TIM13_Init:0000000000000028 $d
                            *COM*:000000000000004c htim13
     /tmp/ccEqzQ6F.s:3090   .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3096   .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccEqzQ6F.s:3145   .text.MX_TIM14_Init:0000000000000028 $d
                            *COM*:000000000000004c htim14
     /tmp/ccEqzQ6F.s:3151   .text.MX_RNG_Init:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3157   .text.MX_RNG_Init:0000000000000000 MX_RNG_Init
     /tmp/ccEqzQ6F.s:3192   .text.MX_RNG_Init:0000000000000018 $d
                            *COM*:0000000000000014 hrng
     /tmp/ccEqzQ6F.s:3198   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3205   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEqzQ6F.s:3386   .text.SystemClock_Config:00000000000000bc $d
     /tmp/ccEqzQ6F.s:3391   .text.PeriphCommonClock_Config:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3398   .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
     /tmp/ccEqzQ6F.s:3481   .rodata.main.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccEqzQ6F.s 			page 121


     /tmp/ccEqzQ6F.s:3485   .text.main:0000000000000000 $t
     /tmp/ccEqzQ6F.s:3492   .text.main:0000000000000000 main
     /tmp/ccEqzQ6F.s:3599   .text.main:0000000000000074 $d
                            *COM*:000000000000002a LED_Color_Data
     /tmp/ccEqzQ6F.s:3636   .bss.datasentflag:0000000000000000 datasentflag
                            *COM*:0000000000000078 hdma_tim5_ch4
                            *COM*:0000000000000078 hdma_tim4_ch3
                            *COM*:0000000000000078 hdma_tim3_ch1
                            *COM*:0000000000000078 hdma_tim3_ch2
                            *COM*:0000000000000078 hdma_tim2_ch3
                            *COM*:0000000000000078 hdma_adc3
                            *COM*:0000000000000078 hdma_adc1
     /tmp/ccEqzQ6F.s:3633   .bss.datasentflag:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
setStatus
HAL_SPI_Transmit
HAL_SPI_Receive
strlen
CDC_Transmit_HS
HAL_SPI_Init
HAL_FDCAN_Init
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_RNG_Init
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
MX_FATFS_Init
HAL_Delay
